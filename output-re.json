{"handler.handler": ["json", "json.loads", "json.dumps"], "future.backports.urllib.request.request_host": ["future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.parse.urlparse"], "future.backports.http.cookiejar.request_host": ["future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.urllib.parse.urlparse"], "future.backports.http.cookiejar.eff_request_host": ["future.backports.http.cookiejar.request_host", "future.backports.http.cookiejar.CookieJar._cookies_for_request"], "future.backports.http.cookiejar.request_path": ["future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.urllib.parse.urlsplit", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.escape_path"], "future.backports.http.cookiejar.request_port": ["future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.builtins.int", "future.backports.http.cookiejar._debug"], "future.backports.http.cookiejar.is_third_party": ["future.backports.http.cookiejar.request_host", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.domain_match", "future.backports.http.cookiejar.reach"], "future.moves.urllib.request.request_host": ["urllib.request.request_host"], "future.moves.http.cookiejar.request_host": [], "future.moves.http.cookiejar.eff_request_host": [], "future.moves.http.cookiejar.request_path": [], "future.moves.http.cookiejar.request_port": [], "future.moves.http.cookiejar.is_third_party": [], "numpy.conftest.check_fpu_mode": ["numpy.core._multiarray_tests.get_fpu_mode", "pytest", "pytest.fixture"], "numpy.conftest.weak_promotion": ["numpy", "pytest", "pytest.fixture", "numpy._get_promotion_state", "numpy._set_promotion_state"], "handler": ["handler.serverless_pipeline"], "future.backports.urllib.request": ["future.utils.PY3", "sys", "future.backports.urllib.request.getproxies", "future.backports.urllib.request.proxy_bypass", "future.backports.urllib.request.getproxies_environment", "future.backports.urllib.request.proxy_bypass_environment", "future.utils.PY2", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "os", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "re", "os.urandom", "os.name", "sys.version", "sys.platform", "re.ASCII", "re.compile", "nturl2path.pathname2url", "nturl2path.url2pathname"], "future.backports.http.cookiejar": ["future.utils.PY2", "future.backports.http.client.HTTP_PORT", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.builtins.str", "re.ASCII", "re.compile", "re.I", "re.X"], "future.moves.urllib.request": ["future.utils.PY3", "urllib.parse.to_bytes", "urllib.toBytes", "future.standard_library.suspend_hooks"], "future.moves.http.cookiejar": ["future.utils.PY3"], "numpy.conftest": ["hypothesis", "os", "tempfile", "hypothesis.configuration", "hypothesis.settings", "hypothesis.HealthCheck", "tempfile.gettempdir", "os.path"], "future.backports.http.cookiejar.CookieJar.clear_session_cookies": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.reach": ["future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.is_HDN"], "future.backports.http.client.HTTP_PORT": [], "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.is_third_party", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies"], "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.parse.splittype", "future.backports.urllib.request.Request.__init__", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.__init__", "future.backports.urllib.request.OpenerDirector._call_chain", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.ProxyHandler.__init__", "future.backports.urllib.request.HTTPPasswordMgr.__init__", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.__init__", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.AbstractHTTPHandler.__init__", "future.backports.urllib.request.HTTPCookieProcessor.__init__", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.CacheFTPHandler.__init__", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.URLopener.__init__", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.FancyURLopener.__init__", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.__init__", "future.backports.urllib.request.ftpwrapper.init", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.HTTPSHandler.__init__", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.parse.quote", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "tempfile": [], "json.loads": [], "nturl2path.url2pathname": [], "numpy": ["sys", "numpy._pytesttester.PytestTester", "numpy._sanity_check", "numpy._mac_os_check", "os", "numpy.core", "numpy.matrixlib", "numpy.lib", "warnings", "numpy.core.__all__", "numpy.core._set_promotion_state", "numpy.core.getlimits", "numpy.core.multiarray", "numpy.matrixlib.__all__", "numpy.lib.__all__", "warnings.filterwarnings", "warnings.catch_warnings", "sys.platform", "sys.stderr", "os.environ", "os.uname", "numpy._globals.ModuleDeprecationWarning", "numpy._globals.VisibleDeprecationWarning"], "tempfile.gettempdir": [], "future.backports.http.cookiejar.CookieJar.__iter__": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.deepvalues", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.is_third_party", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies"], "future.backports.http.cookiejar.FileCookieJar.revert": ["future.backports.http.cookiejar.CookieJar", "copy", "future.backports.http.cookiejar.LoadError", "copy.deepcopy"], "future.backports.urllib.request.Request.add_unredirected_header": [], "future.backports.http.cookiejar.CookiePolicy.path_return_ok": [], "future.backports.http.cookiejar.CookieJar.clear_expired_cookies": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "time", "re.compile", "re.ASCII", "time.time"], "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar._debug"], "future.backports.urllib.request.proxy_bypass": ["future.backports.urllib.request.getproxies_environment", "future.backports.urllib.request.proxy_bypass_environment", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.proxy_bypass_macosx_sysconf", "future.backports.urllib.request.proxy_bypass_registry"], "re.I": [], "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar._debug"], "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.eff_request_host", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar._debug"], "pytest.fixture": [], "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.user_domain_match", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain"], "json.dumps": [], "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth": ["future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "base64", "base64.b64encode", "re.compile", "re.I"], "sys.version": [], "future.backports.http.cookiejar.CookieJar.set_cookie": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "re.compile", "re.ASCII"], "future.utils.PY3": ["future.utils.__init__.PY3", "past.utils.__init__.PY3"], "sys.platform": [], "future.backports.urllib.request.BaseHandler.close": [], "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count": [], "future.backports.http.cookiejar.Cookie.is_expired": ["time", "time.time"], "future.backports.urllib.parse.urlparse": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.backports.urllib.parse._coerce_args", "future.backports.urllib.parse.urlsplit", "future.backports.urllib.parse._splitparams", "future.backports.urllib.parse.ParseResult"], "os": [], "hypothesis.HealthCheck": [], "future.backports.http.cookiejar.CookieJar.__init__": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.DefaultCookiePolicy", "threading", "dummy_threading", "threading.RLock", "dummy_threading.RLock", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str": ["future.backports.http.cookiejar.FileCookieJar", "time", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.lwp_cookie_str", "time.time"], "future.backports.urllib.request.ftpwrapper.file_close": [], "re.X": [], "future.backports.urllib.request.proxy_bypass_environment": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "os", "future.backports.urllib.parse.splitport", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FileHandler.get_names", "os.environ"], "future.backports.urllib.request.URLopener.close": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.http.client.HTTPSConnection"], "hypothesis": [], "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.__init__", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.__init__", "future.backports.urllib.request.OpenerDirector._call_chain", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.ProxyHandler.__init__", "future.backports.urllib.request.HTTPPasswordMgr.__init__", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.__init__", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.AbstractHTTPHandler.__init__", "future.backports.urllib.request.HTTPCookieProcessor.__init__", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.CacheFTPHandler.__init__", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.URLopener.__init__", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.FancyURLopener.__init__", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.__init__", "future.backports.urllib.request.ftpwrapper.init", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.HTTPSHandler.__init__", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.parse.quote", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "future.backports.http.cookiejar.CookieJar.__str__": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.builtins.str", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.CookieJar.set_policy": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar.set_policy", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.allowed_domains", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple"], "future.backports.http.cookiejar.CookieJar.make_cookies": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.split_header_words", "future.backports.http.cookiejar._warn_unhandled_exception", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.builtins.filter", "future.backports.http.cookiejar.CookieJar.make_cookies.no_matching_rfc2965", "future.backports.http.cookiejar.make_cookies.no_matching_rfc2965", "future.backports.http.cookiejar.parse_ns_headers", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.__len__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__"], "future.backports.urllib.request.AbstractHTTPHandler.do_request_": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.error.URLError", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.builtins.str", "future.utils.PY2", "collections.Iterable", "collections.abc.Iterable", "array", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.parse.splittype", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.FileHandler.get_names", "array.array"], "future.backports.urllib.request.ftpwrapper.real_close": ["future.backports.urllib.request.ftperrors"], "future.backports.urllib.request.BaseHandler.add_parent": ["future.backports.urllib.request.BaseHandler.add_parent"], "future.backports.http.cookiejar.CookieJar._cookies_for_request": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "re.compile", "re.ASCII"], "os.urandom": [], "future.builtins.int": ["future.builtins.__init__.int", "future.types.newint"], "sys": [], "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.backports.http.cookiejar.request_port", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.CookieJar.__str__", "future.builtins.str", "future.backports.http.cookiejar._debug", "future.builtins.int"], "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.backports.http.cookiejar.request_port", "future.backports.http.cookiejar._debug"], "future.backports.urllib.request.HTTPErrorProcessor.http_response": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request"], "re.ASCII": [], "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.eff_request_host", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__", "future.backports.http.cookiejar.domain_match", "future.backports.http.cookiejar.CookieJar.__len__"], "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.blocked_domains"], "future.backports.urllib.request.Request.get_host": ["warnings", "warnings.warn"], "future.backports.urllib.request.ftpwrapper.close": [], "future.backports.http.cookiejar.CookieJar._cookies_for_domain": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.CookieJar.add_cookie_header": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.builtins.int", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "time", "re.compile", "re.ASCII", "time.time"], "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth": ["future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.parse_keqv_list", "future.builtins.filter", "future.backports.urllib.request.parse_http_list", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response"], "future.standard_library.suspend_hooks": [], "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.CookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.FileCookieJar.save", "future.backports.http.cookiejar.LWPCookieJar.save", "future.backports.http.cookiejar.MozillaCookieJar.save", "future.backports.http.cookiejar._debug", "future.builtins.int", "re.compile", "re.ASCII"], "future.backports.urllib.request.HTTPCookieProcessor.http_request": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.http_request", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractHTTPHandler.do_request_"], "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.request_path", "future.backports.http.cookiejar._debug"], "future.backports.urllib.request.Request.get_full_url": [], "future.backports.urllib.request.HTTPCookieProcessor.http_response": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.http_request", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractHTTPHandler.do_request_"], "future.backports.urllib.request.ftpwrapper.retrfile": ["future.backports.urllib.request.Request.get_type", "ftplib", "future.backports.urllib.request.FTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.connect_ftp", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.utils.raise_with_traceback", "future.builtins.str", "future.backports.urllib.error.URLError", "future.backports.urllib.response.addclosehook", "ftplib.all_errors", "ftplib.error_perm"], "future.backports.urllib.request.HTTPRedirectHandler.redirect_request": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.http_error_307", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.http_error_302", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.error.HTTPError", "future.builtins.dict", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.CacheFTPHandler.check_cache", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.Request"], "future.backports.http.cookiejar.CookieJar.extract_cookies": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.builtins.int", "time", "re.compile", "re.ASCII", "time.time"], "future.backports.urllib.request.FancyURLopener.redirect_internal": ["future.backports.urllib.request.URLopener", "future.backports.urllib.parse.urljoin", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.parse.urlparse", "future.backports.urllib.error.HTTPError"], "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.parse.splittype", "future.backports.urllib.request.Request.__init__", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.__init__", "future.backports.urllib.request.OpenerDirector._call_chain", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.ProxyHandler.__init__", "future.backports.urllib.request.HTTPPasswordMgr.__init__", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.__init__", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.AbstractHTTPHandler.__init__", "future.backports.urllib.request.HTTPCookieProcessor.__init__", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.CacheFTPHandler.__init__", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.URLopener.__init__", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.FancyURLopener.__init__", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.__init__", "future.backports.urllib.request.ftpwrapper.init", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.HTTPSHandler.__init__", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.parse.quote", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "future.backports.http.cookiejar.Cookie.__str__": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str"], "future.backports.http.cookiejar.CookieJar.__repr__": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.utils.as_native_str", "re.compile", "re.ASCII"], "os.path": [], "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.__init__", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.__init__", "future.backports.urllib.request.OpenerDirector._call_chain", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.ProxyHandler.__init__", "future.backports.urllib.request.HTTPPasswordMgr.__init__", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.__init__", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.AbstractHTTPHandler.__init__", "future.backports.urllib.request.HTTPCookieProcessor.__init__", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.CacheFTPHandler.__init__", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.URLopener.__init__", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.FancyURLopener.__init__", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.__init__", "future.backports.urllib.request.ftpwrapper.init", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.HTTPSHandler.__init__", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.parse.quote", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "re": [], "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies"], "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.request_path", "future.backports.http.cookiejar.CookieJar._cookies_for_request"], "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.builtins.int", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "time", "re.compile", "re.ASCII", "time.time"], "future.backports.http.cookiejar.MozillaCookieJar._really_load": ["future.backports.http.cookiejar.FileCookieJar", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "time", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.LoadError", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.Cookie", "future.backports.http.cookiejar._warn_unhandled_exception", "re.compile", "time.time"], "future.backports.http.cookiejar.CookieJar._cookie_attrs": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.__len__", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar.clear", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.save", "future.backports.http.cookiejar.FileCookieJar.load", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.backports.http.cookiejar.LWPCookieJar.save", "future.backports.http.cookiejar.MozillaCookieJar.save", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.CookieJar.set_policy", "re.compile", "re.ASCII"], "future.backports.urllib.request.Request.get_origin_req_host": ["warnings", "warnings.warn"], "nturl2path.pathname2url": [], "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "re.compile", "re.ASCII"], "future.backports.urllib.request.getproxies_environment": ["future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "os", "os.environ"], "handler.serverless_pipeline": ["transformers.AutoTokenizer", "transformers.AutoModelForQuestionAnswering", "handler.predict", "handler.serverless_pipeline.predict", "transformers.AutoModelForQuestionAnswering.from_pretrained", "transformers.AutoTokenizer.from_pretrained"], "future.backports.http.cookiejar.LWPCookieJar._really_load": ["future.backports.http.cookiejar.FileCookieJar", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.LoadError", "time", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.split_header_words", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.CookiePolicy.set_ok", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar.clear", "future.backports.http.cookiejar._warn_unhandled_exception", "future.backports.http.cookiejar.FileCookieJar.save", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar.save", "future.backports.http.cookiejar.MozillaCookieJar.save", "future.backports.http.cookiejar.Cookie", "future.backports.http.cookiejar.iso2time", "future.backports.http.cookiejar.CookieJar.__len__", "time.time"], "future.backports.http.cookiejar.DefaultCookiePolicy.__init__": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.blocked_domains", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.allowed_domains"], "future.backports.http.cookiejar.CookiePolicy.return_ok": [], "future.backports.http.cookiejar.domain_match": ["future.backports.http.cookiejar.is_HDN", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__"], "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains": ["future.backports.http.cookiejar.CookiePolicy"], "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.Absent", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.builtins.int", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__", "future.backports.http.cookiejar.escape_path", "future.backports.http.cookiejar.request_path", "future.backports.http.cookiejar.CookieJar.__len__", "future.backports.http.cookiejar.eff_request_host", "future.backports.http.cookiejar.request_port", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.Cookie", "re.compile", "re.ASCII", "re.sub"], "hypothesis.configuration": [], "numpy._get_promotion_state": ["numpy.core.numeric._get_promotion_state", "numpy.core.multiarray._get_promotion_state"], "hypothesis.settings": [], "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar._debug"], "urllib.request.request_host": [], "future.backports.urllib.request.URLopener.retrieve": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.parse.unwrap", "future.backports.urllib.parse.to_bytes", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.parse.splittype", "future.backports.urllib.request.url2pathname", "nturl2path.url2pathname", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.OpenerDirector.open", "future.backports.urllib.request.OpenerDirector._open", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.AbstractHTTPHandler.do_open", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.URLopener.open", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.HTTPSHandler.https_open", "future.backports.urllib.request.open", "future.builtins.open", "future.backports.urllib.parse.splitquery", "future.backports.urllib.parse.splitattr", "tempfile", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "os", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.builtins.int", "future.backports.urllib.error.ContentTooShortError", "tempfile.mkstemp", "future.backports.http.client.HTTPSConnection", "os.fdopen", "os.path"], "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri": ["future.backports.urllib.parse.urlsplit", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.parse.splitport"], "os.name": [], "future.backports.urllib.request.OpenerDirector.close": [], "urllib.parse.to_bytes": [], "future.backports.http.cookiejar.CookiePolicy.domain_return_ok": [], "future.utils.PY2": ["future.utils.__init__.PY2", "past.utils.__init__.PY2"], "future.backports.urllib.parse.urlsplit": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.backports.urllib.parse._coerce_args", "future.backports.urllib.parse.clear_cache", "future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "future.backports.urllib.parse.Quoter.__init__", "future.backports.urllib.parse.Quoter.__missing__", "future.backports.urllib.parse._ResultMixinStr.encode", "future.backports.urllib.parse._ResultMixinBytes.decode", "future.backports.urllib.parse.SplitResult", "future.backports.urllib.parse._splitnetloc"], "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.eff_request_host", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.domain_match"], "pytest": [], "urllib.toBytes": [], "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed": ["future.backports.urllib.error.HTTPError", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request"], "future.backports.http.cookiejar._debug": ["logging", "logging.getLogger"], "future.backports.http.cookiejar.FileCookieJar.__init__": ["future.backports.http.cookiejar.CookieJar", "future.backports.http.cookiejar.CookieJar.set_policy"], "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.user_domain_match", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain"], "future.backports.http.cookiejar.Cookie.__repr__": ["future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.builtins.str", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookieJar.__repr__", "future.utils.as_native_str"], "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "re.compile", "re.ASCII"], "future.backports.http.cookiejar.Cookie.__init__": ["future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.builtins.int", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "copy", "copy.copy"], "numpy.core._multiarray_tests.get_fpu_mode": [], "numpy._set_promotion_state": ["numpy.core.numeric._set_promotion_state", "numpy.core.multiarray._set_promotion_state"], "future.builtins.str": ["future.builtins.__init__.str", "past.builtins.__init__.str", "future.types.newstr"], "json": [], "future.backports.http.cookiejar.escape_path": ["future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.urllib.parse.quote", "future.backports.http.cookiejar.uppercase_escaped_char"], "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed": ["future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "future.backports.urllib.error.HTTPError", "future.backports.urllib.parse.quote", "future.backports.urllib.request.AbstractBasicAuthHandler", "future.backports.urllib.request.Request.get_host", "warnings", "re.compile", "re.I", "warnings.warn"], "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count": ["future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "re.compile", "re.I"], "future.backports.urllib.request.getproxies": ["future.backports.urllib.request.getproxies_environment", "future.backports.urllib.request.getproxies_macosx_sysconf", "future.backports.urllib.request.getproxies_registry"], "re.compile": [], "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains": ["future.backports.http.cookiejar.CookiePolicy"], "numpy.fromfunction": ["numpy.ma.core.fromfunction", "numpy.core.numeric.fromfunction"], "future.backports.misc.Iterable.__iter__": [], "future.backports.misc.Iterator.__iter__": [], "future.backports.misc.Sized.__len__": [], "future.backports.misc.Mapping.__getitem__": [], "future.backports.misc.MappingView.__len__": [], "future.backports.misc.KeysView.__iter__": [], "future.backports.misc.ItemsView.__iter__": [], "future.backports.misc.ValuesView.__iter__": [], "future.backports.misc.MutableMapping.__setitem__": [], "future.backports.misc.MutableMapping.__delitem__": [], "future.backports.misc.Sequence.__getitem__": [], "future.backports.misc.Sequence.__iter__": [], "future.backports.misc.MutableSequence.__setitem__": [], "future.backports.misc.MutableSequence.__delitem__": [], "future.backports.misc.OrderedDict.__setitem__": ["future.backports.misc.Counter.update", "future.backports.misc.update", "collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys", "future.backports.misc.K.__ne__", "future.backports.misc.__ne__", "future.backports.misc.cmp_to_key.__ne__", "_weakref.proxy", "future.backports.misc._Link", "collections.MutableMapping.update", "collections.MutableMapping.keys", "collections.MutableMapping.values", "collections.MutableMapping.items", "collections.MutableMapping.__ne__", "collections.abc.MutableMapping.update", "collections.abc.MutableMapping.keys", "collections.abc.MutableMapping.values", "collections.abc.MutableMapping.items", "collections.abc.MutableMapping.__ne__"], "future.backports.misc.OrderedDict.__delitem__": ["future.backports.misc.Counter.update", "future.backports.misc.update", "collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys", "future.backports.misc.K.__ne__", "future.backports.misc.__ne__", "future.backports.misc.cmp_to_key.__ne__", "collections.MutableMapping.update", "collections.MutableMapping.keys", "collections.MutableMapping.values", "collections.MutableMapping.items", "collections.MutableMapping.__ne__", "collections.abc.MutableMapping.update", "collections.abc.MutableMapping.keys", "collections.abc.MutableMapping.values", "collections.abc.MutableMapping.items", "collections.abc.MutableMapping.__ne__"], "future.backports.misc.OrderedDict.__iter__": ["future.backports.misc.Counter.update", "future.backports.misc.update", "collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys", "future.backports.misc.K.__ne__", "future.backports.misc.__ne__", "future.backports.misc.cmp_to_key.__ne__", "collections.MutableMapping.update", "collections.MutableMapping.keys", "collections.MutableMapping.values", "collections.MutableMapping.items", "collections.MutableMapping.__ne__", "collections.abc.MutableMapping.update", "collections.abc.MutableMapping.keys", "collections.abc.MutableMapping.values", "collections.abc.MutableMapping.items", "collections.abc.MutableMapping.__ne__"], "future.backports.misc.Counter.__delitem__": ["future.backports.misc.Counter.elements", "future.backports.misc.Counter", "collections.Counter"], "future.backports.misc.ChainMap.__getitem__": ["collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.ChainMap.__bool__", "future.backports.misc.__bool__", "future.backports.misc.OrderedDict.copy", "future.backports.misc.Counter.copy", "future.backports.misc.ChainMap.copy", "future.backports.misc.copy", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys"], "future.backports.misc.ChainMap.__len__": ["collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.ChainMap.__bool__", "future.backports.misc.__bool__", "future.backports.misc.OrderedDict.copy", "future.backports.misc.Counter.copy", "future.backports.misc.ChainMap.copy", "future.backports.misc.copy", "future.backports.misc.ChainMap.__len__", "future.backports.misc.OrderedDict.__setitem__", "future.backports.misc.OrderedDict.setdefault", "future.backports.misc.ChainMap.__setitem__"], "future.backports.misc.ChainMap.__iter__": ["collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.ChainMap.__bool__", "future.backports.misc.__bool__", "future.backports.misc.OrderedDict.copy", "future.backports.misc.Counter.copy", "future.backports.misc.ChainMap.copy", "future.backports.misc.copy", "future.backports.misc.OrderedDict.__iter__", "future.backports.misc.ChainMap.__iter__", "future.backports.misc.OrderedDict.__setitem__", "future.backports.misc.OrderedDict.setdefault", "future.backports.misc.ChainMap.__setitem__"], "future.backports.misc.ChainMap.__setitem__": ["collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.ChainMap.__bool__", "future.backports.misc.__bool__", "future.backports.misc.OrderedDict.copy", "future.backports.misc.Counter.copy", "future.backports.misc.ChainMap.copy", "future.backports.misc.copy", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys"], "future.backports.misc.ChainMap.__delitem__": ["collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.ChainMap.__bool__", "future.backports.misc.__bool__", "future.backports.misc.OrderedDict.copy", "future.backports.misc.Counter.copy", "future.backports.misc.ChainMap.copy", "future.backports.misc.copy", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys"], "future.backports.misc.UserDict.__len__": [], "future.backports.misc.UserDict.__getitem__": [], "future.backports.misc.UserDict.__setitem__": [], "future.backports.misc.UserDict.__delitem__": [], "future.backports.misc.UserDict.__iter__": [], "future.backports.misc.UserList.__len__": [], "future.backports.misc.UserList.__getitem__": [], "future.backports.misc.UserList.__setitem__": [], "future.backports.misc.UserList.__delitem__": [], "future.backports.misc.UserString.__len__": [], "future.backports.misc.UserString.__getitem__": [], "future.backports.misc.defaultdict.__getitem__": [], "future.backports.misc.deque.__iter__": [], "future.backports.misc.deque.__getitem__": [], "future.backports.misc.deque.__setitem__": [], "future.backports.misc.deque.__delitem__": [], "future.backports.misc.deque.__len__": [], "future.backports.socket.BufferedRWPair.__iter__": [], "future.backports.socket.BufferedRandom.__iter__": [], "future.backports.socket.BufferedReader.__iter__": [], "future.backports.socket.BufferedWriter.__iter__": [], "future.backports.socket.BytesIO.__iter__": [], "future.backports.socket.FileIO.__iter__": [], "future.backports.socket.StringIO.__iter__": [], "future.backports.socket.TextIOWrapper.__iter__": [], "future.backports.socket._BufferedIOBase.__iter__": [], "future.backports.socket._IOBase.__iter__": [], "future.backports.socket._RawIOBase.__iter__": [], "future.backports.socket._TextIOBase.__iter__": [], "future.backports.xmlrpc.client.MultiCallIterator.__getitem__": ["future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "future.builtins.dict", "future.backports.xmlrpc.client.Fault"], "future.backports.urllib.response.addbase.__iter__": ["future.builtins.object", "future.backports.urllib.response.addbase.__iter__"], "future.backports.http.client.HTTPResponse.__iter__": ["io", "io.RawIOBase"], "future.backports.http.cookies.SubPattern.__len__": [], "future.backports.http.cookies.SubPattern.__delitem__": [], "future.backports.http.cookies.SubPattern.__getitem__": [], "future.backports.http.cookies.SubPattern.__setitem__": [], "future.backports.http.cookies._EnumDict.__setitem__": [], "future.backports.http.cookies.EnumMeta.__getitem__": [], "future.backports.http.cookies.EnumMeta.__iter__": [], "future.backports.http.cookies.EnumMeta.__len__": [], "future.backports.http.cookies.Morsel.__setitem__": ["future.builtins.dict", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.set", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.Morsel.isReservedKey", "future.backports.http.cookies.CookieError", "future.builtins.dict.__setitem__"], "future.backports.http.cookies.BaseCookie.__setitem__": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode"], "future.backports.http.cookiejar.CookieJar.__len__": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__", "re.compile", "re.ASCII"], "future.backports.email.feedparser.BufferedSubFile.__iter__": ["future.builtins.object"], "future.backports.email.header._Accumulator.__len__": ["future.backports.email.header._ValueFormatter._maxlengths", "future.backports.email.header._Accumulator.__len__", "future.backports.email.header._Accumulator.part_count"], "future.backports.email.message.Message.__len__": ["future.backports.email.message.Message.__len__", "future.backports.email.message.Message.get_filename"], "future.backports.email.message.Message.__getitem__": ["future.backports.email.message.Message.get_filename"], "future.backports.email.message.Message.__setitem__": ["future.backports.email.message.Message.get_filename", "future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve"], "future.backports.email.message.Message.__delitem__": ["future.backports.email.message.Message.get_filename", "future.builtins.list", "future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve"], "future.backports.email.message.Message.__iter__": ["future.backports.email.message.Message.values"], "future.backports.email.headerregistry.HeaderRegistry.__getitem__": ["future.backports.email.headerregistry.Address.display_name", "future.backports.email.headerregistry.Address.username", "future.backports.email.headerregistry.Group.display_name", "future.backports.email.headerregistry.BaseHeader.name", "future.backports.email.headerregistry.name", "future.backports.email.headerregistry.ContentTypeHeader.maintype", "future.backports.email.headerregistry.ContentTypeHeader.subtype", "future.backports.email.headerregistry.ContentTypeHeader.content_type", "future.backports.email.headerregistry.HeaderRegistry.map_to_type", "future.utils.text_to_native_str"], "future.backports.email._parseaddr.AddressList.__len__": ["future.backports.email._parseaddr.AddrlistClass", "future.backports.email._parseaddr.AddressList.__len__"], "future.backports.email._parseaddr.AddressList.__getitem__": ["future.backports.email._parseaddr.AddrlistClass"], "future.backports.test.support.sched_param.__getitem__": [], "future.backports.test.support.sched_param.__iter__": [], "future.backports.test.support.sched_param.__len__": [], "future.backports.test.support.times_result.__getitem__": [], "future.backports.test.support.times_result.__iter__": [], "future.backports.test.support.times_result.__len__": [], "future.backports.test.support.uname_result.__getitem__": [], "future.backports.test.support.uname_result.__iter__": [], "future.backports.test.support.uname_result.__len__": [], "future.backports.test.support.waitid_result.__getitem__": [], "future.backports.test.support.waitid_result.__iter__": [], "future.backports.test.support.waitid_result.__len__": [], "future.backports.test.support._Environ.__getitem__": [], "future.backports.test.support._Environ.__setitem__": [], "future.backports.test.support._Environ.__delitem__": [], "future.backports.test.support._Environ.__iter__": [], "future.backports.test.support._Environ.__len__": [], "future.backports.test.support._wrap_close.__iter__": [], "future.backports.test.support._OrderedChainMap.__iter__": [], "future.backports.test.support.EnvironmentVarGuard.__getitem__": [], "future.backports.test.support.EnvironmentVarGuard.__setitem__": ["future.backports.test.support.Matcher.match_value"], "future.backports.test.support.EnvironmentVarGuard.__delitem__": [], "future.backports.test.support.EnvironmentVarGuard.__iter__": ["future.backports.test.support.EnvironmentVarGuard.__iter__"], "future.backports.test.support.EnvironmentVarGuard.__len__": ["future.backports.test.support.EnvironmentVarGuard.__len__"], "future.types.newstr.newstr.__getitem__": ["future.utils.with_metaclass", "future.types.newstr.BaseNewStr", "future.types.newstr.newstr"], "future.types.newrange.newrange.__len__": ["collections.Sequence", "collections.abc.Sequence"], "future.types.newrange.newrange.__getitem__": ["collections.Sequence", "collections.abc.Sequence", "future.types.newrange.newrange.index", "future.types.newrange.index", "future.types.newrange.newrange.__getitem_slice"], "future.types.newrange.newrange.__iter__": ["collections.Sequence", "collections.abc.Sequence", "future.types.newrange.range_iterator"], "future.types.newrange.range_iterator.__iter__": ["collections.Iterator", "collections.abc.Iterator"], "future.types.newbytes.newbytes.__getitem__": ["future.utils.with_metaclass", "future.types.newbytes.BaseNewBytes", "future.types.newbytes.newbytes", "numbers.Integral"], "future.types.newlist.newlist.__getitem__": ["future.utils.with_metaclass", "future.types.newlist.BaseNewList", "future.types.newlist.newlist.copy", "future.types.newlist.newlist"], "future.moves.configparser.RawConfigParser.__getitem__": [], "future.moves.configparser.RawConfigParser.__setitem__": [], "future.moves.configparser.RawConfigParser.__delitem__": [], "future.moves.configparser.RawConfigParser.__len__": [], "future.moves.configparser.RawConfigParser.__iter__": [], "future.moves.configparser.SectionProxy.__getitem__": [], "future.moves.configparser.SectionProxy.__setitem__": [], "future.moves.configparser.SectionProxy.__delitem__": [], "future.moves.configparser.SectionProxy.__len__": [], "future.moves.configparser.SectionProxy.__iter__": [], "future.moves.configparser.ConverterMapping.__getitem__": [], "future.moves.configparser.ConverterMapping.__setitem__": [], "future.moves.configparser.ConverterMapping.__delitem__": [], "future.moves.configparser.ConverterMapping.__iter__": [], "future.moves.configparser.ConverterMapping.__len__": [], "future.moves.itertools._grouper.__iter__": [], "future.moves.itertools._tee.__iter__": [], "future.moves.itertools.accumulate.__iter__": [], "future.moves.itertools.chain.__iter__": [], "future.moves.itertools.combinations.__iter__": [], "future.moves.itertools.combinations_with_replacement.__iter__": [], "future.moves.itertools.compress.__iter__": [], "future.moves.itertools.count.__iter__": [], "future.moves.itertools.cycle.__iter__": [], "future.moves.itertools.dropwhile.__iter__": [], "future.moves.itertools.filterfalse.__iter__": [], "future.moves.itertools.groupby.__iter__": [], "future.moves.itertools.islice.__iter__": [], "future.moves.itertools.permutations.__iter__": [], "future.moves.itertools.product.__iter__": [], "future.moves.itertools.repeat.__iter__": [], "future.moves.itertools.starmap.__iter__": [], "future.moves.itertools.takewhile.__iter__": [], "future.moves.itertools.zip_longest.__iter__": [], "future.moves._thread.ExceptHookArgs.__getitem__": [], "future.moves._thread.ExceptHookArgs.__iter__": [], "future.moves._thread.ExceptHookArgs.__len__": [], "future.moves.xmlrpc.client.MultiCallIterator.__getitem__": [], "future.moves.dbm.dumb._Database.__getitem__": [], "future.moves.dbm.dumb._Database.__setitem__": [], "future.moves.dbm.dumb._Database.__delitem__": [], "future.moves.dbm.dumb._Database.__len__": [], "future.moves.urllib.response._RandomNameSequence.__iter__": [], "future.moves.urllib.response._TemporaryFileWrapper.__iter__": [], "future.moves.urllib.response.SpooledTemporaryFile.__iter__": [], "future.moves.http.client.HTTPResponse.__iter__": [], "future.moves.http.cookies.Morsel.__setitem__": [], "future.moves.http.cookies.BaseCookie.__setitem__": [], "future.moves.http.cookiejar.CookieJar.__iter__": [], "future.moves.http.cookiejar.CookieJar.__len__": [], "future.moves.tkinter.commondialog.Misc.__setitem__": [], "future.moves.tkinter.commondialog.OptionMenu.__getitem__": [], "future.moves.tkinter.commondialog.Image.__setitem__": [], "future.moves.tkinter.commondialog.Image.__getitem__": [], "future.moves.tkinter.commondialog.PhotoImage.__getitem__": [], "future.moves.tkinter.font.Font.__getitem__": [], "future.moves.tkinter.font.Font.__setitem__": [], "future.moves.tkinter.ttk.OptionMenu.__getitem__": [], "future.moves.tkinter.tix.Form.__setitem__": [], "future.moves.tkinter.tix.DisplayStyle.__setitem__": [], "future.moves.tkinter.tix.DisplayStyle.__getitem__": [], "future.moves.test.support.DecimalTuple.__getitem__": [], "future.moves.test.support.DecimalTuple.__iter__": [], "future.moves.test.support.DecimalTuple.__len__": [], "future.moves.test.support.EnvironmentVarGuard.__getitem__": [], "future.moves.test.support.EnvironmentVarGuard.__setitem__": [], "future.moves.test.support.EnvironmentVarGuard.__delitem__": [], "future.moves.test.support.EnvironmentVarGuard.__iter__": [], "future.moves.test.support.EnvironmentVarGuard.__len__": [], "charset_normalizer.models.CharsetMatches.__iter__": ["typing.Iterator", "charset_normalizer.models.CharsetMatch"], "charset_normalizer.models.CharsetMatches.__getitem__": ["typing.Union", "charset_normalizer.models.CharsetMatch.fingerprint", "charset_normalizer.models.CharsetMatch.__str__", "charset_normalizer.models.CharsetMatches.__getitem__", "charset_normalizer.utils.iana_name", "charset_normalizer.models.CharsetMatch"], "charset_normalizer.models.CharsetMatches.__len__": ["charset_normalizer.models.CharsetMatches.__len__", "charset_normalizer.models.CharsetMatch.fingerprint"], "click.parser.shlex.__iter__": [], "click._compat._SpecialForm.__getitem__": [], "click._compat._GenericAlias.__getitem__": [], "click._compat._VariadicGenericAlias.__getitem__": [], "click._termui_impl.ProgressBar.__iter__": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic", "typing.Iterator"], "click.testing.EchoingStdin.__iter__": ["click.testing.EchoingStdin.__iter__", "click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "typing.Iterator"], "click.utils.LazyFile.__iter__": ["click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__iter__", "click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "typing.Iterator", "typing.AnyStr"], "click.utils.KeepOpenFile.__iter__": ["click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__iter__", "click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "typing.Iterator", "typing.AnyStr"], "tqdm.notebook.tqdm_notebook.__iter__": ["tqdm.std.tqdm", "tqdm.notebook.tqdm_notebook.__init__", "tqdm.notebook.tqdm_notebook.__iter__", "tqdm.notebook.tqdm_notebook"], "tqdm.std.tqdm.__len__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.__len__"], "tqdm.std.tqdm.__iter__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.Bar.__init__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "time.time"], "tqdm.utils.WeakValueDictionary.__getitem__": [], "tqdm.utils.WeakValueDictionary.__delitem__": [], "tqdm.utils.WeakValueDictionary.__len__": [], "tqdm.utils.WeakValueDictionary.__setitem__": [], "tqdm.utils.WeakKeyDictionary.__delitem__": [], "tqdm.utils.WeakKeyDictionary.__getitem__": [], "tqdm.utils.WeakKeyDictionary.__len__": [], "tqdm.utils.WeakKeyDictionary.__setitem__": [], "transformers.pipelines.PipelineDataFormat.__iter__": ["abc.abstractmethod"], "transformers.pipelines.CsvPipelineDataFormat.__iter__": ["transformers.pipelines.PipelineDataFormat", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines._ScikitCompat.transform", "transformers.pipelines.Pipeline.transform", "transformers.pipelines.Pipeline._forward", "csv", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ArgumentHandler.__call__", "transformers.pipelines.DefaultArgumentHandler.__call__", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline.__call__", "transformers.pipelines.FeatureExtractionPipeline.__call__", "transformers.pipelines.TextGenerationPipeline.__call__", "transformers.pipelines.TextClassificationPipeline.__call__", "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__", "transformers.pipelines.ZeroShotClassificationPipeline.__call__", "transformers.pipelines.FillMaskPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.__call__", "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.__call__", "transformers.pipelines.QuestionAnsweringPipeline.decode", "transformers.pipelines.SummarizationPipeline.__call__", "transformers.pipelines.TranslationPipeline.__call__", "transformers.pipelines.Text2TextGenerationPipeline.__call__", "transformers.pipelines.ConversationalPipeline.__call__", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "csv.DictReader"], "transformers.pipelines.JsonPipelineDataFormat.__iter__": ["transformers.pipelines.PipelineDataFormat", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ArgumentHandler.__call__", "transformers.pipelines.DefaultArgumentHandler.__call__", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline.__call__", "transformers.pipelines.FeatureExtractionPipeline.__call__", "transformers.pipelines.TextGenerationPipeline.__call__", "transformers.pipelines.TextClassificationPipeline.__call__", "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__", "transformers.pipelines.ZeroShotClassificationPipeline.__call__", "transformers.pipelines.FillMaskPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.__call__", "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.__call__", "transformers.pipelines.QuestionAnsweringPipeline.decode", "transformers.pipelines.SummarizationPipeline.__call__", "transformers.pipelines.TranslationPipeline.__call__", "transformers.pipelines.Text2TextGenerationPipeline.__call__", "transformers.pipelines.ConversationalPipeline.__call__", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.ConversationalPipeline._concat_inputs_history"], "transformers.pipelines.PipedPipelineDataFormat.__iter__": ["transformers.pipelines.PipelineDataFormat", "sys", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.ArgumentHandler.__call__", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.DefaultArgumentHandler.__call__", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.__call__", "transformers.pipelines.FeatureExtractionPipeline.__call__", "transformers.pipelines.TextGenerationPipeline.__call__", "transformers.pipelines.TextClassificationPipeline.__call__", "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels", "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__", "transformers.pipelines.ZeroShotClassificationPipeline.__call__", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.FillMaskPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.__call__", "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.__call__", "transformers.pipelines.SummarizationPipeline.__call__", "transformers.pipelines.TranslationPipeline.__call__", "transformers.pipelines.Text2TextGenerationPipeline.__call__", "transformers.pipelines.ConversationalPipeline.__call__", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.PipelineException.__init__", "transformers.pipelines.PipelineDataFormat.__init__", "transformers.pipelines.PipelineDataFormat.__iter__", "transformers.pipelines.PipelineDataFormat.save_binary", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.CsvPipelineDataFormat.__init__", "transformers.pipelines.CsvPipelineDataFormat.__iter__", "transformers.pipelines.JsonPipelineDataFormat.__init__", "transformers.pipelines.JsonPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.save_binary", "transformers.pipelines.Pipeline.__init__", "transformers.pipelines.Pipeline.save_pretrained", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.Pipeline._forward", "transformers.pipelines.FeatureExtractionPipeline.__init__", "transformers.pipelines.TextGenerationPipeline.__init__", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.TextClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.QuestionAnsweringPipeline.__init__", "transformers.pipelines.QuestionAnsweringPipeline.span_to_answer", "transformers.pipelines.SummarizationPipeline.__init__", "transformers.pipelines.TranslationPipeline.__init__", "transformers.pipelines.Text2TextGenerationPipeline.__init__", "transformers.pipelines.Conversation.__init__", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.Conversation.append_response", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.Conversation.__repr__", "transformers.pipelines.ConversationalPipeline.__init__", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "sys.stdin"], "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.__len__": ["transformers.file_utils.add_end_docstrings", "transformers.tokenization_utils_base.INIT_TOKENIZER_DOCSTRING", "transformers.tokenization_utils_base.PreTrainedTokenizerBase", "transformers.tokenization_utils.PreTrainedTokenizer"], "transformers.tokenization_utils_base.BatchEncoding.__getitem__": ["collections.UserDict", "typing.Union", "transformers.tokenization_utils_base.PreTrainedTokenizerBase._get_padding_truncation_strategies", "transformers.tokenization_utils_base.BatchEncoding.__getitem__", "transformers.tokenization_utils_base.BatchEncoding.items", "typing.Any", "transformers.tokenization_utils_base.EncodingFast", "tokenizers.Encoding"], "transformers.tokenization_utils.PreTrainedTokenizer.__len__": ["transformers.file_utils.add_end_docstrings", "transformers.tokenization_utils_base.INIT_TOKENIZER_DOCSTRING", "transformers.tokenization_utils_base.PreTrainedTokenizerBase", "transformers.tokenization_utils.PreTrainedTokenizer.__len__"], "transformers.file_utils.ModelOutput.__delitem__": ["collections.OrderedDict"], "transformers.file_utils.ModelOutput.__getitem__": ["collections.OrderedDict"], "transformers.file_utils.ModelOutput.__setitem__": ["collections.OrderedDict"], "transformers.generation_utils.BeamHypotheses.__len__": ["transformers.generation_utils.BeamHypotheses.__len__"], "transformers.hf_argparser._InitVarMeta.__getitem__": [], "transformers.trainer_pt_utils.SequentialDistributedSampler.__iter__": ["torch.utils.data.sampler.Sampler", "transformers.trainer_pt_utils.SequentialDistributedSampler.__len__", "transformers.trainer_pt_utils.SequentialDistributedSampler.__iter__"], "transformers.trainer_pt_utils.SequentialDistributedSampler.__len__": ["torch.utils.data.sampler.Sampler"], "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__": [], "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__": ["transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_batch"], "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__": ["transformers.tokenization_transfo_xl.LMShuffledIterator", "numpy", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_batch", "numpy.random"], "transformers.generation_tf_utils.BeamHypotheses.__len__": ["transformers.generation_tf_utils.BeamHypotheses.__len__"], "transformers.data.datasets.squad.SquadDataset.__len__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.squad.SquadDataTrainingArguments", "typing.List", "transformers.data.processors.squad.SquadFeatures", "transformers.data.datasets.squad.Split", "transformers.data.datasets.squad.SquadDataset.__len__"], "transformers.data.datasets.squad.SquadDataset.__getitem__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.squad.SquadDataTrainingArguments", "typing.List", "transformers.data.processors.squad.SquadFeatures", "transformers.data.datasets.squad.Split", "transformers.data.datasets.squad.SquadDataset.__init__", "transformers.data.datasets.squad.SquadDataset.__getitem__", "torch", "typing.Dict", "torch.tensor", "torch.long", "torch.float", "torch.ones", "torch.int64", "torch.Tensor"], "transformers.data.datasets.glue.GlueDataset.__len__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.glue.GlueDataTrainingArguments", "typing.List", "transformers.data.processors.utils.InputFeatures", "transformers.data.datasets.glue.GlueDataset.__len__"], "transformers.data.datasets.glue.GlueDataset.__getitem__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.glue.GlueDataTrainingArguments", "typing.List", "transformers.data.processors.utils.InputFeatures", "transformers.data.datasets.glue.GlueDataTrainingArguments.__post_init__", "transformers.data.datasets.glue.GlueDataset.__init__", "transformers.data.datasets.glue.GlueDataset.__getitem__"], "transformers.data.datasets.language_modeling.TextDataset.__len__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__"], "transformers.data.datasets.language_modeling.TextDataset.__getitem__": ["torch.utils.data.dataset.Dataset", "torch", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__", "torch.tensor", "torch.long", "torch.Tensor"], "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__"], "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__": ["torch.utils.data.dataset.Dataset", "torch", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__", "torch.tensor", "torch.long", "torch.Tensor"], "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__"], "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__", "typing.Dict", "torch", "torch.tensor"], "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__"], "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__"], "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__len__": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__len__"], "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__getitem__": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.SingleSentenceClassificationProcessor"], "packaging._manylinux.Array.__delitem__": [], "packaging._manylinux.Array.__getitem__": [], "packaging._manylinux.Array.__len__": [], "packaging._manylinux.Array.__setitem__": [], "packaging._manylinux._Pointer.__delitem__": [], "packaging._manylinux._Pointer.__getitem__": [], "packaging._manylinux._Pointer.__setitem__": [], "packaging._manylinux.CDLL.__getitem__": [], "packaging._manylinux.LibraryLoader.__getitem__": [], "packaging.specifiers.SpecifierSet.__len__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.SpecifierSet.__len__"], "packaging.specifiers.SpecifierSet.__iter__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.SpecifierSet.__iter__", "typing.Iterator", "packaging.specifiers.Specifier"], "torch.storage._StorageBase.__iter__": ["torch.storage._StorageBase.__iter__", "torch.storage._StorageBase.__sizeof__", "torch.storage._StorageBase.tolist", "torch.storage._StorageBase.int", "torch.storage._StorageBase.pin_memory"], "torch.tensor.Tensor.__len__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "torch.tensor.Tensor.__iter__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "warnings", "torch.tensor.Tensor.__iter__", "torch._six.imap", "torch.tensor.Tensor.register_hook", "torch.tensor.Tensor.reinforce", "torch.tensor.Tensor.retain_grad", "torch.tensor.Tensor.is_shared", "torch.tensor.Tensor.resize", "torch.tensor.Tensor.resize_as", "torch.tensor.Tensor.split", "torch.tensor.Tensor.unique", "torch.tensor.Tensor.unique_consecutive", "torch.tensor.Tensor.__ipow__", "torch.tensor.Tensor.__floordiv__", "torch.tensor.Tensor.__rfloordiv__", "torch.tensor.Tensor.__dir__", "torch.tensor.Tensor.__contains__", "torch.tensor.Tensor.__cuda_array_interface__", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor.align_to", "torch.tensor.Tensor.trim", "torch.tensor.Tensor.retain_grad_hook", "warnings.warn", "torch._C._TensorBase"], "torch._classes._GeneratorWrapper.__iter__": [], "torch._jit_internal.TupleCls.__getitem__": ["torch._jit_internal.TupleInstance"], "torch._jit_internal.ListCls.__getitem__": ["torch._jit_internal.TupleInstance"], "torch._jit_internal.DictCls.__getitem__": ["torch._jit_internal.DictInstance"], "torch._jit_internal.OptionalCls.__getitem__": ["torch._jit_internal.OptionalInstance"], "torch._jit_internal.FinalCls.__getitem__": ["torch._jit_internal.FinalInstance"], "torch._jit_internal.RRefCls.__getitem__": ["torch._jit_internal.RRefInstance"], "torch._jit_internal.BroadcastingListCls.__getitem__": [], "torch.testing._internal.common_methods_invocations.NoArgsClass.__iter__": ["torch.testing._internal.common_methods_invocations.NoArgsClass.__next__", "torch.testing._internal.common_methods_invocations.__next__"], "torch.testing._internal.common_methods_invocations.NoArgsClass.__len__": ["torch.testing._internal.common_methods_invocations.NoArgsClass.__next__", "torch.testing._internal.common_methods_invocations.__next__"], "torch.nn.cpp.OrderedDictWrapper.__iter__": [], "torch.nn.cpp.OrderedDictWrapper.__len__": [], "torch.nn.cpp.OrderedDictWrapper.__getitem__": ["torch.nn.cpp.OrderedDictWrapper.keys"], "torch.nn.modules.container.Sequential.__getitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "collections.OrderedDict", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.Sequential.__setitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch.nn.modules.container.Sequential._get_item_by_idx"], "torch.nn.modules.container.Sequential.__delitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys"], "torch.nn.modules.container.Sequential.__len__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.Sequential.__iter__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__iter__", "torch.nn.modules.container.ModuleList.__iter__", "torch.nn.modules.container.ModuleDict.__iter__", "torch.nn.modules.container.ParameterList.__iter__", "torch.nn.modules.container.ParameterDict.__iter__", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.ModuleList.__getitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.ModuleList.__setitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "torch.nn.modules.container.ModuleList._get_abs_string_index", "torch.nn.modules.container.ParameterList._get_abs_string_index"], "torch.nn.modules.container.ModuleList.__delitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__", "torch.nn.modules.container.ModuleList._get_abs_string_index", "torch.nn.modules.container.ParameterList._get_abs_string_index", "torch.nn.modules.container.Container.__init__", "torch.nn.modules.container.Sequential.__init__", "torch.nn.modules.container.Sequential.__getitem__", "torch.nn.modules.container.Sequential.__setitem__", "torch.nn.modules.container.Sequential.__delitem__", "torch.nn.modules.container.Sequential.__dir__", "torch.nn.modules.container.Sequential.__iter__", "torch.nn.modules.container.ModuleList.__init__", "torch.nn.modules.container.ModuleList.__getitem__", "torch.nn.modules.container.ModuleList.__setitem__", "torch.nn.modules.container.ModuleList.__delitem__", "torch.nn.modules.container.ModuleList.__iter__", "torch.nn.modules.container.ModuleList.__iadd__", "torch.nn.modules.container.ModuleList.__dir__", "torch.nn.modules.container.ModuleList.insert", "torch.nn.modules.container.ModuleDict.__init__", "torch.nn.modules.container.ModuleDict.__getitem__", "torch.nn.modules.container.ModuleDict.__setitem__", "torch.nn.modules.container.ModuleDict.__delitem__", "torch.nn.modules.container.ModuleDict.__iter__", "torch.nn.modules.container.ModuleDict.__contains__", "torch.nn.modules.container.ModuleDict.items", "torch.nn.modules.container.ParameterList.__init__", "torch.nn.modules.container.ParameterList.__getitem__", "torch.nn.modules.container.ParameterList.__setitem__", "torch.nn.modules.container.ParameterList.__iter__", "torch.nn.modules.container.ParameterList.__iadd__", "torch.nn.modules.container.ParameterList.__dir__", "torch.nn.modules.container.ParameterDict.__init__", "torch.nn.modules.container.ParameterDict.__getitem__", "torch.nn.modules.container.ParameterDict.__setitem__", "torch.nn.modules.container.ParameterDict.__delitem__", "torch.nn.modules.container.ParameterDict.__iter__", "torch.nn.modules.container.ParameterDict.__contains__", "torch.nn.modules.container.ParameterDict.items", "collections.OrderedDict"], "torch.nn.modules.container.ModuleList.__len__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.ModuleList.__iter__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__iter__", "torch.nn.modules.container.ModuleList.__iter__", "torch.nn.modules.container.ModuleDict.__iter__", "torch.nn.modules.container.ParameterList.__iter__", "torch.nn.modules.container.ParameterDict.__iter__", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.ModuleDict.__getitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.ModuleDict.__setitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys"], "torch.nn.modules.container.ModuleDict.__delitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys"], "torch.nn.modules.container.ModuleDict.__len__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.ModuleDict.__iter__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__iter__", "torch.nn.modules.container.ModuleList.__iter__", "torch.nn.modules.container.ModuleDict.__iter__", "torch.nn.modules.container.ParameterList.__iter__", "torch.nn.modules.container.ParameterDict.__iter__", "torch._jit_internal._copy_to_script_wrapper"], "torch.nn.modules.container.ParameterList.__getitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "torch.nn.modules.container.ModuleList._get_abs_string_index", "torch.nn.modules.container.ParameterList._get_abs_string_index"], "torch.nn.modules.container.ParameterList.__setitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "torch.nn.modules.container.ModuleList._get_abs_string_index", "torch.nn.modules.container.ParameterList._get_abs_string_index"], "torch.nn.modules.container.ParameterList.__len__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__"], "torch.nn.modules.container.ParameterList.__iter__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__iter__", "torch.nn.modules.container.ModuleList.__iter__", "torch.nn.modules.container.ModuleDict.__iter__", "torch.nn.modules.container.ParameterList.__iter__", "torch.nn.modules.container.ParameterDict.__iter__"], "torch.nn.modules.container.ParameterDict.__getitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys"], "torch.nn.modules.container.ParameterDict.__setitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys"], "torch.nn.modules.container.ParameterDict.__delitem__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys"], "torch.nn.modules.container.ParameterDict.__len__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__"], "torch.nn.modules.container.ParameterDict.__iter__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__iter__", "torch.nn.modules.container.ModuleList.__iter__", "torch.nn.modules.container.ModuleDict.__iter__", "torch.nn.modules.container.ParameterList.__iter__", "torch.nn.modules.container.ParameterDict.__iter__"], "torch.nn.utils.prune.PruningContainer.__len__": ["torch.nn.utils.prune.BasePruningMethod", "torch.nn.utils.prune.PruningContainer.__len__"], "torch.nn.utils.prune.PruningContainer.__iter__": ["torch.nn.utils.prune.BasePruningMethod", "torch.nn.utils.prune.PruningContainer.__iter__"], "torch.nn.utils.prune.PruningContainer.__getitem__": ["torch.nn.utils.prune.BasePruningMethod"], "torch.multiprocessing.pool._PoolCache.__delitem__": [], "torch.multiprocessing.pool.IMapIterator.__iter__": [], "torch.multiprocessing.reductions.SharedCache.__setitem__": [], "torch.jit.annotations.EvalEnv.__getitem__": ["torch._jit_internal.Tuple", "torch._jit_internal.List", "torch._jit_internal.Dict", "torch._jit_internal.Optional", "torch._jit_internal.RRef", "torch.jit.annotations.Module", "torch", "torch.jit.annotations.Module.__getattr__", "torch._six.builtins", "torch.Tensor"], "torch.jit.__init__.OrderedDictWrapper.__len__": ["torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.RecursiveScriptModule.__len__"], "torch.jit.__init__.OrderedDictWrapper.__delitem__": [], "torch.jit.__init__.OrderedDictWrapper.__setitem__": ["torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer"], "torch.jit.__init__.OrderedDictWrapper.__getitem__": ["torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique"], "torch.jit.__init__.OrderedModuleDict.__setitem__": ["torch.jit.__init__.OrderedDictWrapper", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.ScriptModule", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique"], "torch.jit.__init__.OrderedModuleDict.__getitem__": ["torch.jit.__init__.OrderedDictWrapper", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique"], "torch.jit.__init__.RecursiveScriptModule.__iter__": ["torch.jit.__init__.ScriptModule"], "torch.jit.__init__.RecursiveScriptModule.__getitem__": ["torch.jit.__init__.ScriptModule"], "torch.jit.__init__.RecursiveScriptModule.__len__": ["torch.jit.__init__.ScriptModule"], "torch.utils.data.sampler.Sampler.__iter__": [], "torch.utils.data.sampler.SequentialSampler.__iter__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.Sampler.__iter__", "torch.utils.data.sampler.SequentialSampler.__iter__", "torch.utils.data.sampler.RandomSampler.__iter__", "torch.utils.data.sampler.SubsetRandomSampler.__iter__", "torch.utils.data.sampler.WeightedRandomSampler.__iter__", "torch.utils.data.sampler.BatchSampler.__iter__", "torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__len__"], "torch.utils.data.sampler.SequentialSampler.__len__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__len__"], "torch.utils.data.sampler.RandomSampler.__iter__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.Sampler.__init__", "torch.utils.data.sampler.SequentialSampler.__init__", "torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__init__", "torch.utils.data.sampler.RandomSampler.num_samples", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__init__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__init__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__init__", "torch.utils.data.sampler.BatchSampler.__len__", "torch.utils.data.sampler.Sampler.__iter__", "torch.utils.data.sampler.SequentialSampler.__iter__", "torch.utils.data.sampler.RandomSampler.__iter__", "torch.utils.data.sampler.SubsetRandomSampler.__iter__", "torch.utils.data.sampler.WeightedRandomSampler.__iter__", "torch.utils.data.sampler.BatchSampler.__iter__", "torch", "torch.randint", "torch.int64", "torch.randperm"], "torch.utils.data.sampler.RandomSampler.__len__": ["torch.utils.data.sampler.Sampler"], "torch.utils.data.sampler.SubsetRandomSampler.__iter__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.Sampler.__init__", "torch.utils.data.sampler.Sampler.__iter__", "torch.utils.data.sampler.SequentialSampler.__init__", "torch.utils.data.sampler.SequentialSampler.__iter__", "torch.utils.data.sampler.RandomSampler.__init__", "torch.utils.data.sampler.RandomSampler.__iter__", "torch.utils.data.sampler.SubsetRandomSampler.__init__", "torch.utils.data.sampler.SubsetRandomSampler.__iter__", "torch.utils.data.sampler.WeightedRandomSampler.__init__", "torch.utils.data.sampler.WeightedRandomSampler.__iter__", "torch.utils.data.sampler.BatchSampler.__init__", "torch.utils.data.sampler.BatchSampler.__iter__", "torch", "torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__len__", "torch.randperm"], "torch.utils.data.sampler.SubsetRandomSampler.__len__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__len__"], "torch.utils.data.sampler.WeightedRandomSampler.__iter__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.Sampler.__iter__", "torch.utils.data.sampler.SequentialSampler.__iter__", "torch.utils.data.sampler.RandomSampler.__iter__", "torch.utils.data.sampler.SubsetRandomSampler.__iter__", "torch.utils.data.sampler.WeightedRandomSampler.__iter__", "torch.utils.data.sampler.BatchSampler.__iter__", "torch", "torch.multinomial"], "torch.utils.data.sampler.WeightedRandomSampler.__len__": ["torch.utils.data.sampler.Sampler"], "torch.utils.data.sampler.BatchSampler.__iter__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__len__"], "torch.utils.data.sampler.BatchSampler.__len__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__len__"], "torch.utils.data.distributed.DistributedSampler.__iter__": ["torch.utils.data.Sampler", "torch", "torch.utils.data.distributed.DistributedSampler.__len__", "torch.utils.data.distributed.DistributedSampler.__iter__", "torch.Generator", "torch.randperm"], "torch.utils.data.distributed.DistributedSampler.__len__": ["torch.utils.data.Sampler"], "torch.utils.data.dataloader._InfiniteConstantSampler.__iter__": ["torch.utils.data.Sampler"], "torch.utils.data.dataloader.DataLoader.__iter__": ["torch.utils.data.dataloader._SingleProcessDataLoaderIter", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter"], "torch.utils.data.dataloader.DataLoader.__len__": ["torch.utils.data.dataloader._DatasetKind", "torch.utils.data.dataloader.DataLoader.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__len__"], "torch.utils.data.dataloader._BaseDataLoaderIter.__iter__": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader.__next__"], "torch.utils.data.dataloader._BaseDataLoaderIter.__len__": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader.__next__", "torch.utils.data.dataloader.DataLoader.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__len__"], "torch.utils.data.dataset.Dataset.__getitem__": [], "torch.utils.data.dataset.IterableDataset.__iter__": ["torch.utils.data.dataset.Dataset"], "torch.utils.data.dataset.TensorDataset.__getitem__": ["torch.utils.data.dataset.Dataset"], "torch.utils.data.dataset.TensorDataset.__len__": ["torch.utils.data.dataset.Dataset"], "torch.utils.data.dataset.ConcatDataset.__len__": ["torch.utils.data.dataset.Dataset"], "torch.utils.data.dataset.ConcatDataset.__getitem__": ["torch.utils.data.dataset.Dataset", "torch.utils.data.dataset.TensorDataset.__len__", "torch.utils.data.dataset.ConcatDataset.__len__", "torch.utils.data.dataset.ChainDataset.__len__", "torch.utils.data.dataset.Subset.__len__", "bisect", "bisect.bisect_right"], "torch.utils.data.dataset.ChainDataset.__iter__": ["torch.utils.data.dataset.IterableDataset", "torch.utils.data.dataset.Dataset.__add__", "torch.utils.data.dataset.IterableDataset.__add__"], "torch.utils.data.dataset.ChainDataset.__len__": ["torch.utils.data.dataset.IterableDataset", "torch.utils.data.dataset.Dataset.__add__", "torch.utils.data.dataset.IterableDataset.__add__", "torch.utils.data.dataset.TensorDataset.__len__", "torch.utils.data.dataset.ConcatDataset.__len__", "torch.utils.data.dataset.ChainDataset.__len__", "torch.utils.data.dataset.Subset.__len__"], "torch.utils.data.dataset.Subset.__getitem__": ["torch.utils.data.dataset.Dataset"], "torch.utils.data.dataset.Subset.__len__": ["torch.utils.data.dataset.Dataset", "torch.utils.data.dataset.TensorDataset.__len__", "torch.utils.data.dataset.ConcatDataset.__len__", "torch.utils.data.dataset.ChainDataset.__len__", "torch.utils.data.dataset.Subset.__len__"], "torch.backends.cuda.__init__.cuFFTPlanCacheManager.__getitem__": ["torch", "torch.backends.cuda.__init__.cuFFTPlanCache", "torch.cuda"], "google.protobuf.internal.containers.BaseContainer.__getitem__": ["typing.Sequence", "google.protobuf.internal.containers.UnknownFieldSet._internal_get", "typing.overload", "typing.List"], "google.protobuf.internal.containers.BaseContainer.__len__": ["typing.Sequence", "google.protobuf.internal.containers.BaseContainer.__len__", "google.protobuf.internal.containers.ScalarMap.__len__", "google.protobuf.internal.containers.MessageMap.__len__", "google.protobuf.internal.containers.UnknownFieldSet.__len__", "google.protobuf.internal.containers.UnknownFieldSet._internal_get"], "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__setitem__": ["google.protobuf.internal.containers.BaseContainer", "typing.MutableSequence", "google.protobuf.internal.containers.UnknownFieldSet._internal_get", "typing.overload", "typing.Iterable"], "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__delitem__": ["google.protobuf.internal.containers.BaseContainer", "typing.MutableSequence", "typing.Union", "google.protobuf.internal.containers.UnknownFieldSet._internal_get"], "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__setitem__": ["google.protobuf.internal.containers.BaseContainer", "typing.MutableSequence", "google.protobuf.internal.containers.UnknownFieldSet._internal_get", "typing.overload", "typing.Iterable"], "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__delitem__": ["google.protobuf.internal.containers.BaseContainer", "typing.MutableSequence", "typing.Union", "google.protobuf.internal.containers.UnknownFieldSet._internal_get"], "google.protobuf.internal.containers.ScalarMap.__getitem__": ["typing.MutableMapping", "google.protobuf.internal.containers.ScalarMap.InvalidateIterators", "google.protobuf.internal.containers.MessageMap.InvalidateIterators", "google.protobuf.internal.containers.UnknownFieldRef._check_valid"], "google.protobuf.internal.containers.ScalarMap.__setitem__": ["typing.MutableMapping"], "google.protobuf.internal.containers.ScalarMap.__delitem__": ["typing.MutableMapping"], "google.protobuf.internal.containers.ScalarMap.__len__": ["typing.MutableMapping", "google.protobuf.internal.containers.BaseContainer.__len__", "google.protobuf.internal.containers.ScalarMap.__len__", "google.protobuf.internal.containers.MessageMap.__len__", "google.protobuf.internal.containers.UnknownFieldSet.__len__", "google.protobuf.internal.containers.UnknownFieldSet._internal_get"], "google.protobuf.internal.containers.ScalarMap.__iter__": ["typing.MutableMapping", "google.protobuf.internal.containers.ScalarMap.__iter__", "google.protobuf.internal.containers.MessageMap.__iter__", "google.protobuf.internal.containers.UnknownFieldSet.__iter__", "google.protobuf.internal.containers.ScalarMap.InvalidateIterators", "google.protobuf.internal.containers.MessageMap.InvalidateIterators", "typing.Iterator"], "google.protobuf.internal.containers.MessageMap.__getitem__": ["typing.MutableMapping"], "google.protobuf.internal.containers.MessageMap.__setitem__": ["typing.MutableMapping", "typing.NoReturn"], "google.protobuf.internal.containers.MessageMap.__delitem__": ["typing.MutableMapping"], "google.protobuf.internal.containers.MessageMap.__len__": ["typing.MutableMapping", "google.protobuf.internal.containers.BaseContainer.__len__", "google.protobuf.internal.containers.ScalarMap.__len__", "google.protobuf.internal.containers.MessageMap.__len__", "google.protobuf.internal.containers.UnknownFieldSet.__len__", "google.protobuf.internal.containers.UnknownFieldSet._internal_get"], "google.protobuf.internal.containers.MessageMap.__iter__": ["typing.MutableMapping", "google.protobuf.internal.containers.ScalarMap.__iter__", "google.protobuf.internal.containers.MessageMap.__iter__", "google.protobuf.internal.containers.UnknownFieldSet.__iter__", "google.protobuf.internal.containers.ScalarMap.InvalidateIterators", "google.protobuf.internal.containers.MessageMap.InvalidateIterators", "typing.Iterator"], "google.protobuf.internal.containers.UnknownFieldSet.__getitem__": ["google.protobuf.internal.containers.BaseContainer.__len__", "google.protobuf.internal.containers.ScalarMap.__len__", "google.protobuf.internal.containers.MessageMap.__len__", "google.protobuf.internal.containers.UnknownFieldSet.__len__", "google.protobuf.internal.containers.UnknownFieldRef"], "google.protobuf.internal.containers.UnknownFieldSet.__len__": ["google.protobuf.internal.containers.BaseContainer.__len__", "google.protobuf.internal.containers.ScalarMap.__len__", "google.protobuf.internal.containers.MessageMap.__len__", "google.protobuf.internal.containers.UnknownFieldSet.__len__"], "google.protobuf.internal.containers.UnknownFieldSet.__iter__": ["google.protobuf.internal.containers.BaseContainer.__init__", "google.protobuf.internal.containers.BaseContainer.__getitem__", "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__init__", "google.protobuf.internal.containers.RepeatedScalarFieldContainer.insert", "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__setitem__", "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__delitem__", "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__init__", "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.insert", "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__setitem__", "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__delitem__", "google.protobuf.internal.containers.ScalarMap.__init__", "google.protobuf.internal.containers.ScalarMap.__getitem__", "google.protobuf.internal.containers.ScalarMap.__contains__", "google.protobuf.internal.containers.ScalarMap.__setitem__", "google.protobuf.internal.containers.ScalarMap.__delitem__", "google.protobuf.internal.containers.ScalarMap.__iter__", "google.protobuf.internal.containers.ScalarMap.InvalidateIterators", "google.protobuf.internal.containers.MessageMap.__init__", "google.protobuf.internal.containers.MessageMap.__getitem__", "google.protobuf.internal.containers.MessageMap.__contains__", "google.protobuf.internal.containers.MessageMap.__setitem__", "google.protobuf.internal.containers.MessageMap.__delitem__", "google.protobuf.internal.containers.MessageMap.__iter__", "google.protobuf.internal.containers.MessageMap.InvalidateIterators", "google.protobuf.internal.containers._UnknownField.__init__", "google.protobuf.internal.containers.UnknownFieldRef.__init__", "google.protobuf.internal.containers.UnknownFieldRef._check_valid", "google.protobuf.internal.containers.UnknownFieldRef.field_number", "google.protobuf.internal.containers.UnknownFieldRef.wire_type", "google.protobuf.internal.containers.UnknownFieldSet.__init__", "google.protobuf.internal.containers.UnknownFieldSet.__getitem__", "google.protobuf.internal.containers.UnknownFieldSet._internal_get", "google.protobuf.internal.containers.UnknownFieldSet.__iter__", "google.protobuf.internal.containers.BaseContainer.__len__", "google.protobuf.internal.containers.ScalarMap.__len__", "google.protobuf.internal.containers.MessageMap.__len__", "google.protobuf.internal.containers.UnknownFieldSet.__len__", "google.protobuf.internal.containers.UnknownFieldRef"], "google.protobuf.internal.extension_dict._ExtensionDict.__getitem__": ["google.protobuf.internal.extension_dict._VerifyExtensionHandle", "google.protobuf.descriptor.FieldDescriptor", "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED", "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE"], "google.protobuf.internal.extension_dict._ExtensionDict.__len__": ["google.protobuf.internal.extension_dict._ExtensionDict.__len__"], "google.protobuf.internal.extension_dict._ExtensionDict.__setitem__": ["google.protobuf.internal.extension_dict._VerifyExtensionHandle", "google.protobuf.descriptor.FieldDescriptor", "google.protobuf.internal.type_checkers", "google.protobuf.internal.type_checkers.GetTypeChecker", "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED", "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE"], "google.protobuf.internal.extension_dict._ExtensionDict.__delitem__": [], "google.protobuf.internal.extension_dict._ExtensionDict.__iter__": [], "google.protobuf.internal.well_known_types.Struct.__getitem__": ["google.protobuf.internal.well_known_types._GetStructValue", "google.protobuf.internal.well_known_types.Struct.keys"], "google.protobuf.internal.well_known_types.Struct.__setitem__": ["google.protobuf.internal.well_known_types._SetStructValue", "google.protobuf.internal.well_known_types.Struct.values", "google.protobuf.internal.well_known_types.Struct.keys"], "google.protobuf.internal.well_known_types.Struct.__delitem__": ["google.protobuf.internal.well_known_types.Struct.keys"], "google.protobuf.internal.well_known_types.Struct.__len__": ["google.protobuf.internal.well_known_types.Struct.__len__", "google.protobuf.internal.well_known_types.ListValue.__len__"], "google.protobuf.internal.well_known_types.Struct.__iter__": ["google.protobuf.internal.well_known_types.Struct.__iter__"], "google.protobuf.internal.well_known_types.ListValue.__len__": ["google.protobuf.internal.well_known_types.Struct.__len__", "google.protobuf.internal.well_known_types.ListValue.__len__"], "google.protobuf.internal.well_known_types.ListValue.__getitem__": ["google.protobuf.internal.well_known_types._GetStructValue"], "google.protobuf.internal.well_known_types.ListValue.__setitem__": ["google.protobuf.internal.well_known_types._SetStructValue", "google.protobuf.internal.well_known_types.Struct.values"], "google.protobuf.internal.well_known_types.ListValue.__delitem__": ["google.protobuf.internal.well_known_types.Struct.keys"], "numpy.distutils.npy_pkg_config.VariableSet.__getitem__": [], "numpy.distutils.npy_pkg_config.VariableSet.__setitem__": [], "numpy.polynomial._polybase.ABCPolyBase.__iter__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.__iter__", "os.name", "abc.ABC"], "numpy.polynomial._polybase.ABCPolyBase.__len__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.__len__", "os.name", "abc.ABC"], "numpy.lib.arrayterator.Arrayterator.__getitem__": ["numpy.lib.arrayterator.Arrayterator.__init__", "numpy.lib.arrayterator.Arrayterator.__getitem__", "numpy.lib.arrayterator.Arrayterator.__iter__"], "numpy.lib.arrayterator.Arrayterator.__iter__": ["numpy.lib.arrayterator.Arrayterator.__init__", "numpy.lib.arrayterator.Arrayterator.__getitem__", "numpy.lib.arrayterator.Arrayterator.__iter__", "functools.reduce", "operator.mul", "numpy.lib.arrayterator.Arrayterator.__getattr__", "numpy.lib.arrayterator.Arrayterator.flat"], "numpy.lib._datasource._FileOpeners.__getitem__": ["numpy.lib._datasource._FileOpeners.keys"], "numpy.lib.npyio.NpzFile.__iter__": ["collections.abc.Mapping", "numpy.lib.npyio.NpzFile.__iter__"], "numpy.lib.npyio.NpzFile.__len__": ["collections.abc.Mapping", "numpy.lib.npyio.NpzFile.__len__"], "numpy.lib.npyio.NpzFile.__getitem__": ["collections.abc.Mapping", "numpy.lib.npyio.WriteWrap.write_bytes", "numpy.lib.npyio.NpzFile.__len__", "numpy.lib.format", "numpy.lib.format.MAGIC_PREFIX", "numpy.lib.format.read_array"], "numpy.lib.polynomial.poly1d.__len__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "numpy.lib.polynomial.poly1d.__getitem__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "numpy.lib.polynomial.poly1d.__setitem__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.core.numeric", "numpy.core.numeric.zeros", "numpy.core.numeric.concatenate"], "numpy.lib.polynomial.poly1d.__iter__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "numpy.lib.index_tricks.nd_grid.__getitem__": ["numpy.lib.index_tricks.AxisConcatenator.__len__", "numpy.core.numeric", "math", "numpy.core.numeric.result_type", "numpy.core.numeric.indices", "numpy.core.numeric.arange", "numpy.core.numeric.newaxis", "numpy.core.numeric.complexfloating", "math.ceil"], "numpy.lib.index_tricks.AxisConcatenator.__getitem__": ["numpy.core.numeric", "numpy.matrixlib", "sys", "numpy.lib.index_tricks.nd_grid.__getitem__", "numpy.lib.index_tricks.AxisConcatenator.__getitem__", "numpy.lib.index_tricks.IndexExpression.__getitem__", "numpy.core.linspace", "numpy.core.numeric.array", "numpy.core.numeric.ScalarType", "numpy.lib.index_tricks.AxisConcatenator.__len__", "numpy.lib.index_tricks.ndenumerate.__next__", "numpy.lib.index_tricks.ndenumerate.__iter__", "numpy.lib.index_tricks.ndindex.__iter__", "numpy.lib.index_tricks.ndindex.__next__", "numpy.core.numeric.ndim", "numpy.core.numerictypes.find_common_type", "numpy.core.numeric.concatenate", "numpy.core.numeric.ndarray", "numpy.core.numeric.arange", "numpy.core.numeric.complexfloating", "sys._getframe", "numpy.matrixlib.matrix", "numpy.matrixlib.bmat"], "numpy.lib.index_tricks.AxisConcatenator.__len__": ["numpy.core.numeric", "numpy.matrixlib", "numpy.core.numeric.concatenate", "numpy.matrixlib.matrix"], "numpy.lib.index_tricks.ndenumerate.__iter__": ["numpy.core.overrides.set_module"], "numpy.lib.index_tricks.ndindex.__iter__": ["numpy.core.overrides.set_module"], "numpy.lib.index_tricks.IndexExpression.__getitem__": ["numpy.lib.index_tricks.nd_grid.__getitem__", "numpy.lib.index_tricks.AxisConcatenator.__getitem__", "numpy.lib.index_tricks.IndexExpression.__getitem__"], "numpy.lib.user_array.container.__len__": ["numpy.lib.user_array.container.__add__", "numpy.lib.user_array.__add__", "numpy.lib.user_array.container.__mul__", "numpy.lib.user_array.__mul__", "numpy.lib.user_array.container.__len__"], "numpy.lib.user_array.container.__getitem__": ["numpy.lib.user_array.container.__add__", "numpy.lib.user_array.__add__", "numpy.lib.user_array.container.__mul__", "numpy.lib.user_array.__mul__"], "numpy.lib.user_array.container.__setitem__": ["numpy.lib.user_array.container.__add__", "numpy.lib.user_array.__add__", "numpy.lib.user_array.container.__mul__", "numpy.lib.user_array.__mul__", "numpy.core.asarray"], "numpy.f2py.symbolic.Expr.__getitem__": ["numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.ewarn", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op"], "numpy._typing._nested_sequence._NestedSequence.__len__": ["typing.runtime_checkable", "typing.Protocol"], "numpy._typing._nested_sequence._NestedSequence.__getitem__": ["typing.runtime_checkable", "typing.Protocol", "typing.overload", "numpy._typing._nested_sequence._NestedSequence"], "numpy._typing._nested_sequence._NestedSequence.__iter__": ["typing.runtime_checkable", "typing.Protocol", "typing.Iterator", "numpy._typing._nested_sequence._NestedSequence"], "numpy._typing._generic_alias._GenericAlias.__getitem__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__", "numpy._typing._generic_alias._GenericAlias.__iter__", "numpy._typing._generic_alias._reconstruct_alias"], "numpy._typing._generic_alias._GenericAlias.__iter__": ["typing.ClassVar", "collections.abc.Generator"], "numpy.matrixlib.defmatrix.matrix.__getitem__": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.matrixlib.defmatrix.matrix.__new__", "numpy.matrixlib.defmatrix.matrix.__array_finalize__", "numpy.matrixlib.defmatrix.matrix._align", "numpy.matrixlib.defmatrix.matrix.flatten", "numpy.matrixlib.defmatrix.matrix.mean", "numpy.matrixlib.defmatrix.matrix.any", "numpy.matrixlib.defmatrix.matrix.min", "numpy.matrixlib.defmatrix.matrix.argmin", "numpy.core.numeric.isscalar", "numpy.core.numeric.ndarray"], "numpy.ma.core.MaskedIterator.__iter__": [], "numpy.ma.core.MaskedIterator.__getitem__": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ndarray", "numpy", "numpy.ma.core.mvoid", "numpy.void"], "numpy.ma.core.MaskedIterator.__setitem__": ["numpy.ma.core.getdata", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.getmaskarray"], "numpy.ma.core.MaskedArray.__getitem__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__getitem__._is_scalar", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.__getitem__._is_scalar", "numpy.ma.core.MaskedArray.__getitem__._scalar_heuristic", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.__getitem__._scalar_heuristic", "numpy.ma.core.getmaskarray", "numpy.ma.core.is_string_or_list_of_strings", "numpy.ma.core.mvoid", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.reshape", "numpy.ma.core.MaskedArray", "warnings", "numpy.ndarray.trace", "numpy.var", "numpy.void", "numpy.object_", "warnings.warn"], "numpy.ma.core.MaskedArray.__setitem__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskError", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.mask_or", "numpy.core.umath", "numpy.ndarray.trace", "numpy.var", "numpy.copyto", "numpy.errstate", "numpy.core.umath.logical_not"], "numpy.ma.core.mvoid.__getitem__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ndarray"], "numpy.ma.core.mvoid.__setitem__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core.MaskedArray.fill_value"], "numpy.ma.core.mvoid.__iter__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__"], "numpy.ma.core.mvoid.__len__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__"], "numpy.ma.mrecords.MaskedRecords.__len__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.__len__"], "numpy.ma.mrecords.MaskedRecords.__getitem__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ndarray", "numpy.ma.mrecords.MaskedRecords._data", "numpy.ma.mrecords._data", "numpy.ma.mrecords.MaskedRecords.__str__", "numpy.ma.masked", "numpy", "numpy.recarray", "numpy.ndarray.__getattribute__", "numpy.ndarray.view", "numpy.array"], "numpy.ma.mrecords.MaskedRecords.__setitem__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.__str__", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ma", "numpy.ma.getmaskarray", "numpy.ma.MaskedArray.__setitem__"], "numpy.ma.extras.MAxisConcatenator.__getitem__": ["numpy.lib.index_tricks.AxisConcatenator", "numpy.ma.core.concatenate", "numpy.ma.core.MAError"], "numpy.core.memmap.memmap.__getitem__": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.memmap.memmap"], "numpy.core.records.record.__getitem__": ["numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.numerictypes.void"], "numpy.core.records.recarray.__getitem__": ["numpy.core.records.format_parser._createdtype", "numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.numerictypes.void"], "numpy.core.numerictypes._typedict.__getitem__": ["numpy.core.numerictypes.obj2sctype"], "numpy.core.defchararray.chararray.__getitem__": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.numerictypes.character", "numpy.core.numeric.ndarray.argsort", "numpy.core.numeric.ndarray.__getitem__"], "numpy.array_api._typing.NestedSequence.__getitem__": ["typing.Protocol", "numpy.array_api._typing.NestedSequence"], "numpy.array_api._typing.NestedSequence.__len__": ["typing.Protocol"], "numpy.array_api._array_object.Array.__getitem__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "typing.Tuple", "numpy.ndarray"], "numpy.array_api._array_object.Array.__setitem__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array", "numpy.array_api._array_object.Array.__float__", "numpy.array_api._array_object.Array.__bool__", "typing.Tuple", "numpy.array_api._creation_functions.asarray", "numpy.ndarray"], "past.translation.__init__._NamespacePath.__iter__": [], "past.translation.__init__._NamespacePath.__getitem__": [], "past.translation.__init__._NamespacePath.__setitem__": [], "past.translation.__init__._NamespacePath.__len__": [], "past.types.oldstr.oldstr.__iter__": ["past.utils.with_metaclass", "past.types.oldstr.BaseOldStr"], "past.types.oldstr.oldstr.__getitem__": ["past.utils.with_metaclass", "past.types.oldstr.BaseOldStr", "numbers.Integral", "past.types.oldstr.oldstr.__getslice__", "past.types.oldstr.oldstr"], "requests.models.Response.__iter__": [], "requests.structures.CaseInsensitiveDict.__setitem__": ["requests.compat.MutableMapping"], "requests.structures.CaseInsensitiveDict.__getitem__": ["requests.compat.MutableMapping"], "requests.structures.CaseInsensitiveDict.__delitem__": ["requests.compat.MutableMapping"], "requests.structures.CaseInsensitiveDict.__iter__": ["requests.compat.MutableMapping"], "requests.structures.CaseInsensitiveDict.__len__": ["requests.compat.MutableMapping", "requests.structures.CaseInsensitiveDict.__len__"], "requests.structures.LookupDict.__getitem__": [], "requests.cookies.RequestsCookieJar.__getitem__": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.compat.cookielib.CookieJar"], "requests.cookies.RequestsCookieJar.__setitem__": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.itervalues", "requests.cookies.RequestsCookieJar.values", "requests.compat.cookielib.CookieJar"], "requests.cookies.RequestsCookieJar.__delitem__": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.remove_cookie_by_name", "requests.compat.cookielib.CookieJar"], "libpasteurize.fixes.feature_base.Features.__getitem__": ["libpasteurize.fixes.feature_base.Features.update_mapping"], "sentencepiece.__init__.ImmutableSentencePieceText.ImmutableSentencePieceIterator.__len__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.delete_ImmutableSentencePieceText"], "sentencepiece.__init__.ImmutableSentencePieceText.ImmutableSentencePieceIterator.__getitem__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.delete_ImmutableSentencePieceText"], "sentencepiece.__init__.ImmutableNBestSentencePieceText.ImmutableSentencePieceTextIterator.__len__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.delete_ImmutableNBestSentencePieceText"], "sentencepiece.__init__.ImmutableNBestSentencePieceText.ImmutableSentencePieceTextIterator.__getitem__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.delete_ImmutableNBestSentencePieceText"], "sentencepiece.__init__.SentencePieceProcessor.__len__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "sentencepiece.__init__.SentencePieceProcessor.__getitem__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "joblib._dask._WeakKeyDictionary.__getitem__": ["joblib._dask.DaskDistributedBackend.retrieval_context"], "joblib._dask._WeakKeyDictionary.__setitem__": ["joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.__len__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.Batch.__call__", "joblib._dask.Batch.__repr__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.__reduce__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.DaskDistributedBackend.apply_async", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask._WeakKeyDictionary.__setitem__.on_destroy", "joblib._dask.__setitem__.on_destroy", "weakref", "weakref.ref"], "joblib._dask._WeakKeyDictionary.__len__": ["joblib._dask._WeakKeyDictionary.__len__"], "joblib.parallel.BatchedCalls.__len__": [], "regex.test_regex.StrSubclass.__getitem__": ["regex.test_regex.RegexTests.test_bytes_str_mixing", "regex.test_regex.StrSubclass"], "regex.test_regex.BytesSubclass.__getitem__": ["regex.test_regex.RegexTests.test_bytes_str_mixing", "regex.test_regex.BytesSubclass"], "caffe2.python.schema.List.__getitem__": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct.__len__"], "caffe2.python.schema.ListWithEvicted.__getitem__": ["caffe2.python.schema.List", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct.__len__"], "caffe2.python.schema.Struct.__len__": ["caffe2.python.schema.Field", "caffe2.python.schema.Struct.__len__"], "caffe2.python.schema.Struct.__getitem__": ["caffe2.python.schema.Field", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct", "caffe2.python.schema.Field._pprint_impl", "caffe2.python.schema.List._pprint_impl", "caffe2.python.schema.ListWithEvicted._pprint_impl", "caffe2.python.schema.Struct._pprint_impl", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema.Scalar._pprint_impl", "caffe2.python.schema._SchemaNode.print_recursively", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "future.utils.viewkeys", "itertools.islice", "future.utils.viewvalues"], "caffe2.python.workspace._BlobDict.__getitem__": ["caffe2.python.workspace.FetchBlob"], "caffe2.python.workspace._BlobDict.__setitem__": ["caffe2.python.workspace.FeedBlob"], "caffe2.python.workspace._BlobDict.__len__": ["caffe2.python.workspace._BlobDict.__len__", "caffe2.python._import_c_extension", "caffe2.python._import_c_extension.blobs"], "caffe2.python.workspace._BlobDict.__iter__": ["caffe2.python._import_c_extension", "caffe2.python._import_c_extension.blobs"], "caffe2.python.models.seq2seq.translate.X.__len__": [], "urllib3.response.HTTPResponse.__iter__": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse.supports_chunked_reads", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.HTTPResponse._handle_chunk", "urllib3.response.HTTPResponse.read_chunked", "brotli.error", "io.IOBase", "zlib.error"], "urllib3._collections.RecentlyUsedContainer.__getitem__": ["collections.abc.MutableMapping", "collections.MutableMapping", "collections.OrderedDict", "urllib3._collections.RecentlyUsedContainer.__getitem__", "urllib3._collections.RecentlyUsedContainer.__setitem__", "urllib3._collections.RecentlyUsedContainer.__delitem__", "urllib3._collections.HTTPHeaderDict.__setitem__", "urllib3._collections.HTTPHeaderDict.__getitem__", "urllib3._collections.HTTPHeaderDict.__delitem__", "urllib3._collections.HTTPHeaderDict.iteritems", "urllib3._collections.HTTPHeaderDict.items", "urllib3._collections.RecentlyUsedContainer.keys"], "urllib3._collections.RecentlyUsedContainer.__setitem__": ["collections.abc.MutableMapping", "collections.MutableMapping", "collections.OrderedDict", "urllib3._collections.RecentlyUsedContainer.keys", "urllib3._collections.RecentlyUsedContainer.__len__", "urllib3._collections.HTTPHeaderDict.__len__"], "urllib3._collections.RecentlyUsedContainer.__delitem__": ["collections.abc.MutableMapping", "collections.MutableMapping", "collections.OrderedDict", "urllib3._collections.RecentlyUsedContainer.keys"], "urllib3._collections.RecentlyUsedContainer.__len__": ["collections.abc.MutableMapping", "collections.MutableMapping", "collections.OrderedDict", "urllib3._collections.RecentlyUsedContainer.__len__", "urllib3._collections.HTTPHeaderDict.__len__"], "urllib3._collections.RecentlyUsedContainer.__iter__": ["collections.abc.MutableMapping", "collections.MutableMapping", "collections.OrderedDict"], "urllib3._collections.HTTPHeaderDict.__setitem__": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3._collections.RecentlyUsedContainer.keys", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "urllib3._collections.HTTPHeaderDict.__getitem__": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3._collections.RecentlyUsedContainer.keys", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "urllib3._collections.HTTPHeaderDict.__delitem__": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3._collections.RecentlyUsedContainer.keys", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "urllib3._collections.HTTPHeaderDict.__len__": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3._collections.RecentlyUsedContainer.__len__", "urllib3._collections.HTTPHeaderDict.__len__", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "urllib3._collections.HTTPHeaderDict.__iter__": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "urllib3.packages.six.X.__len__": [], "google.protobuf.internal.extension_dict._VerifyExtensionHandle": ["google.protobuf.descriptor.FieldDescriptor"], "future.backports.urllib.request.FancyURLopener.__init__": ["future.backports.urllib.request.URLopener"], "transformers.AutoModelForQuestionAnswering": ["transformers.modeling_auto.AutoModelForQuestionAnswering"], "torch.tensor.Tensor.__ipow__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "future.backports.http.cookies.CookieError": [], "future.backports.http.cookies.BaseCookie.output": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode"], "numpy.ma.core._MaskedPrintOption.display": ["numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__"], "transformers.pipelines.TranslationPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.modeling_tf_auto.TF_MODEL_WITH_LM_HEAD_MAPPING", "transformers.modeling_auto.MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING"], "future.backports.misc.Counter": [], "numpy.core.defchararray.chararray.argsort": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.numeric.ndarray.argsort"], "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels": ["transformers.pipelines.ArgumentHandler", "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels", "transformers.pipelines.PipelineDataFormat.from_str"], "numpy.core.records.record.pprint": ["numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.record.__getattribute__", "numpy.core.records.recarray.__getattribute__", "numpy.core.numerictypes.void"], "future.backports.urllib.request.Request.set_proxy": ["future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host"], "numpy.ma.core.getmask": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__"], "numpy.lib.polynomial.poly1d.__rdiv__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.core.isscalar", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polydiv"], "logging": [], "future.backports.urllib.request.OpenerDirector._call_chain": ["future.backports.urllib.request.OpenerDirector._call_chain", "future.backports.urllib.request.OpenerDirector.add_handler"], "tempfile.mkstemp": [], "click._termui_impl.ProgressBar.eta": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "numpy.ma.core.MaskedArray.__truediv__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "numpy.ma.MaskedArray": ["numpy.ma.core.MaskedArray"], "future.backports.urllib.request.ftperrors": ["ftplib", "ftplib.all_errors"], "torch.testing._internal.common_methods_invocations.__next__": [], "sentencepiece.__init__.SentencePieceProcessor._DecodePieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.pieces", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePieces", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__DecodePieces"], "google.protobuf.internal.containers.UnknownFieldRef._check_valid": ["google.protobuf.internal.containers.BaseContainer.__len__", "google.protobuf.internal.containers.ScalarMap.__len__", "google.protobuf.internal.containers.MessageMap.__len__", "google.protobuf.internal.containers.UnknownFieldSet.__len__"], "numpy.ma.core.MaskedConstant.__deepcopy__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "sentencepiece.__init__.ImmutableSentencePieceText.__init__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "sentencepiece._sentencepiece.ImmutableSentencePieceText_swiginit", "sentencepiece._sentencepiece.new_ImmutableSentencePieceText", "_sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.ImmutableSentencePieceText_swiginit", "_sentencepiece.new_ImmutableSentencePieceText"], "torch.tensor.Tensor.__rdiv__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "click.utils.KeepOpenFile.__enter__": [], "numpy.lib.index_tricks.AxisConcatenator": ["numpy.core.numeric", "numpy.matrixlib", "numpy.core.numeric.concatenate", "numpy.matrixlib.matrix"], "numpy.ma.core.MaskedArray.anom": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.expand_dims", "numpy.ndarray.trace", "numpy.var"], "future.backports.urllib.parse._coerce_args": ["future.builtins.str", "future.backports.urllib.parse._noop", "future.backports.urllib.parse._decode_args", "future.backports.urllib.parse._encode_result"], "numpy.ma.core._data": [], "future.backports.urllib.request.Request.get_type": ["warnings", "warnings.warn"], "transformers.pipelines.Conversation.__init__": ["transformers.pipelines.PipelineDataFormat.from_str", "uuid.UUID", "uuid", "typing.List", "typing.Optional", "uuid.uuid4"], "future.backports.email.headerregistry.ContentTypeHeader.maintype": ["future.backports.email.headerregistry.ParameterizedMIMEHeader", "future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email.headerregistry.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.parse_content_type_header"], "future.backports.http.cookiejar.DefaultCookiePolicy": ["future.backports.http.cookiejar.CookiePolicy"], "collections.MutableMapping.__ne__": [], "numpy.polynomial._polybase.ABCPolyBase.__str__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "numpy.matrixlib.defmatrix.matrix.H": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray", "numpy.core.numeric.complexfloating"], "numpy.core.numeric._get_promotion_state": ["numpy.core.numeric._get_promotion_state", "numpy.core.multiarray._get_promotion_state"], "brotli.error": [], "future.backports.misc.OrderedDict.setdefault": ["future.backports.misc.Counter.update", "future.backports.misc.update", "collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys", "future.backports.misc.K.__ne__", "future.backports.misc.__ne__", "future.backports.misc.cmp_to_key.__ne__", "future.backports.misc.OrderedDict.setdefault", "collections.MutableMapping.update", "collections.MutableMapping.keys", "collections.MutableMapping.values", "collections.MutableMapping.items", "collections.MutableMapping.__ne__", "collections.abc.MutableMapping.update", "collections.abc.MutableMapping.keys", "collections.abc.MutableMapping.values", "collections.abc.MutableMapping.items", "collections.abc.MutableMapping.__ne__"], "numpy.void": [], "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__NBestEncodeAsSerializedProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__NBestEncodeAsSerializedProto"], "collections.MutableMapping.iterkeys": [], "numpy.ma.core.__getitem__._scalar_heuristic": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ndarray", "numpy", "numpy.ma.core.mvoid", "numpy.ma.core.MaskedArray.__getitem__._is_scalar", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.__getitem__._is_scalar", "numpy.ma.core.MaskedArray.__getitem__._scalar_heuristic", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.__getitem__._scalar_heuristic", "numpy.ma.core.getmaskarray", "numpy.ma.core.is_string_or_list_of_strings", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.reshape", "numpy.ma.core.MaskedArray", "warnings", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ndarray.__getitem__", "numpy.void", "numpy.object_", "warnings.warn"], "future.backports.urllib.request.Request.has_proxy": [], "numpy.lib.user_array.__mul__": ["numpy.core.multiply", "numpy.core.asarray"], "numpy.lib.polynomial.poly1d.__pos__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_GetPieceSize", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_GetPieceSize"], "future.backports.http.cookies.Morsel.isReservedKey": ["future.builtins.dict", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.set", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.Morsel.isReservedKey"], "typing.MutableSequence": [], "click._termui_impl.ProgressBar.format_pos": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "numpy.ndarray.__getattribute__": [], "sentencepiece.__init__.SentencePieceTrainer.__init__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr"], "torch.Tensor": ["torch.__init__.Tensor", "torch.tensor.Tensor"], "numpy.ma.core.getdata": ["numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy", "numpy.ndarray", "numpy.array"], "future.backports.http.cookiejar.CookieJar.make_cookies.no_matching_rfc2965": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.split_header_words", "future.backports.http.cookiejar._warn_unhandled_exception", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.builtins.filter", "future.backports.http.cookiejar.CookieJar.make_cookies.no_matching_rfc2965", "future.backports.http.cookiejar.make_cookies.no_matching_rfc2965", "future.backports.http.cookiejar.parse_ns_headers", "re.compile", "re.ASCII"], "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.delete_ImmutableNBestSentencePieceText"], "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "transformers.pipelines.Pipeline.save_pretrained": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat", "transformers.pipelines.PipelineDataFormat.from_str", "os", "os.path", "os.makedirs"], "transformers.pipelines._ScikitCompat.predict": ["abc.ABC", "abc.abstractmethod"], "torch.jit.annotations.Module": [], "future.backports.misc.Counter.elements": ["itertools.chain", "itertools.starmap", "itertools.repeat", "itertools.chain.from_iterable"], "google.protobuf.internal.containers.MessageMap.__contains__": ["typing.MutableMapping", "google.protobuf.internal.containers.BaseContainer.__getitem__", "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__setitem__", "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__delitem__", "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__setitem__", "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__delitem__", "google.protobuf.internal.containers.ScalarMap.__getitem__", "google.protobuf.internal.containers.ScalarMap.__setitem__", "google.protobuf.internal.containers.ScalarMap.__delitem__", "google.protobuf.internal.containers.MessageMap.__getitem__", "google.protobuf.internal.containers.MessageMap.__setitem__", "google.protobuf.internal.containers.MessageMap.__delitem__", "google.protobuf.internal.containers.UnknownFieldSet.__getitem__"], "zlib": [], "click.testing._NamedTextIOWrapper.__init__": ["click.testing.CliRunner.isolation", "io", "click.testing.CliRunner.should_strip_ansi", "click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "typing", "click.testing._NamedTextIOWrapper.name", "click.testing.name", "click.testing._NamedTextIOWrapper.mode", "click.testing.mode", "io.TextIOWrapper", "typing.BinaryIO", "typing.Any"], "numpy.ma.core.concatenate": ["numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy", "numpy.ma.core.getdata", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.get_masked_subclass", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.getmask", "numpy.ma.core.getmaskarray", "numpy.ma.core._shrink_mask", "numpy.concatenate"], "numpy.ma.core.MaskedArray.__idiv__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.getdata", "numpy.ma.core._DomainSafeDivide", "numpy.ma.core.getmask", "numpy.ma.core.mask_or", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__eq__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__le__", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__ge__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__pow__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ndarray.trace", "numpy.var", "numpy.where", "numpy.divide"], "torch._jit_internal._copy_to_script_wrapper": ["torch._jit_internal.fn", "torch._jit_internal.boolean_dispatch.fn", "torch._jit_internal.FunctionModifiers"], "torch.nn.modules.container.ModuleDict.items": ["torch.nn.modules.module.Module", "torch._jit_internal._copy_to_script_wrapper"], "weakref.ref": [], "google.protobuf.internal.containers.BaseContainer.__init__": ["typing.Sequence", "typing.Any"], "torch.utils.data.dataloader._BaseDataLoaderIter.__next__": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader.__next__", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data", "torch.utils.data.dataloader._DatasetKind", "warnings", "warnings.warn"], "collections.MutableMapping.items": [], "caffe2.python.schema.Scalar.field_types": ["caffe2.python.schema.Field"], "future.backports.urllib.parse.ParseResultBytes.geturl": ["future.backports.urllib.parse._NetlocResultMixinBytes", "future.backports.urllib.parse.urlunparse"], "click.testing.CliRunner._getchar": ["click.testing.CliRunner._getchar", "click.testing.CliRunner.isolated_filesystem", "sys", "click.testing.EchoingStdin._echo", "click.testing._pause_echo", "click.testing.CliRunner.should_strip_ansi", "sys.stdin", "sys.stdout"], "numpy.matrixlib.defmatrix.matrix.A": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "future.backports.http.cookies.BaseCookie.value_decode": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode"], "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsPiecesBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__EncodeAsPiecesBatch"], "_sentencepiece.delete_ImmutableNBestSentencePieceText": [], "numpy.copyto": ["numpy.core.numeric.copyto", "numpy.core.multiarray.copyto"], "past.builtins.__init__.str": ["future.builtins.__init__.str", "past.builtins.__init__.str", "past.types.oldstr", "__builtin__.str"], "numpy.lib.polynomial.poly1d.__repr__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "numpy.lib.polynomial.poly1d.__div__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.core.isscalar", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polydiv"], "future.backports.urllib.request.Request.add_data": ["warnings", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "warnings.warn"], "numpy.core.numeric.fromfunction": ["numpy.core.multiarray.dtype", "numpy.core.numeric.indices", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module"], "click.utils.LazyFile.__init__": ["click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "click.utils.LazyFile.close", "os", "click._compat.open_stream", "click.utils.LazyFile.open", "click.utils.open", "os.fspath", "typing.Union", "typing.Optional", "typing.IO", "typing.Any"], "transformers.pipelines.Text2TextGenerationPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.ConversationalPipeline._concat_inputs_history"], "click.utils.LazyFile.__enter__": [], "torch._six.imap": [], "numpy.ma.core.MaskedArray._scalar_heuristic": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ndarray.trace", "numpy.ndarray.__getitem__", "numpy.var", "numpy.object_"], "numpy.ma.core.MaskedArray.dot": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.dot", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ndarray.trace", "numpy.var"], "caffe2.python.schema.Scalar.field_metadata": ["caffe2.python.schema.Field"], "future.backports.urllib.request.CacheFTPHandler.__init__": ["future.backports.urllib.request.FTPHandler"], "torch.nn.modules.module.Module": [], "future.builtins.__init__.int": ["future.builtins.__init__.int", "future.types.newint"], "torch.utils.data.dataset.IterableDataset.__add__": ["torch.utils.data.dataset.Dataset", "torch.utils.data.dataset.ChainDataset"], "sentencepiece.__init__.SentencePieceProcessor.DecodePieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "joblib._dask._WeakKeyDictionary.__init__": [], "numpy.lib.user_array.container.__add__": ["numpy.lib.user_array.container.__add__", "numpy.lib.user_array.__add__", "numpy.lib.user_array.container.__mul__", "numpy.lib.user_array.__mul__", "numpy.core.asarray"], "bisect": [], "transformers.pipelines.QuestionAnsweringPipeline.create_sample": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "typing.Union", "transformers.pipelines.PipelineDataFormat.from_str", "typing.List", "transformers.data.SquadExample", "transformers.pipelines.ArgumentHandler.__call__", "transformers.pipelines.DefaultArgumentHandler.__call__", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.__call__", "transformers.pipelines.FeatureExtractionPipeline.__call__", "transformers.pipelines.TextGenerationPipeline.__call__", "transformers.pipelines.TextClassificationPipeline.__call__", "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__", "transformers.pipelines.ZeroShotClassificationPipeline.__call__", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.FillMaskPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.__call__", "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.__call__", "transformers.pipelines.QuestionAnsweringPipeline.decode", "transformers.pipelines.SummarizationPipeline.__call__", "transformers.pipelines.TranslationPipeline.__call__", "transformers.pipelines.Text2TextGenerationPipeline.__call__", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.ConversationalPipeline.__call__", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.ConversationalPipeline._concat_inputs_history"], "torch.nn.modules.container.ModuleDict.__contains__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch._jit_internal._copy_to_script_wrapper"], "future.backports.urllib.request.proxy_bypass_macosx_sysconf": ["_scproxy._get_proxy_settings", "future.backports.urllib.request._proxy_bypass_macosx_sysconf", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host"], "transformers.pipelines.FillMaskPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.tokenization_utils.PreTrainedTokenizer", "transformers.pipelines.ArgumentHandler", "transformers.pipelines.PipelineDataFormat.from_str", "typing.Union", "typing.Optional", "transformers.modelcard.ModelCard", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.modeling_tf_auto.TF_MODEL_WITH_LM_HEAD_MAPPING", "transformers.modeling_auto.MODEL_FOR_MASKED_LM_MAPPING"], "torch.utils.data.dataset.Dataset": [], "torch.utils.data.Sampler": ["torch.utils.data.sampler.Sampler"], "numpy.ma.core.MaskError": ["numpy.ma.core.MAError"], "future.backports.urllib.request.FancyURLopener.http_error_303": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "torch.nn.modules.container.Sequential._get_item_by_idx": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__", "torch.nn.modules.container.Sequential._get_item_by_idx", "operator", "itertools.islice", "operator.index"], "torch._jit_internal.Dict": ["torch.jit.annotations.Dict", "typing.Dict"], "abc.ABC": [], "future.backports.urllib.parse.Quoter.__missing__": ["collections", "future.builtins.chr", "collections.defaultdict"], "numpy.core.numeric.ndarray.argsort": [], "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.delete_ImmutableSentencePieceText"], "click.testing.CliRunner.hidden_input": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "sys", "click.testing._pause_echo", "sys.stdout", "typing.Optional"], "numpy.lib.arrayterator.Arrayterator.__init__": [], "future.builtins.dict": ["future.builtins.__init__.dict", "past.builtins.__init__.dict", "future.types.newdict"], "numpy.ma.mrecords.MaskedRecords.soften_mask": ["numpy.ma.MaskedArray"], "torch.storage._StorageBase.tolist": ["torch.storage._StorageBase.tolist"], "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__"], "copy.copy": [], "future.backports.urllib.parse.SplitResult": ["future.backports.urllib.parse._NetlocResultMixinStr"], "torch.jit.__init__.RecursiveScriptModule.save_to_buffer": ["torch.jit.__init__.ScriptModule"], "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "torch.tensor.Tensor.retain_grad": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "weakref", "torch.tensor.Tensor.retain_grad.retain_grad_hook", "torch.tensor.Tensor.retain_grad_hook", "torch.tensor.retain_grad.retain_grad_hook", "torch._C._TensorBase", "weakref.ref"], "torch.tensor.Tensor.trim": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "future.backports.urllib.error.URLError": [], "numpy.core": ["os", "numpy.core.numerictypes", "copyreg", "numpy.core._ufunc_reduce", "numpy.core._DType_reduce", "numpy._pytesttester.PytestTester", "numpy.core.numeric", "numpy.core.function_base", "numpy.core.getlimits", "numpy.core.shape_base", "numpy.core.einsumfunc", "numpy.core.multiarray", "numpy.core._DType_reconstruct", "numpy.core.umath", "numpy.version.version", "sys", "numpy.core.multiarray.set_typeDict", "numpy.core.numerictypes.sctypeDict", "numpy.core.numeric.__all__", "numpy.core.function_base.__all__", "numpy.core.getlimits.__all__", "numpy.core.shape_base.__all__", "numpy.core.einsumfunc.__all__", "copyreg.pickle", "os.environ", "sys.modules", "sys.executable", "sys.version_info", "numpy.core.defchararray", "numpy.core.records", "numpy.core.memmap", "numpy.core.records.record", "numpy.core.records.recarray", "numpy.core.records.format_parser", "numpy.core.defchararray.chararray"], "future.backports.urllib.request.FancyURLopener.http_error_301": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "torch.tensor.Tensor.reinforce": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.reinforce.trim", "torch.tensor.Tensor.trim", "torch.tensor.reinforce.trim", "torch._C._TensorBase"], "numpy.core.numeric.isscalar": ["numbers", "numpy.core.overrides.set_module", "numbers.Number"], "caffe2.python.schema.Field": [], "caffe2.python.schema.Struct.field_names": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "future.utils.viewitems", "caffe2.python.schema._join_field_name"], "numpy.matrixlib.defmatrix.T": [], "torch.jit.__init__.OrderedDictWrapper.keys": ["torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer"], "torch.nn.modules.container.ParameterDict.items": ["torch.nn.modules.module.Module"], "torch.utils.data.sampler.RandomSampler.__init__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.RandomSampler.num_samples", "torch.utils.data.sampler.num_samples"], "numpy.ma.core._arraymethod": ["numpy.ndarray", "numpy", "numpy.ma.core.wrapped_method", "numpy.ma.core._arraymethod.wrapped_method"], "future.backports.urllib.request.URLopener.open_unknown_proxy": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.parse.splittype", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.http.client.HTTPSConnection"], "numpy.ma.mrecords.MaskedRecords.__str__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.__setattr__", "numpy.ma.mrecords.MaskedRecords.__setitem__", "numpy.ma.mrecords.MaskedRecords.__str__", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ma.mrecords.MaskedRecords.tolist", "numpy.ma.mrecords.MaskedRecords.__getstate__", "numpy.ma.mrecords.MaskedRecords.__setstate__", "numpy.ma.mrecords.MaskedRecords.__getattribute__", "numpy.ma.mrecords.MaskedRecords.__array_finalize__", "numpy.ma.mrecords.MaskedRecords.__getitem__", "numpy.ma.mrecords.MaskedRecords.view"], "transformers.tokenization_transfo_xl.LMShuffledIterator": [], "caffe2.python.schema.Struct.field_metadata": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.metadata", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.metadata", "caffe2.python.schema.Field.__init__", "caffe2.python.schema.Field.clone_schema", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.all_scalars", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.Field._set_parent", "caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Field.__eq__", "caffe2.python.schema.Field._pprint_impl", "caffe2.python.schema.Field.__repr__", "caffe2.python.schema.List.__init__", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.all_scalars", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.List._pprint_impl", "caffe2.python.schema.List.__getattr__", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__init__", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.all_scalars", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.ListWithEvicted._pprint_impl", "caffe2.python.schema.ListWithEvicted.__getattr__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__init__", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct.all_scalars", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Struct._pprint_impl", "caffe2.python.schema.Struct.__contains__", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct.__getattr__", "caffe2.python.schema.Struct.__setattr__", "caffe2.python.schema.Struct.__add__", "caffe2.python.schema.Struct.__sub__", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema.Scalar.__init__", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema.Scalar.all_scalars", "caffe2.python.schema.Scalar.__call__", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Scalar._pprint_impl", "caffe2.python.schema._SchemaNode.__init__", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema._SchemaNode.print_recursively", "future.utils.viewitems"], "handler.predict": ["handler.encode", "torch", "handler.decode", "torch.tensor", "torch.argmax"], "collections.abc.MutableMapping.itervalues": [], "future.backports.urllib.request.proxy_bypass_registry": ["future.builtins.str", "winreg", "future.backports.urllib.parse.splitport", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "socket", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "socket.gethostbyname", "socket.error", "socket.getfqdn", "winreg.OpenKey", "winreg.HKEY_CURRENT_USER", "winreg.QueryValueEx", "re.match", "re.I"], "caffe2.python._import_c_extension.blobs": [], "torch._C._add_docstr": [], "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "tqdm.std.TqdmWarning.__init__": ["tqdm.std.tqdm.status_printer.fp_write", "tqdm.std.tqdm.close.fp_write", "tqdm.std.tqdm.fp_write", "tqdm.std.status_printer.fp_write", "tqdm.std.close.fp_write", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__call__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._decr_instances", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm._comparable", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.clear", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.display", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.wrapper", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.TqdmWarning", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix_str"], "transformers.tokenization_utils_base.INIT_TOKENIZER_DOCSTRING": [], "future.backports.email.header._Accumulator.part_count": ["future.builtins.super"], "click.utils.KeepOpenFile.__exit__": ["click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "types.TracebackType", "typing.Optional", "typing.Type"], "transformers.pipelines.TextClassificationPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "numpy", "transformers.pipelines.PipelineException.__init__", "transformers.pipelines.PipelineDataFormat.__init__", "transformers.pipelines.PipelineDataFormat.__iter__", "transformers.pipelines.PipelineDataFormat.save_binary", "transformers.pipelines.CsvPipelineDataFormat.__init__", "transformers.pipelines.CsvPipelineDataFormat.__iter__", "transformers.pipelines.JsonPipelineDataFormat.__init__", "transformers.pipelines.JsonPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.save_binary", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.__init__", "transformers.pipelines.Pipeline.save_pretrained", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.FeatureExtractionPipeline.__init__", "transformers.pipelines.TextGenerationPipeline.__init__", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.TextClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.QuestionAnsweringPipeline.__init__", "transformers.pipelines.SummarizationPipeline.__init__", "transformers.pipelines.TranslationPipeline.__init__", "transformers.pipelines.Text2TextGenerationPipeline.__init__", "transformers.pipelines.Conversation.__init__", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.ConversationalPipeline.__init__", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "numpy.exp"], "future.backports.xmlrpc.client.DateTime.__init__": ["future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client._strftime"], "numpy.core.numeric.ndarray": ["numpy.core.numeric.ndarray", "numpy.core.multiarray.ndarray"], "future.backports.urllib.request.URLopener.open_https": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.http.client.HTTPSConnection"], "numpy.core.asarray": ["numpy.ma.core.asarray", "numpy.core.numeric.asarray", "numpy.core.multiarray.asarray", "numpy.core.defchararray.asarray", "numpy.array_api.__init__.asarray"], "tqdm.std.EMA.__init__": [], "past.utils.__init__.PY2": ["future.utils.__init__.PY2", "past.utils.__init__.PY2"], "numpy.ma.core.MaskedArray._is_scalar": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ndarray.trace", "numpy.var"], "caffe2.python.schema.ListWithEvicted.field_types": ["caffe2.python.schema.List"], "future.backports.urllib.request.ProxyHandler.proxy_open": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.HTTPPasswordMgr.add_password", "future.backports.urllib.request._parse_proxy", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.proxy_bypass", "future.backports.urllib.parse.unquote", "base64", "base64.b64encode"], "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.__len__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__"], "transformers.pipelines.QuestionAnsweringPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.data.squad_convert_examples_to_features", "transformers.tokenization_utils_base.PaddingStrategy", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.Conversation.append_response", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "numpy", "transformers.pipelines.PipelineDataFormat.save", "transformers.pipelines.PipelineDataFormat.save_binary", "transformers.pipelines.CsvPipelineDataFormat.save", "transformers.pipelines.JsonPipelineDataFormat.save", "transformers.pipelines.PipedPipelineDataFormat.save", "transformers.pipelines.PipedPipelineDataFormat.save_binary", "transformers.pipelines.Pipeline.save_pretrained", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines._ScikitCompat.transform", "transformers.pipelines.Pipeline.transform", "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.span_to_answer", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.PipelineDataFormat.__iter__", "transformers.pipelines.CsvPipelineDataFormat.__iter__", "transformers.pipelines.JsonPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.__iter__", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.QuestionAnsweringPipeline.decode", "transformers.pipelines.Conversation.__repr__", "tensorflow", "torch", "torch.no_grad", "torch.tensor", "numpy.where", "numpy.exp", "numpy.array", "numpy.abs", "numpy.log", "numpy.sum", "transformers.tokenization_utils_base.PaddingStrategy.MAX_LENGTH", "tensorflow.constant"], "typing.Dict": [], "collections.OrderedDict": [], "torch.jit.__init__.ScriptMeta.make_stubs": ["torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique"], "numpy.ma.core.MaskedArray.hardmask": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "copy": [], "click.utils.LazyFile.__exit__": ["click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "types.TracebackType", "typing.Optional", "typing.Type"], "tqdm.std.tqdm.set_description": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.refresh", "tqdm.std.refresh"], "click._termui_impl.ProgressBar.pct": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "future.backports.urllib.request.FancyURLopener.http_error_302": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "numpy.core.numeric.indices": ["numpy.core.multiarray.empty", "numpy.core.multiarray.dtype", "numpy.core.multiarray.arange", "numpy.core.overrides.set_module"], "sentencepiece.__init__.SentencePieceProcessor.IdToPiece": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_IdToPiece", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_IdToPiece"], "regex.test_regex.RegexTests.test_bytes_str_mixing": ["unittest", "regex.test_regex.RegexTests.test_basic_regex_sub", "regex", "unittest.TestCase", "regex.compile", "regex.UNICODE", "regex.ASCII"], "numpy.ma.core.__repr__": ["numpy", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.mvoid.__len__", "builtins", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.take", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant", "numpy.ndarray", "numpy.core", "numpy.all", "numpy.array2string", "builtins.all", "builtins.max"], "google.protobuf.internal.containers.UnknownFieldRef": [], "google.protobuf.internal.well_known_types._GetStructValue": [], "numpy.lib.format": [], "past.types.oldstr.oldstr.__getslice__": ["past.utils.with_metaclass", "past.types.oldstr.BaseOldStr", "past.types.oldstr.oldstr.__getslice__"], "numpy.core.numeric._set_promotion_state": ["numpy.core.numeric._set_promotion_state", "numpy.core.multiarray._set_promotion_state"], "torch.multinomial": ["numpy.random.__init__.multinomial"], "future.backports.email._parseaddr.AddrlistClass": [], "click.testing.Result.stdout": ["click.testing.CliRunner.should_strip_ansi"], "torch.storage._StorageBase.__sizeof__": ["torch.storage._StorageBase"], "tqdm.notebook.tqdm_notebook.__init__": ["tqdm.std.tqdm", "sys", "tqdm.notebook.tqdm_notebook.colour", "tqdm.notebook.colour", "tqdm.notebook.tqdm_notebook", "weakref.proxy", "tqdm.notebook.tqdm_notebook.display", "tqdm.notebook.display", "IPython.display.display", "sys.stderr", "sys.stdout"], "collections.abc.Iterator": [], "numpy.lib.polynomial.__rdiv__": ["numpy.core.isscalar", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polydiv"], "future.backports.http.cookies.BaseCookie.value_encode": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.BaseCookie.__parse_string", "future.builtins.str", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode"], "future.backports.urllib.request.CacheFTPHandler.connect_ftp": ["future.backports.urllib.request.FTPHandler", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.ftpwrapper", "time", "time.time"], "numpy.matrixlib.defmatrix.A1": [], "numpy.lib._datasource._FileOpeners.keys": ["numpy.lib._datasource.Repository.listdir"], "numpy.matrixlib.__all__": [], "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password": ["future.backports.urllib.request.HTTPPasswordMgr", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.HTTPPasswordMgr.add_password"], "future.backports.http.cookiejar.split_header_words": ["future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.builtins.str", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.unmatched", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "re.subn"], "handler.serverless_pipeline.predict": ["transformers.AutoTokenizer", "transformers.AutoModelForQuestionAnswering", "handler.predict", "handler.serverless_pipeline.predict", "handler.encode", "torch", "handler.decode", "transformers.AutoModelForQuestionAnswering.from_pretrained", "transformers.AutoTokenizer.from_pretrained", "torch.tensor", "torch.argmax"], "future.backports.misc._Link": [], "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "sentencepiece.__init__._surface", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__._end", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__piece", "_sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__piece"], "io.IOBase": [], "future.backports.email.headerregistry.HeaderRegistry.map_to_type": ["future.backports.email.headerregistry.Address.display_name", "future.backports.email.headerregistry.Address.username", "future.backports.email.headerregistry.Group.display_name", "future.backports.email.headerregistry.BaseHeader.name", "future.backports.email.headerregistry.name"], "tqdm.std.tqdm.inner": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "pandas.core.series.Series", "tqdm.std.tqdm.__len__", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.TqdmDeprecationWarning", "sys", "pandas.core.common.is_builtin_func", "tqdm.std.tqdm.pandas.wrapper", "tqdm.std.tqdm.inner_generator.wrapper", "tqdm.std.tqdm.inner.wrapper", "tqdm.std.tqdm.wrapper", "tqdm.std.pandas.inner_generator.wrapper", "sys.stderr"], "future.backports.email.headerregistry.Group.display_name": [], "numpy.ma.core.MaskedArray.toflex": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.make_mask_none", "numpy.ma.core.MaskedArray.recordmask", "numpy.ndarray.trace", "numpy.var"], "future.builtins.object": ["future.builtins.__init__.object", "future.types.newobject"], "click.utils.PacifyFlushWrapper.__getattr__": ["click.utils.LazyFile.__getattr__", "click.utils.KeepOpenFile.__getattr__", "click.utils.PacifyFlushWrapper.__getattr__", "click.utils.LazyFile.__init__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "typing", "typing.Any"], "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText": [], "transformers.tokenization_utils_base.PreTrainedTokenizerBase._get_padding_truncation_strategies": ["transformers.file_utils.add_end_docstrings", "transformers.tokenization_utils_base.SpecialTokensMixin", "typing.Dict", "transformers.tokenization_utils_base.PreTrainedTokenizerBase._get_padding_truncation_strategies", "typing.Any", "typing.Optional", "typing.List", "transformers.tokenization_utils_base.PaddingStrategy", "warnings", "transformers.tokenization_utils_base.TruncationStrategy", "warnings.warn"], "future.backports.misc.update": ["future.backports.misc.ChainMap.__len__", "collections.Mapping", "collections.abc.Mapping", "future.backports.misc._count_elements", "collections._count_elements", "future.backports.misc.Counter.elements", "future.backports.misc.count", "itertools.count", "future.backports.misc.Counter", "collections.Counter"], "future.backports.xmlrpc.client.MultiCall.__init__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.__str__", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.__repr__"], "torch.nn.modules.container.ParameterList.__iadd__": ["torch.nn.modules.module.Module"], "transformers.pipelines.PipelineException.__init__": ["transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.Pipeline.check_model_type"], "typing.ClassVar": [], "torch.utils.data.dataloader._BaseDataLoaderIter._next_data": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader.__next__"], "future.backports.urllib.request.OpenerDirector.open": ["socket", "future.builtins.bytes", "future.builtins.str", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.Request", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "socket._GLOBAL_DEFAULT_TIMEOUT"], "urllib3._collections.HTTPHeaderDict.getlist": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3._collections.RecentlyUsedContainer.keys", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "numpy.matrixlib.defmatrix.matrix.__array_finalize__": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.matrixlib.defmatrix.matrix", "numpy.matrixlib.defmatrix.matrix.max", "numpy.matrixlib.defmatrix.matrix.argmax", "numpy.core.numeric.ndarray"], "future.backports.xmlrpc.client.Unmarshaller.end_string": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "_sentencepiece.delete_SentencePieceProcessor": [], "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__": ["torch.utils.data.dataset.Dataset", "os", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "os.path", "os.listdir"], "future.backports.urllib.request.Request.__init__": ["future.backports.urllib.parse.unwrap", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.parse.splittag", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.request_host", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.get_method"], "future.backports.http.cookiejar.LoadError": [], "future.backports.xmlrpc.client.MultiCallIterator.__init__": [], "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "sentencepiece._sentencepiece.ImmutableNBestSentencePieceText__nbests_size", "_sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.ImmutableNBestSentencePieceText__nbests_size"], "numpy.matrixlib.defmatrix.matrix.flatten": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "torch.storage._StorageBase.int": [], "typing.Generic": [], "numpy.ma.core._MaskedBinaryOperation.accumulate": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.get_masked_subclass", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.put", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.ptp", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.tofile", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled"], "numpy.core.numerictypes": ["numpy.core._type_aliases.allTypes", "numpy.core._type_aliases.sctypeDict", "numpy.core.numerictypes._typedict", "numpy.core.numerictypes._construct_lookups", "builtins.int", "builtins.float", "builtins.complex", "builtins.bool", "builtins.bytes", "builtins.str", "numpy.core._type_aliases._concrete_types", "numpy.core.numerictypes._register_types", "numpy.core.numerictypes._scalar_type_key", "numpy.core.multiarray.array", "numpy.core._type_aliases.sctypes", "numpy.core.multiarray.datetime_data", "numpy.core.multiarray.datetime_as_string", "numpy.core.multiarray.busday_offset", "numpy.core.multiarray.busday_count", "numpy.core.multiarray.is_busday", "numpy.core.multiarray.busdaycalendar"], "transformers.pipelines.QuestionAnsweringPipeline.decode": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "numpy", "transformers.pipelines.Conversation.append_response", "typing.Tuple", "numpy.ndarray", "numpy.matmul", "numpy.expand_dims", "numpy.tril", "numpy.triu", "numpy.argmax", "numpy.argsort", "numpy.argpartition", "numpy.unravel_index"], "future.backports.urllib.request.HTTPSHandler.__init__": ["future.backports.urllib.request.AbstractHTTPHandler", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel"], "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesAsSerializedProtoBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__DecodePiecesAsSerializedProtoBatch"], "caffe2.python.schema.Struct._get_field_by_nested_name": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema.Struct.__len__"], "future.backports.urllib.request.FileHandler.file_open": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.error.URLError"], "copy.deepcopy": [], "joblib._dask.Batch.__call__": ["joblib.parallel.parallel_config"], "numpy.ma.core.MaskedArray._delegate_binop": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ndarray.trace", "numpy.var"], "numpy.core.umath.logical_not": ["numpy.ma.core.logical_not", "numpy.core.umath.logical_not", "numpy.array_api.__init__.logical_not"], "weakref.WeakSet": [], "future.backports.urllib.request.Request.is_unverifiable": ["warnings", "warnings.warn"], "torch.jit.__init__.OrderedDictWrapper": [], "future.backports.email.headerregistry.Address.display_name": [], "future.backports.http.cookies.Morsel.js_output": ["future.builtins.dict", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.set", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output"], "future.types.newrange.index": [], "numpy.ma.core.mvoid.filled": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.asarray"], "torch.tensor.Tensor.__dir__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "warnings", "torch.tensor.Tensor.__dir__", "torch._C._TensorBase", "warnings.warn"], "caffe2.python.schema.Field.field_blobs": [], "future.backports.urllib.request.URLopener._https_connection": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.http.client.HTTPSConnection"], "numpy.ma.core.MaskedArray.__add__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ndarray.trace", "numpy.var"], "future.backports.xmlrpc.client.Unmarshaller.end_dateTime": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data", "future.backports.xmlrpc.client._datetime_type"], "numpy.var": ["numpy.ma.core.var", "numpy.core.fromnumeric.var", "numpy.array_api.__init__.var"], "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "sentencepiece._sentencepiece.ImmutableSentencePieceText_SerializeAsString", "_sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.ImmutableSentencePieceText_SerializeAsString"], "caffe2.python.schema.List.field_blobs": ["caffe2.python.schema.Field"], "time": [], "urllib3._collections.getlist": ["urllib3._collections.RecentlyUsedContainer.keys"], "click._termui_impl.ProgressBar.make_step": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "time", "typing.Generic", "time.time"], "future.backports.http.cookiejar.Cookie.get_nonstandard_attr": ["future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name"], "transformers.pipelines.Conversation.__repr__": ["transformers.pipelines.Conversation.add_user_input"], "future.backports.urllib.request.FancyURLopener.prompt_user_passwd": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.builtins.input", "getpass", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "getpass.getpass"], "numpy.core.__all__": [], "ftplib.all_errors": [], "future.backports.urllib.request.UnknownHandler.unknown_open": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.error.URLError"], "click._termui_impl.ProgressBar.format_pct": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "sentencepiece.__init__.SentencePieceProcessor.Init": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "future.backports.xmlrpc.client._MultiCallMethod.__init__": ["future.backports.xmlrpc.client.Unmarshaller.getmethodname"], "numpy.lib.polynomial.poly1d.__pow__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.core.isscalar", "numpy.lib.polynomial.poly1d.integ", "numpy.lib.polynomial.poly1d.__init__", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.polynomial.poly1d.__neg__", "numpy.lib.polynomial.poly1d.__mul__", "numpy.lib.polynomial.poly1d.__add__", "numpy.lib.polynomial.poly1d.__sub__", "numpy.lib.polynomial.poly1d.__eq__", "numpy.lib.polynomial.poly1d.__ne__", "numpy.lib.polynomial.poly1d.__getitem__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.lib.polynomial.polymul", "numpy.lib.polynomial.poly1d"], "numpy.core.numeric": ["numpy.core.umath.invert", "numpy.core.umath.PINF", "numpy.core.umath.NAN", "numpy.core.umath.sin", "numpy.core.numeric.ones", "numpy.core.numeric.full", "numpy.core.numeric.fromfunction", "numpy.core.numeric.identity", "numpy.core.numerictypes.bool_", "numpy.core.numeric.extend_all", "numpy.core.fromnumeric", "numpy.core.umath", "numpy.core.numerictypes", "numpy.core.arrayprint", "numpy.core._asarray", "numpy.core._ufunc_config", "functools", "numpy.core.overrides", "numpy.core.numeric._ones_dispatcher", "numpy.core.numeric._full_dispatcher", "sys", "numpy.core.numeric._fromfunction_dispatcher", "numpy.core.numeric._identity_dispatcher", "functools.partial", "numpy.core.overrides.array_function_dispatch", "sys.byteorder", "numpy.core.multiarray.ndarray", "numpy.core.multiarray.flatiter", "numpy.core.multiarray.nditer", "numpy.core.multiarray.nested_iters", "numpy.core.multiarray.arange", "numpy.core.multiarray.array", "numpy.core.multiarray.asarray", "numpy.core.multiarray.asanyarray", "numpy.core.multiarray.ascontiguousarray", "numpy.core.multiarray.asfortranarray", "numpy.core.multiarray.zeros", "numpy.core.multiarray.empty", "numpy.core.multiarray.broadcast", "numpy.core.multiarray.dtype", "numpy.core.multiarray.fromstring", "numpy.core.multiarray.fromfile", "numpy.core.multiarray.frombuffer", "numpy.core.multiarray.from_dlpack", "numpy.core.multiarray.where", "numpy.core.multiarray.copyto", "numpy.core.multiarray.concatenate", "numpy.core.multiarray.fastCopyAndTranspose", "numpy.core.multiarray.lexsort", "numpy.core.multiarray.set_numeric_ops", "numpy.core.multiarray.can_cast", "numpy.core.multiarray.promote_types", "numpy.core.multiarray.min_scalar_type", "numpy.core.multiarray.result_type", "numpy.core.multiarray.empty_like", "numpy.core.multiarray.inner", "numpy.core.multiarray.dot", "numpy.core.multiarray.vdot", "numpy.core.multiarray.fromiter", "numpy.core.multiarray.compare_chararrays", "numpy.core.multiarray.putmask", "numpy.core.multiarray.CLIP", "numpy.core.multiarray.RAISE", "numpy.core.multiarray.WRAP", "numpy.core.multiarray.MAXDIMS", "numpy.core.multiarray.BUFSIZE", "numpy.core.multiarray.ALLOW_THREADS", "numpy.core.multiarray.matmul", "numpy.core.multiarray.shares_memory", "numpy.core.multiarray.may_share_memory", "numpy.core.multiarray.MAY_SHARE_BOUNDS", "numpy.core.multiarray.MAY_SHARE_EXACT", "numpy.core._exceptions.TooHardError", "numpy.core._exceptions.AxisError", "numpy.core.multiarray._get_promotion_state", "numpy.core.multiarray._set_promotion_state"], "caffe2.python.schema.Struct.field_types": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.List.field_types", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Field.__init__", "caffe2.python.schema.Field.clone_schema", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.all_scalars", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.Field._set_parent", "caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Field.__eq__", "caffe2.python.schema.Field._pprint_impl", "caffe2.python.schema.Field.__repr__", "caffe2.python.schema.List.__init__", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.all_scalars", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.List._pprint_impl", "caffe2.python.schema.List.__getattr__", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__init__", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.all_scalars", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.ListWithEvicted._pprint_impl", "caffe2.python.schema.ListWithEvicted.__getattr__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__init__", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct.all_scalars", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Struct._pprint_impl", "caffe2.python.schema.Struct.__contains__", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct.__getattr__", "caffe2.python.schema.Struct.__setattr__", "caffe2.python.schema.Struct.__add__", "caffe2.python.schema.Struct.__sub__", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema.Scalar.__init__", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema.Scalar.all_scalars", "caffe2.python.schema.Scalar.__call__", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Scalar._pprint_impl", "caffe2.python.schema._SchemaNode.__init__", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema._SchemaNode.print_recursively", "future.utils.viewitems"], "torch.nn.modules.container.ModuleList._get_abs_string_index": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "operator", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__", "torch.nn.modules.container.ModuleList._get_abs_string_index", "torch.nn.modules.container.ParameterList._get_abs_string_index", "operator.index"], "past.types.oldstr.oldstr": ["past.utils.with_metaclass", "past.types.oldstr.BaseOldStr"], "numbers.Integral": [], "numpy.ma.core.MaskedArray.argmin": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.minimum_fill_value", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue"], "numpy.ma.core.mvoid": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__"], "os.fdopen": [], "regex.test_regex.BytesSubclass": ["regex.test_regex.RegexTests.test_bytes_str_mixing"], "click.testing.CliRunner.__init__": ["click.testing.CliRunner.should_strip_ansi", "click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "typing", "click.testing.CliRunner.make_env", "typing.Optional", "typing.Mapping"], "future.backports.urllib.request.ProxyHandler.__init__": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.getproxies", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request._parse", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.Request.add_header", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.has_header", "future.backports.urllib.request.Request.get_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.add_handler", "future.backports.urllib.request.OpenerDirector.error", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.HTTPPasswordMgr.add_password", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.HTTPBasicAuthHandler.http_error_401", "future.backports.urllib.request.ProxyBasicAuthHandler.http_error_407", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.HTTPDigestAuthHandler.http_error_401", "future.backports.urllib.request.ProxyDigestAuthHandler.http_error_407", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.CacheFTPHandler.clear_cache", "future.backports.urllib.request.URLopener.addheader", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.http_error", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.FancyURLopener.http_error_401", "future.backports.urllib.request.FancyURLopener.http_error_407", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.ftpwrapper.real_close"], "numpy.core.memmap.memmap": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray"], "typing": [], "joblib._dask.DaskDistributedBackend.start_call": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "joblib._dask._WeakKeyDictionary", "asyncio.sleep", "asyncio.Task"], "future.backports.email.message.Message.get_filename": ["future.backports.email.message.Message.get_filename", "future.backports.email.utils", "future.backports.email.utils.collapse_rfc2231_value"], "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "sentencepiece._sentencepiece.ImmutableNBestSentencePieceText_SerializeAsString", "_sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.ImmutableNBestSentencePieceText_SerializeAsString"], "future.backports.urllib.request.Request.get_data": ["warnings", "warnings.warn"], "tqdm.std.tqdm.print_status": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.utils.disp_len", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.display", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.status_printer.fp_write", "tqdm.std.tqdm.close.fp_write", "tqdm.std.tqdm.fp_write", "tqdm.std.status_printer.fp_write", "tqdm.std.close.fp_write"], "numpy.ma.core.is_string_or_list_of_strings": ["numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "builtins", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__setattr__", "builtins.all"], "sentencepiece.__init__.SentencePieceProcessor.__init__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_swiginit", "sentencepiece._sentencepiece.new_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_swiginit", "_sentencepiece.new_SentencePieceProcessor"], "_sentencepiece.delete_ImmutableSentencePieceText": [], "future.backports.urllib.parse.to_bytes": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.builtins.str", "future.backports.urllib.parse.Quoter.__repr__"], "caffe2.python.schema.ListWithEvicted.field_metadata": ["caffe2.python.schema.List"], "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.pieces", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesAsSerializedProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__DecodePiecesAsSerializedProto"], "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_SetDecodeExtraOptions", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_SetDecodeExtraOptions"], "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.ConversationalPipeline._clean_padding_history"], "transformers.pipelines.Pipeline.ensure_tensor_on_device": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.ConversationalPipeline._concat_inputs_history"], "numpy.ma.core.MaskedArray.prod": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._check_mask_axis", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue"], "typing.Protocol": [], "numpy.ma.core.MaskedArray.__rfloordiv__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "future.backports.urllib.request.OpenerDirector.__init__": [], "future.backports.urllib.request.http_error_307": ["future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.Request.get_full_url"], "click.utils.LazyFile.__getattr__": ["click.utils.LazyFile.__getattr__", "click.utils.KeepOpenFile.__getattr__", "click.utils.PacifyFlushWrapper.__getattr__", "click.utils.LazyFile.__init__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "typing", "typing.Any"], "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__": ["transformers.pipelines.ArgumentHandler", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.PipelineException.__init__", "transformers.pipelines.PipelineDataFormat.__init__", "transformers.pipelines.PipelineDataFormat.__iter__", "transformers.pipelines.PipelineDataFormat.save_binary", "transformers.pipelines.CsvPipelineDataFormat.__init__", "transformers.pipelines.CsvPipelineDataFormat.__iter__", "transformers.pipelines.JsonPipelineDataFormat.__init__", "transformers.pipelines.JsonPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.save_binary", "transformers.pipelines.Pipeline.__init__", "transformers.pipelines.Pipeline.save_pretrained", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.FeatureExtractionPipeline.__init__", "transformers.pipelines.TextGenerationPipeline.__init__", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.TextClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.QuestionAnsweringPipeline.__init__", "transformers.pipelines.SummarizationPipeline.__init__", "transformers.pipelines.TranslationPipeline.__init__", "transformers.pipelines.Text2TextGenerationPipeline.__init__", "transformers.pipelines.Conversation.__init__", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.ConversationalPipeline.__init__", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.ArgumentHandler.__call__", "transformers.pipelines.DefaultArgumentHandler.__call__", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.__call__", "transformers.pipelines.FeatureExtractionPipeline.__call__", "transformers.pipelines.TextGenerationPipeline.__call__", "transformers.pipelines.TextClassificationPipeline.__call__", "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__", "transformers.pipelines.ZeroShotClassificationPipeline.__call__", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.FillMaskPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.__call__", "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.__call__", "transformers.pipelines.QuestionAnsweringPipeline.decode", "transformers.pipelines.SummarizationPipeline.__call__", "transformers.pipelines.TranslationPipeline.__call__", "transformers.pipelines.Text2TextGenerationPipeline.__call__", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.ConversationalPipeline.__call__", "transformers.pipelines.QuestionAnsweringPipeline", "transformers.data.SquadExample"], "numpy.ma.core.MaskedArray.shrink_mask": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._shrink_mask", "numpy.ndarray.trace", "numpy.var"], "future.backports.http.cookiejar.lwp_cookie_str": ["future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.time2isoz", "future.backports.http.cookiejar.CookiePolicy.set_ok", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.builtins.str", "future.backports.http.cookiejar.join_header_words"], "numpy.ma.getmaskarray": ["numpy.ma.core.getmaskarray"], "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization": ["future.backports.urllib.request.AbstractDigestAuthHandler.get_cnonce", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.error.URLError"], "tqdm.std.tqdm.__enter__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet"], "numpy.array_api._array_object.Array.__bool__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.array_api._dtypes._boolean_dtypes", "numpy.array_api._array_object.Array.__bool__", "numpy.ndarray"], "caffe2.python.schema.List._pprint_impl": ["caffe2.python.schema.Field"], "caffe2.python.schema.Field.field_types": [], "transformers.pipelines.TextGenerationPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args"], "future.backports.urllib.request.Request.has_data": ["warnings", "warnings.warn"], "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsPieces", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsPieces"], "numpy.array_api._typing.NestedSequence": ["typing.Protocol"], "joblib._dask.DaskDistributedBackend.abort_everything": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "asyncio.sleep", "asyncio.Task"], "transformers.pipelines.TokenClassificationPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.Conversation.add_user_input", "numpy", "torch", "torch.no_grad", "numpy.exp"], "numpy.array_api._array_object.Array": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.ndarray"], "future.utils.with_metaclass": ["future.utils.metaclass"], "google.protobuf.internal.containers.RepeatedScalarFieldContainer.insert": ["google.protobuf.internal.containers.BaseContainer", "typing.MutableSequence", "google.protobuf.internal.containers.UnknownFieldSet._internal_get"], "numpy.f2py.symbolic.as_expr": ["numpy.f2py.symbolic.as_complex", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic.as_string", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic.as_expr"], "numpy.f2py.symbolic.ewarn": ["numpy.f2py.symbolic.ExprWarning", "warnings", "warnings.warn"], "transformers.pipelines.ConversationalPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "typing.Union", "transformers.pipelines.Conversation", "typing.List", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "tensorflow", "tensorflow.shape"], "transformers.data.processors.squad.SquadFeatures": [], "torch.tensor.Tensor.register_hook": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "collections.OrderedDict", "torch.utils.hooks", "torch.tensor.Tensor.register_hook", "torch.tensor.Tensor.retain_grad_hook", "torch._C._TensorBase", "torch.utils.hooks.RemovableHandle"], "collections.MutableMapping.values": [], "future.backports.misc.Counter.copy": [], "numpy.ma.core.MaskedArray.__rtruediv__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "transformers.pipelines.Conversation.add_user_input": ["transformers.pipelines.PipelineDataFormat.from_str"], "future.backports.urllib.request.URLopener.open_unknown": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.parse.splittype", "future.backports.http.client.HTTPSConnection"], "future.backports.urllib.request.FileHandler.open_local_file": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.url2pathname", "nturl2path.url2pathname", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "os", "future.backports.email.utils", "future.backports.email", "future.backports.urllib.parse.splitport", "future.backports.urllib.response.addinfourl", "future.backports.urllib.error.URLError", "mimetypes", "future.backports.urllib.request.OpenerDirector.open", "future.backports.urllib.request.OpenerDirector._open", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.AbstractHTTPHandler.do_open", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.URLopener.open", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.HTTPSHandler.https_open", "future.backports.urllib.request.open", "future.builtins.open", "future.backports.urllib.request._safe_gethostbyname", "mimetypes.guess_type", "future.backports.email.utils.formatdate", "future.backports.email.message_from_string", "os.stat"], "google.protobuf.internal.containers.ScalarMap.__contains__": ["typing.MutableMapping", "google.protobuf.internal.containers.BaseContainer.__getitem__", "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__setitem__", "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__delitem__", "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__setitem__", "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__delitem__", "google.protobuf.internal.containers.ScalarMap.__getitem__", "google.protobuf.internal.containers.ScalarMap.__setitem__", "google.protobuf.internal.containers.ScalarMap.__delitem__", "google.protobuf.internal.containers.MessageMap.__getitem__", "google.protobuf.internal.containers.MessageMap.__setitem__", "google.protobuf.internal.containers.MessageMap.__delitem__", "google.protobuf.internal.containers.UnknownFieldSet.__getitem__"], "numpy.lib.__all__": [], "google.protobuf.descriptor.FieldDescriptor": ["google.protobuf.descriptor.DescriptorBase", "google.protobuf.pyext._message", "google.protobuf.pyext._message.FieldDescriptor", "google.protobuf.pyext._message.Message", "google.protobuf.pyext._message.default_pool"], "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "sentencepiece.__init__._surface", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__._end", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__id", "_sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__id"], "numpy.core.numeric.array": ["numpy.ma.core.array", "numpy.core.numeric.array", "numpy.core.records.array", "numpy.core.multiarray.array", "numpy.core.defchararray.array"], "transformers.pipelines.FeatureExtractionPipeline.__init__": ["transformers.pipelines.Pipeline", "transformers.tokenization_utils.PreTrainedTokenizer", "transformers.pipelines.ArgumentHandler", "transformers.pipelines.PipelineDataFormat.from_str", "typing.Union", "typing.Optional", "transformers.modelcard.ModelCard", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device"], "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__DecodeIdsAsSerializedProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__DecodeIdsAsSerializedProto"], "transformers.pipelines.ConversationalPipeline._parse_and_tokenize": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.Conversation.add_user_input"], "tokenizers.Encoding": ["tokenizers.tokenizers.Encoding"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "sentencepiece.__init__.ImmutableSentencePieceText._pieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "sentencepiece._sentencepiece.ImmutableSentencePieceText__pieces", "_sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.ImmutableSentencePieceText__pieces"], "future.backports.urllib.request.URLopener.open_data": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.builtins.str", "future.backports.urllib.error.URLError", "future.backports.urllib.request.Request.get_type", "time", "future.backports.urllib.parse.unquote", "base64", "future.backports.email", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.FTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.connect_ftp", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.URLopener._https_connection", "io", "future.backports.urllib.response.addinfourl", "base64.decodebytes", "future.backports.email.message_from_string", "future.backports.http.client.HTTPSConnection", "io.StringIO", "time.strftime", "time.gmtime", "time.time"], "sys.stdin": [], "torch.jit.annotations.Module.__getattr__": [], "warnings.warn": [], "numpy.ma.core.mvoid.__str__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core._replace_dtype_fields", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core._recursive_printoption"], "numpy.ma.core.MaskedConstant.copy": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream": ["transformers.tokenization_transfo_xl.LMShuffledIterator", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents", "numpy", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator", "numpy.random"], "libpasteurize.fixes.feature_base.Features.update_mapping": ["libpasteurize.fixes.feature_base.Features.update_mapping"], "transformers.pipelines.FeatureExtractionPipeline.__call__": ["transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args"], "collections.MutableMapping": [], "torch.utils.data.dataloader._DatasetKind": [], "future.backports.email.headerregistry.ContentTypeHeader.subtype": ["future.backports.email.headerregistry.ParameterizedMIMEHeader", "future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email.headerregistry.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.parse_content_type_header"], "numpy.ma.core.MaskedArray.__deepcopy__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.view", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray._recursive_or", "copy.deepcopy", "numpy.ndarray.trace", "numpy.var"], "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data.dataloader.DataLoader._index_sampler", "torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_put_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data", "torch.utils.data._utils", "torch.utils.data._utils.pin_memory"], "numpy.core.numerictypes.character": [], "joblib._dask.DaskDistributedBackend.get_nested_backend": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "joblib._dask.DaskDistributedBackend", "asyncio.sleep", "asyncio.Task"], "future.backports.urllib.parse._NetlocResultMixinStr._userinfo": ["future.backports.urllib.parse._NetlocResultMixinBase", "future.backports.urllib.parse._ResultMixinStr", "future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBase.username", "future.backports.urllib.parse.username", "future.backports.urllib.parse._NetlocResultMixinBase.password", "future.backports.urllib.parse.password"], "numpy.ma.core.fromfunction": ["numpy.ma.core.fromfunction", "numpy.core.numeric.fromfunction"], "future.backports.urllib.request.HTTPCookieProcessor.__init__": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.http_request", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.http_response", "future.backports.http.cookiejar", "future.backports.http.cookiejar.CookieJar"], "numpy.ma.core._convert2ma._replace_return_type": ["numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc"], "future.backports.urllib.request.http_request": ["future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request"], "sentencepiece._sentencepiece": ["sentencepiece._sentencepiece", "_sentencepiece"], "future.backports.misc.Counter.fromkeys": [], "sentencepiece.__init__.SentencePieceProcessor.PieceToId": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_PieceToId", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_PieceToId"], "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.basis_name", "numpy.polynomial._polybase.ABCPolyBase._div", "numpy.polynomial._polybase.ABCPolyBase._int", "numpy.polynomial._polybase.ABCPolyBase._fit", "numpy.polynomial._polybase.ABCPolyBase._line", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.__init__", "numpy.polynomial._polybase.ABCPolyBase.__iter__", "numpy.polynomial._polybase.ABCPolyBase.__truediv__", "numpy.polynomial._polybase.ABCPolyBase.__floordiv__", "numpy.polynomial._polybase.ABCPolyBase.__divmod__", "numpy.polynomial._polybase.ABCPolyBase.__rdiv__", "numpy.polynomial._polybase.ABCPolyBase.__rtruediv__", "numpy.polynomial._polybase.ABCPolyBase.__rfloordiv__", "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__", "numpy.polynomial._polybase.ABCPolyBase.trim", "numpy.polynomial._polybase.ABCPolyBase.integ", "numpy.polynomial._polybase.ABCPolyBase.deriv", "numpy.polynomial._polybase.ABCPolyBase.linspace", "numpy.polynomial._polybase.ABCPolyBase.fit", "numpy.polynomial._polybase.ABCPolyBase.identity", "numpy.polynomial._polybase.ABCPolyBase.basis", "abc.ABC", "os.name"], "sentencepiece.__init__.SentencePieceProcessor.piece_size": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "collections.abc.Generator": [], "future.backports.xmlrpc.client.Marshaller.dump_datetime": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client._strftime", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "brotli": [], "transformers.pipelines.Pipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat", "transformers.tokenization_utils.PreTrainedTokenizer", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.ArgumentHandler", "typing.Union", "typing.Optional", "transformers.modelcard.ModelCard", "transformers.pipelines.get_framework", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "torch", "transformers.pipelines.DefaultArgumentHandler", "torch.device"], "numpy.core._set_promotion_state": ["numpy.core.numeric._set_promotion_state", "numpy.core.multiarray._set_promotion_state"], "numpy.ndarray.trace": [], "future.backports.urllib.request.URLopener.open_http": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.http.client.HTTPSConnection", "future.backports.http.client.HTTPConnection"], "transformers.pipelines.TokenClassificationPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.tokenization_utils.PreTrainedTokenizer", "transformers.pipelines.ArgumentHandler", "transformers.pipelines.PipelineDataFormat.from_str", "typing.Union", "typing.Optional", "transformers.modelcard.ModelCard", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.modeling_tf_auto.TF_MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING", "transformers.modeling_auto.MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING", "transformers.tokenization_bert.BasicTokenizer"], "click.testing.EchoingStdin.__init__": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.output", "typing.BinaryIO"], "numpy.ma.core.MaskedArray.cumprod": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ndarray.trace", "numpy.var"], "torch.randperm": [], "caffe2.python.schema.ListWithEvicted.field_blobs": ["caffe2.python.schema.List"], "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__": ["torch.utils.data.dataset.Dataset", "os", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "os.path"], "numpy.ma.core.MaskedArray.round": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray", "numpy.ndarray.trace", "numpy.var"], "sentencepiece.__init__._LogStream.__init__": ["sys", "sys.stderr"], "sys.stderr": [], "numpy.ma.core.MaskedArray.__imul__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.getdata", "numpy.ndarray.trace", "numpy.var", "numpy.where"], "numpy.ma.core.MaskedArray.__floordiv__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "transformers.pipelines.Pipeline.transform": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat"], "future.backports.xmlrpc.client.SafeTransport.make_connection": ["future.backports.xmlrpc.client.Transport", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.http.client", "future.backports.http.client.HTTPSConnection"], "transformers.pipelines.ZeroShotClassificationPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "numpy", "transformers.pipelines.PipelineException.__init__", "transformers.pipelines.PipelineDataFormat.__init__", "transformers.pipelines.PipelineDataFormat.__iter__", "transformers.pipelines.PipelineDataFormat.save_binary", "transformers.pipelines.CsvPipelineDataFormat.__init__", "transformers.pipelines.CsvPipelineDataFormat.__iter__", "transformers.pipelines.JsonPipelineDataFormat.__init__", "transformers.pipelines.JsonPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.save_binary", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.__init__", "transformers.pipelines.Pipeline.save_pretrained", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.FeatureExtractionPipeline.__init__", "transformers.pipelines.TextGenerationPipeline.__init__", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.TextClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.QuestionAnsweringPipeline.__init__", "transformers.pipelines.SummarizationPipeline.__init__", "transformers.pipelines.TranslationPipeline.__init__", "transformers.pipelines.Text2TextGenerationPipeline.__init__", "transformers.pipelines.Conversation.__init__", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.ConversationalPipeline.__init__", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "numpy.exp"], "transformers.pipelines.Pipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "future.backports.xmlrpc.client.DateTime.timetuple": ["future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "time", "time.strptime"], "future.backports.urllib.request.AbstractBasicAuthHandler": ["future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "re.compile", "re.I"], "typing.runtime_checkable": [], "future.utils.text_to_native_str": [], "base64": [], "torch.nn.modules.container.ModuleList.__iadd__": ["torch.nn.modules.module.Module"], "future.backports.urllib.request.HTTPHandler.http_open": ["future.backports.urllib.request.AbstractHTTPHandler", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.http_request", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.http.client", "future.backports.http.client.HTTPConnection"], "future.backports.http.cookiejar.FileCookieJar.save": ["future.backports.http.cookiejar.CookieJar"], "transformers.data.datasets.squad.Split": ["enum.Enum"], "packaging.specifiers.Specifier": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "torch.utils.data.sampler.WeightedRandomSampler.__init__": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.RandomSampler.num_samples", "torch.utils.data.sampler.num_samples", "torch._six.int_classes", "torch", "torch.as_tensor", "torch.double"], "numpy.ma.core.MaskedArray.real": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ndarray.trace", "numpy.var"], "future.backports.http.cookiejar.Cookie.set_nonstandard_attr": ["future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name"], "future.types.newstr": ["future.utils.PY3"], "numpy.matrixlib.defmatrix.matrix.mean": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream": ["transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "numpy", "numpy.array", "numpy.random"], "numpy.core.numeric.result_type": ["numpy.core.numeric.result_type", "numpy.core.multiarray.result_type", "numpy.array_api.__init__.result_type"], "typing.NoReturn": [], "numpy.ma.core.MaskedArray.reshape": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core.mask", "numpy.ndarray.trace", "numpy.var"], "future.backports.http.cookiejar.user_domain_match": ["future.backports.http.cookiejar.liberal_is_HDN"], "transformers.tokenization_transfo_xl.LMOrderedIterator.get_batch": ["transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize", "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__", "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus", "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator"], "past.utils.with_metaclass": ["past.utils.metaclass"], "torch.tensor.Tensor.unique": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.unique", "torch._C._TensorBase"], "sentencepiece.__init__.SentencePieceProcessor.vocab_size": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "collections.abc.MutableMapping.keys": [], "click.utils.PacifyFlushWrapper.__init__": ["click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "typing.IO", "typing.Any"], "numpy.ma.core.MaskedConstant.__repr__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__", "numpy.ma.core.MaskedConstant"], "urllib3._collections.RecentlyUsedContainer.keys": ["collections.abc.MutableMapping", "collections.MutableMapping", "collections.OrderedDict", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3.packages.six.iterkeys"], "typing.Any": [], "numpy.lib.polynomial.poly1d.__rsub__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polysub"], "click._termui_impl.ProgressBar.__next__": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "transformers.pipelines.DefaultArgumentHandler.__call__": ["transformers.pipelines.ArgumentHandler", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.DefaultArgumentHandler"], "numpy.ma.MaskedArray.__setitem__": [], "numpy.lib.polynomial.poly1d.__array__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d.__init__", "numpy.lib.polynomial.poly1d.__getitem__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.lib.polynomial.poly1d.integ", "numpy.core.numeric", "numpy.core.numeric.asarray"], "torch.utils.data.sampler.SubsetRandomSampler.__init__": ["torch.utils.data.sampler.Sampler"], "numpy.ma.core.MaskedArray.ids": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.ids", "numpy.ndarray.trace", "numpy.var"], "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__"], "google.protobuf.internal.type_checkers": ["google.protobuf.descriptor", "google.protobuf.internal.type_checkers.Int32ValueChecker", "google.protobuf.internal.type_checkers.Int64ValueChecker", "google.protobuf.internal.type_checkers.Uint32ValueChecker", "google.protobuf.internal.type_checkers.Uint64ValueChecker", "google.protobuf.internal.type_checkers.DoubleValueChecker", "google.protobuf.internal.type_checkers.FloatValueChecker", "google.protobuf.internal.type_checkers.BoolValueChecker", "google.protobuf.internal.type_checkers.TypeCheckerWithDefault", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder", "google.protobuf.internal.decoder", "google.protobuf.descriptor.FieldDescriptor", "google.protobuf.internal.wire_format.DoubleByteSize", "google.protobuf.internal.wire_format.FloatByteSize", "google.protobuf.internal.wire_format.Int64ByteSize", "google.protobuf.internal.wire_format.UInt64ByteSize", "google.protobuf.internal.wire_format.Int32ByteSize", "google.protobuf.internal.wire_format.Fixed64ByteSize", "google.protobuf.internal.wire_format.Fixed32ByteSize", "google.protobuf.internal.wire_format.BoolByteSize", "google.protobuf.internal.wire_format.StringByteSize", "google.protobuf.internal.wire_format.GroupByteSize", "google.protobuf.internal.wire_format.MessageByteSize", "google.protobuf.internal.wire_format.BytesByteSize", "google.protobuf.internal.wire_format.UInt32ByteSize", "google.protobuf.internal.wire_format.EnumByteSize", "google.protobuf.internal.wire_format.SFixed32ByteSize", "google.protobuf.internal.wire_format.SFixed64ByteSize", "google.protobuf.internal.wire_format.SInt32ByteSize", "google.protobuf.internal.wire_format.SInt64ByteSize", "google.protobuf.internal.wire_format.WIRETYPE_FIXED64", "google.protobuf.internal.wire_format.WIRETYPE_FIXED32", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.encoder.DoubleEncoder", "google.protobuf.internal.encoder.FloatEncoder", "google.protobuf.internal.encoder.Int64Encoder", "google.protobuf.internal.encoder.UInt64Encoder", "google.protobuf.internal.encoder.Int32Encoder", "google.protobuf.internal.encoder.Fixed64Encoder", "google.protobuf.internal.encoder.Fixed32Encoder", "google.protobuf.internal.encoder.BoolEncoder", "google.protobuf.internal.encoder.StringEncoder", "google.protobuf.internal.encoder.GroupEncoder", "google.protobuf.internal.encoder.MessageEncoder", "google.protobuf.internal.encoder.BytesEncoder", "google.protobuf.internal.encoder.UInt32Encoder", "google.protobuf.internal.encoder.EnumEncoder", "google.protobuf.internal.encoder.SFixed32Encoder", "google.protobuf.internal.encoder.SFixed64Encoder", "google.protobuf.internal.encoder.SInt32Encoder", "google.protobuf.internal.encoder.SInt64Encoder", "google.protobuf.internal.encoder.DoubleSizer", "google.protobuf.internal.encoder.FloatSizer", "google.protobuf.internal.encoder.Int64Sizer", "google.protobuf.internal.encoder.UInt64Sizer", "google.protobuf.internal.encoder.Int32Sizer", "google.protobuf.internal.encoder.Fixed64Sizer", "google.protobuf.internal.encoder.Fixed32Sizer", "google.protobuf.internal.encoder.BoolSizer", "google.protobuf.internal.encoder.StringSizer", "google.protobuf.internal.encoder.GroupSizer", "google.protobuf.internal.encoder.MessageSizer", "google.protobuf.internal.encoder.BytesSizer", "google.protobuf.internal.encoder.UInt32Sizer", "google.protobuf.internal.encoder.EnumSizer", "google.protobuf.internal.encoder.SFixed32Sizer", "google.protobuf.internal.encoder.SFixed64Sizer", "google.protobuf.internal.encoder.SInt32Sizer", "google.protobuf.internal.encoder.SInt64Sizer", "google.protobuf.internal.decoder.DoubleDecoder", "google.protobuf.internal.decoder.FloatDecoder", "google.protobuf.internal.decoder.Int64Decoder", "google.protobuf.internal.decoder.UInt64Decoder", "google.protobuf.internal.decoder.Int32Decoder", "google.protobuf.internal.decoder.Fixed64Decoder", "google.protobuf.internal.decoder.Fixed32Decoder", "google.protobuf.internal.decoder.BoolDecoder", "google.protobuf.internal.decoder.StringDecoder", "google.protobuf.internal.decoder.GroupDecoder", "google.protobuf.internal.decoder.MessageDecoder", "google.protobuf.internal.decoder.BytesDecoder", "google.protobuf.internal.decoder.UInt32Decoder", "google.protobuf.internal.decoder.EnumDecoder", "google.protobuf.internal.decoder.SFixed32Decoder", "google.protobuf.internal.decoder.SFixed64Decoder", "google.protobuf.internal.decoder.SInt32Decoder", "google.protobuf.internal.decoder.SInt64Decoder"], "future.backports.misc.K.__ne__": [], "numpy.core.numerictypes.void": [], "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_LoadFromSerializedProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_LoadFromSerializedProto"], "numpy.lib": ["numpy._pytesttester.PytestTester", "numpy.lib.type_check", "numpy.lib.index_tricks", "numpy.lib.function_base", "numpy.lib.shape_base", "numpy.lib.stride_tricks", "numpy.lib.twodim_base", "numpy.lib.ufunclike", "numpy.lib.arraypad", "numpy.lib.polynomial", "numpy.lib.utils", "numpy.lib.arraysetops", "numpy.lib.npyio", "numpy.lib.nanfunctions", "numpy.lib.histograms", "numpy.lib.type_check.__all__", "numpy.lib.index_tricks.__all__", "numpy.lib.function_base.__all__", "numpy.lib.shape_base.__all__", "numpy.lib.stride_tricks.__all__", "numpy.lib.twodim_base.__all__", "numpy.lib.ufunclike.__all__", "numpy.lib.arraypad.__all__", "numpy.lib.polynomial.__all__", "numpy.lib.utils.__all__", "numpy.lib.arraysetops.__all__", "numpy.lib.npyio.__all__", "numpy.lib.nanfunctions.__all__", "numpy.lib.histograms.__all__", "numpy.lib.scimath", "math", "numpy.core._multiarray_umath.tracemalloc_domain", "numpy.lib.arrayterator.Arrayterator"], "click._termui_impl.ProgressBar.__exit__": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "types.TracebackType", "typing.Generic", "typing.Optional", "typing.Type"], "google.protobuf.internal.containers.UnknownFieldSet.__init__": [], "numpy.array_api._array_object.Array.__array__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "typing.Any", "numpy.array_api._typing.Any", "numpy.array_api._array_object.Array._check_allowed_dtypes", "numpy.array_api._array_object.Array.dtype", "numpy.array_api._array_object.dtype", "numpy.typing", "numpy.ndarray", "numpy.dtype", "numpy.asarray", "numpy.typing.NDArray"], "charset_normalizer.utils.iana_name": ["encodings.aliases.aliases", "encodings.aliases.aliases.items"], "torch.ones": ["numpy.ma.core.ones", "numpy.core.numeric.ones", "numpy.array_api.__init__.ones"], "numpy.ma.mrecords.MaskedRecords.harden_mask": ["numpy.ma.MaskedArray"], "caffe2.python.schema.Struct.field_blobs": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema.Field.__init__", "caffe2.python.schema.Field.clone_schema", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.all_scalars", "caffe2.python.schema.Field._set_parent", "caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Field.__eq__", "caffe2.python.schema.Field._pprint_impl", "caffe2.python.schema.Field.__repr__", "caffe2.python.schema.List.__init__", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.all_scalars", "caffe2.python.schema.List._pprint_impl", "caffe2.python.schema.List.__getattr__", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__init__", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.all_scalars", "caffe2.python.schema.ListWithEvicted._pprint_impl", "caffe2.python.schema.ListWithEvicted.__getattr__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__init__", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.all_scalars", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Struct._pprint_impl", "caffe2.python.schema.Struct.__contains__", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct.__getattr__", "caffe2.python.schema.Struct.__setattr__", "caffe2.python.schema.Struct.__add__", "caffe2.python.schema.Struct.__sub__", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema.Scalar.__init__", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.all_scalars", "caffe2.python.schema.Scalar.__call__", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Scalar._pprint_impl", "caffe2.python.schema._SchemaNode.__init__", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema._SchemaNode.print_recursively", "future.utils.viewitems"], "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__"], "numpy.ma.core.MaskedArray.dtype": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.MaskedArray", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.make_mask_descr", "numpy.ndarray.trace", "numpy.var"], "numpy.object_": [], "numpy.lib.format.MAGIC_PREFIX": [], "future.backports.http.cookiejar.allowed_domains": [], "requests.compat.cookielib": ["http.cookiejar"], "caffe2.python.workspace.FetchBlob": ["caffe2.python._import_c_extension", "caffe2.python.workspace.StringifyBlobName", "caffe2.python._import_c_extension.fetch_blob"], "future.backports.urllib.parse.SplitResult.geturl": ["future.backports.urllib.parse._NetlocResultMixinStr", "future.backports.urllib.parse.urlunsplit"], "torch.backends.cuda.__init__.cuFFTPlanCache": ["torch.backends.cuda.__init__.cuFFTPlanCacheAttrContextProp", "torch", "torch._cufft_get_plan_cache_size", "torch._cufft_get_plan_cache_max_size", "torch._cufft_set_plan_cache_max_size"], "numpy.core.numeric.arange": ["numpy.ma.core.arange", "numpy.core.numeric.arange", "numpy.core.multiarray.arange", "numpy.array_api.__init__.arange"], "numpy.ma.core.MaskedArray.cumsum": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ndarray.trace", "numpy.var"], "future.backports.email.header._ValueFormatter._maxlengths": ["future.backports.email.header._ValueFormatter._maxlengths", "future.backports.email.header._Accumulator.__len__"], "sentencepiece.__init__._LogStream.__exit__": ["sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "os", "os.close", "os.dup2"], "io.RawIOBase": [], "transformers.data.processors.utils.InputFeatures": ["dataclasses.dataclass", "typing.List", "typing.Optional", "transformers.data.processors.utils.DataProcessor.get_labels", "typing.Union"], "collections.MutableMapping.update": [], "dummy_threading": [], "numpy.ma.core.make_mask_none": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy", "numpy.ma.core.make_mask_descr", "numpy.zeros"], "requests.cookies.RequestsCookieJar.values": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.list_domains", "requests.cookies.RequestsCookieJar.list_paths", "requests.compat.cookielib.CookieJar"], "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "sentencepiece.__init__._surface", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__._end", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__begin", "_sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__begin"], "torch._jit_internal.TupleInstance": [], "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "numpy.array_api._array_object.Array.__array_namespace__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Optional", "numpy.array_api._array_object.Array.__str__", "numpy.array_api", "numpy.array_api._array_object.Array._check_allowed_dtypes", "types", "types.ModuleType", "numpy.ndarray"], "click._termui_impl.ProgressBar.__enter__": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "regex.test_regex.StrSubclass": ["regex.test_regex.RegexTests.test_bytes_str_mixing"], "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__NBestEncodeAsPieces", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__NBestEncodeAsPieces"], "torch.utils.data.sampler.SequentialSampler.__init__": ["torch.utils.data.sampler.Sampler"], "sys._getframe": [], "torch": ["torch.manager_path", "torch._torch_docs", "torch._tensor_docs", "torch._storage_docs", "torch.multiprocessing._atfork.register_after_fork", "os", "DLFCN", "torch._dl", "torch.DoubleStorage", "torch.FloatStorage", "torch.LongStorage", "torch.IntStorage", "torch.ShortStorage", "torch.CharStorage", "torch.ByteStorage", "torch.HalfStorage", "torch.BoolStorage", "torch.QUInt8Storage", "torch.QInt8Storage", "torch.QInt32Storage", "torch.BFloat16Storage", "sys", "torch.version.cuda", "torch._utils_internal.USE_RTLD_GLOBAL_WITH_LIBTORCH", "torch._load_global_deps", "glob", "ctypes", "platform", "sys.version_info", "sys.exec_prefix", "sys.getdlopenflags", "sys.setdlopenflags", "sys.prefix", "platform.system", "glob.glob", "ctypes.CDLL", "torch.version.cuda.replace", "os.getenv", "os.add_dll_directory", "os.environ", "os.path", "os.RTLD_GLOBAL", "os.RTLD_LAZY", "DLFCN.RTLD_GLOBAL", "DLFCN.RTLD_LAZY", "torch._dl.RTLD_GLOBAL", "torch._dl.RTLD_LAZY", "torch.random.set_rng_state", "torch.random.get_rng_state", "torch.random.manual_seed", "torch.random.initial_seed", "torch.random.seed", "torch.serialization.save", "torch.serialization.load", "torch._tensor_str.set_printoptions", "torch.autograd.no_grad", "torch.autograd.enable_grad", "torch.tensor.Tensor", "torch._lobpcg.lobpcg"], "future.types.newrange.newrange.__getitem_slice": ["collections.Sequence", "collections.abc.Sequence", "future.types.newrange.newrange.__init__", "future.types.newrange.newrange.__len__", "future.types.newrange.newrange.index", "future.types.newrange.newrange.count", "future.types.newrange.newrange.__contains__", "future.types.newrange.range_iterator.__init__", "future.types.newrange.range_iterator.__next__", "future.types.newrange.range_iterator.next", "future.types.newrange.newrange"], "transformers.pipelines.Pipeline.predict": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat"], "future.backports.urllib.parse.splitport": ["future.backports.urllib.parse.Quoter.__repr__", "re", "future.backports.urllib.parse._NetlocResultMixinBase.hostname", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "re.compile"], "future.backports.urllib.request.HTTPPasswordMgr.is_suburi": ["posixpath", "posixpath.commonprefix"], "future.backports.misc.__ne__": [], "numpy.lib.polynomial.poly1d.coeffs": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "numpy.ma.core.MaskedConstant.__str__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__"], "future.backports.urllib.parse.SplitResultBytes.geturl": ["future.backports.urllib.parse._NetlocResultMixinBytes", "future.backports.urllib.parse.urlunsplit"], "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.basis_name", "numpy.polynomial._polybase.ABCPolyBase._div", "numpy.polynomial._polybase.ABCPolyBase._int", "numpy.polynomial._polybase.ABCPolyBase._fit", "numpy.polynomial._polybase.ABCPolyBase._line", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.__init__", "numpy.polynomial._polybase.ABCPolyBase.__iter__", "numpy.polynomial._polybase.ABCPolyBase.__truediv__", "numpy.polynomial._polybase.ABCPolyBase.__floordiv__", "numpy.polynomial._polybase.ABCPolyBase.__divmod__", "numpy.polynomial._polybase.ABCPolyBase.__rdiv__", "numpy.polynomial._polybase.ABCPolyBase.__rtruediv__", "numpy.polynomial._polybase.ABCPolyBase.__rfloordiv__", "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__", "numpy.polynomial._polybase.ABCPolyBase.trim", "numpy.polynomial._polybase.ABCPolyBase.integ", "numpy.polynomial._polybase.ABCPolyBase.deriv", "numpy.polynomial._polybase.ABCPolyBase.linspace", "numpy.polynomial._polybase.ABCPolyBase.fit", "numpy.polynomial._polybase.ABCPolyBase.identity", "numpy.polynomial._polybase.ABCPolyBase.basis", "os.name", "abc.ABC"], "typing.overload": [], "click.testing.CliRunner.isolated_filesystem": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "os", "tempfile", "shutil", "contextlib", "typing.Optional", "typing.Union", "typing.Iterator", "tempfile.mkdtemp", "os.getcwd", "os.chdir", "shutil.rmtree", "contextlib.contextmanager"], "numpy.array": ["numpy.ma.core.array", "numpy.core.numeric.array", "numpy.core.records.array", "numpy.core.multiarray.array", "numpy.core.defchararray.array"], "future.backports.urllib.parse.urljoin": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.backports.urllib.parse._coerce_args", "future.backports.urllib.parse.urlparse", "future.backports.urllib.parse.urlunparse", "future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "future.backports.urllib.parse.Quoter.__init__", "future.backports.urllib.parse.Quoter.__missing__", "future.backports.urllib.parse._ResultMixinStr.encode", "future.backports.urllib.parse._NetlocResultMixinBase.username", "future.backports.urllib.parse._NetlocResultMixinBase.hostname"], "future.backports.misc.cmp_to_key.__ne__": ["future.backports.misc.K"], "future.types.newstr.BaseNewStr": [], "numpy.ma.core._MaskedBinaryOperation.reduce": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.get_masked_subclass", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.put", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.ptp", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.tofile", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core.make_mask", "numpy.ma.core.dtype", "numpy.core.umath", "numpy.core.umath.logical_and"], "collections.MutableMapping.keys": [], "future.backports.urllib.error.HTTPError": ["future.backports.urllib.error.URLError", "future.backports.urllib.response", "future.backports.urllib.response.addinfourl"], "click.utils.KeepOpenFile.__init__": ["click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "typing.IO", "typing.Any"], "future.backports.xmlrpc.client._Method.__init__": ["future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Unmarshaller.getmethodname"], "joblib._dask.DaskDistributedBackend.effective_n_jobs": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "joblib._dask.effective_n_jobs", "distributed.utils.TimeoutError", "tornado.gen.TimeoutError", "joblib._dask._WeakKeyDictionary.__len__", "joblib._dask._WeakKeyDictionary.clear", "joblib._dask.Batch.__repr__", "joblib._dask.DaskDistributedBackend.__reduce__", "joblib._dask._joblib_probe_task", "asyncio.sleep", "asyncio.Task"], "future.types.newlist.BaseNewList": [], "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromMap2", "_sentencepiece.SentencePieceTrainer__TrainFromMap2"], "future.backports.xmlrpc.client.Transport.__init__": [], "array": [], "future.backports.email.headerregistry.Address.username": [], "future.backports.xmlrpc.client.Transport.single_request": ["future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.Fault", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.ProtocolError", "future.builtins.dict"], "typing.Union": [], "google.protobuf.internal.well_known_types.Struct.values": ["google.protobuf.internal.well_known_types.Struct.keys"], "numpy.ma.core.__getitem__._is_scalar": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ndarray", "numpy", "numpy.ma.core.mvoid", "numpy.ma.core.MaskedArray.__getitem__._is_scalar", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.__getitem__._is_scalar", "numpy.ma.core.MaskedArray.__getitem__._scalar_heuristic", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.__getitem__._scalar_heuristic", "numpy.ma.core.getmaskarray", "numpy.ma.core.is_string_or_list_of_strings", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.reshape", "numpy.ma.core.MaskedArray", "warnings", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.void", "numpy.object_", "warnings.warn"], "numpy.errstate": ["numpy.core._ufunc_config.errstate"], "numpy.array_api._array_object.Array.__int__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.array_api._dtypes._integer_dtypes", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "sentencepiece.__init__.ImmutableSentencePieceText._text": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "sentencepiece._sentencepiece.ImmutableSentencePieceText__text", "_sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.ImmutableSentencePieceText__text"], "torch.nn.modules.container.ModuleDict.keys": ["torch.nn.modules.module.Module", "torch._jit_internal._copy_to_script_wrapper"], "tqdm.std.tqdm.format_num": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.Bar.__format__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.fp_write", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.Bar.__init__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.std.tqdm.__str__"], "future.backports.urllib.request.AbstractBasicAuthHandler.__init__": ["future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "future.backports.urllib.request.HTTPPasswordMgr", "re.compile", "re.I"], "transformers.pipelines.TextGenerationPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.ConversationalPipeline._concat_inputs_history"], "math.ceil": [], "urllib3.response.HTTPResponse.read_chunked": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.exceptions.ResponseNotChunked", "urllib3.exceptions.BodyNotHttplibCompatible", "urllib3.response.HTTPResponse.supports_chunked_reads", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.HTTPResponse._handle_chunk", "urllib3.response.HTTPResponse.read_chunked", "urllib3.util.response.is_response_to_head", "io.IOBase", "zlib.error", "brotli.error"], "future.backports.urllib.request.FileHandler.get_names": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.FileHandler", "socket", "socket.gaierror", "socket.gethostbyname", "socket.gethostbyname_ex", "socket.gethostname"], "future.types.newint": ["future.utils.PY3", "future.types.newint.newint.__int__"], "click._termui_impl.ProgressBar.format_eta": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "numpy.core.numeric.ndim": ["numpy.ma.core.ndim", "numpy.core.fromnumeric.ndim"], "numpy.ma.core.getmaskarray": ["numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.getmask", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.make_mask_none", "numpy", "numpy.shape"], "urllib3.response.HTTPResponse.connection": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "collections.abc.MutableMapping": [], "future.backports.http.cookiejar.parse_ns_headers": ["future.backports.http.cookiejar.CookiePolicy.set_ok", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.FileCookieJar.save", "future.backports.http.cookiejar.LWPCookieJar.save", "future.backports.http.cookiejar.MozillaCookieJar.save", "future.backports.http.cookiejar.strip_quotes", "future.backports.http.cookiejar.http2time", "re.split"], "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "sentencepiece.__init__._surface", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__._end", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "_sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece"], "numpy.core.umath": ["numpy.core._multiarray_umath._UFUNC_API", "numpy.core._multiarray_umath._add_newdoc_ufunc"], "transformers.pipelines.Conversation.set_history": ["typing.List", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.ConversationalPipeline._concat_inputs_history"], "future.backports.http.cookies.output": ["future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode"], "numpy.ma.core.set_fill_value": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray", "numpy.ma.core.fill_value"], "numpy.ma.core.MaskedArray.__itruediv__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.getdata", "numpy.ma.core._DomainSafeDivide", "numpy.ma.core.getmask", "numpy.ma.core.mask_or", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__eq__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__le__", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__ge__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__pow__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ndarray.trace", "numpy.var", "numpy.where", "numpy.true_divide"], "requests.compat.MutableMapping": ["collections.abc.MutableMapping"], "future.backports.urllib.request.URLopener.open_local_file": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.url2pathname", "nturl2path.url2pathname", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.real_close", "os", "future.backports.urllib.error.URLError", "future.backports.urllib.request.Request._parse", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.add_header", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.has_header", "future.backports.urllib.request.Request.get_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.add_handler", "future.backports.urllib.request.OpenerDirector.open", "future.backports.urllib.request.OpenerDirector._open", "future.backports.urllib.request.OpenerDirector.error", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.HTTPBasicAuthHandler.http_error_401", "future.backports.urllib.request.ProxyBasicAuthHandler.http_error_407", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_cnonce", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.HTTPDigestAuthHandler.http_error_401", "future.backports.urllib.request.ProxyDigestAuthHandler.http_error_407", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.AbstractHTTPHandler.do_open", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.FTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.CacheFTPHandler.setMaxConns", "future.backports.urllib.request.CacheFTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.check_cache", "future.backports.urllib.request.CacheFTPHandler.clear_cache", "future.backports.urllib.request.URLopener.__del__", "future.backports.urllib.request.URLopener.cleanup", "future.backports.urllib.request.URLopener.addheader", "future.backports.urllib.request.URLopener.open", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.http_error", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.FancyURLopener.http_error_401", "future.backports.urllib.request.FancyURLopener.http_error_407", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.HTTPSHandler.https_open", "future.backports.email.utils", "mimetypes", "future.backports.email", "future.backports.urllib.response.addinfourl", "future.backports.urllib.request.open", "future.builtins.open", "future.backports.urllib.parse.splitport", "socket", "future.backports.urllib.request.thishost", "future.backports.urllib.request.localhost", "socket.gethostbyname", "mimetypes.guess_type", "future.backports.email.utils.formatdate", "future.backports.email.message_from_string", "future.backports.http.client.HTTPSConnection", "os.stat"], "caffe2.python.schema.Struct._pprint_impl": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "future.utils.viewitems"], "sentencepiece.__init__.SentencePieceTrainer._TrainFromString": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromString", "_sentencepiece.SentencePieceTrainer__TrainFromString"], "caffe2.python.schema.Scalar._pprint_impl": ["caffe2.python.schema.Field"], "os.environ": [], "numpy.lib.polynomial.poly1d.variable": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "numpy.lib.polynomial.poly1d.order": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d.__len__"], "google.protobuf.internal.containers.MessageMap.InvalidateIterators": ["typing.MutableMapping"], "click._termui_impl.ProgressBar.update": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic", "typing.Optional"], "google.protobuf.internal.containers.UnknownFieldSet._internal_get": [], "dummy_threading.RLock": [], "google.protobuf.descriptor.FieldDescriptor.CPPTYPE_MESSAGE": ["google.protobuf.descriptor.DescriptorBase", "google.protobuf.pyext._message", "google.protobuf.pyext._message.FieldDescriptor", "google.protobuf.pyext._message.Message", "google.protobuf.pyext._message.default_pool"], "collections.Iterable": [], "tqdm.notebook.tqdm_notebook": ["tqdm.std.tqdm"], "numpy.core.numeric.ScalarType": ["numpy.core.numerictypes.ScalarType"], "numpy.ma.core.trace": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer"], "future.backports.urllib.parse.splitquery": ["future.backports.urllib.parse.Quoter.__repr__", "re", "future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "re.compile"], "numpy.ma.core.reshape": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray", "numpy.array", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.mask"], "numpy.ma.core.mask_or": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.make_mask", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.is_mask", "numpy.ma.core._recursive_mask_or", "numpy", "numpy.core.umath", "numpy.core.umath.logical_or", "numpy.empty", "numpy.broadcast"], "numpy.ma.core.MaskedArray.sum": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._check_mask_axis", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue"], "transformers.pipelines.JsonPipelineDataFormat.__init__": ["transformers.pipelines.PipelineDataFormat", "typing.Optional", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines._ScikitCompat.transform", "transformers.pipelines.Pipeline.transform", "transformers.pipelines.Pipeline._forward", "json", "json.load"], "future.backports.urllib.request.HTTPSHandler.https_open": ["future.backports.urllib.request.AbstractHTTPHandler", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.http.client", "future.backports.http.client.HTTPSConnection"], "numpy.array_api._array_object.Array.__float__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "future.backports.misc.ChainMap.__bool__": ["collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.ChainMap.__bool__", "future.backports.misc.__bool__", "future.backports.misc.OrderedDict.copy", "future.backports.misc.Counter.copy", "future.backports.misc.ChainMap.copy", "future.backports.misc.copy"], "numpy.ma": ["numpy._pytesttester.PytestTester", "numpy.ma.core", "numpy.ma.extras", "numpy.ma.core.__all__", "numpy.ma.extras.__all__"], "future.backports.xmlrpc.client.Fault": ["future.backports.xmlrpc.client.Error"], "tqdm.std.tqdm.__init__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "sys", "tqdm.utils.SimpleTextIOWrapper", "tqdm.utils.DisableOnWriteError", "tqdm.std.tqdm.__len__", "tqdm.std.TqdmDeprecationWarning", "tqdm.std.TqdmKeyError", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix_str", "tqdm.utils._screen_shape_wrapper", "tqdm.utils._supports_unicode", "tqdm.utils._is_ascii", "tqdm.std.tqdm.set_description", "tqdm.std.EMA", "tqdm.std.Bar.colour", "tqdm.std.colour", "time.time", "tqdm.std.tqdm.set_postfix", "tqdm.utils.envwrap", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.print_status", "sys.stderr", "sys.stdout"], "collections.UserDict": [], "future.backports.urllib.parse.ParseResult.geturl": ["future.backports.urllib.parse._NetlocResultMixinStr", "future.backports.urllib.parse.urlunparse"], "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name": ["future.backports.http.cookiejar.CookiePolicy", "future.backports.http.cookiejar._debug", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies"], "torch.nn.modules.container.Sequential.__init__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential", "collections.OrderedDict", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch.nn.modules.container.Sequential._get_item_by_idx", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__", "torch.nn.modules.container.ModuleList._get_abs_string_index", "torch.nn.modules.container.ParameterList._get_abs_string_index"], "future.types.newbytes.BaseNewBytes": [], "future.backports.urllib.parse._ResultMixinStr.encode": [], "numpy.ma.core.MaskedArray.unshare_mask": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "caffe2.python.schema.List.field_metadata": ["caffe2.python.schema.Field"], "future.backports.xmlrpc.client.Unmarshaller.end_dispatch": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.ExpatParser.feed", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "sentencepiece.__init__._swig_repr": ["builtins", "__builtin__", "builtins.Exception", "__builtin__.Exception"], "numpy.ma.core._extrema_operation.reduce": ["numpy.ma.core._MaskedUFunc", "numpy", "numpy.array", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core.MaskedArrayFutureWarning", "warnings", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.put", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.ptp", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.tofile", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.core.umath", "numpy._NoValue", "numpy.core.umath.logical_and", "warnings.warn"], "transformers.tokenization_utils_base.EncodingFast": ["dataclasses.dataclass"], "torch.tensor": [], "numpy.matrixlib.matrix": ["numpy.matrixlib.defmatrix.matrix"], "click.testing.CliRunner.get_default_prog_name": ["click.testing.CliRunner.should_strip_ansi"], "future.backports.urllib.parse.splittype": ["future.backports.urllib.parse.Quoter.__repr__", "re", "future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "re.compile"], "future.backports.urllib.parse.unwrap": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.builtins.str"], "numpy.core.numeric.complexfloating": [], "sentencepiece.__init__.SentencePieceTrainer.Train": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece.__init__._LogStream", "sentencepiece.__init__.SentencePieceTrainer"], "click._termui_impl.ProgressBar.time_per_iteration": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "transformers.tokenization_utils.PreTrainedTokenizer": ["transformers.file_utils.add_end_docstrings", "transformers.tokenization_utils_base.INIT_TOKENIZER_DOCSTRING", "transformers.tokenization_utils_base.PreTrainedTokenizerBase"], "google.protobuf.internal.containers._UnknownField.__init__": ["google.protobuf.internal.containers.UnknownFieldRef.field_number", "google.protobuf.internal.containers.field_number", "google.protobuf.internal.containers.UnknownFieldRef.wire_type", "google.protobuf.internal.containers.wire_type", "google.protobuf.internal.containers.UnknownFieldRef.data", "google.protobuf.internal.containers.data"], "numpy.ma.core._get_data": ["numpy.ndarray", "numpy.ndarray.view"], "future.backports.urllib.request.ftpwrapper.init": ["ftplib", "ftplib.FTP"], "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo": ["future.backports.urllib.parse._NetlocResultMixinBase", "future.backports.urllib.parse._ResultMixinStr", "future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "future.backports.urllib.parse.Quoter.__init__", "future.backports.urllib.parse.Quoter.__repr__", "future.backports.urllib.parse.Quoter.__missing__", "future.backports.urllib.parse._NetlocResultMixinBase.hostname", "future.backports.urllib.parse.hostname", "future.backports.urllib.parse._NetlocResultMixinBase.port", "future.backports.urllib.parse.port"], "future.backports.urllib.parse.Quoter.__init__": ["collections", "future.builtins.bytes", "collections.defaultdict"], "click.testing.CliRunner.should_strip_ansi": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "typing.Optional", "typing.IO", "typing.Any"], "torch.utils.data.dataset.IterableDataset": ["torch.utils.data.dataset.Dataset"], "future.backports.urllib.request.HTTPPasswordMgr.__init__": [], "future.backports.http.cookies.BaseCookie.js_output": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode"], "future.backports.urllib.request.FTPHandler.ftp_open": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.error.URLError", "future.backports.urllib.parse.splitport", "ftplib", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.builtins.int", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.parse.splituser", "future.backports.urllib.parse.splitpasswd", "future.backports.urllib.parse.unquote", "socket", "future.backports.urllib.parse.splitattr", "future.builtins.map", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.response.addinfourl", "future.backports.urllib.parse.splitvalue", "future.backports.email", "future.utils.raise_with_traceback", "mimetypes", "socket.gethostbyname", "socket.error", "mimetypes.guess_type", "future.backports.email.message_from_string", "ftplib.FTP_PORT", "ftplib.all_errors"], "future.backports.http.cookies.Morsel.set": ["future.builtins.dict", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.set", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.CookieError", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode"], "numpy._typing._generic_alias._reconstruct_alias": ["collections.abc.Iterator", "typing.TypeVar", "numpy._typing._generic_alias._GenericAlias.__args__", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__", "numpy._typing._generic_alias._GenericAlias.__origin__", "numpy._typing._generic_alias._GenericAlias.__init__", "numpy._typing._generic_alias._GenericAlias.__mro_entries__", "numpy._typing._generic_alias._GenericAlias.__dir__", "numpy._typing._generic_alias._GenericAlias.__instancecheck__", "numpy._typing._generic_alias._GenericAlias.__getitem__", "numpy._typing._generic_alias._GenericAlias.__iter__", "numpy._typing._generic_alias._GenericAlias.__getattribute__", "typing.Any", "numpy._typing._generic_alias._GenericAlias.__parameters__", "numpy._typing._generic_alias._GenericAlias", "numpy._typing._generic_alias._reconstruct_alias", "numpy._typing._generic_alias._GenericAlias.__unpacked__", "numpy._typing._generic_alias._GenericAlias.__call__", "numpy._typing._generic_alias._GenericAlias.__reduce__", "numpy._typing._generic_alias._GenericAlias.__hash__", "numpy._typing._generic_alias._GenericAlias.__subclasscheck__", "numpy._typing._generic_alias._GenericAlias.__repr__", "numpy._typing._generic_alias._GenericAlias.__eq__"], "future.builtins.filter": ["future.builtins.iterators.filter", "future.builtins.__init__.filter", "past.builtins.noniterators.filter", "past.builtins.__init__.filter"], "transformers.data.datasets.glue.GlueDataset.__init__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.glue.GlueDataTrainingArguments", "typing.List", "transformers.data.processors.utils.InputFeatures", "transformers.data.datasets.glue.Split", "typing.Optional", "typing.Union", "transformers.data.processors.glue.glue_processors", "transformers.data.processors.glue.glue_output_modes", "transformers.data.datasets.glue.GlueDataTrainingArguments.__post_init__", "os", "filelock.FileLock", "transformers.data.processors.glue.glue_convert_examples_to_features", "time", "torch", "torch.load", "torch.save", "os.path", "time.time"], "functools.reduce": [], "future.types.newlist.newlist": ["future.utils.with_metaclass", "future.types.newlist.BaseNewList"], "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_serialized_model_proto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_serialized_model_proto"], "transformers.pipelines.ConversationalPipeline._concat_inputs_history": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "typing.List", "typing.Optional", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.tokenization_utils_base.BatchEncoding"], "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "random", "random.random"], "caffe2.python.schema.Struct": ["caffe2.python.schema.Field"], "numpy.ma.core.MaskedArray.mask": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ndarray.trace", "numpy.var"], "future.backports.misc.ChainMap.fromkeys": ["collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.ChainMap.__bool__", "future.backports.misc.__bool__", "future.backports.misc.OrderedDict.copy", "future.backports.misc.Counter.copy", "future.backports.misc.ChainMap.copy", "future.backports.misc.copy"], "future.backports.http.cookiejar.CookieJar.clear": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "re.compile", "re.ASCII"], "numpy.ma.masked": ["numpy.ma.core.masked"], "transformers.pipelines._ScikitCompat.transform": ["abc.ABC", "abc.abstractmethod"], "numpy.ma.core._MaskedPrintOption.__str__": ["numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core.MaskedArray.tostring"], "click.testing.Result.stderr": ["click.testing.CliRunner.should_strip_ansi"], "future.backports.urllib.request.url2pathname": ["future.backports.urllib.parse.unquote"], "future.backports.urllib.request.getproxies_macosx_sysconf": ["_scproxy._get_proxies"], "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest": [], "future.backports.urllib.parse.splitattr": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl"], "torch.jit.__init__.RecursiveScriptModule.save": ["torch.jit.__init__.ScriptModule"], "base64.b64encode": [], "numpy.f2py.symbolic.Op": ["enum.Enum"], "numpy.ma.core.MaskedArray.imag": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ndarray.trace", "numpy.var"], "transformers.pipelines.Pipeline.check_model_type": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat", "typing.Union", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "typing.List", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.PipelineException"], "numpy.ma.core.MaskedArray.tostring": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "warnings", "numpy.ndarray.trace", "numpy.var", "warnings.warn"], "torch.nn.modules.container.ParameterDict.__contains__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys"], "future.backports.urllib.parse.ParseResult": ["future.backports.urllib.parse._NetlocResultMixinStr"], "future.backports.urllib.error.ContentTooShortError": ["future.backports.urllib.error.URLError"], "numpy.ma.core.MaskedConstant.__copy__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "transformers.pipelines.FillMaskPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.Conversation.add_user_input", "numpy", "transformers.pipelines.PipelineException.__init__", "transformers.pipelines.PipelineDataFormat.__init__", "transformers.pipelines.PipelineDataFormat.__iter__", "transformers.pipelines.PipelineDataFormat.save_binary", "transformers.pipelines.CsvPipelineDataFormat.__init__", "transformers.pipelines.CsvPipelineDataFormat.__iter__", "transformers.pipelines.JsonPipelineDataFormat.__init__", "transformers.pipelines.JsonPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.save_binary", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.__init__", "transformers.pipelines.Pipeline.save_pretrained", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.FeatureExtractionPipeline.__init__", "transformers.pipelines.TextGenerationPipeline.__init__", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.TextClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.QuestionAnsweringPipeline.__init__", "transformers.pipelines.SummarizationPipeline.__init__", "transformers.pipelines.TranslationPipeline.__init__", "transformers.pipelines.Text2TextGenerationPipeline.__init__", "transformers.pipelines.Conversation.__init__", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.ConversationalPipeline.__init__", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.PipelineDataFormat.save", "transformers.pipelines.CsvPipelineDataFormat.save", "transformers.pipelines.JsonPipelineDataFormat.save", "transformers.pipelines.PipedPipelineDataFormat.save", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.span_to_answer", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.Conversation.append_response", "transformers.pipelines.Conversation.__repr__", "torch", "tensorflow", "torch.nonzero", "numpy.array", "numpy.where", "tensorflow.gather_nd", "tensorflow.reverse", "tensorflow.where", "tensorflow.nn", "tensorflow.reshape", "tensorflow.argsort", "tensorflow.math"], "future.backports.misc.OrderedDict.copy": ["future.backports.misc.Counter.update", "future.backports.misc.update", "collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys", "future.backports.misc.K.__ne__", "future.backports.misc.__ne__", "future.backports.misc.cmp_to_key.__ne__", "collections.MutableMapping.update", "collections.MutableMapping.keys", "collections.MutableMapping.values", "collections.MutableMapping.items", "collections.MutableMapping.__ne__", "collections.abc.MutableMapping.update", "collections.abc.MutableMapping.keys", "collections.abc.MutableMapping.values", "collections.abc.MutableMapping.items", "collections.abc.MutableMapping.__ne__"], "future.backports.email.message.Message.keys": ["future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve"], "tqdm.std.TqdmDefaultWriteLock.__enter__": ["tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.TRLock"], "numpy.ma.core.MaskedArray.__iadd__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.getdata", "numpy.ndarray.trace", "numpy.var", "numpy.where"], "numpy.ma.core.MaskedArray.std": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue", "numpy.power"], "numpy.lib.polynomial.poly1d._coeffs": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial._coeffs"], "numpy.ma.core.MAError": [], "caffe2.python.schema._SchemaNode.get_field": ["caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct", "caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema.Field._set_parent", "caffe2.python.schema.Struct.__setattr__", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema.Scalar.set", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.set", "caffe2.python.schema.List", "caffe2.python.schema.Map"], "future.backports.http.cookiejar.is_HDN": [], "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "sentencepiece._sentencepiece.ImmutableNBestSentencePieceText_swiginit", "sentencepiece._sentencepiece.new_ImmutableNBestSentencePieceText", "_sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.ImmutableNBestSentencePieceText_swiginit", "_sentencepiece.new_ImmutableNBestSentencePieceText"], "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__"], "click._termui_impl.Editor.edit_file": ["click._termui_impl.Editor.get_editor", "click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "os", "click._termui_impl.ProgressBar.render_finish", "click._termui_impl.ProgressBar.render_progress", "subprocess", "click.exceptions.ClickException", "gettext.gettext", "typing.Optional", "typing.Dict", "subprocess.Popen", "os.environ"], "torch.utils.data.dataloader.__next__": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data", "torch.utils.data.dataloader._DatasetKind", "warnings", "warnings.warn"], "future.backports.urllib.request.open": ["socket", "future.builtins.bytes", "future.builtins.str", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.Request", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.parse.unwrap", "future.backports.urllib.parse.to_bytes", "future.backports.urllib.parse.quote", "future.backports.urllib.request.OpenerDirector.open", "future.backports.urllib.request.OpenerDirector._open", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.AbstractHTTPHandler.do_open", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.URLopener.open", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.HTTPSHandler.https_open", "future.backports.urllib.request.open", "future.builtins.open", "future.backports.urllib.response.addinfourl", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.parse.splittype", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.error.HTTPError", "future.utils.raise_with_traceback", "socket._GLOBAL_DEFAULT_TIMEOUT", "socket.error"], "tqdm.std.tqdm": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet"], "numpy.ma.core.MaskedArray.__str__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ndarray.trace", "numpy.var"], "caffe2.python.schema.List.field_types": ["caffe2.python.schema.Field"], "numpy.matrixlib.defmatrix.I": ["numpy.core.numeric", "numpy.matrixlib.defmatrix.asmatrix", "numpy.linalg.inv", "numpy.linalg.pinv"], "urllib3._collections.HTTPHeaderDict.iteritems": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3._collections.RecentlyUsedContainer.keys", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "future.backports.urllib.parse._ResultMixinBytes.decode": [], "torch.nn.utils.prune.BasePruningMethod": ["abc.ABC"], "transformers.AutoTokenizer": ["transformers.tokenization_auto.AutoTokenizer"], "numpy.lib.polynomial.poly1d.__str__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.core.numeric", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.type_check.iscomplex", "numpy.lib.polynomial.poly1d.__str__.fmt_float", "numpy.lib.polynomial.__str__.fmt_float", "numpy.lib.type_check.real", "numpy.lib.type_check.imag", "numpy.lib.polynomial._raise_power", "numpy.core.numeric.logical_or"], "future.backports.xmlrpc.client.Unmarshaller.end_nil": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.pieces", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesAsImmutableProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__DecodePiecesAsImmutableProto"], "collections.Iterator": [], "click.testing.Result.__init__": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "types.TracebackType", "typing.Any", "typing.Optional", "typing.Tuple", "typing.Type"], "joblib._dask.DaskDistributedBackend.__reduce__": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "joblib._dask.DaskDistributedBackend", "asyncio.sleep", "asyncio.Task"], "future.backports.http.cookies.SimpleCookie.value_decode": ["future.backports.http.cookies.BaseCookie", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode", "future.backports.http.cookies._unquote"], "zlib.error": [], "numpy.ma.core._frommethod.getdoc": ["numpy.ma.core.MaskedArray", "numpy", "numpy.ma.core.get_object_signature", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc"], "numpy.core.overrides.set_module": ["numpy.core.overrides.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_from_dispatcher.decorator"], "numpy.lib.arrayterator.Arrayterator.__getattr__": ["numpy.lib.arrayterator.Arrayterator.__getattr__"], "collections.Counter": [], "numpy.ma.core._MaskedPrintOption.enabled": ["numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__"], "torch.Generator": ["future.backports.email.generator.Generator", "numpy.random.__init__.Generator"], "numpy.ma.core.MaskedArray.__mul__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "future.backports.xmlrpc.client.GzipDecodedResponse.__init__": ["gzip", "io.BytesIO", "future.backports.xmlrpc.client.Transport.parse_response", "gzip.GzipFile"], "numpy.matrixlib.defmatrix.matrix.argmin": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "numpy.ma.core.MaskedArray.__ifloordiv__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.getdata", "numpy.ma.core._DomainSafeDivide", "numpy.ma.core.getmask", "numpy.ma.core.mask_or", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__eq__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__le__", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__ge__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__pow__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ndarray.trace", "numpy.var", "numpy.where", "numpy.floor_divide"], "future.backports.urllib.request.Request.get_selector": ["warnings", "warnings.warn"], "tqdm.std.tqdm.pandas": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "pandas.Panel", "warnings.catch_warnings", "warnings.simplefilter", "pandas.core.window.rolling.Rolling", "pandas.core.window.expanding.Expanding", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "pandas.core.groupby.groupby.PanelGroupBy", "pandas.core.groupby.PanelGroupBy", "pandas.core.series.Series", "tqdm.std.tqdm.pandas.inner_generator", "tqdm.std.tqdm.inner_generator", "tqdm.std.pandas.inner_generator", "pandas.core.groupby.generic.SeriesGroupBy", "pandas.core.groupby.groupby.SeriesGroupBy", "pandas.core.groupby.SeriesGroupBy", "pandas.core.frame.DataFrame", "pandas.core.groupby.generic.DataFrameGroupBy", "pandas.core.groupby.groupby.DataFrameGroupBy", "pandas.core.groupby.DataFrameGroupBy", "pandas.core.groupby.groupby.GroupBy", "pandas.core.groupby.GroupBy", "pandas.Panel.progress_apply", "pandas.core.groupby.generic.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.PanelGroupBy.progress_apply", "pandas.core.groupby.PanelGroupBy.progress_apply", "pandas.core.series.Series.progress_apply", "pandas.core.series.Series.progress_map", "pandas.core.window.rolling.Rolling.progress_apply", "pandas.core.window.rolling._Rolling_and_Expanding.progress_apply", "pandas.core.window._Rolling_and_Expanding.progress_apply", "pandas.core.window.expanding.Expanding.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.groupby.GroupBy.progress_transform", "pandas.core.groupby.GroupBy.progress_apply", "pandas.core.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.GroupBy.progress_transform", "pandas.core.frame.DataFrame.progress_apply", "pandas.core.frame.DataFrame.progress_applymap", "pandas.core.groupby.generic.SeriesGroupBy.progress_apply", "pandas.core.groupby.generic.SeriesGroupBy.progress_map", "pandas.core.groupby.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.groupby.SeriesGroupBy.progress_map", "pandas.core.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.SeriesGroupBy.progress_map"], "re.sub": [], "google.protobuf.internal.well_known_types._SetStructValue": ["google.protobuf.internal.well_known_types.Struct.values", "google.protobuf.internal.well_known_types.Struct.get_or_create_struct", "google.protobuf.internal.well_known_types.ListValue.add_struct", "google.protobuf.internal.well_known_types.Struct", "google.protobuf.internal.well_known_types.Struct.get_or_create_list", "google.protobuf.internal.well_known_types.ListValue.add_list", "google.protobuf.internal.well_known_types.ListValue"], "numpy.ma.core.get_fill_value": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray", "numpy.ma.core.default_fill_value"], "joblib._dask.__setitem__.on_destroy": ["joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.__len__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.Batch.__call__", "joblib._dask.Batch.__repr__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.__reduce__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.DaskDistributedBackend.apply_async", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask._WeakKeyDictionary.__setitem__.on_destroy", "joblib._dask.__setitem__.on_destroy", "weakref", "weakref.ref"], "torch.tensor.Tensor.resize_as": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "warnings", "torch.autograd._functions.Resize", "torch._C._TensorBase", "warnings.warn", "torch.autograd._functions.Resize.apply"], "numpy.ma.core.MaskedArray.__div__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "urllib3.response.HTTPResponse.supports_chunked_reads": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "numpy.lib.polynomial.poly1d.roots": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromMap", "_sentencepiece.SentencePieceTrainer__TrainFromMap"], "torch.utils.data.dataloader._BaseDataLoaderIter._next_index": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader.__next__"], "sentencepiece.__init__._score": ["sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText__score", "_sentencepiece.ImmutableSentencePieceText__score"], "future.backports.http.cookiejar.blocked_domains": [], "future.backports.urllib.response.addclosehook": ["future.backports.urllib.response.addbase"], "future.backports.urllib.request.URLopener.open": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.parse.unwrap", "future.backports.urllib.parse.to_bytes", "future.backports.urllib.parse.quote", "future.backports.urllib.request.OpenerDirector.open", "future.backports.urllib.request.OpenerDirector._open", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.AbstractHTTPHandler.do_open", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.URLopener.open", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.HTTPSHandler.https_open", "future.backports.urllib.request.open", "future.builtins.open", "future.backports.urllib.response.addinfourl", "future.backports.urllib.parse.splittype", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.parse.splithost", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.error.HTTPError", "socket", "future.utils.raise_with_traceback", "socket.error", "future.backports.http.client.HTTPSConnection"], "numpy.matrixlib.defmatrix.A": [], "numpy.core.numeric.ndarray.__getitem__": [], "tqdm.std.TqdmDefaultWriteLock.__init__": ["tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.TRLock"], "future.utils.__init__.PY3": ["future.utils.__init__.PY3", "past.utils.__init__.PY3"], "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.insert": ["google.protobuf.internal.containers.BaseContainer", "typing.MutableSequence", "google.protobuf.internal.containers.UnknownFieldSet._internal_get"], "numpy.matrixlib": ["numpy._pytesttester.PytestTester", "numpy.matrixlib.defmatrix", "numpy.matrixlib.defmatrix.__all__"], "transformers.pipelines.ConversationalPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args"], "transformers.pipelines.ZeroShotClassificationPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.ZeroShotClassificationArgumentHandler", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args"], "future.backports.urllib.request.OpenerDirector._open": ["future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request"], "urllib3.packages.six.PY2": ["future.utils.__init__.PY2", "past.utils.__init__.PY2"], "past.types.oldstr.BaseOldStr": [], "tqdm.std.tqdm.status_printer": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.fp_write", "sys", "tqdm.std.tqdm.status_printer.print_status", "tqdm.std.tqdm.print_status", "tqdm.std.status_printer.print_status", "sys.stderr", "sys.stdout"], "torch.nn.modules.container.ParameterList.__init__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ParameterList"], "numpy.lib.index_tricks.ndenumerate.__next__": ["numpy.core.overrides.set_module", "numpy.lib.index_tricks.ndenumerate.__next__", "numpy.lib.index_tricks.ndindex.__next__"], "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED": ["google.protobuf.descriptor.DescriptorBase", "google.protobuf.pyext._message", "google.protobuf.pyext._message.FieldDescriptor", "google.protobuf.pyext._message.Message", "google.protobuf.pyext._message.default_pool"], "transformers.pipelines.ConversationalPipeline._clean_padding_history": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "typing.List"], "future.backports.urllib.request.http_response": ["future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request"], "torch._jit_internal.DictInstance": [], "future.backports.urllib.request.FancyURLopener.http_error_307": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.Request.get_full_url"], "numpy.matrixlib.defmatrix.matrix.__new__": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "warnings", "numpy.matrixlib.defmatrix.matrix", "numpy.matrixlib.defmatrix.matrix.__new__", "numpy.matrixlib.defmatrix._convert_from_string", "numpy.matrixlib.defmatrix.matrix.__array_finalize__", "warnings.warn", "numpy.core.numeric.ndarray", "numpy.core.numeric.dtype", "numpy.core.numeric.array"], "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsSerializedProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__EncodeAsSerializedProto"], "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_SetEncodeExtraOptions", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_SetEncodeExtraOptions"], "collections.Sequence": [], "future.backports.email.message.Message.values": ["future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve"], "typing.AnyStr": [], "transformers.pipelines.TokenClassificationPipeline.group_sub_entities": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "typing.List", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "numpy", "numpy.mean"], "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__": ["torch.utils.data.dataset.Dataset", "os", "filelock.FileLock", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document", "time", "pickle", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "pickle.load", "pickle.dump", "pickle.HIGHEST_PROTOCOL", "os.path", "time.time"], "transformers.pipelines.ArgumentHandler.__call__": ["abc.ABC", "abc.abstractmethod"], "joblib._dask.DaskDistributedBackend.__init__": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "distributed", "dask.distributed.Client", "dask.distributed.get_client", "joblib._dask._WeakKeyDictionary.__len__", "joblib._dask._WeakKeyDictionary.clear", "joblib._dask.Batch.__repr__", "joblib._dask.DaskDistributedBackend.__reduce__", "dask.distributed.as_completed", "asyncio.sleep", "asyncio.Task"], "future.backports.urllib.parse.DefragResultBytes.geturl": ["future.backports.urllib.parse._ResultMixinBytes"], "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__DecodeIdsAsSerializedProtoBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__DecodeIdsAsSerializedProtoBatch"], "numpy.matrixlib.defmatrix.matrix.min": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__": ["transformers.pipelines.ArgumentHandler", "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels", "transformers.pipelines.PipelineDataFormat.from_str"], "transformers.tokenization_utils_base.BatchEncoding.items": ["collections.UserDict"], "transformers.pipelines.TokenClassificationPipeline.group_entities": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "typing.List", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities"], "torch.tensor.Tensor.align_to": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._namedtensor_internals.single_ellipsis_index", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor._update_names", "torch.tensor.Tensor", "torch.tensor.Tensor.rename_", "torch.tensor.Tensor.rename", "torch._namedtensor_internals.is_ellipsis", "torch._C._TensorBase"], "requests.cookies.RequestsCookieJar.itervalues": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.set_cookie", "requests.cookies.RequestsCookieJar.iterkeys", "requests.cookies.RequestsCookieJar.itervalues", "requests.cookies.RequestsCookieJar.iteritems", "requests.compat.cookielib.CookieJar"], "click.testing.Result.output": ["click.testing.CliRunner.should_strip_ansi"], "transformers.data.processors.utils.DataProcessor": [], "transformers.pipelines.TextClassificationPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING", "transformers.modeling_auto.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING"], "torch._C._TensorBase": [], "future.backports.xmlrpc.client.Unmarshaller.__init__": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "numpy.ma.core.transpose": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray", "numpy.array"], "future.backports.http.cookiejar.iso2time": ["future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.set_ok", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.__len__", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.FileCookieJar.__init__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "future.backports.http.cookiejar._str2time"], "torch._jit_internal.RRef": ["typing.Generic"], "future.backports.http.cookiejar.make_cookies.no_matching_rfc2965": ["future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.split_header_words", "future.backports.http.cookiejar._warn_unhandled_exception", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.builtins.filter", "future.backports.http.cookiejar.CookieJar.make_cookies.no_matching_rfc2965", "future.backports.http.cookiejar.make_cookies.no_matching_rfc2965", "future.backports.http.cookiejar.parse_ns_headers"], "future.backports.test.support.Matcher.match_value": ["future.backports.test.support.Matcher.match_value", "future.builtins.str", "future.backports.test.support.EnvironmentVarGuard.keys"], "future.backports.urllib.request.parse_keqv_list": ["future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.OpenerDirector.add_handler", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.OpenerDirector._call_chain", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.BaseHandler.__lt__", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.CacheFTPHandler.clear_cache", "future.backports.urllib.request.URLopener.__del__", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.URLopener.cleanup", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.CacheFTPHandler.check_cache", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy"], "future.backports.urllib.request.URLopener.open_ftp": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.builtins.str", "future.backports.urllib.error.URLError", "future.backports.urllib.parse.splithost", "future.backports.urllib.parse.splitport", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.parse.splituser", "future.backports.urllib.parse.splitpasswd", "future.backports.urllib.parse.unquote", "socket", "ftplib", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.builtins.int", "future.backports.urllib.parse.splitattr", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.CacheFTPHandler.check_cache", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.response.addinfourl", "future.backports.urllib.request.ftperrors", "future.backports.urllib.request.ftpwrapper", "future.backports.urllib.parse.splitvalue", "future.backports.email", "future.utils.raise_with_traceback", "mimetypes", "socket.gethostbyname", "mimetypes.guess_type", "future.backports.email.message_from_string", "ftplib.FTP_PORT", "future.backports.http.client.HTTPSConnection"], "transformers.pipelines.QuestionAnsweringPipeline.span_to_answer": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.PipelineException.__init__", "transformers.pipelines.PipelineDataFormat.__init__", "transformers.pipelines.PipelineDataFormat.__iter__", "transformers.pipelines.PipelineDataFormat.save_binary", "transformers.pipelines.CsvPipelineDataFormat.__init__", "transformers.pipelines.CsvPipelineDataFormat.__iter__", "transformers.pipelines.JsonPipelineDataFormat.__init__", "transformers.pipelines.JsonPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.save_binary", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.__init__", "transformers.pipelines.Pipeline.save_pretrained", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.FeatureExtractionPipeline.__init__", "transformers.pipelines.TextGenerationPipeline.__init__", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.TextClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.FillMaskPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.QuestionAnsweringPipeline.__init__", "transformers.pipelines.SummarizationPipeline.__init__", "transformers.pipelines.TranslationPipeline.__init__", "transformers.pipelines.Text2TextGenerationPipeline.__init__", "transformers.pipelines.Conversation.__init__", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.ConversationalPipeline.__init__", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.Conversation.append_response", "typing.Dict", "typing.Union"], "future.backports.urllib.request.http_error_302": ["future.backports.urllib.parse.urlparse", "future.backports.urllib.error.HTTPError", "future.backports.urllib.parse.urlunparse", "future.backports.urllib.parse.urljoin", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "torch.tensor.Tensor.retain_grad_hook": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.retain_grad", "torch.tensor.Tensor.grad", "torch.tensor.Tensor.retain_grad_hook", "torch.tensor.grad", "torch.contiguous_format", "torch._C._TensorBase"], "collections.abc.Iterable": [], "tqdm.std.tqdm.inner_generator": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.pandas.inner", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner_generator.inner", "tqdm.std.tqdm.inner", "tqdm.std.pandas.inner_generator.inner"], "future.backports.http.cookiejar.FileCookieJar": ["future.backports.http.cookiejar.CookieJar"], "transformers.tokenization_utils_base.PreTrainedTokenizerBase": ["transformers.file_utils.add_end_docstrings", "transformers.tokenization_utils_base.SpecialTokensMixin", "typing.Dict", "transformers.tokenization_utils_base.PreTrainedTokenizerBase._get_padding_truncation_strategies", "typing.Any", "typing.Optional", "typing.List"], "torch.nn.modules.container.ParameterList._get_abs_string_index": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Sequential._get_item_by_idx", "operator", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__", "torch.nn.modules.container.ModuleList._get_abs_string_index", "torch.nn.modules.container.ParameterList._get_abs_string_index", "operator.index"], "torch.utils.data.dataset.Dataset.__add__": ["torch.utils.data.dataset.ConcatDataset"], "numpy.lib.user_array.container.__mul__": ["numpy.lib.user_array.container.__add__", "numpy.lib.user_array.__add__", "numpy.lib.user_array.container.__mul__", "numpy.lib.user_array.__mul__", "numpy.core.multiply", "numpy.core.asarray"], "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "sentencepiece._sentencepiece.ImmutableSentencePieceText__pieces_size", "_sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.ImmutableSentencePieceText__pieces_size"], "future.backports.xmlrpc.client.Marshaller.dump_nil": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary"], "numpy.ma.core.MaskedArray.filled": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core._check_fill_value", "numpy.ma.core._recursive_filled", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.array", "numpy.ndarray.trace", "numpy.var", "numpy.asanyarray", "numpy.copyto", "numpy.choose"], "requests.compat.cookielib.CookieJar": [], "transformers.data.datasets.squad.SquadDataTrainingArguments": ["dataclasses.dataclass", "dataclasses.field"], "transformers.pipelines.QuestionAnsweringPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.tokenization_utils.PreTrainedTokenizer", "transformers.pipelines.PipelineDataFormat.from_str", "typing.Union", "typing.Optional", "transformers.modelcard.ModelCard", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.QuestionAnsweringArgumentHandler", "transformers.modeling_tf_auto.TF_MODEL_FOR_QUESTION_ANSWERING_MAPPING", "transformers.modeling_auto.MODEL_FOR_QUESTION_ANSWERING_MAPPING"], "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText": [], "charset_normalizer.models.CharsetMatch": [], "future.types.newbytes.newbytes": ["future.utils.with_metaclass", "future.types.newbytes.BaseNewBytes"], "collections.abc.MutableMapping.values": [], "tqdm.std.tqdm.__contains__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.__contains__"], "future.backports.urllib.request.Request.get_method": [], "torch.utils.data.sampler.RandomSampler.num_samples": ["torch.utils.data.sampler.Sampler", "torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__len__"], "transformers.pipelines.Pipeline.device_placement": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat", "tensorflow", "torch", "contextlib.contextmanager", "torch.cuda", "tensorflow.device"], "torch._jit_internal.Tuple": ["torch.jit.annotations.Tuple", "typing.Tuple"], "numpy.core.multiarray._get_promotion_state": ["numpy.core.numeric._get_promotion_state", "numpy.core.multiarray._get_promotion_state", "numpy.core._multiarray_umath._get_promotion_state"], "transformers.pipelines.PipedPipelineDataFormat.save_binary": ["transformers.pipelines.PipelineDataFormat", "typing.Union", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "typing.List", "transformers.pipelines.PipelineDataFormat.from_str"], "numpy.ma.core.MaskedArray.sharedmask": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "torch.nn.modules.container.Container.__init__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Container", "warnings", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch.nn.modules.container.ModuleDict.values", "torch.nn.modules.container.ParameterDict.values", "warnings.warn"], "numpy.core.getlimits": ["numpy.core.numerictypes", "numpy.core.numerictypes.csingle", "numpy.core.numerictypes.complex_", "numpy.core.numerictypes.clongfloat", "numpy.core.numerictypes.single", "numpy.core.numerictypes.float_", "numpy.core.numerictypes.longfloat", "numpy.core.numerictypes.double", "numpy.core.numerictypes.half", "numpy.core.numerictypes.longdouble", "numpy.core.numerictypes.int64", "numpy.core.numerictypes.int32", "numpy.core.numerictypes.longlong", "numpy.core.numerictypes.int16"], "numpy.lib.polynomial.roots": ["numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.core.atleast_1d", "numpy.core.numeric", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.polynomial.poly1d.integ", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.roots", "numpy.lib.twodim_base.diag", "numpy.linalg.eigvals", "numpy.core.hstack", "numpy.lib.polynomial._roots_dispatcher", "numpy.core.numeric.nonzero", "numpy.core.numeric.ravel", "numpy.core.numeric.array", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.ones", "numpy.core.numeric.zeros"], "torch.utils.data.dataloader._SingleProcessDataLoaderIter": ["torch.utils.data.dataloader._BaseDataLoaderIter"], "numpy.ma.core.MaskedArray.harden_mask": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "numpy.ma.core.mvoid._data": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__"], "bisect.bisect_right": [], "joblib._dask.DaskDistributedBackend.apply_async": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "joblib._dask.Batch.__repr__", "uuid.uuid4", "asyncio.sleep", "asyncio.Task"], "torch.utils.data.sampler.Sampler": [], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data", "torch.utils.data.dataloader.DataLoader.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__len__", "torch.utils.data.dataloader._DatasetKind", "torch.utils.data._utils", "torch.utils.data._utils.worker"], "caffe2.python.schema.ListWithEvicted.field_names": ["caffe2.python.schema.List", "caffe2.python.schema._join_field_name", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema._SchemaNode.print_recursively"], "google.protobuf.internal.containers.UnknownFieldRef.wire_type": [], "logging.getLogger": [], "numpy.lib.format.read_array": ["numpy.lib.format.read_magic", "numpy.lib.format._check_version", "numpy.lib.format._read_array_header", "numpy", "numpy.compat.py3k._isfileobj", "numpy.compat.pickle", "numpy.lib.format._read_bytes", "numpy.compat.pickle.load", "numpy.multiply", "numpy.int64", "numpy.fromfile", "numpy.ndarray", "numpy.frombuffer"], "numpy.lib.polynomial.poly1d.__call__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.polyval"], "sentencepiece.__init__.SentencePieceProcessor.eos_id": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_eos_id", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_eos_id"], "torch.nn.modules.container.ModuleDict.__init__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict"], "torch.float": [], "torch.tensor._wrap_type_error_to_not_implemented": ["functools", "torch._six", "torch.tensor.Tensor.reinforce", "torch.tensor.Tensor.stft", "torch.tensor.Tensor.__format__", "torch.tensor.Tensor.__floordiv__", "torch.tensor.Tensor.__rfloordiv__", "torch.tensor.Tensor.__cuda_array_interface__", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor.unflatten", "inspect", "torch.tensor.wrapped", "torch.tensor._wrap_type_error_to_not_implemented.wrapped", "functools.WRAPPER_ASSIGNMENTS", "torch._six.PY2", "inspect.ismethoddescriptor"], "numpy.ma.core.MaskedArray": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "sentencepiece._sentencepiece.delete_SentencePieceProcessor": [], "joblib._dask.DaskDistributedBackend.stop_call": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "time", "asyncio.sleep", "asyncio.Task", "time.sleep"], "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__"], "google.protobuf.internal.containers.ScalarMap.__init__": ["typing.MutableMapping", "typing.Any"], "csv": [], "click.utils.KeepOpenFile.__getattr__": ["click.utils.LazyFile.__getattr__", "click.utils.KeepOpenFile.__getattr__", "click.utils.PacifyFlushWrapper.__getattr__", "click.utils.LazyFile.__init__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "typing", "typing.Any"], "transformers.data.datasets.language_modeling.TextDataset.__init__": ["torch.utils.data.dataset.Dataset", "typing.Optional", "os", "filelock.FileLock", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document", "time", "pickle", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "pickle.load", "pickle.dump", "pickle.HIGHEST_PROTOCOL", "os.path", "time.time"], "torch.tensor.Tensor.split": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.__cuda_array_interface__", "torch.tensor.Tensor", "torch._C._TensorBase"], "numpy.ma.core.MaskedArray.__rmul__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "transformers.pipelines.SummarizationPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.modeling_tf_auto.TF_MODEL_WITH_LM_HEAD_MAPPING", "transformers.modeling_auto.MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING"], "sentencepiece.__init__.ImmutableSentencePieceText.__str__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.delete_ImmutableSentencePieceText"], "caffe2.python.schema._SchemaNode.print_recursively": ["caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema._SchemaNode.add_child"], "future.backports.misc.ChainMap.copy": ["collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.ChainMap.__bool__", "future.backports.misc.__bool__", "future.backports.misc.OrderedDict.copy", "future.backports.misc.Counter.copy", "future.backports.misc.ChainMap.copy", "future.backports.misc.copy"], "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.ConversationalPipeline._clean_padding_history"], "future.backports.urllib.parse.clear_cache": [], "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo": ["future.backports.urllib.parse._NetlocResultMixinBase", "future.backports.urllib.parse._ResultMixinBytes", "future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "future.backports.urllib.parse.Quoter.__init__", "future.backports.urllib.parse.Quoter.__repr__", "future.backports.urllib.parse.Quoter.__missing__", "future.backports.urllib.parse._NetlocResultMixinBase.hostname", "future.backports.urllib.parse.hostname", "future.backports.urllib.parse._NetlocResultMixinBase.port", "future.backports.urllib.parse.port"], "transformers.data.datasets.glue.GlueDataTrainingArguments": ["dataclasses.dataclass", "dataclasses.field", "transformers.data.processors.glue.glue_processors", "transformers.data.processors.glue.glue_processors.keys"], "future.backports.urllib.request.URLopener": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.http.client.HTTPSConnection"], "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsSerializedProtoBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__EncodeAsSerializedProtoBatch"], "numpy.matrixlib.defmatrix.matrix.T": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "sentencepiece.__init__.SentencePieceProcessor.unk_id": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_unk_id", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_unk_id"], "future.backports.urllib.request.FTPHandler.connect_ftp": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.ftpwrapper", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host"], "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo": ["future.backports.urllib.parse._NetlocResultMixinBase", "future.backports.urllib.parse._ResultMixinBytes", "future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBase.username", "future.backports.urllib.parse.username", "future.backports.urllib.parse._NetlocResultMixinBase.password", "future.backports.urllib.parse.password"], "torch.tensor.__rdiv__": [], "torch.randint": ["numpy.random.__init__.randint"], "tqdm.std.tqdm.__new__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm._monitor.TMonitor", "warnings.warn", "tqdm.std.TqdmMonitorWarning", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__del__", "tqdm.std.tqdm._comparable", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.close", "tqdm.std.tqdm.clear", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.std.tqdm.wrapper"], "typing.Sequence": [], "numpy.ma.core.MaskedArray.__repr__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.mvoid.__len__", "builtins", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.take", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ndarray.trace", "numpy.var", "numpy.core", "numpy.all", "numpy.array2string", "builtins.all", "builtins.max"], "typing.List": [], "numpy.lib.polynomial.poly1d.deriv": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polyder", "numpy.lib.polynomial.poly1d.__mul__", "numpy.lib.polynomial.poly1d.__getitem__", "numpy.lib.polynomial.poly1d.__setitem__"], "numpy.ma.core.MaskedArray.compress": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ndarray.trace", "numpy.var", "numpy.asarray"], "numpy.ma.core.MaskedArray._comparison": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.getmask", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.mask_or", "numpy.ma.core.getdata", "operator", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core._check_fill_value", "operator.eq", "operator.ne", "numpy.ndarray.trace", "numpy.var", "numpy.broadcast_to", "numpy.broadcast", "numpy.ones", "numpy.bool_", "numpy.where"], "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "future.backports.urllib.request.AbstractHTTPHandler.__init__": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel"], "torch._jit_internal.List": ["torch.jit.annotations.List", "typing.List"], "sentencepiece.__init__.SentencePieceProcessor.bos_id": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_bos_id", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_bos_id"], "google.protobuf.internal.containers.UnknownFieldRef.field_number": [], "sentencepiece.__init__.SentencePieceProcessor.pad_id": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_pad_id", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_pad_id"], "transformers.pipelines.DefaultArgumentHandler.handle_args": ["transformers.pipelines.ArgumentHandler", "typing.Sequence", "typing.Any", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.ArgumentHandler.__call__", "transformers.pipelines.DefaultArgumentHandler.__call__", "transformers.pipelines.Pipeline.__call__", "transformers.pipelines.FeatureExtractionPipeline.__call__", "transformers.pipelines.TextGenerationPipeline.__call__", "transformers.pipelines.TextClassificationPipeline.__call__", "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__", "transformers.pipelines.ZeroShotClassificationPipeline.__call__", "transformers.pipelines.FillMaskPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.__call__", "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__", "transformers.pipelines.QuestionAnsweringPipeline.__call__", "transformers.pipelines.SummarizationPipeline.__call__", "transformers.pipelines.TranslationPipeline.__call__", "transformers.pipelines.Text2TextGenerationPipeline.__call__", "transformers.pipelines.ConversationalPipeline.__call__", "typing.Iterable", "itertools.chain", "transformers.pipelines.Pipeline.check_model_type", "typing.List", "itertools.chain.from_iterable"], "joblib._dask.DaskDistributedBackend.retrieval_context": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "distributed.utils.thread_state", "dask.distributed.secede", "dask.distributed.rejoin", "contextlib", "asyncio.sleep", "asyncio.Task", "contextlib.contextmanager"], "future.backports.urllib.request.http_error_303": ["future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel"], "numpy.matrixlib.bmat": ["numpy.matrixlib.defmatrix.bmat"], "future.types.newrange.range_iterator": ["collections.Iterator", "collections.abc.Iterator"], "future.backports.urllib.parse.quote": ["future.builtins.str", "future.backports.urllib.parse.quote_from_bytes"], "numpy.ma.core._MaskedPrintOption.set_display": ["numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__setattr__"], "sentencepiece.__init__.ImmutableSentencePieceText.pieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceText", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.delete_ImmutableSentencePieceText"], "warnings.filterwarnings": [], "typing.Iterator": [], "click.testing.CliRunner.isolation": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "os.environ", "sys.stdin", "sys.stdout", "sys.stderr", "io.BytesIO", "contextlib.contextmanager"], "future.backports.misc.Counter.update": ["future.backports.misc.ChainMap.__len__", "collections.Mapping", "collections.abc.Mapping", "future.backports.misc._count_elements", "collections._count_elements", "future.backports.misc.Counter.elements", "future.backports.misc.count", "itertools.count", "future.backports.misc.Counter", "collections.Counter"], "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesAsImmutableProtoBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__DecodePiecesAsImmutableProtoBatch"], "torch.cuda": ["torch.cuda._lazy_call", "torch.cuda._check_capability", "torch.cuda.CudaError.__init__", "torch.cuda.device.__init__", "torch.cuda.device.__enter__", "torch.cuda.device.__exit__", "torch.cuda.device_of.__init__", "torch.cuda._CudaBase.type", "torch.cuda.DoubleStorage", "torch.cuda.FloatStorage", "torch.cuda.LongStorage", "torch.cuda.IntStorage", "torch.cuda.ShortStorage", "torch.cuda.CharStorage", "torch.cuda.ByteStorage", "torch.cuda.HalfStorage", "torch.cuda.BoolStorage", "torch.cuda.BFloat16Storage", "threading", "torch.cuda._dummy_type", "torch", "torch._C._cudart", "threading.local", "threading.Lock", "torch._storage_classes", "torch._C"], "caffe2.python.schema.Field.field_names": [], "torch._jit_internal.FinalInstance": [], "future.backports.email.headerregistry.BaseHeader.name": ["future.backports.email.headerregistry.Address.__str__", "future.backports.email.headerregistry.Group.__str__", "future.backports.email.headerregistry.BaseHeader._reconstruct", "future.builtins.str"], "urllib3.response.HTTPResponse._update_chunk_length": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse.readinto", "urllib3.exceptions.InvalidChunkLength", "brotli.error", "io.IOBase", "zlib.error"], "google.protobuf.internal.containers.BaseContainer": ["typing.Sequence"], "numpy.ma.core.__str__": ["numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core._replace_dtype_fields", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core._recursive_printoption"], "numpy.core.numeric.concatenate": ["numpy.ma.core.concatenate", "numpy.core.numeric.concatenate", "numpy.core.multiarray.concatenate"], "numpy.ma.core.MaskedArray.argmax": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.maximum_fill_value", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue"], "ftplib.error_perm": [], "collections.abc.MutableMapping.items": [], "sentencepiece.__init__.ImmutableSentencePieceText._score": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "sentencepiece._sentencepiece.ImmutableSentencePieceText__score", "_sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.ImmutableSentencePieceText__score"], "future.backports.urllib.request.getproxies_registry": ["winreg", "future.builtins.str", "future.backports.urllib.request.Request._parse", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.OpenerDirector.open", "future.backports.urllib.request.OpenerDirector._open", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.HTTPPasswordMgr.add_password", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.HTTPBasicAuthHandler.http_error_401", "future.backports.urllib.request.ProxyBasicAuthHandler.http_error_407", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.HTTPDigestAuthHandler.http_error_401", "future.backports.urllib.request.ProxyDigestAuthHandler.http_error_407", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.AbstractHTTPHandler.do_open", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.FTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.connect_ftp", "future.backports.urllib.request.URLopener.cleanup", "future.backports.urllib.request.URLopener.open", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.http_error", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.FancyURLopener.http_error_401", "future.backports.urllib.request.FancyURLopener.http_error_407", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.HTTPSHandler.https_open", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "winreg.OpenKey", "winreg.HKEY_CURRENT_USER", "winreg.QueryValueEx", "re.match"], "numpy.matrixlib.defmatrix.matrix.any": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "torch.nn.modules.container.ParameterDict.keys": ["torch.nn.modules.module.Module"], "future.backports.urllib.request.Request": [], "numpy.core.numeric.zeros": ["numpy.ma.core.zeros", "numpy.core.numeric.zeros", "numpy.core.multiarray.zeros", "numpy.array_api.__init__.zeros"], "numpy.f2py.symbolic.Expr": [], "caffe2.python.schema.Struct.create_internal": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct._struct_from_nested_name.create_internal", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema._struct_from_nested_name.create_internal", "caffe2.python.schema.Struct"], "future.backports.urllib.request.URLopener._open_generic_http": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.builtins.str", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.parse.splithost", "future.backports.urllib.parse.splituser", "future.backports.urllib.parse.splittype", "future.backports.urllib.parse.unquote", "future.backports.urllib.request.proxy_bypass", "base64", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.Request.add_header", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.has_header", "future.backports.urllib.request.Request.get_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.URLopener.addheader", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.error.URLError", "future.backports.urllib.response.addinfourl", "base64.b64encode", "future.backports.http.client.HTTPSConnection", "future.backports.http.client.BadStatusLine"], "future.backports.urllib.parse._splitnetloc": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.backports.urllib.parse._ResultMixinStr.encode", "future.backports.urllib.parse._ResultMixinBytes.decode"], "caffe2.python._import_c_extension": ["caffe2.python._import_c_extension._TensorCPU_reshape", "caffe2.python._import_c_extension._TensorCPU_shape", "atexit", "caffe2.python.extension_loader", "logging", "sys", "atexit.register", "caffe2.python.extension_loader.DlopenGuard", "logging.info", "logging.warning", "logging.critical", "sys.exit"], "transformers.pipelines.PipelineDataFormat.from_str": ["transformers.pipelines.PipelineDataFormat.from_str", "typing.Optional", "transformers.pipelines.JsonPipelineDataFormat", "transformers.pipelines.CsvPipelineDataFormat", "transformers.pipelines.PipedPipelineDataFormat"], "numpy.matrixlib.defmatrix.matrix._align": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "future.backports.xmlrpc.client.ServerProxy.__init__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.__str__", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.__repr__", "future.backports.urllib.parse", "future.backports.xmlrpc.client.SafeTransport", "future.backports.xmlrpc.client.Transport", "future.backports.urllib.parse.splittype", "future.backports.urllib.parse.splithost"], "click._termui_impl.Editor.get_editor": ["click._termui_impl.ProgressBar.format_pos", "os", "click._compat.WIN", "click._termui_impl.Editor.get_editor", "os.environ", "os.system"], "future.backports.http.cookiejar.FileCookieJar.load": ["future.backports.http.cookiejar.CookieJar", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.builtins.open"], "transformers.pipelines.Pipeline._parse_and_tokenize": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.ConversationalPipeline._clean_padding_history"], "torch.tensor.Tensor.unique_consecutive": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.unique_consecutive", "torch._C._TensorBase"], "numpy.ma.core._convert2ma.getdoc": ["numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core.get_object_signature"], "transformers.pipelines.DefaultArgumentHandler.handle_kwargs": ["transformers.pipelines.ArgumentHandler", "typing.Dict", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "itertools.chain", "transformers.pipelines.DefaultArgumentHandler", "typing.List"], "sentencepiece.__init__.SentencePieceTrainer._Train": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.SentencePieceTrainer", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto"], "sentencepiece.__init__._text": ["sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText__text", "_sentencepiece.ImmutableSentencePieceText__text"], "torch.tensor.Tensor.refine_names": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor._update_names", "torch._namedtensor_internals.resolve_ellipsis", "torch.tensor.Tensor", "torch._C._TensorBase"], "numpy.matrixlib.defmatrix.matrix.I": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.matrixlib.defmatrix.asmatrix", "numpy.linalg.inv", "numpy.linalg.pinv", "numpy.core.numeric.ndarray"], "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromMap3", "_sentencepiece.SentencePieceTrainer__TrainFromMap3"], "click._termui_impl.ProgressBar.__init__": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "click._compat._default_text_stdout", "io.StringIO", "operator.length_hint", "time", "click._compat.isatty", "typing.Generic", "typing.Optional", "typing.TextIO", "typing.Iterable", "typing.Callable", "typing.cast", "typing.List", "time.time"], "torch.tensor.Tensor.__rfloordiv__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "numpy.ma.core.real": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type"], "numpy.ndarray": ["numpy.core.numeric.ndarray", "numpy.core.multiarray.ndarray"], "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.delete_ImmutableNBestSentencePieceText"], "numpy.ma.core.MaskedConstant.__reduce__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "numpy.lib.arrayterator.Arrayterator.flat": [], "future.backports.http.cookies.Morsel.output": ["future.builtins.dict", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.set", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output"], "numpy.ma.core.__setmask__": ["numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.make_mask_none", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.array", "numpy.bool_", "numpy.number"], "torch.tensor.Tensor.resize": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "warnings", "torch.autograd._functions.Resize", "warnings.warn", "torch._C._TensorBase", "torch.autograd._functions.Resize.apply"], "future.utils.viewkeys": [], "click._termui_impl.ProgressBar.format_bar": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "math", "math.cos", "typing.Generic"], "click._termui_impl.ProgressBar.format_progress_line": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "io": [], "transformers.pipelines.Conversation.append_response": ["transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.Conversation.append_response"], "caffe2.python.schema.Scalar.field_names": ["caffe2.python.schema.Field"], "future.backports.http.cookiejar.Absent": [], "numpy.ma.core.fill_value": ["numpy.ma.core._check_fill_value", "numpy.ndarray", "numpy.ma.core.MaskedArray.fill_value", "warnings", "numpy.ma.core.fill_value", "warnings.warn"], "numpy.ma.core.MaskedArray.max": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._check_mask_axis", "numpy.ma.core.maximum_fill_value", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.MaskError", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue", "numpy.copyto", "numpy.nan"], "collections.abc.MutableMapping.iterkeys": [], "future.backports.email.headerregistry.ContentTypeHeader.content_type": ["future.backports.email.headerregistry.ParameterizedMIMEHeader", "future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email.headerregistry.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.parse_content_type_header"], "torch._jit_internal.Optional": ["typing.Optional"], "numpy.ma.core.var": ["numpy", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.iscomplexobj", "numpy.core.umath", "numpy.ma.core.mask_or", "numpy.ma.core.getmask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskError", "numpy._NoValue", "numpy.nan", "numpy.core.umath.absolute"], "numpy.ma.core.MaskedArray.recordmask": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.flatten_structured_array", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.recordmask", "numpy.ndarray.trace", "numpy.var", "numpy.all"], "charset_normalizer.models.CharsetMatch.fingerprint": ["hashlib.sha256", "charset_normalizer.models.CharsetMatch.__str__"], "future.builtins.dict.__setitem__": [], "abc.abstractmethod": [], "future.backports.urllib.request.URLopener.open_file": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.builtins.str", "future.backports.urllib.error.URLError", "future.backports.http.client.HTTPSConnection"], "transformers.pipelines.PipelineDataFormat.save_binary": ["typing.Union", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "typing.List", "transformers.pipelines.PipelineException.__init__", "transformers.pipelines.ArgumentHandler.__call__", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.DefaultArgumentHandler.__call__", "transformers.pipelines.PipelineDataFormat.__init__", "transformers.pipelines.PipelineDataFormat.__iter__", "transformers.pipelines.PipelineDataFormat.save_binary", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.CsvPipelineDataFormat.__init__", "transformers.pipelines.CsvPipelineDataFormat.__iter__", "transformers.pipelines.JsonPipelineDataFormat.__init__", "transformers.pipelines.JsonPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.__iter__", "transformers.pipelines.PipedPipelineDataFormat.save_binary", "transformers.pipelines.Pipeline.__init__", "transformers.pipelines.Pipeline.save_pretrained", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline._parse_and_tokenize", "transformers.pipelines.Pipeline.__call__", "transformers.pipelines.Pipeline._forward", "transformers.pipelines.FeatureExtractionPipeline.__init__", "transformers.pipelines.FeatureExtractionPipeline.__call__", "transformers.pipelines.TextGenerationPipeline.__init__", "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize", "transformers.pipelines.TextGenerationPipeline.__call__", "transformers.pipelines.TextClassificationPipeline.__init__", "transformers.pipelines.TextClassificationPipeline.__call__", "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels", "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__", "transformers.pipelines.ZeroShotClassificationPipeline.__init__", "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize", "transformers.pipelines.ZeroShotClassificationPipeline.__call__", "transformers.pipelines.FillMaskPipeline.__init__", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.FillMaskPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.__init__", "transformers.pipelines.TokenClassificationPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.group_sub_entities", "transformers.pipelines.TokenClassificationPipeline.group_entities", "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__", "transformers.pipelines.QuestionAnsweringPipeline.__init__", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.__call__", "transformers.pipelines.QuestionAnsweringPipeline.span_to_answer", "transformers.pipelines.SummarizationPipeline.__init__", "transformers.pipelines.SummarizationPipeline.__call__", "transformers.pipelines.TranslationPipeline.__init__", "transformers.pipelines.TranslationPipeline.__call__", "transformers.pipelines.Text2TextGenerationPipeline.__init__", "transformers.pipelines.Text2TextGenerationPipeline.__call__", "transformers.pipelines.Conversation.__init__", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.Conversation.append_response", "transformers.pipelines.Conversation.set_history", "transformers.pipelines.Conversation.__repr__", "transformers.pipelines.ConversationalPipeline.__init__", "transformers.pipelines.ConversationalPipeline.__call__", "transformers.pipelines.ConversationalPipeline._parse_and_tokenize", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "os", "pickle", "os.path", "pickle.dump"], "typing.MutableMapping": [], "numpy.lib.polynomial.poly1d.__radd__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polyadd"], "transformers.data.datasets.squad.SquadDataset.__init__": ["torch.utils.data.dataset.Dataset", "transformers.data.datasets.squad.SquadDataTrainingArguments", "typing.List", "transformers.data.processors.squad.SquadFeatures", "transformers.data.datasets.squad.Split", "typing.Optional", "typing.Union", "transformers.data.processors.squad.SquadV2Processor", "transformers.data.processors.squad.SquadV1Processor", "os", "filelock.FileLock", "transformers.data.processors.squad.squad_convert_examples_to_features", "time", "torch", "time.time", "torch.load", "torch.save", "os.path"], "numpy.ma.core.toflex": ["numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.make_mask_none", "numpy.ma.core.MaskedArray.recordmask", "numpy", "numpy.ndarray"], "torch.nn.modules.container.ModuleList.__dir__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch.nn.modules.container.keys", "torch.nn.modules.container.ModuleList", "torch._jit_internal._copy_to_script_wrapper"], "numpy.random": ["numpy._pytesttester.PytestTester", "numpy.random._generator.Generator", "numpy.random.bit_generator.SeedSequence", "numpy.random._mt19937.MT19937", "numpy.random._philox.Philox", "numpy.random._pcg64.PCG64", "numpy.random._pcg64.PCG64DXSM", "numpy.random._sfc64.SFC64", "numpy.random._generator.default_rng", "numpy.random.bit_generator.BitGenerator"], "future.backports.urllib.request.parse_http_list": ["future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.parse.quote", "future.backports.urllib.request.Request._parse", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.Request.has_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.add_password", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.CacheFTPHandler.setMaxConns", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "future.backports.urllib.request.HTTPSHandler.https_open"], "numpy.ma.core.MaskedArray.__radd__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ndarray.trace", "numpy.var"], "future.utils.viewvalues": [], "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsSerializedProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsSerializedProto"], "numpy.ma.core.MaskedArray.__getitem__._is_scalar": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mvoid", "numpy.ma.core.MaskedArray.__getitem__._is_scalar", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.__getitem__._is_scalar", "numpy.ma.core.MaskedArray.__getitem__._scalar_heuristic", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.__getitem__._scalar_heuristic", "numpy.ma.core.getmaskarray", "numpy.ma.core.is_string_or_list_of_strings", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.reshape", "numpy.ma.core.MaskedArray", "warnings", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ndarray.trace", "numpy.var", "numpy.void", "numpy.object_", "warnings.warn"], "future.backports.http.cookiejar.CookiePolicy": [], "future.backports.xmlrpc.client.Fault.__init__": ["future.backports.xmlrpc.client.Error"], "requests.cookies.remove_cookie_by_name": ["requests.cookies.RequestsCookieJar.set_cookie", "requests.cookies.RequestsCookieJar.list_domains", "requests.cookies.RequestsCookieJar.multiple_domains", "requests.cookies.RequestsCookieJar.list_paths"], "torch.nn.modules.container.ParameterList.__dir__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch.nn.modules.container.keys", "torch.nn.modules.container.ParameterList"], "numpy.ma.core.MaskedArray.mean": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.core.numerictypes", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.core.multiarray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue", "numpy.core.numerictypes.float16", "numpy.core.numerictypes.integer", "numpy.core.numerictypes.bool_", "numpy.core.multiarray.dtype"], "numpy.ma.core.MaskedArray.fill_value": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._check_fill_value", "warnings", "numpy.ndarray.trace", "numpy.var", "warnings.warn"], "numpy.core.numerictypes.obj2sctype": ["numpy.core.multiarray.ndarray", "numpy.core.multiarray.dtype", "numpy.core.overrides.set_module"], "numpy.ma.mrecords.MaskedRecords._fieldmask": ["numpy.ma.MaskedArray"], "numpy.ma.core.MaskedConstant.__format__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__", "warnings", "warnings.warn"], "joblib._dask._WeakKeyDictionary.__setitem__.on_destroy": ["joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.__len__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.Batch.__call__", "joblib._dask.Batch.__repr__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.__reduce__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.DaskDistributedBackend.apply_async", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask._WeakKeyDictionary.__setitem__.on_destroy", "joblib._dask.__setitem__.on_destroy", "weakref", "weakref.ref"], "future.backports.http.cookiejar.deepvalues": ["future.backports.http.cookiejar.vals_sorted_by_key", "future.backports.http.cookiejar.deepvalues"], "transformers.pipelines.SummarizationPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "tensorflow", "tensorflow.shape"], "numpy.core.numeric.newaxis": ["numpy.core.numeric.newaxis"], "numpy.ma.core._MaskedUFunc.__str__": [], "transformers.AutoTokenizer.from_pretrained": [], "torch._six.builtins": ["__builtin__", "builtins"], "future.backports.xmlrpc.client.Transport.make_connection": ["future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.http.client", "future.backports.http.client.HTTPConnection"], "future.backports.http.cookiejar.Cookie": [], "transformers.pipelines.PipelineDataFormat.__init__": ["typing.Optional", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.ArgumentHandler.__call__", "transformers.pipelines.DefaultArgumentHandler.__call__", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.Pipeline.device_placement", "transformers.pipelines.Pipeline.ensure_tensor_on_device", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.Pipeline.__call__", "transformers.pipelines.FeatureExtractionPipeline.__call__", "transformers.pipelines.TextGenerationPipeline.__call__", "transformers.pipelines.TextClassificationPipeline.__call__", "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__", "transformers.pipelines.ZeroShotClassificationPipeline.__call__", "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token", "transformers.pipelines.FillMaskPipeline.__call__", "transformers.pipelines.TokenClassificationPipeline.__call__", "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__", "transformers.pipelines.QuestionAnsweringPipeline.create_sample", "transformers.pipelines.QuestionAnsweringPipeline.__call__", "transformers.pipelines.QuestionAnsweringPipeline.decode", "transformers.pipelines.SummarizationPipeline.__call__", "transformers.pipelines.TranslationPipeline.__call__", "transformers.pipelines.Text2TextGenerationPipeline.__call__", "transformers.pipelines.Conversation.mark_processed", "transformers.pipelines.ConversationalPipeline.__call__", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "os.path.exists", "os.path.abspath"], "future.backports.urllib.request.URLopener.__init__": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "warnings", "future.backports.urllib.request.getproxies", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "os", "warnings.warn", "future.backports.http.client.HTTPSConnection", "os.unlink"], "google.protobuf.internal.containers.UnknownFieldRef.__init__": [], "future.backports.urllib.request.FancyURLopener.get_user_passwd": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.CacheFTPHandler.clear_cache", "future.backports.urllib.request.clear_cache", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd"], "torch.nn.modules.container.ParameterDict.__init__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ParameterDict"], "numpy.core.numerictypes.find_common_type": ["numpy.core.multiarray.dtype", "numpy.core.numerictypes._can_coerce_all", "numpy.core.numerictypes._find_common_coerce", "numpy.core.overrides.set_module"], "numpy.core.multiarray": ["numpy.core._multiarray_umath._reconstruct", "numpy.core._multiarray_umath.from_dlpack", "numpy.core.multiarray.may_share_memory", "numpy.core._multiarray_umath._get_promotion_state", "numpy.core._multiarray_umath._set_promotion_state", "functools", "numpy.core.overrides", "numpy.core._multiarray_umath._reconstruct.__module__", "numpy.core._multiarray_umath.from_dlpack.__module__", "numpy.core._multiarray_umath._get_promotion_state.__module__", "numpy.core._multiarray_umath._set_promotion_state.__module__", "functools.partial", "numpy.core.overrides.array_function_from_dispatcher", "numpy.core._multiarray_umath._ARRAY_API", "numpy.core._multiarray_umath._flagdict", "numpy.core._multiarray_umath._insert", "numpy.core._multiarray_umath._vec_string", "numpy.core._multiarray_umath._monotonicity"], "google.protobuf.internal.type_checkers.GetTypeChecker": ["google.protobuf.internal.type_checkers.UnicodeValueChecker", "google.protobuf.internal.type_checkers.SupportsOpenEnums", "google.protobuf.internal.type_checkers.EnumValueChecker"], "weakref": [], "numpy.lib.npyio.WriteWrap.write_bytes": ["numpy.lib.npyio.WriteWrap.write_bytes"], "urllib3.response.HTTPResponse.get_redirect_location": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "sentencepiece.__init__._surface", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__._end", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece_swiginit", "sentencepiece._sentencepiece.new_ImmutableSentencePieceText_ImmutableSentencePiece", "_sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece_swiginit", "_sentencepiece.new_ImmutableSentencePieceText_ImmutableSentencePiece"], "future.backports.xmlrpc.client.Marshaller.dump_instance": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "tqdm.std.tqdm.format_interval": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.display", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.format_interval", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm._comparable"], "csv.DictReader": [], "collections.abc.Mapping": [], "tqdm.std.tqdm._decr_instances": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.Bar.__init__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.display", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner"], "transformers.pipelines.Conversation.mark_processed": [], "numpy.ma.core.MaskedArray.__setmask__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.make_mask_none", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ndarray.trace", "numpy.var", "numpy.array", "numpy.bool_", "numpy.number"], "caffe2.python.schema.ListWithEvicted._pprint_impl": ["caffe2.python.schema.List"], "numpy._pytesttester.PytestTester": [], "click._termui_impl.Editor.edit": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "click._compat.WIN", "tempfile", "click._termui_impl.ProgressBar.render_finish", "click._termui_impl.ProgressBar.finish", "os", "typing.Optional", "typing.AnyStr", "typing.BinaryIO", "tempfile.mkstemp", "os.utime", "os.unlink", "os.fdopen", "os.path"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "future.backports.urllib.request.BaseHandler": [], "future.backports.urllib.parse.splithost": ["future.backports.urllib.parse.Quoter.__repr__", "re", "future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "re.compile"], "future.utils.raise_with_traceback": ["future.utils.metaclass.__new__", "sys", "sys.exc_info"], "threading.RLock": [], "future.types.newlist.newlist.copy": ["future.utils.with_metaclass", "future.types.newlist.BaseNewList", "future.types.newlist.newlist.copy", "future.types.newlist.copy", "copy", "copy.copy"], "google.protobuf.internal.containers.MessageMap.__init__": ["typing.MutableMapping", "typing.Any"], "numpy.ma.core.MaskedArray._insert_masked_print": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core._replace_dtype_fields", "numpy.ma.core._recursive_printoption", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ndarray.trace", "numpy.var", "numpy.split", "numpy.concatenate"], "future.backports.xmlrpc.client.ProtocolError.__init__": ["future.backports.xmlrpc.client.Error", "future.backports.xmlrpc.client.Transport.send_headers"], "future.backports.xmlrpc.client.Marshaller.dump_unicode": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.escape", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "numpy.array_api._creation_functions.asarray": ["typing.Union", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy.array_api._typing.SupportsBufferProtocol", "numpy.array_api._typing.NestedSequence", "numpy", "numpy.array_api._creation_functions._check_valid_dtype", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy._CopyMode", "numpy.array", "numpy.asarray"], "itertools.islice": [], "numpy.ma.core.MaskedArray.var": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.iscomplexobj", "numpy.core.umath", "numpy.ma.core.mask_or", "numpy.ma.core.getmask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskError", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue", "numpy.nan", "numpy.core.umath.absolute"], "click._termui_impl.ProgressBar.generator": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic", "typing.Iterator"], "caffe2.python.workspace.FeedBlob": ["caffe2.python._import_c_extension", "caffe2.python.workspace._Workspace_feed_blob", "caffe2.python._import_c_extension.Workspace"], "click._termui_impl.Editor.__init__": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Optional", "typing.Mapping"], "numpy.polynomial._polybase.ABCPolyBase._generate_string": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy", "numpy.polynomial.polyutils", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.basis_name", "numpy.polynomial._polybase.ABCPolyBase._div", "numpy.polynomial._polybase.ABCPolyBase._int", "numpy.polynomial._polybase.ABCPolyBase._fit", "numpy.polynomial._polybase.ABCPolyBase._line", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.__init__", "numpy.polynomial._polybase.ABCPolyBase.__iter__", "numpy.polynomial._polybase.ABCPolyBase.__truediv__", "numpy.polynomial._polybase.ABCPolyBase.__floordiv__", "numpy.polynomial._polybase.ABCPolyBase.__divmod__", "numpy.polynomial._polybase.ABCPolyBase.__rdiv__", "numpy.polynomial._polybase.ABCPolyBase.__rtruediv__", "numpy.polynomial._polybase.ABCPolyBase.__rfloordiv__", "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__", "numpy.polynomial._polybase.ABCPolyBase.trim", "numpy.polynomial._polybase.ABCPolyBase.integ", "numpy.polynomial._polybase.ABCPolyBase.deriv", "numpy.polynomial._polybase.ABCPolyBase.linspace", "numpy.polynomial._polybase.ABCPolyBase.fit", "numpy.polynomial._polybase.ABCPolyBase.identity", "numpy.polynomial._polybase.ABCPolyBase.basis", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase.__len__", "numpy.polynomial.polyutils.format_float", "abc.ABC", "numpy.get_printoptions", "os.name"], "transformers.pipelines.PipelineDataFormat": [], "_sentencepiece": [], "ftplib": [], "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.Conversation.add_user_input", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "numpy", "transformers.pipelines.PipelineException", "numpy.ndarray", "numpy.prod"], "numpy.ma.core.MaskedArray._get_data": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.ndarray.view", "numpy.var"], "typing.Tuple": [], "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__DecodePiecesBatch"], "torch.nn.cpp.OrderedDictWrapper.keys": [], "charset_normalizer.models.CharsetMatch.__str__": ["charset_normalizer.models.CharsetMatch.__str__"], "torch.tensor.Tensor.__contains__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "numbers.Number", "torch.Tensor", "torch._C._TensorBase"], "future.backports.misc.__bool__": [], "urllib3.response.HTTPResponse._handle_chunk": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse.supports_chunked_reads", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.HTTPResponse._handle_chunk", "urllib3.response.HTTPResponse.read_chunked", "io.IOBase", "zlib.error", "brotli.error"], "caffe2.python.schema.Scalar.field_blobs": ["caffe2.python.schema.Field"], "future.backports.urllib.request.http_error_301": ["future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data"], "transformers.AutoModelForQuestionAnswering.from_pretrained": [], "collections.abc.MutableMapping.__ne__": [], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter": ["torch.utils.data.dataloader._BaseDataLoaderIter"], "future.backports.http.cookiejar.CookieJar": ["future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "re.compile", "re.ASCII"], "caffe2.python.schema.List.field_names": ["caffe2.python.schema.Field", "caffe2.python.schema._join_field_name", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema._SchemaNode.print_recursively"], "google.protobuf.internal.containers.RepeatedScalarFieldContainer.__init__": ["google.protobuf.internal.containers.BaseContainer", "typing.MutableSequence", "typing.Any"], "future.types.newstr.newstr": ["future.utils.with_metaclass", "future.types.newstr.BaseNewStr"], "numpy.ma.core.MaskedArray.compressed": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.ndarray.ravel", "numpy.var", "numpy.logical_not"], "future.backports.misc.OrderedDict.fromkeys": ["future.backports.misc.Counter.update", "future.backports.misc.update", "collections.MutableMapping", "collections.abc.MutableMapping", "future.backports.misc.OrderedDict.fromkeys", "future.backports.misc.Counter.fromkeys", "future.backports.misc.ChainMap.fromkeys", "future.backports.misc.K.__ne__", "future.backports.misc.__ne__", "future.backports.misc.cmp_to_key.__ne__", "collections.MutableMapping.update", "collections.MutableMapping.keys", "collections.MutableMapping.values", "collections.MutableMapping.items", "collections.MutableMapping.__ne__", "collections.abc.MutableMapping.update", "collections.abc.MutableMapping.keys", "collections.abc.MutableMapping.values", "collections.abc.MutableMapping.items", "collections.abc.MutableMapping.__ne__"], "sentencepiece.__init__.__str__": ["sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__"], "numpy.lib.user_array.__add__": ["numpy.core.asarray"], "future.backports.urllib.request.HTTPRedirectHandler.http_error_302": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.http_error_307", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.http_error_302", "future.backports.urllib.parse.urlparse", "future.backports.urllib.error.HTTPError", "future.backports.urllib.parse.urlunparse", "future.backports.urllib.parse.urljoin", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request"], "numpy.lib.polynomial.coeffs": ["numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.coeffs"], "google.protobuf.internal.containers.RepeatedCompositeFieldContainer.__init__": ["google.protobuf.internal.containers.BaseContainer", "typing.MutableSequence", "typing.Any"], "future.backports.urllib.request.AbstractHTTPHandler.do_open": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.error.URLError", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.Request.add_header", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.has_header", "future.backports.urllib.request.Request.get_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.add_handler", "future.backports.urllib.request.OpenerDirector._call_chain", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.HTTPBasicAuthHandler.http_error_401", "future.backports.urllib.request.ProxyBasicAuthHandler.http_error_407", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.HTTPDigestAuthHandler.http_error_401", "future.backports.urllib.request.ProxyDigestAuthHandler.http_error_407", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.CacheFTPHandler.check_cache", "future.backports.urllib.request.CacheFTPHandler.clear_cache", "future.backports.urllib.request.URLopener.addheader", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.http_error", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.FancyURLopener.http_error_401", "future.backports.urllib.request.FancyURLopener.http_error_407", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.HTTPSHandler.https_open", "future.builtins.dict", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.Request._parse", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.OpenerDirector.error", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.HTTPPasswordMgr.add_password", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.ftpwrapper.real_close", "socket", "socket.error"], "google.protobuf.internal.containers.ScalarMap.InvalidateIterators": ["typing.MutableMapping"], "math": [], "os.uname": [], "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromMap4", "_sentencepiece.SentencePieceTrainer__TrainFromMap4"], "numpy.ma.mrecords.MaskedRecords._data": ["numpy.ma.MaskedArray", "numpy.recarray", "numpy.ndarray", "numpy.ndarray.view"], "torch.nn.modules.container.ModuleList.__init__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleList"], "numpy.ma.core.MaskedArray.soften_mask": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "future.backports.urllib.parse._splitparams": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "future.backports.urllib.parse.Quoter.__init__", "future.backports.urllib.parse.Quoter.__missing__"], "future.backports.http.cookiejar.Cookie.has_nonstandard_attr": ["future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name"], "future.utils.as_native_str": ["future.utils.encoder", "future.utils.as_native_str.encoder", "future.utils.wrapper", "future.utils.as_native_str.encoder.wrapper", "future.utils.encoder.wrapper", "functools", "functools.wraps"], "future.backports.http.client": ["future.utils.PY2", "future.backports.http.client.HTTPException"], "caffe2.python.schema.Scalar.field_type": ["caffe2.python.schema.Field"], "future.builtins.open": ["future.builtins.misc.open", "future.builtins.__init__.open"], "numpy.ma.core.MaskedArray.min": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._check_mask_axis", "numpy.ma.core.minimum_fill_value", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.MaskError", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue", "numpy.copyto", "numpy.nan"], "click.testing.EchoingStdin.__getattr__": ["click.testing.CliRunner.should_strip_ansi", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "typing", "typing.Any"], "click.utils.LazyFile.close_intelligently": [], "future.backports.http.cookiejar._warn_unhandled_exception": ["future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "io", "traceback", "warnings", "io.StringIO", "traceback.print_exc", "warnings.warn"], "transformers.pipelines.Pipeline._forward": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "torch", "torch.no_grad"], "numpy._globals.VisibleDeprecationWarning": [], "threading": [], "future.backports.xmlrpc.client.ExpatParser.__init__": ["future.backports.xmlrpc.client.Transport.getparser", "xml.parsers.expat", "xml.parsers.expat.ParserCreate"], "numpy.lib.polynomial.order": ["numpy.lib.polynomial.poly1d.__len__"], "click.testing.CliRunner.visible_input": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "sys", "click.testing._pause_echo", "sys.stdout", "typing.Optional"], "numpy._typing._nested_sequence._NestedSequence": ["typing.runtime_checkable", "typing.Protocol"], "numpy.ma.core.copy": [], "numpy.recarray": ["numpy.core.records.recarray", "numpy.core.__init__.recarray"], "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto"], "torch.tensor.Tensor.__cuda_array_interface__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.__setstate__", "torch.tensor.Tensor.register_hook", "torch.tensor.Tensor.is_shared", "torch.tensor.Tensor.share_memory_", "torch.tensor.Tensor.__reversed__", "torch.tensor.Tensor.stft", "torch.tensor.Tensor.resize", "torch.tensor.Tensor.resize_as", "torch.tensor.Tensor.split", "torch.tensor.Tensor.unique_consecutive", "torch.tensor.Tensor.__rsub__", "torch.tensor.Tensor.__hash__", "torch.tensor.Tensor.__contains__", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor._update_names", "torch.float16", "torch.float32", "torch.float64", "torch.uint8", "torch.int8", "torch.int16", "torch.int32", "torch.int64", "torch._C._TensorBase"], "future.backports.email.message.Message._get_params_preserve": ["future.backports.email.message.Message.values", "future.backports.email.message.Message.add_header", "future.backports.email.message.Message.replace_header", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.is_multipart", "future.backports.email.message.Message.get_payload", "future.backports.email.message.Message.set_payload", "future.backports.email.message.Message.get_content_type", "future.backports.email.message.Message.get_content_maintype", "future.backports.email.message.Message.get_content_subtype", "future.backports.email.message.Message.get_default_type", "future.backports.email.message.Message.set_default_type", "future.backports.email.message.Message.get_param", "future.backports.email.message.Message.set_param", "future.backports.email.message.Message.del_param", "future.backports.email.message.Message.set_type", "future.backports.email.message._parseparam", "future.backports.email.message.Message.get_filename", "future.backports.email.utils", "future.backports.email.utils.decode_params"], "past.utils.__init__.PY3": ["future.utils.__init__.PY3", "past.utils.__init__.PY3"], "caffe2.python.schema.Field.field_metadata": [], "urllib3.packages.six": ["urllib3.packages.six.MovedModule.__getattr__", "urllib3.packages.six.Iterator.next", "urllib3.packages.six.next", "urllib3.packages.six.advance_iterator", "urllib3.packages.six.print_", "urllib3.packages.six._SixMetaPathImporter", "urllib3.packages.six.Module_six_moves_urllib_parse", "urllib3.packages.six.Module_six_moves_urllib_error", "urllib3.packages.six.Module_six_moves_urllib_request", "urllib3.packages.six.Module_six_moves_urllib_response", "urllib3.packages.six.Module_six_moves_urllib_robotparser", "urllib3.packages.six.callable", "urllib3.packages.six.create_bound_method", "urllib3.packages.six.Iterator", "urllib3.packages.six._add_doc", "urllib3.packages.six.get_unbound_function", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3.packages.six.iteritems", "urllib3.packages.six.iterlists", "struct", "urllib3.packages.six.byte2int", "urllib3.packages.six.indexbytes", "StringIO", "io", "urllib3.packages.six.b", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six.u", "urllib3.packages.six.exec_", "urllib3.packages.six.reraise", "urllib3.packages.six.wraps", "urllib3.packages.six.X", "urllib3.packages.six.MovedAttribute", "urllib3.packages.six.MovedModule", "urllib3.packages.six._MovedItems", "urllib3.packages.six.Module_six_moves_urllib", "operator", "itertools", "urllib3.packages.six._LazyDescr.__init__", "urllib3.packages.six.MovedModule.__init__", "urllib3.packages.six._LazyModule.__init__", "urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six.MovedAttribute.__init__", "urllib3.packages.six._SixMetaPathImporter.__init__", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.is_package", "urllib3.packages.six.Module_six_moves_urllib.__dir__", "sys", "functools", "urllib3.packages.six._update_wrapper", "urllib3.packages.six.X.__len__", "importlib.util.spec_from_loader", "types", "types.ClassType", "types.MethodType", "operator.attrgetter", "operator.methodcaller", "operator.itemgetter", "operator.getitem", "sys.meta_path", "sys.maxsize", "sys.platform", "sys.version_info", "io.StringIO", "io.BytesIO", "functools.wraps", "functools.update_wrapper", "functools.partial", "itertools.imap", "StringIO.StringIO", "struct.Struct"], "numpy._mac_os_check": [], "torch._jit_internal.OptionalInstance": [], "google.protobuf.internal.well_known_types.Struct.keys": [], "warnings.catch_warnings": [], "future.builtins.__init__.str": ["future.builtins.__init__.str", "past.builtins.__init__.str", "future.types.newstr"], "numpy.ma.mrecords._data": ["numpy.recarray", "numpy.ndarray", "numpy.ndarray.view"], "torch.tensor.Tensor.is_shared": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "future.backports.http.cookiejar.uppercase_escaped_char": ["future.backports.http.cookiejar.CookieJar.no_matching_rfc2965"], "future.backports.xmlrpc.client.Marshaller.__init__": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary"], "future.backports.http.cookies.SimpleCookie.value_encode": ["future.backports.http.cookies.BaseCookie", "future.backports.http.cookies.BaseCookie.__parse_string", "future.builtins.str", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode", "future.backports.http.cookies._quote"], "future.backports.http.cookies.BaseCookie.__set": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.Morsel", "future.builtins.dict.__setitem__"], "joblib._dask.Batch.__repr__": [], "torch.nn.modules.container.ModuleList.insert": ["torch.nn.modules.module.Module", "torch.nn.modules.container.Container.__init__", "torch.nn.modules.container.Sequential.__init__", "torch.nn.modules.container.Sequential._get_item_by_idx", "torch.nn.modules.container.Sequential.__getitem__", "torch.nn.modules.container.Sequential.__setitem__", "torch.nn.modules.container.Sequential.__delitem__", "torch.nn.modules.container.Sequential.__dir__", "torch.nn.modules.container.Sequential.__iter__", "torch.nn.modules.container.ModuleList.__init__", "torch.nn.modules.container.ModuleList._get_abs_string_index", "torch.nn.modules.container.ModuleList.__getitem__", "torch.nn.modules.container.ModuleList.__setitem__", "torch.nn.modules.container.ModuleList.__delitem__", "torch.nn.modules.container.ModuleList.__iter__", "torch.nn.modules.container.ModuleList.__iadd__", "torch.nn.modules.container.ModuleList.__dir__", "torch.nn.modules.container.ModuleList.insert", "torch.nn.modules.container.ModuleDict.__init__", "torch.nn.modules.container.ModuleDict.__getitem__", "torch.nn.modules.container.ModuleDict.__setitem__", "torch.nn.modules.container.ModuleDict.__delitem__", "torch.nn.modules.container.ModuleDict.__iter__", "torch.nn.modules.container.ModuleDict.__contains__", "torch.nn.modules.container.ModuleDict.items", "torch.nn.modules.container.ParameterList.__init__", "torch.nn.modules.container.ParameterList._get_abs_string_index", "torch.nn.modules.container.ParameterList.__getitem__", "torch.nn.modules.container.ParameterList.__setitem__", "torch.nn.modules.container.ParameterList.__iter__", "torch.nn.modules.container.ParameterList.__iadd__", "torch.nn.modules.container.ParameterList.__dir__", "torch.nn.modules.container.ParameterDict.__init__", "torch.nn.modules.container.ParameterDict.__getitem__", "torch.nn.modules.container.ParameterDict.__setitem__", "torch.nn.modules.container.ParameterDict.__delitem__", "torch.nn.modules.container.ParameterDict.__iter__", "torch.nn.modules.container.ParameterDict.__contains__", "torch.nn.modules.container.ParameterDict.items", "torch.nn.modules.container.Sequential.__len__", "torch.nn.modules.container.ModuleList.__len__", "torch.nn.modules.container.ModuleDict.__len__", "torch.nn.modules.container.ParameterList.__len__", "torch.nn.modules.container.ParameterDict.__len__"], "numpy.polynomial._polybase.ABCPolyBase.__pos__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "numpy.matrixlib.defmatrix.H": ["numpy.core.numeric", "numpy.core.numeric.complexfloating"], "numpy.core.records.format_parser._createdtype": ["numpy.core.overrides.set_module", "numpy.core.records.format_parser._createdtype", "numpy.core.numeric", "numpy.core.numeric.dtype"], "future.backports.urllib.request.CacheFTPHandler.check_cache": ["future.backports.urllib.request.FTPHandler", "future.backports.urllib.request.Request.__init__", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.get_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.__init__", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.BaseHandler.__lt__", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.ProxyHandler.__init__", "future.backports.urllib.request.HTTPPasswordMgr.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.HTTPBasicAuthHandler.http_error_401", "future.backports.urllib.request.ProxyBasicAuthHandler.http_error_407", "future.backports.urllib.request.AbstractDigestAuthHandler.__init__", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_cnonce", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.HTTPDigestAuthHandler.http_error_401", "future.backports.urllib.request.ProxyDigestAuthHandler.http_error_407", "future.backports.urllib.request.AbstractHTTPHandler.__init__", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.HTTPCookieProcessor.__init__", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.FTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.__init__", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.CacheFTPHandler.setMaxConns", "future.backports.urllib.request.CacheFTPHandler.connect_ftp", "future.backports.urllib.request.URLopener.__init__", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.http_error", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.FancyURLopener.__init__", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.FancyURLopener.http_error_401", "future.backports.urllib.request.FancyURLopener.http_error_407", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.ftpwrapper.__init__", "future.backports.urllib.request.ftpwrapper.init", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.HTTPSHandler.__init__", "future.backports.urllib.request.HTTPSHandler.https_open", "time", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.CacheFTPHandler.check_cache", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.Request.is_unverifiable", "time.time"], "abc": [], "numpy.ma.core.prod": ["numpy", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._check_mask_axis", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy._NoValue"], "torch.tensor.Tensor.__floordiv__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.floor_divide", "torch._C._TensorBase"], "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_LoadFromFile", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_LoadFromFile"], "torch.long": ["numpy.compat.py3k.long", "past.builtins.__init__.long", "past.types.__init__.long"], "transformers.pipelines.TranslationPipeline.__call__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.pipelines.ConversationalPipeline._clean_padding_history", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines.ConversationalPipeline._concat_inputs_history", "tensorflow", "tensorflow.shape"], "transformers.data.processors.utils.SingleSentenceClassificationProcessor": ["transformers.data.processors.utils.DataProcessor"], "tqdm.std.Bar.__init__": ["warnings.warn", "tqdm.std.TqdmWarning", "tqdm.std.Bar.colour", "tqdm.std.colour"], "numpy.ma.core.MaskedArray.__getitem__._scalar_heuristic": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mvoid", "numpy.ma.core.MaskedArray.__getitem__._is_scalar", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.__getitem__._is_scalar", "numpy.ma.core.MaskedArray.__getitem__._scalar_heuristic", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.__getitem__._scalar_heuristic", "numpy.ma.core.getmaskarray", "numpy.ma.core.is_string_or_list_of_strings", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.reshape", "numpy.ma.core.MaskedArray", "warnings", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ndarray.trace", "numpy.ndarray.__getitem__", "numpy.var", "numpy.void", "numpy.object_", "warnings.warn"], "tqdm.utils.Comparable": [], "urllib3._collections.HTTPHeaderDict.items": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "_weakref.proxy": [], "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls": ["future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "hashlib", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.CacheFTPHandler.setMaxConns", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.Request._parse", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.has_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.add_password", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "future.backports.urllib.request.HTTPSHandler.https_open", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.Request.add_header", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.get_header", "future.backports.urllib.request.OpenerDirector.add_handler", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_open", "future.backports.urllib.request.URLopener.__del__", "future.backports.urllib.request.URLopener.addheader", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.redirect_internal", "hashlib.md5", "hashlib.sha1"], "torch.jit.__init__.OrderedDictWrapper.values": ["torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique"], "urllib3.packages.six.iterkeys": ["urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six.Module_six_moves_urllib.__dir__"], "future.backports.urllib.request.HTTPPasswordMgr.find_user_password": ["future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi"], "future.backports.http.cookiejar.LWPCookieJar.save": ["future.backports.http.cookiejar.FileCookieJar", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.builtins.open"], "typing.Iterable": [], "tqdm.std.tqdm.set_description_str": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.refresh", "tqdm.std.refresh"], "torch.testing._internal.common_methods_invocations.NoArgsClass.__next__": ["torch.testing._internal.common_methods_invocations.NoArgsClass.__next__", "torch.testing._internal.common_methods_invocations.__next__"], "torch.nn.modules.container.Sequential.__dir__": ["torch.nn.modules.module.Module", "torch.nn.modules.container.ModuleDict.keys", "torch.nn.modules.container.ParameterDict.keys", "torch.nn.modules.container.keys", "torch.nn.modules.container.Sequential", "torch._jit_internal._copy_to_script_wrapper"], "collections.MutableMapping.itervalues": [], "future.backports.http.cookiejar.CookiePolicy.set_ok": [], "torch.utils.data.sampler.BatchSampler.__init__": ["torch.utils.data.sampler.Sampler", "torch._six.int_classes"], "future.builtins.list": ["future.builtins.__init__.list", "future.types.newlist"], "numpy._sanity_check": ["numpy.core.abs"], "future.backports.xmlrpc.client.Binary.__init__": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.builtins.bytes"], "future.backports.urllib.parse.DefragResult.geturl": ["future.backports.urllib.parse._ResultMixinStr"], "future.backports.urllib.request.ftpwrapper.__init__": ["future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host"], "torch._C": [], "future.backports.urllib.request.AbstractDigestAuthHandler.__init__": ["future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.HTTPPasswordMgr"], "numpy.core.multiarray._set_promotion_state": ["numpy.core.numeric._set_promotion_state", "numpy.core.multiarray._set_promotion_state", "numpy.core._multiarray_umath._set_promotion_state"], "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto"], "warnings": [], "numpy.ma.core.imag": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type"], "numpy.ma.core.MaskedArray.trace": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ndarray.trace", "numpy.var"], "numpy._globals.ModuleDeprecationWarning": [], "caffe2.python.schema.List": ["caffe2.python.schema.Field"], "future.backports.misc.copy": [], "future.backports.email.headerregistry.name": [], "numpy.lib.index_tricks.ndindex.__next__": ["numpy.core.overrides.set_module", "numpy.lib.index_tricks.ndenumerate.__next__", "numpy.lib.index_tricks.ndindex.__next__"], "caffe2.python.schema.Field._pprint_impl": [], "numpy.core.defchararray.argsort": [], "time.time": [], "transformers.pipelines.CsvPipelineDataFormat.__init__": ["transformers.pipelines.PipelineDataFormat", "typing.Optional", "transformers.pipelines.PipelineDataFormat.from_str"], "future.utils.__init__.PY2": ["future.utils.__init__.PY2", "past.utils.__init__.PY2"], "tqdm.std.tqdm.unpause": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet"], "torch.storage._StorageBase.pin_memory": ["torch", "torch.cuda"], "future.backports.xmlrpc.client.Unmarshaller.end_int": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.builtins.int", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "future.types.newrange.newrange.index": ["collections.Sequence", "collections.abc.Sequence"], "transformers.pipelines.Text2TextGenerationPipeline.__init__": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline", "transformers.pipelines.DefaultArgumentHandler.handle_kwargs", "transformers.pipelines.DefaultArgumentHandler.handle_args", "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING", "transformers.modeling_auto.MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING"], "future.backports.xmlrpc.client.Transport.get_host_info": ["future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.urllib.parse", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "base64", "base64.encodebytes", "future.backports.urllib.parse.splituser", "future.backports.urllib.parse.unquote_to_bytes"], "numpy.lib.polynomial.poly1d.fmt_float": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d.__sub__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.lib.polynomial.poly1d.__eq__"], "numpy.ndarray.view": [], "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsPieces", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__EncodeAsPieces"], "transformers.file_utils.add_end_docstrings": ["transformers.file_utils.docstring_decorator", "transformers.file_utils.add_start_docstrings.docstring_decorator", "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator", "transformers.file_utils.add_end_docstrings.docstring_decorator", "transformers.file_utils.add_code_sample_docstrings.docstring_decorator", "transformers.file_utils.replace_return_docstrings.docstring_decorator"], "future.backports.urllib.request.CacheFTPHandler.setTimeout": ["future.backports.urllib.request.FTPHandler", "future.backports.urllib.request.Request.__init__", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.Request.get_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.__init__", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.BaseHandler.__lt__", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.ProxyHandler.__init__", "future.backports.urllib.request.HTTPPasswordMgr.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.HTTPBasicAuthHandler.http_error_401", "future.backports.urllib.request.ProxyBasicAuthHandler.http_error_407", "future.backports.urllib.request.AbstractDigestAuthHandler.__init__", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_cnonce", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.HTTPDigestAuthHandler.http_error_401", "future.backports.urllib.request.ProxyDigestAuthHandler.http_error_407", "future.backports.urllib.request.AbstractHTTPHandler.__init__", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPHandler.http_open", "future.backports.urllib.request.HTTPCookieProcessor.__init__", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.FTPHandler.ftp_open", "future.backports.urllib.request.FTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.__init__", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.CacheFTPHandler.setMaxConns", "future.backports.urllib.request.CacheFTPHandler.connect_ftp", "future.backports.urllib.request.URLopener.__init__", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_http", "future.backports.urllib.request.URLopener.http_error", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.URLopener.open_ftp", "future.backports.urllib.request.URLopener.open_data", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.FancyURLopener.__init__", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.FancyURLopener.http_error_401", "future.backports.urllib.request.FancyURLopener.http_error_407", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.ftpwrapper.__init__", "future.backports.urllib.request.ftpwrapper.init", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.HTTPSHandler.__init__", "future.backports.urllib.request.HTTPSHandler.https_open"], "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter": ["torch.jit.__init__.ScriptModule"], "operator.mul": [], "torch.jit.__init__.ScriptModule": ["torch._six.with_metaclass", "torch.jit.__init__.ScriptMeta", "torch.nn.Module", "torch.jit.__init__.ONNXTracedModule.forward", "torch.jit.__init__.TracedModule.forward", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.forward", "torch.jit.__init__._CachedForward"], "future.backports.http.cookiejar.MozillaCookieJar.save": ["future.backports.http.cookiejar.FileCookieJar", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.builtins.open", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "time", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.builtins.str", "re.compile", "time.time"], "numpy.core.linspace": ["numpy.core.function_base.linspace", "numpy.array_api.__init__.linspace"], "future.backports.http.client.HTTPSConnection": ["future.backports.http.client.HTTPConnection"], "torch._jit_internal.RRefInstance": [], "numpy.lib.polynomial.poly1d.__rmul__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.core.isscalar", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polymul"], "tqdm.std.tqdm.external_write_mode": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.fp_write", "sys", "tqdm.std.EMA.__call__", "tqdm.std.Bar.__format__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.format_dict", "contextlib.contextmanager", "sys.stdout", "sys.stderr"], "joblib._dask._WeakKeyDictionary.on_destroy": [], "numpy.lib.polynomial.__div__": ["numpy.core.isscalar", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polydiv"], "urllib3.packages.six.itervalues": ["urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six.Module_six_moves_urllib.__dir__"], "collections.abc.Sequence": [], "torch.jit.__init__.TracedModule.check_unique": ["torch.jit.__init__.ScriptModule"], "joblib._dask.Batch.__init__": ["joblib._dask._make_tasks_summary"], "torch.int64": ["numpy.array_api.__init__.int64"], "transformers.data.datasets.glue.GlueDataTrainingArguments.__post_init__": ["dataclasses.dataclass", "dataclasses.field", "transformers.data.processors.glue.glue_processors", "transformers.data.processors.glue.glue_processors.keys"], "packaging.specifiers.BaseSpecifier": ["abc", "abc.ABCMeta"], "numpy.ma.core.MaskedArray._update_from": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ndarray.trace", "numpy.var"], "torch.utils.data.sampler.Sampler.__init__": [], "collections.abc.MutableMapping.update": [], "future.backports.urllib.request.Request.header_items": [], "numpy.matrixlib.defmatrix.matrix.A1": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "future.backports.http.cookies.set": ["future.backports.http.cookies.CookieError", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode"], "array.array": [], "numpy.ma.core.MaskedArray.__reduce__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._mareconstruct", "numpy.ndarray.trace", "numpy.var"], "numpy.ma.core._DomainGreaterEqual.__call__": ["numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy", "numpy.core.umath", "numpy.core.umath.less", "numpy.errstate"], "numpy.abs": ["numpy.ma.core.abs", "numpy.array_api.__init__.abs", "numpy.core.abs"], "future.backports.xmlrpc.client.dump_unicode": ["future.backports.xmlrpc.client.escape", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "future.backports.xmlrpc.client.dump_long": ["future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int"], "google.protobuf.internal.type_checkers.FloatValueChecker": ["google.protobuf.internal.type_checkers.DoubleValueChecker"], "torch._namedtensor_internals.resolve_ellipsis": ["torch._namedtensor_internals.single_ellipsis_index", "torch._namedtensor_internals.replace_ellipsis_by_position"], "numpy.ma.core.is_mask": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__"], "os.add_dll_directory": [], "future.backports.misc.count": [], "gzip": [], "_sentencepiece.SentencePieceProcessor_eos_id": [], "types.MethodType": [], "_sentencepiece.SentencePieceProcessor_swiginit": [], "urllib3.packages.six.u": ["urllib3.packages.six.MovedModule._resolve", "urllib3.packages.six.MovedAttribute._resolve", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.is_package"], "future.types.newrange.newrange.__init__": ["collections.Sequence", "collections.abc.Sequence", "future.types.newrange.newrange.__len__", "future.types.newrange.newrange.start", "future.types.newrange.start", "future.types.newrange.newrange.stop", "future.types.newrange.stop", "future.types.newrange.newrange.step", "future.types.newrange.step"], "numpy.ma.core.MaskedArray.argsort": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._deprecate_argsort_axis", "numpy.ma.core.maximum_fill_value", "numpy.ma.core.minimum_fill_value", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue", "numpy.issubdtype", "numpy.floating", "numpy.nan"], "future.backports.xmlrpc.client.Unmarshaller.end_params": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "numpy.lib.polynomial.polyadd": ["numpy.lib.polynomial.poly1d", "numpy.core.atleast_1d", "numpy.lib.polynomial.poly1d.__len__", "numpy.core.numeric", "numpy.core.abs", "numpy.lib.polynomial._binary_op_dispatcher", "numpy.core.numeric.zeros", "numpy.core.numeric.concatenate"], "urllib3.packages.six._update_wrapper": ["functools", "urllib3.packages.six.MovedModule.__getattr__", "urllib3.packages.six.wrapper", "urllib3.packages.six.add_metaclass.wrapper", "functools.WRAPPER_ASSIGNMENTS", "functools.WRAPPER_UPDATES"], "numpy.ma.core.MaskedConstant.__array_prepare__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "numpy.polynomial._polybase.ABCPolyBase.__rtruediv__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus": ["transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "os", "glob", "os.path", "glob.glob"], "numpy.lib.shape_base.__all__": [], "google.protobuf.internal.wire_format.BytesByteSize": ["google.protobuf.internal.wire_format.TagByteSize", "google.protobuf.internal.wire_format._VarUInt64ByteSizeNoTag"], "numbers.Number": [], "asyncio.Task": [], "torch._six.with_metaclass": ["torch._six.metaclass"], "caffe2.python.schema.Scalar.all_scalars": ["caffe2.python.schema.Field"], "urllib3.packages.six.indexbytes": ["urllib3.packages.six._LazyDescr.__init__", "urllib3.packages.six.MovedModule.__init__", "urllib3.packages.six._LazyModule.__init__", "urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six.MovedAttribute.__init__", "urllib3.packages.six._SixMetaPathImporter.__init__", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.is_package", "urllib3.packages.six.Module_six_moves_urllib.__dir__"], "joblib.parallel.parallel_config": [], "numpy.core.multiply": ["numpy.ma.core.multiply", "numpy.core.defchararray.multiply", "numpy.core.umath.multiply", "numpy.array_api.__init__.multiply"], "numpy.core.abs": ["numpy.ma.core.abs", "numpy.array_api.__init__.abs", "numpy.core.numeric.absolute"], "numpy.lib.type_check": ["functools", "numpy.core.overrides", "numpy.core.numeric", "functools.partial", "numpy.core.overrides.array_function_dispatch", "numpy.core.numeric.half", "numpy.core.numeric.single", "numpy.core.numeric.double", "numpy.core.numeric.longdouble", "numpy.core.numeric.csingle", "numpy.core.numeric.cdouble", "numpy.core.numeric.clongdouble"], "future.backports.email.headerregistry.value_parser": ["future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.get_address_list"], "caffe2.python._import_c_extension.fetch_blob": [], "future.backports.email.message.Message.get_content_subtype": [], "torch.int8": ["numpy.array_api.__init__.int8"], "numpy._typing._generic_alias._GenericAlias.__dir__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__dir__"], "typing.BinaryIO": [], "future.backports.test.support.EnvironmentVarGuard.keys": [], "numpy.polynomial._polybase.ABCPolyBase.has_samecoef": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.__len__", "numpy", "abc.ABC", "numpy.all", "os.name"], "future.backports.urllib.parse._NetlocResultMixinBytes": ["future.backports.urllib.parse._NetlocResultMixinBase", "future.backports.urllib.parse._ResultMixinBytes"], "numpy._typing._generic_alias._GenericAlias.__eq__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__getattribute__"], "numpy.concatenate": ["numpy.ma.core.concatenate", "numpy.core.numeric.concatenate", "numpy.core.multiarray.concatenate"], "numpy.ma.core.__iadd__": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.getdata", "numpy", "numpy.where"], "operator": [], "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "sentencepiece.__init__._surface", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__._end", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__surface", "_sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__surface"], "pandas.core.groupby.GroupBy": [], "hashlib.md5": [], "google.protobuf.internal.encoder.StringSizer": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "torch.jit.__init__._CachedForward": [], "dask.distributed.secede": [], "transformers.pipelines.PipedPipelineDataFormat": ["transformers.pipelines.PipelineDataFormat"], "socket.error": [], "google.protobuf.descriptor": ["threading", "google.protobuf.descriptor._Deprecated", "google.protobuf.internal.api_implementation", "google.protobuf.descriptor.DescriptorMetaclass", "threading.Lock", "google.protobuf.internal.api_implementation.Type"], "pandas.core.groupby.groupby.DataFrameGroupBy": [], "ftplib.FTP_PORT": [], "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsSerializedProtoBatch": [], "google.protobuf.internal.encoder.UInt64Encoder": [], "dask.distributed.get_client": [], "re.subn": [], "future.backports.http.client.HTTPException": [], "future.backports.urllib.parse._noop": [], "numpy.core.atleast_1d": ["numpy.ma.extras.atleast_1d", "numpy.core.shape_base.atleast_1d"], "joblib._dask._WeakKeyDictionary.clear": [], "numpy.f2py.symbolic.Expr.__str__": [], "numpy.ma.core.MaskedConstant.__array_finalize__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "numpy.core.numerictypes.clongfloat": [], "numpy.fromfile": ["numpy.core.numeric.fromfile", "numpy.core.records.fromfile", "numpy.core.multiarray.fromfile"], "future.backports.http.cookiejar.unmatched": ["future.backports.http.cookiejar.CookieJar.no_matching_rfc2965"], "numpy.core.multiarray.busday_count": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.busday_count"], "tqdm.std.tqdm.set_postfix_str": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.display", "tqdm.std.tqdm.print_status", "tqdm.std.refresh"], "torch.random.manual_seed": ["torch.random.seed", "torch._C.default_generator", "torch._C.default_generator.manual_seed"], "numpy.core.overrides": ["numpy.core._multiarray_umath._get_implementing_args", "collections", "os", "collections.namedtuple", "os.environ"], "google.protobuf.internal.wire_format.SInt32ByteSize": ["google.protobuf.internal.wire_format.UInt32ByteSize", "google.protobuf.internal.wire_format.ZigZagEncode"], "numpy.ma.core._DomainGreater.__init__": [], "urllib3.packages.six.get_unbound_function": [], "os.system": [], "sentencepiece._sentencepiece.SentencePieceProcessor_pad_id": [], "tqdm.std.tqdm.inner_generator.inner": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.pandas.inner", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner_generator.inner", "tqdm.std.tqdm.inner", "tqdm.std.pandas.inner_generator.inner", "pandas.core.series.Series", "tqdm.std.tqdm.__len__", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status", "tqdm.std.TqdmDeprecationWarning", "sys", "pandas.core.common.is_builtin_func", "tqdm.std.tqdm.pandas.wrapper", "tqdm.std.tqdm.inner_generator.wrapper", "tqdm.std.tqdm.inner.wrapper", "tqdm.std.tqdm.wrapper", "tqdm.std.pandas.inner_generator.wrapper", "sys.stderr"], "numpy.ma.core.array": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value"], "future.backports.xmlrpc.client.__str__": ["future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str"], "urllib3.packages.six.MovedModule.__init__": ["urllib3.packages.six._LazyDescr", "urllib3.packages.six.MovedModule", "urllib3.packages.six.metaclass.__new__"], "torch.double": [], "future.backports.http.cookiejar.strip_quotes": [], "torch.utils.data._utils": ["torch.utils.data._utils._set_python_exit_flag", "sys", "atexit", "atexit.register", "sys.platform"], "pandas.core.groupby.PanelGroupBy.progress_apply": [], "tqdm.std.tqdm.reset": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.EMA"], "caffe2.python.schema.Struct._struct_from_nested_name": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct._struct_from_nested_name.create_internal", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema._struct_from_nested_name.create_internal", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field"], "tqdm.std.TqdmDeprecationWarning": ["tqdm.std.TqdmWarning"], "numpy.polynomial._polybase.ABCPolyBase.__floordiv__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "google.protobuf.internal.well_known_types.Struct.get_or_create_struct": ["google.protobuf.internal.well_known_types.Struct.keys"], "urllib3.packages.six._LazyModule.__dir__": ["types", "urllib3.packages.six.MovedModule.__getattr__", "types.ModuleType"], "torch.cuda.LongStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "numpy.ma.core.MaskedArray.__sub__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "numpy.ma.core.MaskedConstant.__array_wrap__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "requests.cookies.RequestsCookieJar.iterkeys": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.set_cookie", "requests.cookies.RequestsCookieJar.iterkeys", "requests.cookies.RequestsCookieJar.itervalues", "requests.cookies.RequestsCookieJar.iteritems", "requests.compat.cookielib.CookieJar"], "hashlib": [], "caffe2.python.schema.Field.has_blobs": [], "numpy.f2py.symbolic.RelOp.fromstring": ["enum.Enum", "numpy.f2py.symbolic.Language", "numpy.f2py.symbolic.RelOp", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore"], "future.backports.urllib.parse.splituser": ["future.backports.urllib.parse.Quoter.__repr__", "re", "future.backports.urllib.parse._NetlocResultMixinBase.hostname", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "re.compile"], "numpy.core.fromnumeric": ["numpy.core.fromnumeric.sum", "types", "functools", "numpy.core.overrides", "numpy.core.numerictypes", "numpy.core.numerictypes.sctype2char", "types.GeneratorType", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "caffe2.python.schema.Scalar.set_type": ["caffe2.python.schema.Field", "numpy", "numpy.dtype", "numpy.void"], "numpy.lib.index_tricks": ["numpy.lib.index_tricks.ndenumerate.__iter__", "numpy.lib.index_tricks.ndindex.__iter__", "numpy.lib.index_tricks.MGridClass", "numpy.lib.index_tricks.OGridClass", "numpy.lib.index_tricks.RClass", "numpy.lib.index_tricks.CClass", "numpy.lib.index_tricks.IndexExpression", "functools", "numpy.core.overrides", "functools.partial", "numpy.core.overrides.array_function_dispatch", "numpy.core.multiarray.ravel_multi_index", "numpy.core.multiarray.unravel_index"], "inspect.ismethoddescriptor": [], "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__": ["transformers.tokenization_transfo_xl.LMShuffledIterator", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.save_vocabulary", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.get_vocab"], "numpy.lib.ufunclike": [], "pandas.core.groupby.generic.SeriesGroupBy.progress_apply": [], "google.protobuf.pyext._message.Message": [], "os.unlink": [], "numpy.core.numeric._ones_dispatcher": [], "numpy.core._multiarray_umath.tracemalloc_domain": [], "numpy.core.records": ["numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.numeric", "numpy.core.numeric.ndarray", "numpy.core.numerictypes.sctypeDict"], "tqdm.std.tqdm.status_printer.fp_write": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.fp_write", "sys", "tqdm.std.tqdm.status_printer.print_status", "tqdm.std.tqdm.print_status", "tqdm.std.status_printer.print_status", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.display", "sys.stderr", "sys.stdout"], "future.backports.xmlrpc.client.Transport.getparser": ["future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.getparser"], "google.protobuf.internal.decoder.StringDecoder": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder._ConvertToUnicode", "google.protobuf.internal.decoder.StringDecoder._ConvertToUnicode", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "future.backports.urllib.request.clear_cache": ["future.backports.urllib.request.FTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.connect_ftp", "future.backports.urllib.request.URLopener._https_connection"], "numpy.core.multiarray.set_numeric_ops": ["numpy.core.numeric.set_numeric_ops", "numpy.core.multiarray.set_numeric_ops"], "future.backports.urllib.request.ProxyDigestAuthHandler.http_error_407": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.AbstractDigestAuthHandler", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth"], "shutil.rmtree": [], "google.protobuf.internal.decoder.Int64Decoder": [], "numpy.linalg.eigvals": ["numpy.dual.eigvals", "numpy.linalg.linalg.eigvals"], "torch.utils.hooks.RemovableHandle": [], "_sentencepiece.ImmutableSentencePieceText_SerializeAsString": [], "future.backports.urllib.parse.unquote_to_bytes": ["future.builtins.bytes", "future.builtins.str"], "sys.version_info": [], "torch.autograd._functions.Resize.apply": [], "caffe2.python.extension_loader.DlopenGuard": ["ctypes", "sys", "contextlib", "sys.getdlopenflags", "sys.setdlopenflags", "ctypes.RTLD_GLOBAL", "contextlib.contextmanager"], "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__": ["transformers.tokenization_transfo_xl.TransfoXLTokenizer"], "numpy.core.numerictypes._construct_lookups": ["numpy.core._type_aliases._concrete_typeinfo", "numpy.core._type_aliases._concrete_typeinfo.items"], "future.backports.email.utils": ["future.utils", "re", "future.utils.PY2", "re.compile", "re.ASCII", "re.VERBOSE", "re.IGNORECASE", "future.backports.email._parseaddr.mktime_tz", "future.backports.email._parseaddr.parsedate", "future.backports.email._parseaddr.parsedate_tz"], "future.backports.email._header_value_parser.parse_content_type_header": ["future.backports.email._header_value_parser.ContentType", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.get_token", "future.backports.email._header_value_parser._find_mime_parameters", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.parse_mime_parameters", "future.backports.email.errors.HeaderMissingRequiredValue", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "torch.FloatStorage": ["torch.storage._StorageBase"], "torch.utils.data._utils.pin_memory": [], "urllib3.packages.six.MovedModule.__getattr__": ["urllib3.packages.six._LazyDescr", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six.MovedModule.__getattr__"], "inspect": [], "mimetypes": [], "tqdm.std.close.fp_write": ["tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.status_printer.fp_write", "tqdm.std.tqdm.close.fp_write", "tqdm.std.tqdm.fp_write", "tqdm.std.status_printer.fp_write", "tqdm.std.close.fp_write", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm._decr_instances", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__del__", "tqdm.std.tqdm._comparable", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.close", "tqdm.std.tqdm.clear", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.std.tqdm.wrapper", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.display", "tqdm.std.tqdm.print_status"], "numpy.empty": ["numpy.ma.core.empty", "numpy.core.numeric.empty", "numpy.core.multiarray.empty", "numpy.array_api.__init__.empty"], "numpy.core.multiarray.RAISE": ["numpy.core.numeric.RAISE", "numpy.core.multiarray.RAISE"], "torch.ShortStorage": ["torch.storage._StorageBase"], "numpy.ma.core._DomainTan.__init__": [], "numpy.ma.core.recordmask": ["numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ndarray", "numpy", "numpy.ma.core.flatten_structured_array", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.recordmask", "numpy.all"], "numpy.f2py.symbolic.as_number": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.OpError"], "numpy.ma.core._DomainGreater.__call__": ["numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy", "numpy.core.umath", "numpy.core.umath.less_equal", "numpy.errstate"], "tqdm.notebook.tqdm_notebook.display": ["tqdm.std.tqdm", "tqdm.notebook.tqdm_notebook.display", "tqdm.notebook.tqdm_notebook.update", "tqdm.notebook.tqdm_notebook.close", "tqdm.notebook.close", "html.escape", "tqdm.notebook.TqdmHBox.__repr__", "tqdm.notebook.TqdmHBox._repr_pretty_", "tqdm.notebook.tqdm_notebook.reset", "re", "tqdm.notebook.display", "IPython.display.display", "re.split"], "packaging.specifiers.Specifier._compare_greater_than_equal": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier._canonical_spec", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.core.numeric.floating": [], "numpy._typing._generic_alias._GenericAlias.__parameters__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__", "typing.TypeVar"], "future.backports.urllib.request.ProxyBasicAuthHandler.http_error_407": ["future.backports.urllib.request.AbstractBasicAuthHandler", "future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response"], "torch.jit.annotations.Tuple": ["torch.jit.annotations.Tuple", "torch._jit_internal.Tuple"], "past.types.__init__.long": ["numpy.compat.py3k.long", "past.builtins.__init__.long", "past.types.__init__.long"], "torch.utils.data._utils.worker": ["torch.utils.data._utils.IS_WINDOWS", "collections.namedtuple"], "torch.tensor.Tensor.__rsub__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase", "torch._C._VariableFunctions"], "requests.cookies.RequestsCookieJar.list_paths": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.list_paths", "requests.cookies.RequestsCookieJar.set_cookie", "requests.cookies.RequestsCookieJar.iterkeys", "requests.cookies.RequestsCookieJar.itervalues", "requests.cookies.RequestsCookieJar.iteritems", "requests.compat.cookielib.CookieJar"], "torch._namedtensor_internals.is_ellipsis": ["torch._six.PY2"], "numpy.ma.core.MaskedConstant.__has_singleton": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type"], "operator.index": [], "future.backports.email.headerregistry.BaseHeader._reconstruct": ["future.backports.email.headerregistry.Address.__str__", "future.backports.email.headerregistry.Group.__str__", "future.backports.email.headerregistry.BaseHeader._reconstruct", "future.builtins.str", "future.backports.email.headerregistry.AddressHeader.value_parser", "future.builtins.str.__new__"], "google.protobuf.internal.encoder.StringEncoder": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "caffe2.python.schema.List.has_blobs": ["caffe2.python.schema.Field"], "numpy.random.__init__.multinomial": ["numpy.random.__init__.multinomial"], "google.protobuf.internal.type_checkers.TypeCheckerWithDefault": ["google.protobuf.internal.type_checkers.TypeChecker"], "numpy.ma.core": ["numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.lib.function_base.angle", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.isMaskedArray", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core.MaskedArray.all", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.all", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.anom", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.any", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.compress", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.cumprod", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.cumsum", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.harden_mask", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.ids", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.mean", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.ravel", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.shrink_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.soften_mask", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.std", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.sum", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.count", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.argmax", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.round", "numpy.ma.core.round_", "numpy.ma.core.inner", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.outer", "numpy.ma.core._MaskedUnaryOperation", "numpy.ma.core._MaskedBinaryOperation", "numpy.ma.core._DomainedBinaryOperation", "numpy.ma.core._MaskedPrintOption", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.max", "numpy.ma.core.MaskedArray.ptp", "numpy.ma.core.ptp", "numpy.ma.core._frommethod", "numpy.ma.core._extrema_operation", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.argsort", "numpy.ma.core.ndim", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.size", "numpy.ma.core.doc_note", "numpy.ma.core._convert2ma", "numpy.ma.core._DomainGreaterEqual", "numpy.ma.core._DomainGreater", "numpy.ma.core._DomainTan", "numpy.ma.core._DomainCheckInterval", "numpy.core.umath", "numpy.ma.core._DomainSafeDivide", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.nonzero", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.shape", "textwrap", "numpy.ma.core.getdata", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.array", "numpy.ma.core.MaskedArray.view", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.MaskedConstant", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.maximum_fill_value", "numpy.ma.core.MaskedArray", "numpy.ma.core.minimum_fill_value", "numpy.core.numerictypes", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy", "numpy.datetime64", "numpy.timedelta64", "numpy.half", "numpy.single", "numpy.double", "numpy.longdouble", "numpy.csingle", "numpy.cdouble", "numpy.clongdouble", "numpy.ndim", "numpy.size", "numpy.round_", "numpy.inf", "numpy.inner", "numpy.outer", "numpy.bool_", "numpy.shape", "numpy.core.numerictypes._minvals", "numpy.core.numerictypes._maxvals", "numpy.core.umath.exp", "numpy.core.umath.conjugate", "numpy.core.umath.sin", "numpy.core.umath.arctan", "numpy.core.umath.arcsinh", "numpy.core.umath.sinh", "numpy.core.umath.cosh", "numpy.core.umath.tanh", "numpy.core.umath.fabs", "numpy.core.umath.negative", "numpy.core.umath.floor", "numpy.core.umath.ceil", "numpy.core.umath.sqrt", "numpy.core.umath.log", "numpy.core.umath.log2", "numpy.core.umath.log10", "numpy.core.umath.tan", "numpy.core.umath.arcsin", "numpy.core.umath.arccos", "numpy.core.umath.arccosh", "numpy.core.umath.arctanh", "numpy.core.umath.add", "numpy.core.umath.subtract", "numpy.core.umath.arctan2", "numpy.core.umath.not_equal", "numpy.core.umath.greater_equal", "numpy.core.umath.logical_xor", "numpy.core.umath.bitwise_and", "numpy.core.umath.bitwise_or", "numpy.core.umath.bitwise_xor", "numpy.core.umath.hypot", "numpy.core.umath.divide", "numpy.core.umath.true_divide", "numpy.core.umath.floor_divide", "numpy.core.umath.remainder", "numpy.core.umath.fmod", "numpy.core.umath.mod", "numpy.core.umath.maximum", "numpy.core.umath.minimum", "numpy.core.umath.logical_and", "numpy.core.umath.less_equal", "numpy.core.umath.multiply", "numpy.core.umath.equal", "numpy.core.umath.greater", "numpy.core.umath.less", "numpy.core.umath.cos", "numpy.core.umath.logical_or", "numpy.core.umath.absolute", "numpy.core.umath.logical_not", "textwrap.dedent", "numpy.amax", "numpy.amin", "numpy.expand_dims"], "numpy.lib.type_check.__all__": [], "future.backports.urllib.parse.hostname": ["future.backports.urllib.parse._NetlocResultMixinBase.hostname", "future.backports.urllib.parse.hostname"], "numpy.array_api.__init__.int64": ["numpy.array_api.__init__.int64", "numpy.array_api._dtypes.int64"], "caffe2.python.schema.Struct.__init__": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema._normalize_field", "collections.OrderedDict", "caffe2.python.schema.Struct", "caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.Scalar.id", "caffe2.python.schema.id", "caffe2.python.schema.Field.__init__", "caffe2.python.schema.Field.clone_schema", "caffe2.python.schema.Field.all_scalars", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.Field._set_parent", "caffe2.python.schema.Field.__eq__", "caffe2.python.schema.Field._pprint_impl", "caffe2.python.schema.Field.__repr__", "caffe2.python.schema.List.__init__", "caffe2.python.schema.List.all_scalars", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.List._pprint_impl", "caffe2.python.schema.List.__getattr__", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__init__", "caffe2.python.schema.ListWithEvicted.all_scalars", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.ListWithEvicted._pprint_impl", "caffe2.python.schema.ListWithEvicted.__getattr__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__init__", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema.Struct.all_scalars", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Struct._pprint_impl", "caffe2.python.schema.Struct.__contains__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct.__getattr__", "caffe2.python.schema.Struct.__setattr__", "caffe2.python.schema.Struct.__add__", "caffe2.python.schema.Struct.__sub__", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema.Scalar.__init__", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.all_scalars", "caffe2.python.schema.Scalar.__call__", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Scalar._pprint_impl", "caffe2.python.schema._SchemaNode.__init__", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema._SchemaNode.print_recursively", "future.utils.viewitems", "future.utils.viewvalues"], "torch.HalfStorage": ["torch.storage._StorageBase"], "numpy.ma.core.MaskedConstant.__new__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy", "numpy.array"], "numpy.core.numeric.logical_or": ["numpy.ma.core.logical_or", "numpy.core.umath.logical_or", "numpy.array_api.__init__.logical_or"], "past.builtins.__init__.filter": ["future.builtins.iterators.filter", "future.builtins.__init__.filter", "past.builtins.noniterators.filter", "past.builtins.__init__.filter"], "numpy.ma.core._extrema_operation.__init__": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value"], "numpy.ma.core._extrema_operation.__call__": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.where", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes"], "numpy.polynomial._polybase.ABCPolyBase.window": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "sentencepiece._sentencepiece.SentencePieceProcessor_eos_id": [], "_sentencepiece.ImmutableSentencePieceText_swiginit": [], "caffe2.python.schema.metadata": [], "future.backports.http.cookies.BaseCookie": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output"], "asyncio.sleep": [], "numpy.lib.npyio.__all__": [], "numpy.array_api._array_object.Array.dtype": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._typing.Dtype", "numpy.ndarray"], "click.termui.visible_prompt_func": [], "_sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece": [], "joblib._dask.DaskDistributedBackend": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "asyncio.sleep", "asyncio.Task"], "builtins.int": [], "numpy.argmax": ["numpy.ma.core.argmax", "numpy.core.fromnumeric.argmax", "numpy.array_api.__init__.argmax"], "tqdm.std.tqdm.inner_generator.wrapper": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.pandas.inner", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner_generator.inner", "tqdm.std.tqdm.inner", "tqdm.std.pandas.inner_generator.inner", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status"], "pandas.core.groupby.groupby.GroupBy.progress_aggregate": [], "future.backports.xmlrpc.client.Transport.send_request": ["future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.send_headers", "gzip"], "numpy.f2py.symbolic._Pair.__repr__": [], "encodings.aliases.aliases": [], "tqdm.std.tqdm.wrapper": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator"], "transformers.modeling_auto.MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING": [], "tqdm._monitor.TMonitor": ["threading.Thread"], "torch.cuda.device_of.__init__": ["torch.cuda.device", "torch.cuda.device_of"], "sys.exit": [], "numpy.core.multiarray.broadcast": ["torch.cuda.nccl.broadcast", "numpy.core.numeric.broadcast", "numpy.core.multiarray.broadcast"], "transformers.tokenization_bert.BasicTokenizer": [], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data"], "numpy.matrixlib.defmatrix": ["numpy.matrixlib.defmatrix.asmatrix"], "google.protobuf.internal.wire_format.EnumByteSize": ["google.protobuf.internal.wire_format.UInt32ByteSize"], "numpy.ma.core._recursive_printoption": ["numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core._recursive_printoption", "numpy", "numpy.copyto"], "future.backports.http.cookiejar.join_header_words": ["future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookiePolicy.set_ok", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_blocked", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar.add_cookie_header", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._process_rfc2109_cookies", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.clear_session_cookies", "future.backports.http.cookiejar.CookieJar.clear_expired_cookies", "future.backports.http.cookiejar.FileCookieJar.save", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar.save", "future.backports.http.cookiejar.MozillaCookieJar.save", "future.backports.http.cookiejar.Cookie.is_expired", "future.backports.http.cookiejar.Cookie.__repr__", "future.backports.http.cookiejar.CookieJar.__repr__", "future.backports.http.cookiejar.LWPCookieJar._really_load", "future.backports.http.cookiejar.MozillaCookieJar._really_load", "re", "re.search"], "torch.cuda.ShortStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "os.close": [], "typing.Optional": [], "joblib._dask.effective_n_jobs": ["joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.effective_n_jobs", "distributed.utils.TimeoutError", "tornado.gen.TimeoutError", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.__len__", "joblib._dask._WeakKeyDictionary.clear", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__repr__", "joblib._dask.DaskDistributedBackend.__reduce__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask._joblib_probe_task"], "numpy.array_api._array_object.Array._check_allowed_dtypes": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array.__str__", "numpy.array_api._array_object.Array", "numpy.array_api._array_object.Array.__float__", "numpy.array_api._array_object.Array.__bool__", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._dtypes._dtype_categories", "numpy.array_api._dtypes._result_type", "numpy.ndarray"], "sentencepiece._sentencepiece.SentencePieceProcessor_LoadFromSerializedProto": [], "future.backports.xmlrpc.client.Marshaller.dump_double": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.utils.ensure_new_type", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "numpy.core.numeric._identity_dispatcher": [], "transformers.modeling_auto.MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING": [], "io.BytesIO": [], "caffe2.python.schema.Scalar.set": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.field_blobs", "past.builtins.basestring", "numpy", "caffe2.python.core.BlobReference", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.List.field_types", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.metadata", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.metadata", "numpy.dtype", "numpy.void", "numpy.ndarray", "numpy.array"], "torch.random.initial_seed": ["torch._C.default_generator", "torch._C.default_generator.initial_seed"], "tqdm.std.tqdm.pandas.wrapper": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "pandas.Panel", "warnings.catch_warnings", "warnings.simplefilter", "pandas.core.window.rolling.Rolling", "pandas.core.window.expanding.Expanding", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "pandas.core.groupby.groupby.PanelGroupBy", "pandas.core.groupby.PanelGroupBy", "pandas.core.series.Series", "tqdm.std.tqdm.pandas.inner_generator", "tqdm.std.tqdm.inner_generator", "tqdm.std.pandas.inner_generator", "pandas.core.groupby.generic.SeriesGroupBy", "pandas.core.groupby.groupby.SeriesGroupBy", "pandas.core.groupby.SeriesGroupBy", "pandas.core.frame.DataFrame", "pandas.core.groupby.generic.DataFrameGroupBy", "pandas.core.groupby.groupby.DataFrameGroupBy", "pandas.core.groupby.DataFrameGroupBy", "pandas.core.groupby.groupby.GroupBy", "pandas.core.groupby.GroupBy", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status", "pandas.Panel.progress_apply", "pandas.core.groupby.generic.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.PanelGroupBy.progress_apply", "pandas.core.groupby.PanelGroupBy.progress_apply", "pandas.core.series.Series.progress_apply", "pandas.core.series.Series.progress_map", "pandas.core.window.rolling.Rolling.progress_apply", "pandas.core.window.rolling._Rolling_and_Expanding.progress_apply", "pandas.core.window._Rolling_and_Expanding.progress_apply", "pandas.core.window.expanding.Expanding.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.groupby.GroupBy.progress_transform", "pandas.core.groupby.GroupBy.progress_apply", "pandas.core.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.GroupBy.progress_transform", "pandas.core.frame.DataFrame.progress_apply", "pandas.core.frame.DataFrame.progress_applymap", "pandas.core.groupby.generic.SeriesGroupBy.progress_apply", "pandas.core.groupby.generic.SeriesGroupBy.progress_map", "pandas.core.groupby.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.groupby.SeriesGroupBy.progress_map", "pandas.core.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.SeriesGroupBy.progress_map"], "_sentencepiece.SentencePieceProcessor_unk_id": [], "transformers.tokenization_auto.AutoTokenizer": [], "torch._six": ["itertools", "torch._six.exec_", "collections", "StringIO", "math", "__builtin__", "builtins", "sys", "io", "math.inf", "math.nan", "__builtin__.FileNotFoundError", "builtins.FileNotFoundError", "itertools.imap", "StringIO.StringIO", "sys.version_info", "collections.abc", "io.StringIO"], "numpy.core.umath.logical_and": ["numpy.ma.core.logical_and", "numpy.core.umath.logical_and", "numpy.array_api.__init__.logical_and"], "winreg.HKEY_CURRENT_USER": [], "shutil": [], "future.backports.urllib.request.localhost": ["socket", "socket.gethostbyname"], "future.backports.urllib.request.Request.add_header": [], "numpy.int64": ["numpy.array_api.__init__.int64"], "dask.sizeof.sizeof": [], "torch.cuda.HalfStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "dataclasses.dataclass": [], "tqdm.std.tqdm.pandas.inner_generator": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "pandas.Panel", "warnings.catch_warnings", "warnings.simplefilter", "pandas.core.window.rolling.Rolling", "pandas.core.window.expanding.Expanding", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "pandas.core.groupby.groupby.PanelGroupBy", "pandas.core.groupby.PanelGroupBy", "pandas.core.series.Series", "tqdm.std.tqdm.pandas.inner_generator", "tqdm.std.tqdm.inner_generator", "tqdm.std.pandas.inner_generator", "pandas.core.groupby.generic.SeriesGroupBy", "pandas.core.groupby.groupby.SeriesGroupBy", "pandas.core.groupby.SeriesGroupBy", "pandas.core.frame.DataFrame", "pandas.core.groupby.generic.DataFrameGroupBy", "pandas.core.groupby.groupby.DataFrameGroupBy", "pandas.core.groupby.DataFrameGroupBy", "pandas.core.groupby.groupby.GroupBy", "pandas.core.groupby.GroupBy", "tqdm.std.tqdm.pandas.inner", "tqdm.std.tqdm.inner_generator.inner", "tqdm.std.tqdm.inner", "tqdm.std.pandas.inner_generator.inner", "pandas.Panel.progress_apply", "pandas.core.groupby.generic.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.PanelGroupBy.progress_apply", "pandas.core.groupby.PanelGroupBy.progress_apply", "pandas.core.series.Series.progress_apply", "pandas.core.series.Series.progress_map", "pandas.core.window.rolling.Rolling.progress_apply", "pandas.core.window.rolling._Rolling_and_Expanding.progress_apply", "pandas.core.window._Rolling_and_Expanding.progress_apply", "pandas.core.window.expanding.Expanding.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.groupby.GroupBy.progress_transform", "pandas.core.groupby.GroupBy.progress_apply", "pandas.core.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.GroupBy.progress_transform", "pandas.core.frame.DataFrame.progress_apply", "pandas.core.frame.DataFrame.progress_applymap", "pandas.core.groupby.generic.SeriesGroupBy.progress_apply", "pandas.core.groupby.generic.SeriesGroupBy.progress_map", "pandas.core.groupby.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.groupby.SeriesGroupBy.progress_map", "pandas.core.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.SeriesGroupBy.progress_map"], "future.backports.xmlrpc.client.Fault.__repr__": ["future.backports.xmlrpc.client.Error", "future.utils.ensure_new_type"], "numpy.ma.core._DomainGreaterEqual.__init__": [], "future.backports.email.headerregistry.ParameterizedMIMEHeader": [], "google.protobuf.internal.encoder.Int64Encoder": [], "numpy.core.numerictypes.half": [], "numpy.ma.core.mvoid.tolist": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__"], "joblib.parallel.ParallelBackendBase": ["joblib._parallel_backends.ParallelBackendBase"], "numpy.array_api._array_object.dtype": ["numpy.array_api._typing.Dtype"], "numpy.core.multiarray.set_typeDict": ["numpy.core.multiarray.set_typeDict"], "future.backports.email.message.Message.get_param": ["future.backports.email.message.Message.add_header", "future.backports.email.message.Message.replace_header", "future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.get_param", "future.backports.email.message.Message.set_param", "future.backports.email.message.Message.del_param", "future.backports.email.message._unquotevalue"], "numpy.ma.core._shrink_mask": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__"], "future.backports.http.client.BadStatusLine": ["future.backports.http.client.HTTPException"], "tensorflow.constant": [], "packaging.specifiers.BaseSpecifier.prereleases": ["abc", "typing.Optional", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.prereleases", "abc.ABCMeta", "abc.abstractmethod"], "numpy._typing._generic_alias._GenericAlias.__hash__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__hash__"], "regex.compile": ["numpy.f2py.__init__.compile", "regex.regex.compile"], "DLFCN": [], "math.cos": [], "future.backports.urllib.request.FTPHandler": ["future.backports.urllib.request.BaseHandler"], "click._compat.WIN": [], "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesAsSerializedProtoBatch": [], "typing.TextIO": [], "torch._storage_classes": [], "future.backports.urllib.parse._NetlocResultMixinBase.port": ["future.backports.urllib.parse._NetlocResultMixinBase.port", "future.backports.urllib.parse.port", "future.builtins.int"], "caffe2.python.schema.ListWithEvicted.all_scalars": ["caffe2.python.schema.List"], "numpy.core.multiarray.shares_memory": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.shares_memory"], "pandas.core.series.Series.progress_apply": [], "tensorflow.math": [], "google.protobuf.internal.encoder.UInt32Encoder": [], "sentencepiece._sentencepiece.new_ImmutableSentencePieceText_ImmutableSentencePiece": [], "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator": ["transformers.file_utils.docstring_decorator", "transformers.file_utils.add_start_docstrings.docstring_decorator", "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator", "transformers.file_utils.add_end_docstrings.docstring_decorator", "transformers.file_utils.add_code_sample_docstrings.docstring_decorator", "transformers.file_utils.replace_return_docstrings.docstring_decorator"], "sentencepiece.__init__.SentencePieceTrainer._encode": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "io.StringIO", "io.BytesIO", "csv", "sys", "csv.writer", "sys.version_info"], "caffe2.python.schema.Field._set_parent": ["caffe2.python.schema.Field._set_parent"], "future.backports.xmlrpc.client.dump_instance": ["future.backports.xmlrpc.client.Unmarshaller.end_value"], "numpy.lib.utils": ["re", "re.compile", "re.I", "numpy.core.numerictypes.issubclass_", "numpy.core.numerictypes.issubsctype", "numpy.core.numerictypes.issubdtype"], "click._compat._default_text_stdout": [], "numpy.polynomial._polybase.ABCPolyBase.__rfloordiv__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "future.backports.urllib.request._safe_gethostbyname": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "socket", "socket.gethostbyname", "socket.gaierror"], "caffe2.python.schema.Struct.has_blobs": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.all_scalars", "caffe2.python.schema.List.all_scalars", "caffe2.python.schema.ListWithEvicted.all_scalars", "caffe2.python.schema.Struct.all_scalars", "caffe2.python.schema.Scalar.all_scalars", "caffe2.python.schema.Scalar.__call__", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "future.utils.viewvalues"], "numpy.core.multiarray.putmask": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.putmask"], "torch.cuda.BFloat16Storage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "click.testing.CliRunner.isolation._getchar": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.testing.EchoingStdin._echo", "click.testing._pause_echo", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "os.environ", "sys.stdin", "sys.stdout", "sys.stderr", "io.BytesIO", "contextlib.contextmanager"], "google.protobuf.internal.encoder.Fixed32Sizer": [], "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter": ["transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize", "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__", "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus", "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator"], "sentencepiece.__init__._piece": ["sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__piece", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__piece"], "numpy.lib.polynomial.poly1d.__str__.fmt_float": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.core.numeric", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.type_check.iscomplex", "numpy.lib.polynomial.poly1d.__str__.fmt_float", "numpy.lib.polynomial.__str__.fmt_float", "numpy.lib.type_check.real", "numpy.lib.type_check.imag", "numpy.lib.polynomial._raise_power", "numpy.lib.polynomial.poly1d.__sub__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.lib.polynomial.poly1d.__eq__", "numpy.core.numeric.logical_or"], "json.load": [], "future.backports.urllib.parse.port": ["future.backports.urllib.parse._NetlocResultMixinBase.port", "future.backports.urllib.parse.port", "future.builtins.int"], "numpy.ma.core.MaskedArray.__rpow__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.power", "numpy.ndarray.trace", "numpy.var"], "torch.device": [], "future.builtins.__init__.object": ["future.builtins.__init__.object", "future.types.newobject"], "sentencepiece.__init__.SentencePieceProcessor._encode": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "google.protobuf.internal.decoder.SFixed64Decoder": [], "urllib3.packages.six._SixMetaPathImporter.get_code": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code"], "numpy.core._multiarray_umath._set_promotion_state.__module__": [], "torch._storage_docs": ["torch._storage_docs.add_docstr_all"], "sys.stdout": [], "numpy.core._asarray": ["numpy.core._asarray.require", "numpy.core.overrides.array_function_dispatch", "numpy.core._asarray._require_dispatcher"], "os.path.abspath": [], "glob": [], "future.backports.urllib.parse.username": [], "torch._lobpcg.lobpcg": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch._lobpcg.lobpcg", "torch", "torch._lobpcg.LOBPCG.call_tracker", "torch._lobpcg.LOBPCG.__init__", "torch._lobpcg.LOBPCG.update_converged_count", "torch._lobpcg.LOBPCG.stop_iteration", "torch._lobpcg.LOBPCG.run", "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform", "torch._linalg_utils", "torch._lobpcg.LOBPCG_call_tracker", "torch._lobpcg.LOBPCG", "torch._lobpcg.LOBPCG.update_residual", "torch._lobpcg.LOBPCG._update_basic", "torch._linalg_utils.get_floating_dtype", "torch.jit", "torch.Tensor", "torch.float32", "torch.float64", "torch.empty", "torch.prod", "torch.tensor", "torch.randn"], "numpy.f2py.symbolic.ExprWarning": [], "tensorflow.device": [], "transformers.data.processors.squad.squad_convert_examples_to_features": ["multiprocessing.cpu_count", "transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset", "transformers.data.processors.squad.SquadProcessor.get_train_examples", "transformers.data.processors.squad.SquadProcessor.get_dev_examples", "transformers.data.processors.squad.SquadProcessor._create_examples", "multiprocessing.Pool", "functools.partial", "transformers.data.processors.squad.squad_convert_example_to_features", "transformers.data.processors.squad.squad_convert_example_to_features_init", "tqdm.tqdm", "torch", "torch.utils.data.TensorDataset", "transformers.data.processors.squad.gen", "transformers.data.processors.squad.squad_convert_examples_to_features.gen", "transformers.data.processors.squad.SquadExample.__init__", "transformers.data.processors.squad.SquadFeatures.__init__", "transformers.data.processors.squad.SquadResult.__init__", "tensorflow", "torch.tensor", "torch.arange", "torch.long", "torch.float", "tensorflow.int32", "tensorflow.int64", "tensorflow.string", "tensorflow.TensorShape", "tensorflow.data"], "operator.methodcaller": [], "numpy.ma.core.MaskedConstant.__setattr__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core.MaskedArray.fill_value"], "tqdm.std.tqdm.clear": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str"], "caffe2.python.schema._SchemaNode.add_child": ["caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema._SchemaNode"], "numpy.frombuffer": ["numpy.ma.core.frombuffer", "numpy.core.numeric.frombuffer", "numpy.core.multiarray.frombuffer"], "itertools.count": [], "sentencepiece._sentencepiece.ImmutableSentencePieceText__pieces_size": [], "future.backports.urllib.response": ["__future__.absolute_import", "__future__.division", "__future__.unicode_literals", "future.builtins.object"], "tqdm.std.status_printer.print_status": ["tqdm.std.tqdm.fp_write", "sys", "tqdm.std.tqdm.status_printer.print_status", "tqdm.std.tqdm.print_status", "tqdm.std.status_printer.print_status", "tqdm.utils.disp_len", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm._decr_instances", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.display", "tqdm.std.tqdm.status_printer.fp_write", "tqdm.std.tqdm.close.fp_write", "tqdm.std.status_printer.fp_write", "tqdm.std.close.fp_write", "sys.stderr", "sys.stdout"], "IPython.display.display": [], "tqdm.std.TRLock": ["threading.RLock", "multiprocessing.RLock"], "sentencepiece._sentencepiece.SentencePieceProcessor_unk_id": [], "torch.cuda.device.__exit__": ["torch", "torch._C"], "future.types.newobject": [], "future.types.newrange.newrange.count": ["collections.Sequence", "collections.abc.Sequence"], "numpy.ma.core.MaskedArray.__float__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "warnings", "numpy.ma.core.MaskedArray.__float__", "numpy.ndarray.trace", "numpy.var", "numpy.nan", "warnings.warn"], "numpy.core.multiarray.fromfile": ["numpy.core.numeric.fromfile", "numpy.core.records.fromfile", "numpy.core.multiarray.fromfile"], "future.types.newrange.newrange.__contains__": ["collections.Sequence", "collections.abc.Sequence"], "future.backports.xmlrpc.client.Transport.parse_response": ["future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.GzipDecodedResponse", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.__dump", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "click.testing.isolation.visible_input": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.testing._pause_echo", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "io.BytesIO", "sys.stdin", "sys.stdout", "sys.stderr", "os.environ", "contextlib.contextmanager"], "numpy.lib.polynomial.poly1d": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__"], "numpy.core.multiarray.promote_types": ["numpy.core.numeric.promote_types", "numpy.core.multiarray.promote_types"], "numpy.polynomial.polyutils.format_float": ["numpy", "numpy.core.umath.absolute", "numpy.core.multiarray.dragon4_scientific", "numpy.core.multiarray.dragon4_positional", "numpy.issubdtype", "numpy.floating", "numpy.get_printoptions", "numpy.isnan", "numpy.isinf"], "google.protobuf.internal.type_checkers.SupportsOpenEnums": [], "numpy.f2py.symbolic.as_string": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op"], "numpy.exp": ["numpy.ma.core.exp", "numpy.core.umath.exp", "numpy.array_api.__init__.exp"], "numpy.core.records.format_parser": ["numpy.core.overrides.set_module"], "numpy.core.numeric.ravel": ["numpy.ma.core.ravel", "numpy.core.fromnumeric.ravel"], "caffe2.python._import_c_extension._TensorCPU_shape": [], "numpy.argpartition": ["numpy.core.fromnumeric.argpartition"], "caffe2.python.schema.Field.all_scalars": [], "future.backports.urllib.request.HTTPBasicAuthHandler.http_error_401": ["future.backports.urllib.request.AbstractBasicAuthHandler", "future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPCookieProcessor.http_response"], "future.backports.xmlrpc.client.dump_struct": ["future.backports.xmlrpc.client.escape", "future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.__dump", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str"], "numpy.core._multiarray_umath._get_promotion_state.__module__": [], "numpy.core.umath.absolute": ["numpy.ma.core.absolute", "numpy.core.umath.absolute"], "future.utils.viewitems": [], "re.split": [], "google.protobuf.internal.wire_format.FloatByteSize": ["google.protobuf.internal.wire_format.TagByteSize"], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data._utils", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_worker", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_workers", "torch.utils.data.dataloader._DatasetKind.create_fetcher", "torch.utils.data.dataloader._InfiniteConstantSampler.__iter__", "torch.utils.data.dataloader.DataLoader.multiprocessing_context", "torch.utils.data.dataloader.DataLoader.__setattr__", "torch.utils.data.dataloader.DataLoader.__iter__", "torch.utils.data.dataloader.DataLoader._index_sampler", "torch.utils.data.dataloader.DataLoader.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__iter__", "torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._BaseDataLoaderIter.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__getstate__", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_put_index", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__del__", "torch._six.queue", "torch.utils.data._utils.MP_STATUS_CHECK_INTERVAL", "torch._six.queue.Empty"], "torch.autograd.no_grad": ["torch.__init__.no_grad", "torch.autograd.grad_mode.no_grad"], "numpy.core.defchararray.array": ["numpy.core.defchararray.chararray.lstrip", "numpy.core.defchararray.chararray.rstrip", "numpy.core.defchararray.chararray.strip", "numpy.core.defchararray.chararray", "numpy", "numpy.core.numeric.ndarray", "numpy.core.numerictypes.character", "numpy.core.numerictypes.unicode_", "numpy.core.numerictypes.string_", "numpy.core.numeric.array", "numpy.core.overrides.set_module", "numpy.asarray"], "tqdm.std.tqdm.__hash__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet"], "sentencepiece._sentencepiece.SentencePieceProcessor_PieceToId": [], "future.backports.urllib.request.Request.get_header": ["future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_default"], "enum.Enum": [], "numpy.random._sfc64.SFC64": [], "click.termui.hidden_prompt_func": ["click.termui.prompt", "getpass", "getpass.getpass"], "urllib3.packages.six.advance_iterator": ["urllib3.packages.six._LazyDescr.__init__", "urllib3.packages.six.MovedModule.__init__", "urllib3.packages.six._LazyModule.__init__", "urllib3.packages.six.MovedAttribute.__init__", "urllib3.packages.six._SixMetaPathImporter.__init__"], "future.backports.xmlrpc.client.ProtocolError.__repr__": ["future.backports.xmlrpc.client.Error"], "sentencepiece.__init__._surface": ["sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__surface", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__surface"], "future.utils.as_native_str.encoder.wrapper": ["future.utils.encoder", "future.utils.as_native_str.encoder", "future.utils.wrapper", "future.utils.as_native_str.encoder.wrapper", "future.utils.encoder.wrapper", "functools", "functools.wraps"], "google.protobuf.internal.encoder.FloatEncoder": [], "caffe2.python.schema.Scalar.set_value": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.field_blobs", "numpy", "numpy.ndarray", "numpy.void"], "future.utils.encoder": ["future.utils.wrapper", "future.utils.as_native_str.encoder.wrapper", "future.utils.encoder.wrapper"], "google.protobuf.internal.encoder.BoolSizer": [], "google.protobuf.internal.wire_format.SInt64ByteSize": ["google.protobuf.internal.wire_format.UInt64ByteSize", "google.protobuf.internal.wire_format.ZigZagEncode"], "numpy.version.version": ["numpy.version.version"], "traceback": [], "numpy.core._DType_reduce": ["numpy.core._DType_reconstruct"], "numpy.ma.core.MaskedIterator.__init__": ["numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedConstant.__format__"], "numpy.ma.core._arraymethod.wrapped_method": ["numpy.ndarray", "numpy", "numpy.ma.core.wrapped_method", "numpy.ma.core._arraymethod.wrapped_method", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask"], "future.backports.xmlrpc.client.Unmarshaller.end_base64": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "_sentencepiece.SentencePieceProcessor__DecodePiecesAsImmutableProtoBatch": [], "caffe2.python.schema.Map": ["caffe2.python.schema.List", "caffe2.python.schema.Struct"], "tqdm.std.tqdm.set_postfix": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "collections.OrderedDict", "numbers.Number", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.refresh", "tqdm.std.refresh"], "socket._GLOBAL_DEFAULT_TIMEOUT": [], "xml.parsers.expat.ParserCreate": [], "urllib3.packages.six.MovedModule": ["urllib3.packages.six._LazyDescr"], "pandas.Panel.progress_apply": [], "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__": [], "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator": ["torch", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize", "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__", "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus", "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.file_utils.torch_only_method", "torch.LongTensor"], "numpy.argsort": ["numpy.ma.core.argsort", "numpy.core.fromnumeric.argsort", "numpy.array_api.__init__.argsort"], "google.protobuf.internal.containers.wire_type": [], "transformers.pipelines.PipelineException": [], "itertools.repeat": [], "urllib3.packages.six._LazyDescr.__init__": [], "numpy.matrixlib.defmatrix.__all__": [], "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromString": [], "numpy.core.numeric.asarray": ["numpy.ma.core.asarray", "numpy.core.numeric.asarray", "numpy.core.multiarray.asarray", "numpy.core.defchararray.asarray", "numpy.array_api.__init__.asarray"], "numpy.ma.core.MaskedArray.__pow__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.power", "numpy.ndarray.trace", "numpy.var"], "pandas.core.groupby.groupby.GroupBy.progress_apply": [], "numpy.lib.polynomial._roots_dispatcher": ["numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__"], "numpy.core.defchararray.chararray": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.numeric.ndarray.argsort"], "future.backports.urllib.request.BaseHandler.__lt__": [], "numpy.lib.format.read_magic": ["numpy.lib.format._read_bytes"], "operator.eq": [], "google.protobuf.internal.well_known_types.Struct.get_or_create_list": ["google.protobuf.internal.well_known_types.Struct.keys"], "types": [], "numpy.polynomial._polybase.ABCPolyBase._get_coefficients": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase", "numpy", "abc.ABC", "numpy.all", "os.name"], "numpy.ma.core.dot": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.mask_rowcols", "numpy.ma.core.getmaskarray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy", "numpy.ma.core.filled", "numpy.ma.core.get_masked_subclass", "numpy.ma.core.dot", "numpy.dot", "numpy.logical_not", "numpy.asarray", "numpy.empty"], "transformers.data.processors.squad.SquadV2Processor": ["transformers.data.processors.squad.SquadProcessor"], "torch._six.int_classes": [], "joblib._dask.is_weakrefable": ["weakref", "weakref.ref"], "urllib3.packages.six.Module_six_moves_urllib_response": ["urllib3.packages.six._LazyModule"], "future.backports.urllib.request.CacheFTPHandler.setMaxConns": ["future.backports.urllib.request.FTPHandler", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd"], "numpy.lib.index_tricks.__all__": [], "numpy.core.numeric.__all__": [], "types.ClassType": [], "future.backports.xmlrpc.client.Transport.send_content": ["gzip", "future.backports.xmlrpc.client.gzip_encode", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str"], "caffe2.python.extension_loader": ["sys"], "torch._C._cudart": [], "pickle": [], "_sentencepiece.ImmutableNBestSentencePieceText__nbests_size": [], "future.utils.encoder.wrapper": ["future.utils.wrapper", "future.utils.as_native_str.encoder.wrapper", "future.utils.encoder.wrapper", "functools", "functools.wraps"], "numpy.core.multiarray.empty": ["numpy.ma.core.empty", "numpy.core.numeric.empty", "numpy.core.multiarray.empty", "numpy.array_api.__init__.empty"], "numpy.ma.core.MaskedIterator.__next__": ["numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy", "numpy.ma.core.mvoid", "numpy.void"], "urllib3.exceptions.InvalidChunkLength": ["urllib3.exceptions.HTTPError", "urllib3.packages.six.moves.http_client.IncompleteRead"], "numpy.dtype": ["numpy.core.numeric.dtype", "numpy.core.multiarray.dtype"], "torch._utils_internal.USE_RTLD_GLOBAL_WITH_LIBTORCH": [], "types.TracebackType": [], "itertools.starmap": [], "google.protobuf.internal.encoder.GroupEncoder": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP"], "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesAsImmutableProto": [], "numpy.lib.arraypad.__all__": [], "caffe2.python.schema.Field.clone_schema": [], "transformers.data.datasets.glue.Split": ["enum.Enum"], "numpy._typing._generic_alias._GenericAlias.__mro_entries__": ["typing.ClassVar", "collections.abc.Iterable", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__", "typing.Any"], "numpy._typing._generic_alias._GenericAlias.__subclasscheck__": ["typing.ClassVar", "typing.NoReturn"], "future.backports.xmlrpc.client.end_nil": [], "numpy.core.multiarray.dot": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.dot"], "google.protobuf.internal.encoder.DoubleEncoder": [], "future.backports.http.cookiejar.liberal_is_HDN": [], "sentencepiece.__init__.SentencePieceTrainer": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr"], "google.protobuf.internal.encoder.Int32Encoder": [], "_sentencepiece.SentencePieceProcessor_GetPieceSize": [], "numpy.core.multiarray.fromiter": ["numpy.core.numeric.fromiter", "numpy.core.multiarray.fromiter"], "numpy.ma.mrecords.MaskedRecords.__getstate__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.__getstate__", "numpy.ma.mrecords.MaskedRecords.__setstate__"], "sentencepiece._sentencepiece.SentencePieceProcessor_bos_id": [], "future.backports.urllib.request.URLopener.http_error_default": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.error.HTTPError", "future.backports.http.client.HTTPSConnection"], "tqdm.std.tqdm._get_free_pos": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.__len__"], "tqdm.utils.SimpleTextIOWrapper": ["tqdm.utils.ObjectWrapper"], "distributed.utils.thread_state": [], "numpy.array_api.__init__.linspace": ["numpy.core.function_base.linspace", "numpy.array_api.__init__.linspace", "numpy.array_api._creation_functions.linspace"], "numpy.ma.core.MaskedArray.argpartition": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "warnings", "numpy.ma.core.MaskedArray.argsort", "numpy.ndarray.trace", "numpy.var", "warnings.warn"], "google.protobuf.internal.decoder.FloatDecoder": [], "torch.__init__.Tensor": ["torch.__init__.Tensor", "torch.tensor.Tensor"], "urllib3.packages.six.Iterator.next": [], "torch.utils.data.dataloader._BaseDataLoaderIter": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader.__next__"], "torch.utils.data.dataloader.DataLoader._index_sampler": [], "numpy._typing._generic_alias._GenericAlias.__unpacked__": ["typing.ClassVar"], "numpy.core._type_aliases.allTypes": [], "packaging.specifiers.Specifier._compare_less_than": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier._canonical_spec", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.matrixlib.defmatrix.asmatrix": ["numpy.matrixlib.defmatrix.matrix", "numpy.core.overrides.set_module"], "sentencepiece.__init__.pieces": ["sentencepiece.__init__.ImmutableSentencePieceText"], "google.protobuf.internal.decoder": ["google.protobuf.internal.decoder._VarintDecoder", "google.protobuf.internal.decoder._SignedVarintDecoder", "google.protobuf.internal.decoder._ModifiedDecoder", "google.protobuf.internal.decoder._StructPackDecoder", "google.protobuf.internal.decoder._FloatDecoder", "google.protobuf.internal.decoder._DoubleDecoder", "google.protobuf.internal.decoder._FieldSkipper", "google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.wire_format", "google.protobuf.message.DecodeError", "google.protobuf.internal.wire_format.ZigZagDecode", "google.protobuf.internal.wire_format.WIRETYPE_FIXED32", "google.protobuf.internal.wire_format.WIRETYPE_FIXED64", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.wire_format.WIRETYPE_VARINT"], "google.protobuf.internal.encoder.EnumEncoder": [], "transformers.tokenization_utils_base.SpecialTokensMixin": [], "numpy.core.multiarray.min_scalar_type": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.min_scalar_type"], "numpy.core._multiarray_umath._UFUNC_API": [], "future.backports.urllib.request.CacheFTPHandler.clear_cache": ["future.backports.urllib.request.FTPHandler", "future.backports.urllib.request.FTPHandler.connect_ftp", "future.backports.urllib.request.CacheFTPHandler.connect_ftp", "future.backports.urllib.request.URLopener._https_connection"], "future.backports.urllib.request.AbstractHTTPHandler": ["future.backports.urllib.request.BaseHandler"], "numpy.ma.core.MaskedArray.__array_wrap__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core.reduce", "functools.reduce", "numpy.ma.core.mask_or", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.mvoid.filled", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core.getmaskarray", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.filled", "numpy.ndarray.trace", "numpy.var", "numpy.errstate", "numpy.copyto"], "future.backports.xmlrpc.client.Unmarshaller.data": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "packaging.specifiers.Specifier._compare_equal": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier._canonical_spec", "packaging.utils.canonicalize_version", "packaging.specifiers._version_split", "packaging.specifiers.BaseSpecifier.__hash__", "packaging.specifiers.BaseSpecifier.__eq__", "packaging.specifiers.Specifier.__init__", "packaging.specifiers.Specifier.__hash__", "packaging.specifiers.Specifier.__eq__", "packaging.specifiers.Specifier._get_operator", "packaging.specifiers.Specifier.__contains__", "packaging.specifiers.SpecifierSet.__init__", "packaging.specifiers.SpecifierSet.__hash__", "packaging.specifiers.SpecifierSet.__and__", "packaging.specifiers.SpecifierSet.__eq__", "packaging.specifiers.SpecifierSet.__len__", "packaging.specifiers.SpecifierSet.__iter__", "packaging.specifiers.SpecifierSet.__contains__", "packaging.specifiers._pad_version", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "google.protobuf.internal.decoder.DoubleDecoder": [], "numpy.lib.arraypad": [], "future.backports.xmlrpc.client.Binary.__str__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str"], "re.VERBOSE": [], "numpy.ma.core.get_masked_subclass": ["numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__call__"], "random": [], "future.backports.email.message.Message.set_type": ["future.backports.email.message.Message.get_content_type", "future.backports.email.message.Message.get_content_maintype", "future.backports.email.message.Message.get_content_subtype", "future.backports.email.message.Message.get_default_type", "future.backports.email.message.Message.set_default_type", "future.backports.email.message.Message.set_type", "future.backports.email.message.Message.add_header", "future.backports.email.message.Message.replace_header", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.is_multipart", "future.backports.email.message.Message.get_payload", "future.backports.email.message.Message.set_payload", "future.backports.email.message.Message.get_param", "future.backports.email.message.Message.set_param", "future.backports.email.message.Message.del_param", "future.backports.email.message.Message.values"], "future.backports.misc._count_elements": ["future.backports.misc.Counter.elements"], "numpy.core._ufunc_reduce": [], "sentencepiece._sentencepiece.SentencePieceProcessor__NBestEncodeAsSerializedProto": [], "torch.int32": ["numpy.array_api.__init__.int32"], "functools.partial": [], "google.protobuf.internal.wire_format.UInt32ByteSize": ["google.protobuf.internal.wire_format.UInt64ByteSize"], "pandas.core.groupby.SeriesGroupBy.progress_map": [], "operator.getitem": [], "numpy.array_api._dtypes._floating_dtypes": [], "torch.IntStorage": ["torch.storage._StorageBase"], "future.backports.xmlrpc.client.ServerProxy.__repr__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.__str__", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.__repr__"], "warnings.simplefilter": [], "urllib3.packages.six._SixMetaPathImporter.find_spec": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code", "importlib.util.spec_from_loader"], "google.protobuf.internal.type_checkers.UnicodeValueChecker": [], "numpy.array_api._typing.Device": ["numpy.array_api._typing.Device"], "google.protobuf.internal.encoder.GroupSizer": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "tqdm.notebook.colour": ["tqdm.notebook.tqdm_notebook.colour", "tqdm.notebook.colour"], "google.protobuf.internal.wire_format.SFixed64ByteSize": ["google.protobuf.internal.wire_format.TagByteSize"], "tqdm.std.tqdm.__del__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet"], "future.types.newrange.newrange": ["collections.Sequence", "collections.abc.Sequence"], "numpy.random.__init__.randint": ["numpy.random.__init__.randint"], "tqdm.std.TqdmKeyError": [], "uuid.uuid4": [], "caffe2.python.schema.Struct.__sub__": ["caffe2.python.schema.Field", "caffe2.python.schema.Struct", "caffe2.python.schema.Struct.get_children", "collections.OrderedDict", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.List.field_types", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Field._child_base_id", "caffe2.python.schema._SchemaNode.add_child"], "numpy.ma.core.MaskedArray.put": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.array", "numpy.ma.core.getmask", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmaskarray", "numpy.ma.core.make_mask", "numpy.ndarray.trace", "numpy.var"], "numpy.core.shape_base.__all__": [], "numpy.polynomial._polybase.ABCPolyBase.__rdiv__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "numpy.core._type_aliases.sctypes": ["numpy.core.numerictypes.sctypes"], "joblib._dask.Batch": [], "numpy.core.multiarray.where": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.where"], "sentencepiece._sentencepiece.SentencePieceProcessor_GetPieceSize": [], "numpy.core._multiarray_umath._ARRAY_API": [], "threading.Lock": [], "future.builtins.__init__.list": ["future.builtins.__init__.list", "future.types.newlist"], "sentencepiece.__init__.ImmutableSentencePieceText": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.delete_ImmutableSentencePieceText"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file": ["transformers.tokenization_utils.PreTrainedTokenizer", "collections.OrderedDict", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol"], "future.backports.email.utils.decode_params": ["future.backports.email.utils.unquote", "future.builtins.int", "future.backports.email._parseaddr.quote", "future.backports.email.utils.decode_rfc2231", "future.backports.urllib.parse.unquote"], "pickle.load": [], "numpy.ma.core.MaskedConstant": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "torch.serialization.save": ["cPickle", "pickle", "torch.serialization._check_dill_version", "torch.serialization._open_zipfile_writer", "torch.serialization._save", "torch.serialization._open_file_like", "torch.serialization._legacy_save"], "caffe2.python.schema._join_field_name": [], "google.protobuf.internal.encoder.BoolEncoder": ["google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.wire_format.WIRETYPE_VARINT"], "numpy.lib.type_check.iscomplex": ["numpy.core.numeric.asanyarray", "numpy.core.numeric", "numpy.core.numeric.zeros", "numpy.lib.type_check._is_type_dispatcher", "numpy.core.numeric.complexfloating"], "os.chdir": [], "functools.wraps": [], "tqdm.std.Bar.__format__": ["tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.reset"], "numpy.polynomial._polybase.ABCPolyBase.trim": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial.polyutils", "numpy.polynomial.polyutils.trimcoef", "abc.ABC", "os.name"], "click.testing._NamedTextIOWrapper": ["click.testing.CliRunner.isolation", "io", "io.TextIOWrapper"], "torch.utils.data.dataset.ChainDataset": ["torch.utils.data.dataset.IterableDataset"], "numpy.ma.core._mareconstruct": ["numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.baseclass", "numpy.ndarray", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.make_mask_descr", "numpy.ndarray.__new__"], "future.backports.xmlrpc.client.end_params": [], "unittest": [], "numpy.array_api.__init__.result_type": ["numpy.core.numeric.result_type", "numpy.core.multiarray.result_type", "numpy.array_api.__init__.result_type", "numpy.array_api._data_type_functions.result_type"], "past.builtins.__init__.long": ["numpy.compat.py3k.long", "past.builtins.__init__.long", "past.types.__init__.long", "past.types.long", "__builtin__.long"], "numpy.core.numerictypes._find_common_coerce": ["numpy.core.numerictypes._can_coerce_all"], "numpy.core.numerictypes._register_types": ["numbers", "numbers.Integral", "numbers.Complex", "numbers.Real", "numbers.Number"], "numpy.core.memmap": ["numpy.core.numeric.dtype"], "urllib3.packages.six.Module_six_moves_urllib_request": ["urllib3.packages.six._LazyModule"], "numpy.lib.polynomial.polysub": ["numpy.lib.polynomial.poly1d", "numpy.core.atleast_1d", "numpy.lib.polynomial.poly1d.__len__", "numpy.core.numeric", "numpy.core.abs", "numpy.lib.polynomial._binary_op_dispatcher", "numpy.core.numeric.zeros", "numpy.core.numeric.concatenate"], "google.protobuf.internal.wire_format.StringByteSize": ["google.protobuf.internal.wire_format.BytesByteSize"], "numpy.lib.histograms": ["numpy.lib.histograms._hist_bin_stone", "numpy.lib.histograms._hist_bin_auto", "numpy.lib.histograms._hist_bin_doane", "numpy.lib.histograms._hist_bin_rice", "numpy.lib.histograms._hist_bin_scott", "numpy.lib.histograms._hist_bin_sqrt", "functools", "numpy.core.overrides", "numpy.lib.histograms._hist_bin_fd", "numpy.lib.histograms._hist_bin_sturges", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "future.backports.xmlrpc.client.Marshaller.dump_array": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.__dump"], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data", "torch._utils.ExceptionWrapper"], "tqdm.std.pandas.inner_generator.inner": ["pandas.Panel", "warnings.catch_warnings", "warnings.simplefilter", "pandas.core.window.rolling.Rolling", "pandas.core.window.expanding.Expanding", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "pandas.core.groupby.groupby.PanelGroupBy", "pandas.core.groupby.PanelGroupBy", "pandas.core.series.Series", "tqdm.std.tqdm.pandas.inner_generator", "tqdm.std.tqdm.inner_generator", "tqdm.std.pandas.inner_generator", "pandas.core.groupby.generic.SeriesGroupBy", "pandas.core.groupby.groupby.SeriesGroupBy", "pandas.core.groupby.SeriesGroupBy", "pandas.core.frame.DataFrame", "pandas.core.groupby.generic.DataFrameGroupBy", "pandas.core.groupby.groupby.DataFrameGroupBy", "pandas.core.groupby.DataFrameGroupBy", "pandas.core.groupby.groupby.GroupBy", "pandas.core.groupby.GroupBy", "tqdm.std.tqdm.pandas.inner", "tqdm.std.tqdm.inner_generator.inner", "tqdm.std.tqdm.inner", "tqdm.std.pandas.inner_generator.inner", "pandas.Panel.progress_apply", "pandas.core.groupby.generic.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.PanelGroupBy.progress_apply", "pandas.core.groupby.PanelGroupBy.progress_apply", "pandas.core.series.Series.progress_apply", "pandas.core.series.Series.progress_map", "pandas.core.window.rolling.Rolling.progress_apply", "pandas.core.window.rolling._Rolling_and_Expanding.progress_apply", "pandas.core.window._Rolling_and_Expanding.progress_apply", "pandas.core.window.expanding.Expanding.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.groupby.GroupBy.progress_transform", "pandas.core.groupby.GroupBy.progress_apply", "pandas.core.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.GroupBy.progress_transform", "pandas.core.frame.DataFrame.progress_apply", "pandas.core.frame.DataFrame.progress_applymap", "pandas.core.groupby.generic.SeriesGroupBy.progress_apply", "pandas.core.groupby.generic.SeriesGroupBy.progress_map", "pandas.core.groupby.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.groupby.SeriesGroupBy.progress_map", "pandas.core.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.SeriesGroupBy.progress_map"], "click.testing._NamedTextIOWrapper.mode": ["click.testing.CliRunner.isolation", "io", "click.testing.CliRunner.should_strip_ansi", "io.TextIOWrapper"], "numpy.log": ["numpy.lib.scimath.log", "numpy.ma.core.log", "numpy.core.umath.log", "numpy.array_api.__init__.log"], "_sentencepiece.ImmutableNBestSentencePieceText_SerializeAsString": [], "numpy.polynomial._polybase.ABCPolyBase.__init__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial.polyutils", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.domain", "numpy.polynomial._polybase.ABCPolyBase.__len__", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.window", "numpy.polynomial._polybase.ABCPolyBase.symbol", "numpy.polynomial._polybase.symbol", "numpy.polynomial.polyutils.as_series", "abc.ABC", "os.name"], "torch.tensor.Tensor.stft": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.stft", "torch._C._TensorBase"], "google.protobuf.internal.decoder.Fixed32Decoder": [], "google.protobuf.internal.decoder.BoolDecoder": [], "tqdm.std.tqdm.close.fp_write": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.status_printer.fp_write", "tqdm.std.tqdm.close.fp_write", "tqdm.std.tqdm.fp_write", "tqdm.std.status_printer.fp_write", "tqdm.std.close.fp_write", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__del__", "tqdm.std.tqdm._comparable", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.close", "tqdm.std.tqdm.clear", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.std.tqdm.wrapper", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.display", "tqdm.std.tqdm.print_status"], "numpy.core._DType_reconstruct": [], "numpy.core.function_base.linspace": ["operator", "numpy.core.numeric.asanyarray", "numpy.core.numeric.result_type", "numpy.core.numeric", "numpy.core.numeric.ndim", "numpy.core.numeric.NaN", "numpy.core.function_base._linspace_dispatcher", "numpy.core.numeric.issubdtype", "numpy.core.numeric.integer", "numpy.core.numeric.arange", "numpy.core.numeric.isscalar", "numpy.core.numeric.moveaxis", "numpy.core.numeric.floor", "operator.index"], "numpy.ma.core.asarray": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype"], "pandas.core.groupby.SeriesGroupBy.progress_apply": [], "future.builtins.__init__.dict": ["future.builtins.__init__.dict", "past.builtins.__init__.dict", "future.types.newdict"], "numpy.where": ["numpy.ma.core.where", "numpy.core.numeric.where", "numpy.core.multiarray.where", "numpy.array_api.__init__.where", "certifi.__init__.where"], "urllib3.exceptions.ResponseNotChunked": ["urllib3.exceptions.ProtocolError"], "pandas.core.window._Rolling_and_Expanding": [], "_sentencepiece.SentencePieceProcessor__EncodeAsSerializedProtoBatch": [], "tensorflow": [], "pandas.core.window.rolling._Rolling_and_Expanding.progress_apply": [], "numpy.lib.polynomial.polydiv": ["numpy.lib.polynomial.poly1d.__mul__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__sub__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.deriv", "numpy.core.atleast_1d", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.__getitem__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.polynomial.poly1d.__init__", "numpy.lib.polynomial.poly1d.__neg__", "numpy.lib.polynomial.poly1d.__ne__", "numpy.lib.polynomial.poly1d.integ", "numpy.lib.polynomial.poly1d.__eq__", "numpy.core.numeric", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.__add__", "numpy.lib.polynomial._polydiv_dispatcher", "numpy.core.numeric.zeros", "numpy.core.numeric.allclose"], "_sentencepiece.SentencePieceProcessor_LoadFromFile": [], "sentencepiece._sentencepiece.ImmutableNBestSentencePieceText_SerializeAsString": [], "tqdm.std.pandas.inner_generator": ["pandas.Panel", "warnings.catch_warnings", "warnings.simplefilter", "pandas.core.window.rolling.Rolling", "pandas.core.window.expanding.Expanding", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "pandas.core.groupby.groupby.PanelGroupBy", "pandas.core.groupby.PanelGroupBy", "pandas.core.series.Series", "tqdm.std.tqdm.pandas.inner_generator", "tqdm.std.tqdm.inner_generator", "tqdm.std.pandas.inner_generator", "pandas.core.groupby.generic.SeriesGroupBy", "pandas.core.groupby.groupby.SeriesGroupBy", "pandas.core.groupby.SeriesGroupBy", "pandas.core.frame.DataFrame", "pandas.core.groupby.generic.DataFrameGroupBy", "pandas.core.groupby.groupby.DataFrameGroupBy", "pandas.core.groupby.DataFrameGroupBy", "pandas.core.groupby.groupby.GroupBy", "pandas.core.groupby.GroupBy", "tqdm.std.tqdm.pandas.inner", "tqdm.std.tqdm.inner_generator.inner", "tqdm.std.tqdm.inner", "tqdm.std.pandas.inner_generator.inner", "pandas.Panel.progress_apply", "pandas.core.groupby.generic.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.PanelGroupBy.progress_apply", "pandas.core.groupby.PanelGroupBy.progress_apply", "pandas.core.series.Series.progress_apply", "pandas.core.series.Series.progress_map", "pandas.core.window.rolling.Rolling.progress_apply", "pandas.core.window.rolling._Rolling_and_Expanding.progress_apply", "pandas.core.window._Rolling_and_Expanding.progress_apply", "pandas.core.window.expanding.Expanding.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.groupby.GroupBy.progress_transform", "pandas.core.groupby.GroupBy.progress_apply", "pandas.core.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.GroupBy.progress_transform", "pandas.core.frame.DataFrame.progress_apply", "pandas.core.frame.DataFrame.progress_applymap", "pandas.core.groupby.generic.SeriesGroupBy.progress_apply", "pandas.core.groupby.generic.SeriesGroupBy.progress_map", "pandas.core.groupby.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.groupby.SeriesGroupBy.progress_map", "pandas.core.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.SeriesGroupBy.progress_map"], "google.protobuf.internal.decoder.SInt64Decoder": [], "transformers.data.processors.glue.glue_processors.keys": [], "numpy.ma.core._MaskedPrintOption.__init__": ["numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core.display"], "urllib3.packages.six.iteritems": ["urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six.Module_six_moves_urllib.__dir__"], "past.builtins.__init__.dict": ["future.builtins.__init__.dict", "past.builtins.__init__.dict", "past.types.olddict", "__builtin__.dict"], "torch.storage._StorageBase": [], "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained": ["transformers.tokenization_transfo_xl.TransfoXLTokenizer.save_vocabulary", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.get_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "os", "transformers.file_utils.cached_path", "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus", "torch", "transformers.file_utils.torch_only_method", "torch.load", "torch.tensor", "torch.long", "os.path"], "_sentencepiece.ImmutableSentencePieceText__pieces": [], "numpy.core.multiarray.frombuffer": ["numpy.ma.core.frombuffer", "numpy.core.numeric.frombuffer", "numpy.core.multiarray.frombuffer"], "future.backports.xmlrpc.client.end_fault": [], "caffe2.python._import_c_extension.Workspace": [], "distributed.utils.TimeoutError": [], "pandas.core.window.expanding.Expanding.progress_apply": [], "tqdm.std.tqdm.refresh": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet"], "future.backports.urllib.request.HTTPDigestAuthHandler.http_error_401": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.AbstractDigestAuthHandler", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.parse.urlparse", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth"], "_sentencepiece.SentencePieceProcessor__DecodePieces": [], "torch.cuda._dummy_type": ["torch.cuda._CudaBase.type", "torch.cuda.type", "torch.cuda.init_err", "torch.cuda._dummy_type.init_err"], "sys.meta_path": [], "future.backports.urllib.request.thishost": ["socket", "socket.gaierror", "socket.gethostbyname_ex", "socket.gethostname"], "google.protobuf.internal.wire_format.GroupByteSize": ["google.protobuf.internal.wire_format.TagByteSize", "google.protobuf.message", "google.protobuf.message.ByteSize"], "future.backports.urllib.request.FancyURLopener.http_error_401": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "re.match"], "socket": [], "tqdm.std.tqdm.moveto": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.Bar.__init__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.utils._term_move_up"], "numpy.typing.NDArray": ["numpy._typing._generic_alias.NDArray", "numpy.typing.__init__.NDArray", "numpy._typing.NDArray"], "future.utils.metaclass.__new__": [], "google.protobuf.internal.encoder.BytesEncoder": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "torch._cufft_set_plan_cache_max_size": [], "numpy.ma.core.MaskedArray.tolist": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray.__eq__", "numpy.ma.core.MaskedArray.__le__", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__ge__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__pow__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__call__", "numpy.ndarray.trace", "numpy.var", "numpy.array"], "numpy.lib.stride_tricks.__all__": [], "future.backports.xmlrpc.client.Transport": [], "future.builtins.map": ["future.builtins.iterators.map", "future.builtins.__init__.map", "past.builtins.noniterators.map", "past.builtins.__init__.map"], "pandas.core.frame.DataFrame": [], "torch._jit_internal.fn": [], "sys.getdlopenflags": [], "numpy.core.umath.NAN": ["numpy.core.umath.NAN"], "torch.cuda.device.__init__": ["torch.cuda._utils._get_device_index", "torch.cuda.device"], "numpy.lib.type_check.real": ["numpy.core.numeric.asanyarray", "numpy.lib.type_check._real_dispatcher"], "numpy.triu": ["numpy.lib.twodim_base.triu", "numpy.array_api.__init__.triu"], "google.protobuf.pyext._message": [], "transformers.pipelines.PipelineDataFormat.save": ["typing.Union", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "typing.List", "abc.abstractmethod"], "tqdm.std.tqdm.close": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.status_printer.fp_write", "tqdm.std.tqdm.close.fp_write", "tqdm.std.tqdm.fp_write", "tqdm.std.status_printer.fp_write", "tqdm.std.close.fp_write", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__del__", "tqdm.std.tqdm._comparable", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.close", "tqdm.std.tqdm.clear", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.std.tqdm.wrapper"], "caffe2.python.schema.Field.__init__": ["caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema.Struct.__len__"], "numpy._typing._generic_alias._GenericAlias": ["typing.ClassVar"], "pandas.core.groupby.groupby.SeriesGroupBy.progress_apply": [], "torch.nn.modules.container.ParameterDict.values": ["torch.nn.modules.module.Module"], "numpy.ma.core._convert2ma.__init__": ["numpy"], "numpy.polynomial._polybase.ABCPolyBase._fit": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "copyreg": [], "winreg": [], "transformers.pipelines.CsvPipelineDataFormat": ["transformers.pipelines.PipelineDataFormat"], "future.builtins.input": ["future.builtins.misc.input", "future.builtins.__init__.input"], "sentencepiece._sentencepiece.ImmutableSentencePieceText__text": [], "future.backports.email.message.Message.get_payload": ["future.backports.email.message.Message.__init__", "future.backports.email.message.Message.as_string", "future.backports.email.message.Message.is_multipart", "future.backports.email.message.Message.set_unixfrom", "future.backports.email.message.Message.get_unixfrom", "future.backports.email.message.Message.__getitem__", "future.backports.email.message.Message.__setitem__", "future.backports.email.message.Message.__delitem__", "future.backports.email.message.Message.__contains__", "future.backports.email.message.Message.__iter__", "future.backports.email.message.Message.items", "future.backports.email.message.Message.raw_items", "future.backports.email.message.Message.get_content_maintype", "future.backports.email.message.Message.get_filename", "future.builtins.list", "future.backports.email.message.Message.get_content_type", "future.backports.email.message.Message.get_content_subtype", "future.backports.email.message.Message.get_default_type", "future.backports.email.message.Message.set_default_type", "future.backports.email.message.Message.set_type", "future.backports.email.message.Message.get_payload", "future.backports.email.message.Message.set_payload", "future.backports.email.message.Message.__str__", "future.builtins.str", "future.backports.email.utils", "future.backports.email.message.Message.values", "future.backports.email._encoded_words.decode_b", "io.BytesIO", "uu", "future.backports.email.utils._has_surrogates", "future.backports.email.utils._qdecode", "uu.decode", "uu.Error"], "posixpath": [], "future.backports.xmlrpc.client.dump_bytes": ["future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "base64", "base64.encodebytes"], "filelock.FileLock": ["filelock.__init__.FileLock"], "numpy.array_api._dtypes._boolean_dtypes": [], "numpy.polynomial._polybase.ABCPolyBase._div": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "tqdm.utils.envwrap": ["tqdm.utils.FormatReplace.__init__", "tqdm.utils.ObjectWrapper.__init__", "tqdm.utils.SimpleTextIOWrapper.__init__", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.DisableOnWriteError.disable_on_exception", "tqdm.utils.DisableOnWriteError.__init__", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils.CallbackIOWrapper.__init__", "tqdm.utils.CallbackIOWrapper.write", "os", "functools.partialmethod", "functools.partial", "tqdm.utils.ObjectWrapper.wrapper_getattr", "tqdm.utils.ObjectWrapper.wrapper_setattr", "tqdm.utils.wrap", "tqdm.utils.envwrap.wrap", "os.environ"], "numpy.ma.core._MaskedBinaryOperation.__init__": ["numpy.ma.core._MaskedUFunc"], "future.backports.xmlrpc.client.Marshaller.dump_struct": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.escape", "future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.__dump", "future.backports.xmlrpc.client.DateTime.make_comparable"], "numpy.core.umath.PINF": ["numpy.core.umath.PINF"], "winreg.QueryValueEx": [], "numpy.core.multiarray.empty_like": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.empty_like"], "numpy.ma.core.MaskedArray.baseclass": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "future.backports.http.cookies._unquote": ["future.backports.http.cookies.Morsel.__init__", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.isReservedKey", "future.backports.http.cookies.Morsel.OutputString", "future.backports.http.cookies.BaseCookie.__init__", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.BaseCookie.__parse_string", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_encode", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.js_output", "future.builtins.chr", "future.builtins.int"], "numpy.array_api.__init__.zeros": ["numpy.ma.core.zeros", "numpy.core.numeric.zeros", "numpy.core.multiarray.zeros", "numpy.array_api.__init__.zeros", "numpy.array_api._creation_functions.zeros"], "future.backports.xmlrpc.client.dump_nil": [], "torch.nn.modules.container.keys": ["torch._jit_internal._copy_to_script_wrapper"], "torch._cufft_get_plan_cache_max_size": [], "future.backports.urllib.parse.Quoter.__repr__": ["collections", "future.builtins.dict", "collections.defaultdict"], "future.types.newlist": ["sys", "sys.version_info"], "numpy.core._multiarray_umath._add_newdoc_ufunc": [], "numpy.ndarray.ravel": [], "numpy.ma.core.__ipow__": ["numpy.ma.core.getdata", "numpy", "numpy.ma.core.getmask", "numpy.ma.core.mask_or", "numpy.where", "numpy.errstate", "numpy.logical_not", "numpy.isfinite", "numpy.copyto"], "numpy.ma.core.minimum_fill_value": ["numpy.ma.core._extremum_fill_value"], "numpy.ma.core.maximum_fill_value": ["numpy.ma.core._extremum_fill_value"], "numpy.polynomial._polybase.ABCPolyBase.__truediv__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numbers", "numpy.polynomial._polybase.ABCPolyBase.has_sametype", "numbers.Number", "abc.ABC", "os.name"], "numpy.core.getlimits.__all__": [], "future.backports.xmlrpc.client.Unmarshaller.getmethodname": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "future.backports.urllib.request.FancyURLopener.http_error_407": ["future.backports.urllib.request.URLopener", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "re.match"], "dask.distributed.rejoin": [], "torch.int16": ["numpy.array_api.__init__.int16"], "atexit.register": [], "builtins": [], "caffe2.python.schema.set": ["caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.field_blobs", "past.builtins.basestring", "numpy", "caffe2.python.core.BlobReference", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.List.field_types", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.metadata", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.metadata", "numpy.dtype", "numpy.void", "numpy.ndarray", "numpy.array"], "platform.system": [], "sentencepiece._sentencepiece.ImmutableSentencePieceText__pieces": [], "packaging.specifiers.Specifier.prereleases": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.Specifier.operator", "packaging.specifiers.Specifier._get_operator", "packaging.specifiers.operator", "packaging.specifiers.Specifier.version", "packaging.specifiers.version", "packaging.version.Version", "packaging.specifiers.prereleases", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.detokenize_numbers"], "os.path.exists": [], "socket.gethostname": [], "torch.cuda.CudaError.__init__": ["torch._C._cudart", "torch.cuda.CudaError", "torch._C._cudart.cudaGetErrorString"], "torch.jit.annotations.Dict": ["torch.jit.annotations.Dict", "torch._jit_internal.Dict"], "pandas.core.groupby.groupby.SeriesGroupBy": [], "click.testing.isolation.should_strip_ansi": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "io.BytesIO", "sys.stdin", "sys.stdout", "sys.stderr", "os.environ", "contextlib.contextmanager"], "future.backports.urllib.parse._ResultMixinStr": [], "future.backports.urllib.parse._NetlocResultMixinBase": [], "re.IGNORECASE": [], "caffe2.python.schema.List.__getattr__": ["caffe2.python.schema.Field", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct", "caffe2.python.schema.List.__getattr__", "caffe2.python.schema.ListWithEvicted.__getattr__", "caffe2.python.schema.Struct.__getattr__"], "requests.cookies.RequestsCookieJar.iteritems": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.set_cookie", "requests.cookies.RequestsCookieJar.iterkeys", "requests.cookies.RequestsCookieJar.itervalues", "requests.cookies.RequestsCookieJar.iteritems", "requests.compat.cookielib.CookieJar"], "requests.cookies.RequestsCookieJar.set_cookie": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.set_cookie", "requests.compat.cookielib.CookieJar"], "numpy.ma.core.masked": ["numpy.ma.core.masked"], "__builtin__.str": [], "transformers.pipelines.get_framework": ["transformers.file_utils.is_tf_available", "transformers.file_utils.is_torch_available", "transformers.pipelines.Pipeline.check_model_type", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.modeling_auto.AutoModel", "transformers.modeling_tf_auto.TFAutoModel", "transformers.modeling_auto.AutoModel.from_pretrained", "transformers.modeling_tf_auto.TFAutoModel.from_pretrained"], "numpy.core.numeric._fromfunction_dispatcher": [], "numpy.core.numerictypes._typedict": [], "numpy.core.numerictypes.int32": ["numpy.array_api.__init__.int32"], "numpy.ma.core.MaskedArray.__eq__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "operator", "operator.eq", "numpy.ndarray.trace", "numpy.var"], "numpy._typing._generic_alias._GenericAlias.__repr__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__args__", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__", "numpy._typing._generic_alias._to_str", "numpy._typing._generic_alias._GenericAlias.__origin__", "numpy._typing._generic_alias._GenericAlias.__init__", "numpy._typing._generic_alias._GenericAlias.__mro_entries__", "numpy._typing._generic_alias._GenericAlias.__dir__", "numpy._typing._generic_alias._GenericAlias.__instancecheck__", "numpy._typing._generic_alias._GenericAlias.__getitem__", "numpy._typing._generic_alias._GenericAlias.__iter__", "numpy._typing._generic_alias._GenericAlias.__getattribute__"], "click._termui_impl.ProgressBar.render_finish": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "numpy.broadcast_to": ["numpy.lib.stride_tricks.broadcast_to", "numpy.array_api.__init__.broadcast_to"], "numpy.core.records.recarray.__getattribute__": ["numpy.core.records.record.__getattribute__", "numpy.core.records.record.__setattr__", "numpy.core.records.recarray.__getattribute__", "numpy.core.records.recarray.__setattr__", "numpy.core.records.format_parser._parseFormats", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.format_parser._createdtype", "numpy.core.records.record.__repr__", "numpy.core.records.record.__getitem__", "numpy.core.records.recarray.__new__", "numpy.core.records.recarray.__array_finalize__", "numpy.core.records.recarray.__getitem__", "numpy.core.records.recarray.__repr__", "numpy.core.records.recarray.field", "numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.numerictypes.void"], "tqdm.std.tqdm.status_printer.print_status": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.fp_write", "sys", "tqdm.std.tqdm.status_printer.print_status", "tqdm.std.tqdm.print_status", "tqdm.std.status_printer.print_status", "tqdm.utils.disp_len", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.display", "tqdm.std.tqdm.status_printer.fp_write", "tqdm.std.tqdm.close.fp_write", "tqdm.std.status_printer.fp_write", "tqdm.std.close.fp_write", "sys.stderr", "sys.stdout"], "future.backports.xmlrpc.client.SafeTransport": ["future.backports.xmlrpc.client.Transport"], "numpy.lib._datasource.Repository.listdir": ["numpy.lib._datasource.DataSource", "numpy.lib._datasource.DataSource._possible_names", "os", "os.listdir"], "transformers.modeling_auto.MODEL_FOR_MASKED_LM_MAPPING": [], "future.backports.http.cookiejar.time2isoz": ["future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.CookiePolicy.set_ok", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.FileCookieJar.__init__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "datetime", "datetime.datetime"], "typing.Mapping": [], "pandas.core.groupby.groupby.SeriesGroupBy.progress_map": [], "numpy.core.multiarray.ALLOW_THREADS": ["numpy.core.numeric.ALLOW_THREADS", "numpy.core.multiarray.ALLOW_THREADS"], "numpy.expand_dims": ["numpy.lib.shape_base.expand_dims", "numpy.ma.core.expand_dims", "numpy.array_api.__init__.expand_dims"], "regex.test_regex.RegexTests.test_basic_regex_sub": ["unittest", "regex.test_regex.RegexTests.test_basic_regex_sub", "regex", "unittest.TestCase", "regex.sub"], "future.backports.email.message_from_string": ["future.backports.email.parser.Parser"], "numpy.random._mt19937.MT19937": [], "tqdm.utils._is_ascii": ["tqdm.utils.ObjectWrapper.__setattr__", "tqdm.utils.ObjectWrapper.wrapper_setattr", "tqdm.utils.DisableOnWriteError.disable_on_exception", "tqdm.utils._supports_unicode"], "future.backports.urllib.parse": ["future.backports.urllib.parse._NetlocResultMixinStr", "future.backports.urllib.parse._fix_result_transcoding", "collections.namedtuple", "future.backports.urllib.parse._NetlocResultMixinBase.username", "future.backports.urllib.parse._NetlocResultMixinBase.password", "future.backports.urllib.parse._NetlocResultMixinBase.hostname", "future.builtins.dict", "future.builtins.bytes", "future.backports.urllib.parse.Quoter.__repr__", "re", "future.builtins.int", "re.compile"], "tqdm.std.tqdm.update": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.Bar.__init__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner"], "torch.autograd._functions.Resize": [], "numpy.core.multiarray.can_cast": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.can_cast"], "gettext.gettext": [], "numpy.ma.core.MaskedArray.nonzero": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.array", "numpy.ndarray.trace", "numpy.var"], "google.protobuf.internal.decoder.BytesDecoder": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "numpy.lib.polynomial.poly1d.__neg__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d"], "numpy.array_api._typing.SupportsBufferProtocol": ["numpy.array_api._typing.SupportsBufferProtocol"], "pandas.core.groupby.GroupBy.progress_apply": [], "numpy.ma.core._DomainedBinaryOperation.__init__": ["numpy.ma.core._MaskedUFunc"], "google.protobuf.internal.encoder.SInt64Encoder": [], "itertools.imap": [], "future.backports.email.message.Message.set_default_type": [], "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__piece": [], "numpy.f2py.symbolic._FromStringWorker.finalize_string": ["numpy.f2py.symbolic.insert_quotes", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore"], "urllib3.packages.six.exec_": ["sys", "urllib3.packages.six._SixMetaPathImporter.exec_module", "sys._getframe"], "sentencepiece._sentencepiece.SentencePieceProcessor__DecodeIdsAsSerializedProtoBatch": [], "caffe2.python.schema.Struct.all_scalars": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.all_scalars", "caffe2.python.schema.List.all_scalars", "caffe2.python.schema.ListWithEvicted.all_scalars", "caffe2.python.schema.Struct.all_scalars", "caffe2.python.schema.Scalar.all_scalars", "caffe2.python.schema.Field.__init__", "caffe2.python.schema.Field.clone_schema", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.Field._set_parent", "caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Field.__eq__", "caffe2.python.schema.Field._pprint_impl", "caffe2.python.schema.Field.__repr__", "caffe2.python.schema.List.__init__", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.List._pprint_impl", "caffe2.python.schema.List.__getattr__", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__init__", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.ListWithEvicted._pprint_impl", "caffe2.python.schema.ListWithEvicted.__getattr__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__init__", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Struct._pprint_impl", "caffe2.python.schema.Struct.__contains__", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct.__getattr__", "caffe2.python.schema.Struct.__setattr__", "caffe2.python.schema.Struct.__add__", "caffe2.python.schema.Struct.__sub__", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema.Scalar.__init__", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema.Scalar.__call__", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Scalar._pprint_impl", "caffe2.python.schema._SchemaNode.__init__", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema._SchemaNode.print_recursively", "future.utils.viewitems"], "future.backports.xmlrpc.client.Error.__str__": ["future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__"], "future.backports.urllib.parse._ResultMixinBytes": [], "numpy.array_api._typing.Array": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array"], "tqdm.std.TqdmDefaultWriteLock.acquire": ["tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.TRLock", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__call__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._decr_instances", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm._comparable", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.clear", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.display", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.wrapper"], "click.utils.LazyFile.open": ["click._compat.open_stream", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.__repr__", "click.utils.LazyFile.open", "click.utils.LazyFile.close", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__repr__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__getattr__", "click.exceptions.FileError", "click.utils.LazyFile.__init__", "click.utils.KeepOpenFile.__init__", "click.utils.PacifyFlushWrapper.__init__", "typing", "typing.IO", "typing.Any"], "numpy.lib.polynomial._coeffs": ["numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial._coeffs"], "numpy.ma.core.mvoid.__new__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.hardmask", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.make_mask_descr", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.array", "numpy.void"], "future.backports.urllib.request.FancyURLopener.http_error_default": ["future.backports.urllib.request.URLopener", "future.backports.urllib.response.addinfourl", "future.backports.urllib.request.Request.get_full_url"], "numpy.ma.core.MaskedArray.all": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core._check_mask_axis", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue"], "transformers.tokenization_utils_base.TruncationStrategy": ["transformers.tokenization_utils_base.ExplicitEnum"], "numpy.ma.core._DomainSafeDivide": [], "numpy.true_divide": ["numpy.ma.core.true_divide", "numpy.core.umath.true_divide"], "numpy.core.multiarray.nested_iters": ["numpy.core.numeric.nested_iters", "numpy.core.multiarray.nested_iters"], "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "tqdm.std.tqdm.inner.wrapper": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "pandas.core.series.Series", "tqdm.std.tqdm.__len__", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.TqdmDeprecationWarning", "sys", "pandas.core.common.is_builtin_func", "tqdm.std.tqdm.pandas.wrapper", "tqdm.std.tqdm.inner_generator.wrapper", "tqdm.std.tqdm.inner.wrapper", "tqdm.std.tqdm.wrapper", "tqdm.std.pandas.inner_generator.wrapper", "sys.stderr"], "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator": ["transformers.tokenization_transfo_xl.LMOrderedIterator", "transformers.tokenization_transfo_xl.LMMultiFileIterator", "transformers.tokenization_transfo_xl.LMShuffledIterator"], "torch.tensor.Tensor.unflatten": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor._update_names", "torch._namedtensor_internals.unzip_namedshape", "torch.tensor.Tensor", "torch._C._TensorBase"], "google.protobuf.internal.encoder.SFixed64Encoder": [], "tqdm.std.tqdm.format_meter": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.Bar.__init__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.__new__", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.std.tqdm", "tqdm.std.tqdm.format_sizeof", "tqdm.std.format_sizeof", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.set_postfix", "datetime.datetime", "datetime.timedelta", "tqdm.std.tqdm.format_dict", "tqdm.std.format_dict", "tqdm.std.Bar.colour", "tqdm.std.colour", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.reset", "tqdm.utils.FormatReplace", "tqdm.std.Bar", "tqdm.utils._is_ascii", "tqdm.utils.disp_trim", "tqdm.utils.disp_len", "datetime.datetime.utcfromtimestamp", "datetime.datetime.max", "datetime.datetime.now"], "click.testing._pause_echo": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.EchoingStdin", "contextlib", "contextlib.contextmanager", "typing.Optional", "typing.Iterator"], "numpy.lib.polynomial.poly1d.__add__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polyadd"], "numpy.ma.core._DomainCheckInterval.__call__": ["numpy", "numpy.core.umath", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.core.umath.logical_or", "numpy.core.umath.greater", "numpy.core.umath.less", "numpy.errstate"], "_sentencepiece.SentencePieceProcessor__DecodeIdsAsSerializedProtoBatch": [], "numpy.ma.core._DomainCheckInterval.__init__": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes"], "sentencepiece._sentencepiece.SentencePieceProcessor__DecodeIdsAsSerializedProto": [], "torch.float64": ["numpy.array_api.__init__.float64"], "torch._jit_internal.FunctionModifiers": [], "torch.QInt8Storage": ["torch.storage._StorageBase"], "collections.defaultdict": [], "numpy.array_api.__init__.arange": ["numpy.ma.core.arange", "numpy.core.numeric.arange", "numpy.core.multiarray.arange", "numpy.array_api.__init__.arange", "numpy.array_api._creation_functions.arange"], "numpy.core._multiarray_umath._reconstruct": [], "numpy.polynomial._polybase.ABCPolyBase.basis": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.window", "numpy.polynomial._polybase.ABCPolyBase._int", "numpy.polynomial._polybase.ABCPolyBase.integ", "numpy.polynomial._polybase.ABCPolyBase.degree", "numpy.polynomial._polybase.ABCPolyBase.cutdeg", "numpy.polynomial._polybase.ABCPolyBase.symbol", "numpy.polynomial._polybase.symbol", "os.name", "abc.ABC"], "functools.WRAPPER_ASSIGNMENTS": [], "click.testing.isolation._getchar": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.testing.EchoingStdin._echo", "click.testing._pause_echo", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "io.BytesIO", "sys.stdin", "sys.stdout", "sys.stderr", "os.environ", "contextlib.contextmanager"], "time.sleep": [], "transformers.file_utils.add_end_docstrings.docstring_decorator": ["transformers.file_utils.docstring_decorator", "transformers.file_utils.add_start_docstrings.docstring_decorator", "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator", "transformers.file_utils.add_end_docstrings.docstring_decorator", "transformers.file_utils.add_code_sample_docstrings.docstring_decorator", "transformers.file_utils.replace_return_docstrings.docstring_decorator"], "numpy.ma.core._DomainSafeDivide.__call__": ["numpy.ma.core.MaskedArray.__float__", "numpy", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.core.umath", "numpy.core.umath.absolute", "numpy.finfo", "numpy.asarray", "numpy.errstate"], "urllib3.packages.six._SixMetaPathImporter.find_module": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code"], "caffe2.python.schema._SchemaNode.__init__": ["caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names"], "tensorflow.argsort": [], "_scproxy._get_proxies": [], "numpy.ma.core.MaskedArray.__rsub__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "future.types.newlist.copy": ["future.types.newlist.newlist.copy", "future.types.newlist.copy", "copy", "copy.copy"], "io.TextIOWrapper": [], "numpy.lib.format._read_bytes": [], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_put_index": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data.dataloader.DataLoader._index_sampler", "torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_put_index", "torch.utils.data.dataloader._DatasetKind.create_fetcher", "torch.utils.data.dataloader._InfiniteConstantSampler.__init__", "torch.utils.data.dataloader._InfiniteConstantSampler.__iter__", "torch.utils.data.dataloader.DataLoader.__init__", "torch.utils.data.dataloader.DataLoader.multiprocessing_context", "torch.utils.data.dataloader.DataLoader.__setattr__", "torch.utils.data.dataloader.DataLoader.__iter__", "torch.utils.data.dataloader.DataLoader._auto_collation", "torch.utils.data.dataloader.DataLoader.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__init__", "torch.utils.data.dataloader._BaseDataLoaderIter.__iter__", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._BaseDataLoaderIter.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__getstate__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter.__init__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__init__", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_worker", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_workers", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__del__"], "future.backports.email.message.Message.get_params": ["future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.add_header", "future.backports.email.message.Message.replace_header", "future.backports.email.message.Message.keys", "future.backports.email.message._unquotevalue", "future.backports.email.message.Message.values"], "numpy.core.multiarray.flatiter": ["numpy.core.numeric.flatiter", "numpy.core.multiarray.flatiter"], "numpy.lib.polynomial.polyder": ["numpy.lib.polynomial.poly1d.__mul__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__getitem__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.poly1d.integ", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d", "numpy.core.numeric", "numpy.lib.polynomial.poly1d.__init__", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.polynomial.poly1d.__neg__", "numpy.lib.polynomial.poly1d.__ne__", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.polyder", "numpy.lib.polynomial._polyder_dispatcher", "numpy.core.numeric.asarray", "numpy.core.numeric.arange"], "builtins.max": [], "google.protobuf.internal.encoder.EnumSizer": [], "torch.DoubleStorage": ["torch.storage._StorageBase"], "caffe2.python.schema.Struct.__setattr__": ["caffe2.python.schema.Field", "caffe2.python.schema.List.__getattr__", "caffe2.python.schema.ListWithEvicted.__getattr__", "caffe2.python.schema.Struct.__getattr__", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema.Struct"], "future.backports.email.headerregistry.Address.__str__": ["future.backports.email.headerregistry.Address.display_name", "future.backports.email.headerregistry.Group.display_name", "future.backports.email.headerregistry.ContentDispositionHeader.content_disposition", "future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email._header_value_parser", "future.backports.email.headerregistry.Address.addr_spec", "future.backports.email.headerregistry.addr_spec", "future.backports.email._header_value_parser.quote_string", "future.backports.email._header_value_parser.SPECIALS"], "past.utils.metaclass": [], "builtins.bool": [], "packaging.specifiers.SpecifierSet.prereleases": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.BaseSpecifier.__hash__", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.BaseSpecifier.contains", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.version", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.Specifier._canonical_spec", "packaging.specifiers.Specifier.__hash__", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier.__contains__", "packaging.specifiers.Specifier.contains", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.SpecifierSet.__hash__", "packaging.specifiers.SpecifierSet.__contains__", "packaging.specifiers.SpecifierSet.contains", "typing.Optional", "packaging.specifiers.prereleases"], "torch._tensor_docs": ["torch._torch_docs.parse_kwargs", "torch._tensor_docs.add_docstr_all"], "numpy.random.bit_generator.BitGenerator": [], "numpy.ma.core._DomainSafeDivide.__init__": [], "future.builtins.bytes": ["future.builtins.__init__.bytes", "numpy.random.__init__.bytes", "numpy.compat.py3k.bytes", "future.types.newbytes"], "requests.cookies.RequestsCookieJar.list_domains": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.list_domains", "requests.cookies.RequestsCookieJar.multiple_domains", "requests.cookies.RequestsCookieJar.set_cookie", "requests.cookies.RequestsCookieJar.iterkeys", "requests.cookies.RequestsCookieJar.itervalues", "requests.cookies.RequestsCookieJar.iteritems", "requests.compat.cookielib.CookieJar"], "urllib3.packages.six.Module_six_moves_urllib_robotparser": ["urllib3.packages.six._LazyModule"], "numpy.core._multiarray_umath._vec_string": [], "numbers": [], "_sentencepiece.SentencePieceProcessor_serialized_model_proto": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents"], "numpy.ma.core.__ifloordiv__": ["numpy.ma.core.getdata", "numpy.ma.core._DomainSafeDivide", "numpy.ma.core.getmask", "numpy.ma.core.mask_or", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__eq__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__le__", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__ge__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__pow__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy", "numpy.where", "numpy.floor_divide"], "numpy.array_api.__init__.var": ["numpy.ma.core.var", "numpy.core.fromnumeric.var", "numpy.array_api.__init__.var", "numpy.array_api._statistical_functions.var"], "numpy.core.numeric.full": ["numpy.core.multiarray.dtype", "numpy.core.multiarray.asarray", "numpy.core.multiarray.empty", "numpy.core.multiarray", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module", "numpy.core.multiarray.copyto"], "numpy.ma.mrecords.MaskedRecords.__getattribute__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.__getattribute__", "numpy.ma.mrecords.MaskedRecords.__setattr__", "numpy.ndarray", "numpy.ma.mrecords.MaskedRecords.__new__", "numpy.ma.mrecords.MaskedRecords.__array_finalize__", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.__len__", "numpy.ma.mrecords.MaskedRecords.__getitem__", "numpy.ma.mrecords.MaskedRecords.__setitem__", "numpy.ma.mrecords.MaskedRecords.__repr__", "numpy.ma.mrecords.MaskedRecords.view", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ma.mrecords.MaskedRecords.__getstate__", "numpy.ma.mrecords.MaskedRecords.__setstate__", "numpy.ma.mrecords.MaskedRecords.__reduce__", "numpy.ma.mrecords.MaskedRecords._data", "numpy.ma.mrecords._data", "numpy.ndarray.__getattribute__", "numpy.ndarray.view"], "numpy.core.multiarray.copyto": ["numpy.core.multiarray.where", "numpy.core._multiarray_umath", "numpy.core._multiarray_umath.copyto"], "future.types.newrange.range_iterator.__next__": ["collections.Iterator", "collections.abc.Iterator", "future.types.newrange.range_iterator.__next__", "future.types.newrange.range_iterator.next", "future.types.newrange.next"], "numpy.lib.scimath": ["numpy.core.numeric", "numpy.core.numeric.log"], "numpy.ma.core.dtype": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.MaskedArray", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ndarray", "numpy.ma.core.make_mask_descr"], "threading.local": [], "torch.tensor.Tensor.share_memory_": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "torch.backends.cuda.__init__.cuFFTPlanCacheAttrContextProp": [], "sys.setdlopenflags": [], "urllib3.exceptions.BodyNotHttplibCompatible": ["urllib3.exceptions.HTTPError"], "transformers.pipelines.ZeroShotClassificationArgumentHandler": ["transformers.pipelines.ArgumentHandler"], "urllib3.packages.six._add_doc": [], "logging.critical": [], "encodings.aliases.aliases.items": [], "google.protobuf.internal.encoder.SFixed64Sizer": [], "sentencepiece.__init__._LogStream": [], "hashlib.sha256": [], "socket.gaierror": [], "numpy.core.numerictypes._can_coerce_all": ["numpy.core.multiarray.dtype"], "urllib3.packages.six._SixMetaPathImporter._add_module": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module"], "tqdm.std.tqdm.__str__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet"], "click.formatting.FORCED_WIDTH": [], "numpy.core._exceptions.TooHardError": ["numpy.core.overrides.set_module"], "sys.exec_prefix": [], "numpy.shape": ["numpy.ma.core.shape", "numpy.core.fromnumeric.shape"], "dask.distributed.as_completed": [], "caffe2.python.schema.Field._child_base_id": ["caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field._set_parent", "caffe2.python.schema.Field._pprint_impl", "caffe2.python.schema.Field.__repr__", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List._pprint_impl", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted._pprint_impl", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct._pprint_impl", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Scalar._pprint_impl", "caffe2.python.schema._SchemaNode.print_recursively", "caffe2.python.schema.Field.__init__", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.slice", "caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.List.__init__", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__init__", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__init__", "caffe2.python.schema.Struct.get_children", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Struct.__contains__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema.Scalar.__init__", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.Scalar.id", "caffe2.python.schema._SchemaNode.__init__", "caffe2.python.schema._SchemaNode.add_child", "caffe2.python.schema._SchemaNode.get_field"], "DLFCN.RTLD_LAZY": [], "future.backports.xmlrpc.client.end_base64": ["future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "google.protobuf.internal.decoder.GroupDecoder": ["google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.encoder.TagBytes"], "numpy.core._multiarray_umath._get_promotion_state": [], "numpy._typing._generic_alias._GenericAlias.__getattribute__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__getattribute__", "typing.Any"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents", "torch", "transformers.file_utils.torch_only_method", "torch.cat"], "google.protobuf.internal.decoder.UInt32Decoder": [], "numpy.core.numerictypes.int16": ["numpy.array_api.__init__.int16"], "abc.ABCMeta": [], "future.types.newrange.range_iterator.next": ["collections.Iterator", "collections.abc.Iterator", "future.types.newrange.range_iterator.__next__", "future.types.newrange.range_iterator.next", "future.types.newrange.next"], "click.testing.mode": ["click.testing.CliRunner.should_strip_ansi"], "numpy.number": [], "future.backports.xmlrpc.client.Marshaller.dump_long": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "re.match": [], "struct.Struct": [], "numpy.ma.core.MaskedArray.__isub__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.getdata", "numpy.ndarray.trace", "numpy.var", "numpy.where"], "sys.executable": [], "getpass.getpass": [], "future.backports.xmlrpc.client.ProtocolError": ["future.backports.xmlrpc.client.Error"], "distributed": [], "pandas.core.window._Rolling_and_Expanding.progress_apply": [], "torch.tensor.Tensor.__setstate__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.__len__", "torch.tensor.Tensor.__setstate__", "torch.tensor.Tensor.__deepcopy__", "torch.tensor.Tensor.__reduce_ex__", "torch.tensor.Tensor.__repr__", "torch.tensor.Tensor.register_hook", "torch.tensor.Tensor.retain_grad", "torch.tensor.Tensor.is_shared", "torch.tensor.Tensor.share_memory_", "torch.tensor.Tensor.__reversed__", "torch.tensor.Tensor.resize_as", "torch.tensor.Tensor.unique_consecutive", "torch.tensor.Tensor.__rsub__", "torch.tensor.Tensor.__format__", "torch.tensor.Tensor.__ipow__", "torch.tensor.Tensor.__rpow__", "torch.tensor.Tensor.__floordiv__", "torch.tensor.Tensor.__rfloordiv__", "torch.tensor.Tensor.__iter__", "torch.tensor.Tensor.__hash__", "torch.tensor.Tensor.__dir__", "torch.tensor.Tensor.__array__", "torch.tensor.Tensor.__array_wrap__", "torch.tensor.Tensor.__contains__", "torch.tensor.Tensor.__cuda_array_interface__", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor.align_to", "torch.tensor.Tensor.rename_", "torch.tensor.Tensor._update_names", "torch.tensor.Tensor.retain_grad_hook", "torch._C._TensorBase"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.tokenize_numbers", "typing.List"], "caffe2.python.workspace._Workspace_feed_blob": ["caffe2.proto.caffe2_pb2", "caffe2.python.utils", "numpy", "caffe2.python.scope", "caffe2.python.workspace.StringifyBlobName", "caffe2.python.utils.Caffe2TensorToNumpyArray", "caffe2.python.scope.CurrentDeviceScope", "caffe2.proto.caffe2_pb2.TensorProto", "caffe2.proto.caffe2_pb2.CUDA", "numpy.object", "numpy.ndarray", "numpy.dtype"], "numpy.core.overrides.array_function_dispatch": ["numpy.core.overrides.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_from_dispatcher.decorator", "numpy.core._multiarray_umath.add_docstring"], "sys.modules": [], "numpy.ma.core.MaskedArray.any": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core._check_mask_axis", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue"], "numpy.lib.polynomial.polymul": ["numpy.lib.polynomial.poly1d", "numpy.core.numeric", "numpy.lib.polynomial._binary_op_dispatcher", "numpy.core.numeric.convolve"], "numpy.ma.core.get_object_signature": ["numpy.compat.formatargspec", "numpy.compat.getargspec"], "numpy.random._generator.default_rng": [], "torch.tensor.reinforce.trim": ["torch.tensor.Tensor.reinforce.trim", "torch.tensor.Tensor.trim", "torch.tensor.reinforce.trim"], "click.testing._NamedTextIOWrapper.name": ["click.testing.CliRunner.isolation", "io", "click.testing.CliRunner.should_strip_ansi", "io.TextIOWrapper"], "torch.cuda.FloatStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "torch.random.set_rng_state": ["torch._C.default_generator", "torch._C.default_generator.set_state"], "numpy.core.numerictypes.float_": [], "_sentencepiece.SentencePieceProcessor_bos_id": [], "tqdm.utils._supports_unicode": ["tqdm.utils._is_utf"], "numpy.get_printoptions": ["numpy.core.arrayprint.get_printoptions"], "numpy.ma.core._DomainedBinaryOperation.__call__": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.getdata", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.core.umath", "numpy.ma.core.getmask", "numpy.ma.core.get_masked_subclass", "numpy.ma.core.MaskedArray", "numpy.errstate", "numpy.copyto", "numpy.can_cast", "numpy.core.umath.isfinite", "numpy.core.umath.multiply"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter"], "future.backports.urllib.parse._encode_result": [], "caffe2.python._import_c_extension._TensorCPU_reshape": [], "sentencepiece._sentencepiece.SentencePieceProcessor_SetDecodeExtraOptions": [], "tqdm.std.tqdm.format_sizeof": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.format_num"], "caffe2.python.schema.Field.__repr__": ["six.StringIO"], "future.backports.xmlrpc.client._strftime": ["future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client._iso8601_format", "future.backports.xmlrpc.client.DateTime.timetuple", "time", "time.localtime", "time.time", "time.struct_time"], "numpy.ma.extras.__all__": [], "urllib3.packages.six.Module_six_moves_urllib": ["types", "types.ModuleType"], "google.protobuf.internal.wire_format": ["struct", "google.protobuf.descriptor", "struct.calcsize", "google.protobuf.descriptor.FieldDescriptor"], "urllib3.packages.six._SixMetaPathImporter": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code"], "xml.parsers.expat": [], "numpy.compat.pickle.load": [], "tqdm.notebook.tqdm_notebook.colour": ["tqdm.std.tqdm", "tqdm.notebook.tqdm_notebook.colour", "tqdm.notebook.colour"], "numpy.divide": ["numpy.ma.core.divide", "numpy.core.umath.divide", "numpy.array_api.__init__.divide"], "os.utime": [], "numpy.ma.mrecords.MaskedRecords.view": ["numpy.ma.MaskedArray", "numpy.dtype", "numpy.ndarray", "numpy", "numpy.ma.nomask", "numpy.ma.mrecords.MaskedRecords.__getattribute__", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ma", "numpy.ndarray.view", "numpy.ma.make_mask_descr", "numpy.dtype.fields"], "_sentencepiece.SentencePieceProcessor__DecodePiecesAsSerializedProtoBatch": [], "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesBatch": [], "google.protobuf.internal.wire_format.Int64ByteSize": ["google.protobuf.internal.wire_format.UInt64ByteSize"], "numpy.ma.core.MaskedArray.__new__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedConstant", "numpy.ma.core.make_mask_descr", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskError", "numpy.ma.core.MaskedArray.__new__._recursive_or", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.__new__._recursive_or", "numpy.ma.core.getmask", "numpy.ma.core.getmaskarray", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.mvoid.__len__", "numpy.ma.core._check_fill_value", "numpy.ndarray.trace", "numpy.ndarray.view", "numpy.var", "numpy.array", "numpy.ones", "numpy.zeros", "numpy.resize", "numpy.reshape", "numpy.logical_or", "numpy.asanyarray"], "joblib._dask.DaskDistributedBackend.configure": ["joblib.parallel.AutoBatchingMixin", "joblib.parallel.ParallelBackendBase", "asyncio", "joblib._dask.DaskDistributedBackend.configure", "joblib._dask.DaskDistributedBackend.effective_n_jobs", "joblib._dask.Batch", "joblib._dask._WeakKeyDictionary.__init__", "joblib._dask._WeakKeyDictionary.__getitem__", "joblib._dask._WeakKeyDictionary.__setitem__", "joblib._dask._WeakKeyDictionary.on_destroy", "joblib._dask.Batch.__init__", "joblib._dask.DaskDistributedBackend.__init__", "joblib._dask.DaskDistributedBackend.get_nested_backend", "joblib._dask.DaskDistributedBackend.start_call", "joblib._dask.DaskDistributedBackend.stop_call", "joblib._dask.DaskDistributedBackend.abort_everything", "joblib._dask.DaskDistributedBackend.retrieval_context", "joblib._dask.is_weakrefable", "dask.sizeof.sizeof", "asyncio.sleep", "asyncio.Task"], "numpy.ma.core.MaskedArray.__ge__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "operator", "operator.ge", "numpy.ndarray.trace", "numpy.var"], "torch.cuda.BoolStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "caffe2.python.schema.ListWithEvicted.has_blobs": ["caffe2.python.schema.List"], "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__begin": [], "pandas.core.window.rolling.Rolling.progress_apply": [], "numpy.core.records.array": ["numpy.core.records.format_parser._createdtype", "numpy.core.records.record.__str__", "numpy.core.numeric", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.format_parser", "numpy.core.records.recarray", "numpy.core.records.fromstring", "numpy.core.records.recarray.__new__", "numpy.core.records.fromrecords", "numpy.core.records.fromarrays", "numpy.core.records.fromfile", "numpy.core.records.record.__getattribute__", "numpy.core.records.recarray.__getattribute__", "numpy.core.overrides.set_module", "numpy.core.numeric.dtype", "numpy.core.numeric.array"], "torch.CharStorage": ["torch.storage._StorageBase"], "transformers.data.processors.glue.glue_processors": [], "_sentencepiece.SentencePieceTrainer__TrainFromString": [], "numpy.lib.polynomial.polyval": ["numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.core.numeric", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial._polyval_dispatcher", "numpy.core.numeric.asarray", "numpy.core.numeric.asanyarray", "numpy.core.numeric.zeros_like"], "future.backports.xmlrpc.client.Unmarshaller.end_struct": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.builtins.dict", "future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "future.builtins.range"], "future.backports.email.utils.collapse_rfc2231_value": ["future.backports.email.utils.unquote", "future.builtins.bytes", "future.builtins.str"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline"], "numpy.ma.core.MaskedArray.__int__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskError", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__int__", "numpy.ndarray.trace", "numpy.var"], "google.protobuf.internal.wire_format.DoubleByteSize": ["google.protobuf.internal.wire_format.TagByteSize"], "future.backports.email.headerregistry.AddressHeader.value_parser": ["future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.get_address_list"], "google.protobuf.internal.wire_format.Int32ByteSize": ["google.protobuf.internal.wire_format.Int64ByteSize"], "numpy.matrixlib.defmatrix._convert_from_string": ["numpy.matrixlib.defmatrix.matrix._collapse", "ast", "ast.literal_eval"], "numpy.ma.core._MaskedUnaryOperation.__call__": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core.getdata", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.getmask", "numpy", "numpy.core.umath", "numpy.ma.core.get_masked_subclass", "numpy.errstate", "numpy.copyto", "numpy.core.umath.isfinite"], "urllib3.packages.six._SixMetaPathImporter.is_package": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code"], "numpy.random._pcg64.PCG64": [], "google.protobuf.internal.encoder.Fixed32Encoder": [], "future.types.newint.newint.__int__": ["future.utils.with_metaclass", "future.types.newint.BaseNewInt"], "numpy.lib.polynomial.poly1d.__sub__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polysub"], "numpy.core.multiarray.matmul": ["torch.__init__.matmul", "numpy.core.numeric.matmul", "numpy.core.multiarray.matmul", "numpy.array_api.linalg.matmul", "numpy.array_api.__init__.matmul"], "caffe2.python.schema.Struct.__contains__": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_names", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__getitem__"], "future.backports.xmlrpc.client.escape": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.ExpatParser.close", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.close", "future.backports.xmlrpc.client.Unmarshaller.start", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.GzipDecodedResponse.close", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.close", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.ServerProxy.__close", "future.backports.xmlrpc.client.ServerProxy.__request"], "google.protobuf.internal.wire_format.BoolByteSize": ["google.protobuf.internal.wire_format.TagByteSize"], "numpy.lib.nanfunctions": ["functools", "numpy.core.overrides", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "numpy.ma.core.MaskedArray.resize": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "numpy.core.numerictypes.ScalarType": ["numpy.core.numerictypes.ScalarType"], "torch.version.cuda.replace": [], "os.RTLD_GLOBAL": [], "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromMap4": [], "sys.byteorder": [], "transformers.file_utils.add_code_sample_docstrings.docstring_decorator": ["transformers.file_utils.docstring_decorator", "transformers.file_utils.add_start_docstrings.docstring_decorator", "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator", "transformers.file_utils.add_end_docstrings.docstring_decorator", "transformers.file_utils.add_code_sample_docstrings.docstring_decorator", "transformers.file_utils.replace_return_docstrings.docstring_decorator", "transformers.file_utils._prepare_output_docstrings"], "numpy.polynomial._polybase.ABCPolyBase.has_samewindow": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy", "abc.ABC", "numpy.all", "os.name"], "numpy.random._pcg64.PCG64DXSM": [], "numpy.array_api._creation_functions._check_valid_dtype": ["numpy.array_api._dtypes._all_dtypes"], "numpy.core.numeric.ones": ["numpy.core.multiarray.dtype", "numpy.core.multiarray.empty", "numpy.core.multiarray", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module", "numpy.core.multiarray.copyto"], "numpy.ma.core.mask": ["numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask"], "tqdm.std.refresh": [], "future.builtins.misc.open": ["future.builtins.misc.open", "future.builtins.__init__.open", "io.open"], "_sentencepiece.SentencePieceProcessor__DecodeIdsAsSerializedProto": [], "sentencepiece._sentencepiece.ImmutableSentencePieceText__score": [], "caffe2.python.schema.Struct.get_children": ["caffe2.python.schema.Field", "future.utils.viewitems"], "caffe2.python.schema.Struct.__getattr__": ["caffe2.python.schema.Field", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__getitem__"], "collections": [], "numpy.ma.core.MaskedArray.ravel": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.dtype", "numpy.ndarray.trace", "numpy.ndarray.ravel", "numpy.var"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter"], "numpy.polynomial._polybase.ABCPolyBase.domain": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "google.protobuf.internal.decoder.SFixed32Decoder": [], "torch.cuda.DoubleStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "future.backports.xmlrpc.client.end_int": ["future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "numpy.core.multiarray.asarray": ["numpy.ma.core.asarray", "numpy.core.numeric.asarray", "numpy.core.multiarray.asarray", "numpy.core.defchararray.asarray", "numpy.array_api.__init__.asarray"], "numpy.polynomial._polybase.ABCPolyBase.__divmod__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "future.backports.xmlrpc.client.data": [], "numpy.core.multiarray.fastCopyAndTranspose": ["numpy.core.numeric.fastCopyAndTranspose", "numpy.core._multiarray_umath.fastCopyAndTranspose"], "google.protobuf.internal.containers.UnknownFieldRef.data": [], "torch.random.get_rng_state": ["torch._C.default_generator", "torch._C.default_generator.get_state"], "torch._tensor_str.set_printoptions": ["torch._six.inf"], "google.protobuf.internal.wire_format.WIRETYPE_VARINT": [], "numpy.mean": ["numpy.ma.core.mean", "numpy.core.fromnumeric.mean", "numpy.array_api.__init__.mean"], "click.testing.EchoingStdin": [], "future.backports.urllib.request.ftpwrapper": [], "numpy.core._exceptions.AxisError": ["numpy.core.overrides.set_module"], "numpy.ma.core.logical_not": ["numpy.ma.core.logical_not", "numpy.core.umath.logical_not", "numpy.array_api.__init__.logical_not"], "numpy.ma.core.__imul__": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.getdata", "numpy", "numpy.where"], "numpy.f2py.symbolic.as_complex": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.as_expr"], "urllib3.packages.six.callable": [], "future.utils.wrapper": ["functools", "functools.wraps"], "future.backports.urllib.request.AbstractDigestAuthHandler.get_cnonce": ["future.backports.urllib.request.Request._parse", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_selector", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.Request.has_header", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.close", "future.backports.urllib.request.BaseHandler.close", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.add_password", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.CacheFTPHandler.setMaxConns", "future.backports.urllib.request.URLopener.close", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.URLopener.open_https", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.request.ftpwrapper.close", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.ftpwrapper.real_close", "future.backports.urllib.request.HTTPSHandler.https_open", "future.backports.urllib.request.AbstractDigestAuthHandler.get_cnonce", "time", "hashlib", "hashlib.sha1", "time.ctime"], "numpy.core.umath.sin": ["numpy.ma.core.sin", "numpy.core.umath.sin", "numpy.array_api.__init__.sin"], "packaging.specifiers.Specifier._compare_compatible": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers._is_not_suffix", "itertools", "packaging.specifiers._version_split", "packaging.specifiers.Specifier._canonical_spec", "re.compile", "re.VERBOSE", "re.IGNORECASE", "itertools.takewhile"], "google.protobuf.pyext._message.default_pool": [], "numpy.lib.twodim_base.__all__": [], "google.protobuf.internal.well_known_types.ListValue.add_list": [], "_sentencepiece.SentencePieceProcessor__EncodeAsSerializedProto": [], "gzip.GzipFile": [], "pandas.core.groupby.generic.SeriesGroupBy.progress_map": [], "torch.cuda.CharStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "caffe2.python.schema.ListWithEvicted.__getattr__": ["caffe2.python.schema.List", "caffe2.python.schema.List.__getitem__", "caffe2.python.schema.ListWithEvicted.__getitem__", "caffe2.python.schema.Struct.__getitem__", "caffe2.python.schema.Struct", "caffe2.python.schema.List.__getattr__", "caffe2.python.schema.ListWithEvicted.__getattr__", "caffe2.python.schema.Struct.__getattr__"], "tqdm.std.tqdm.__exit__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "warnings.warn", "tqdm.std.TqdmWarning"], "packaging.specifiers.Specifier._compare_greater_than": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier._canonical_spec", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "future.types.newrange.range_iterator.__init__": ["collections.Iterator", "collections.abc.Iterator", "itertools.islice", "future.types.newrange.newrange.count", "future.types.newrange.count", "future.backports.misc.count", "future.types.newrange.newrange.__len__"], "pandas.core.groupby.DataFrameGroupBy": [], "numpy.ma.core.__isub__": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.getdata", "numpy", "numpy.where"], "future.types.newdict": ["sys", "sys.version_info"], "StringIO.StringIO": [], "_sentencepiece.SentencePieceProcessor__EncodeAsPiecesBatch": [], "torch.nn.modules.container.ParameterDict": ["torch.nn.modules.module.Module"], "numpy.ma.mrecords.MaskedRecords.__array_finalize__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ma.mrecords.MaskedRecords.__getattribute__", "numpy.ma.nomask", "numpy.ndarray", "numpy.recarray", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma", "numpy.array", "numpy.ma.mrecords.MaskedRecords.__getitem__", "numpy.ma.mrecords.MaskedRecords.__setitem__", "numpy.ma.mrecords.MaskedRecords.__len__", "numpy.ma.make_mask_none", "numpy.ma.make_mask_descr", "numpy.ndarray.__getattribute__"], "sentencepiece._sentencepiece.SentencePieceProcessor_SetEncodeExtraOptions": [], "packaging.specifiers.Specifier._compare_arbitrary": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier._canonical_spec", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.ma.core.zeros": ["numpy.ma.core.zeros", "numpy.core.numeric.zeros", "numpy.core.multiarray.zeros", "numpy.array_api.__init__.zeros"], "numpy.core._multiarray_umath._insert": [], "numpy.core._multiarray_umath._monotonicity": [], "numpy.core.multiarray.is_busday": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.is_busday"], "numpy.core.overrides.array_function_from_dispatcher": ["numpy.core.overrides.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_from_dispatcher.decorator"], "sentencepiece.__init__._Train._encode": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.SentencePieceTrainer", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "io.StringIO", "io.BytesIO", "csv", "sys", "sentencepiece.__init__.SentencePieceProcessor.vocab_size", "csv.writer", "sys.version_info"], "urllib3.packages.six.wraps": ["functools", "urllib3.packages.six._update_wrapper", "functools.WRAPPER_ASSIGNMENTS", "functools.WRAPPER_UPDATES", "functools.partial"], "torch.argmax": ["numpy.ma.core.argmax", "numpy.core.fromnumeric.argmax", "numpy.array_api.__init__.argmax"], "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__begin": [], "click.testing.CliRunner.make_env": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "typing.Optional", "typing.Mapping"], "google.protobuf.internal.encoder.MessageSizer": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.core.multiarray.asfortranarray": ["numpy.core.numeric.asfortranarray", "numpy.core.multiarray.asfortranarray"], "transformers.data.squad_convert_examples_to_features": ["transformers.data.processors.squad_convert_examples_to_features"], "future.backports.urllib.response.addinfourl": ["future.backports.urllib.response.addbase"], "torch.nn.modules.container.ParameterList": ["torch.nn.modules.module.Module"], "sys.prefix": [], "subprocess.Popen": [], "os.dup2": [], "numpy.nan": ["numpy.core.numeric.nan", "numpy.array_api.__init__.nan"], "dataclasses.field": [], "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__": [], "future.backports.urllib.request.HTTPPasswordMgr": [], "torch.tensor.Tensor.rename": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor._update_names", "torch._namedtensor_internals.update_names", "torch.tensor.Tensor.refine_names", "torch._C._TensorBase"], "urllib3.packages.six._SixMetaPathImporter.load_module": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code", "sys", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six.MovedModule", "sys.modules"], "google.protobuf.internal.containers.data": [], "click.utils.open": ["click._compat.open_stream", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.__repr__", "click.utils.LazyFile.open", "click.utils.LazyFile.close", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__repr__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__getattr__", "click.exceptions.FileError", "click.utils.LazyFile.__init__", "click.utils.KeepOpenFile.__init__", "click.utils.PacifyFlushWrapper.__init__", "typing", "typing.IO", "typing.Any"], "numpy.core.numerictypes.integer": [], "future.backports.urllib.request.Request._parse": ["future.backports.urllib.parse.splittype", "future.backports.urllib.parse.splithost", "future.backports.urllib.parse.unquote"], "sentencepiece.__init__.SampleEncodeAndScore._encode": ["sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.__len__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__len__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor.IsUnknown", "sentencepiece.__init__.SentencePieceProcessor.IsControl", "sentencepiece.__init__.SentencePieceProcessor.IsUnused", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIdsBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropyBatch", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.Encode", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.__len__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__._LogStream.__enter__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__"], "base64.encodebytes": [], "numpy.array_api": ["warnings", "warnings.warn", "numpy.array_api._constants.e", "numpy.array_api._constants.inf", "numpy.array_api._constants.nan", "numpy.array_api._constants.pi", "numpy.array_api._creation_functions.asarray", "numpy.array_api._creation_functions.arange", "numpy.array_api._creation_functions.empty", "numpy.array_api._creation_functions.empty_like", "numpy.array_api._creation_functions.eye", "numpy.array_api._creation_functions.from_dlpack", "numpy.array_api._creation_functions.full", "numpy.array_api._creation_functions.full_like", "numpy.array_api._creation_functions.linspace", "numpy.array_api._creation_functions.meshgrid", "numpy.array_api._creation_functions.ones", "numpy.array_api._creation_functions.ones_like", "numpy.array_api._creation_functions.tril", "numpy.array_api._creation_functions.triu", "numpy.array_api._creation_functions.zeros", "numpy.array_api._creation_functions.zeros_like", "numpy.array_api._data_type_functions.astype", "numpy.array_api._data_type_functions.broadcast_arrays", "numpy.array_api._data_type_functions.broadcast_to", "numpy.array_api._data_type_functions.can_cast", "numpy.array_api._data_type_functions.finfo", "numpy.array_api._data_type_functions.iinfo", "numpy.array_api._data_type_functions.result_type", "numpy.array_api._dtypes.int8", "numpy.array_api._dtypes.int16", "numpy.array_api._dtypes.int32", "numpy.array_api._dtypes.int64", "numpy.array_api._dtypes.uint8", "numpy.array_api._dtypes.uint16", "numpy.array_api._dtypes.uint32", "numpy.array_api._dtypes.uint64", "numpy.array_api._dtypes.float32", "numpy.array_api._dtypes.float64", "numpy.array_api._dtypes.bool", "numpy.array_api._elementwise_functions.abs", "numpy.array_api._elementwise_functions.acos", "numpy.array_api._elementwise_functions.acosh", "numpy.array_api._elementwise_functions.add", "numpy.array_api._elementwise_functions.asin", "numpy.array_api._elementwise_functions.asinh", "numpy.array_api._elementwise_functions.atan", "numpy.array_api._elementwise_functions.atan2", "numpy.array_api._elementwise_functions.atanh", "numpy.array_api._elementwise_functions.bitwise_and", "numpy.array_api._elementwise_functions.bitwise_left_shift", "numpy.array_api._elementwise_functions.bitwise_invert", "numpy.array_api._elementwise_functions.bitwise_or", "numpy.array_api._elementwise_functions.bitwise_right_shift", "numpy.array_api._elementwise_functions.bitwise_xor", "numpy.array_api._elementwise_functions.ceil", "numpy.array_api._elementwise_functions.cos", "numpy.array_api._elementwise_functions.cosh", "numpy.array_api._elementwise_functions.divide", "numpy.array_api._elementwise_functions.equal", "numpy.array_api._elementwise_functions.exp", "numpy.array_api._elementwise_functions.expm1", "numpy.array_api._elementwise_functions.floor", "numpy.array_api._elementwise_functions.floor_divide", "numpy.array_api._elementwise_functions.greater", "numpy.array_api._elementwise_functions.greater_equal", "numpy.array_api._elementwise_functions.isfinite", "numpy.array_api._elementwise_functions.isinf", "numpy.array_api._elementwise_functions.isnan", "numpy.array_api._elementwise_functions.less", "numpy.array_api._elementwise_functions.less_equal", "numpy.array_api._elementwise_functions.log", "numpy.array_api._elementwise_functions.log1p", "numpy.array_api._elementwise_functions.log2", "numpy.array_api._elementwise_functions.log10", "numpy.array_api._elementwise_functions.logaddexp", "numpy.array_api._elementwise_functions.logical_and", "numpy.array_api._elementwise_functions.logical_not", "numpy.array_api._elementwise_functions.logical_or", "numpy.array_api._elementwise_functions.logical_xor", "numpy.array_api._elementwise_functions.multiply", "numpy.array_api._elementwise_functions.negative", "numpy.array_api._elementwise_functions.not_equal", "numpy.array_api._elementwise_functions.positive", "numpy.array_api._elementwise_functions.pow", "numpy.array_api._elementwise_functions.remainder", "numpy.array_api._elementwise_functions.round", "numpy.array_api._elementwise_functions.sign", "numpy.array_api._elementwise_functions.sin", "numpy.array_api._elementwise_functions.sinh", "numpy.array_api._elementwise_functions.square", "numpy.array_api._elementwise_functions.sqrt", "numpy.array_api._elementwise_functions.subtract", "numpy.array_api._elementwise_functions.tan", "numpy.array_api._elementwise_functions.tanh", "numpy.array_api._elementwise_functions.trunc", "numpy.array_api.linalg", "numpy.array_api.linalg.matmul", "numpy.array_api.linalg.tensordot", "numpy.array_api.linalg.matrix_transpose", "numpy.array_api.linalg.vecdot", "numpy.array_api._manipulation_functions.concat", "numpy.array_api._manipulation_functions.expand_dims", "numpy.array_api._manipulation_functions.flip", "numpy.array_api._manipulation_functions.permute_dims", "numpy.array_api._manipulation_functions.reshape", "numpy.array_api._manipulation_functions.roll", "numpy.array_api._manipulation_functions.squeeze", "numpy.array_api._manipulation_functions.stack", "numpy.array_api._searching_functions.argmax", "numpy.array_api._searching_functions.argmin", "numpy.array_api._searching_functions.nonzero", "numpy.array_api._searching_functions.where", "numpy.array_api._set_functions.unique_all", "numpy.array_api._set_functions.unique_counts", "numpy.array_api._set_functions.unique_inverse", "numpy.array_api._set_functions.unique_values", "numpy.array_api._sorting_functions.argsort", "numpy.array_api._sorting_functions.sort", "numpy.array_api._statistical_functions.max", "numpy.array_api._statistical_functions.mean", "numpy.array_api._statistical_functions.min", "numpy.array_api._statistical_functions.prod", "numpy.array_api._statistical_functions.std", "numpy.array_api._statistical_functions.sum", "numpy.array_api._statistical_functions.var", "numpy.array_api._utility_functions.all", "numpy.array_api._utility_functions.any"], "transformers.modeling_auto.AutoModelForQuestionAnswering": [], "pandas.core.groupby.GroupBy.progress_aggregate": [], "future.backports.email": ["future.utils.surrogateescape", "future.utils.surrogateescape.register_surrogateescape"], "numpy.ma.core._recursive_filled": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core._recursive_filled", "numpy.ma.core.mask", "numpy.ma.core.fill_value", "numpy", "numpy.copyto"], "os.makedirs": [], "numpy.ones": ["numpy.ma.core.ones", "numpy.core.numeric.ones", "numpy.array_api.__init__.ones"], "numpy.random._philox.Philox": [], "numpy.core._multiarray_umath._reconstruct.__module__": [], "_sentencepiece.SentencePieceProcessor_SetDecodeExtraOptions": [], "ftplib.FTP": [], "_scproxy._get_proxy_settings": [], "transformers.pipelines.JsonPipelineDataFormat": ["transformers.pipelines.PipelineDataFormat"], "tqdm.std.TqdmDefaultWriteLock.release": ["tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.TRLock", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock"], "numpy.core.overrides.set_array_function_like_doc": ["numpy.core.overrides.public_api", "numpy.core.overrides.array_function_dispatch.decorator.public_api", "numpy.core.overrides.decorator.public_api"], "numpy.polynomial._polybase.ABCPolyBase._int": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "typing.TypeVar": [], "os.getenv": [], "numpy.ma.core.default_fill_value": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._get_dtype_of", "numpy.ma.core._recursive_fill_value", "numpy.ma.core._scalar_fill_value", "numpy.ma.core.default_fill_value._scalar_fill_value", "numpy.ma.core._extremum_fill_value._scalar_fill_value"], "future.backports.xmlrpc.client.end_methodName": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "future.backports.email.message.Message.replace_header": ["future.backports.email.message.Message.__init__", "future.backports.email.message.Message.as_string", "future.backports.email.message.Message.is_multipart", "future.backports.email.message.Message.set_unixfrom", "future.backports.email.message.Message.get_unixfrom", "future.backports.email.message.Message.__getitem__", "future.backports.email.message.Message.__setitem__", "future.backports.email.message.Message.__delitem__", "future.backports.email.message.Message.__contains__", "future.backports.email.message.Message.__iter__", "future.backports.email.message.Message.items", "future.backports.email.message.Message.raw_items", "future.backports.email.message.Message.get_content_maintype", "future.backports.email.message.Message.get_filename", "future.builtins.zip", "future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve", "future.builtins.range", "future.backports.email.message.Message.__len__"], "ctypes": [], "pandas.core.groupby.generic.DataFrameGroupBy.progress_apply": [], "torch.tensor.Tensor.__format__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "numpy.ma.core.arange": ["numpy.ma.core.arange", "numpy.core.numeric.arange", "numpy.core.multiarray.arange", "numpy.array_api.__init__.arange"], "platform": [], "numpy.polynomial.polyutils": [], "future.builtins.__init__.filter": ["future.builtins.iterators.filter", "future.builtins.__init__.filter", "past.builtins.noniterators.filter", "past.builtins.__init__.filter"], "torch.LongStorage": ["torch.storage._StorageBase"], "numpy.core.numerictypes.longlong": [], "numpy.core.multiarray.dtype": ["numpy.core.numeric.dtype", "numpy.core.multiarray.dtype"], "torch.jit.__init__.forward": ["torch.jit.__init__._unique_state_dict", "torch.jit.__init__.RecursiveScriptModule.graph", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.graph", "torch.jit.__init__.ONNXTracedModule.forward.wrapper", "torch.jit.__init__.ONNXTracedModule.wrapper", "torch.jit.__init__.forward.wrapper", "torch.jit.__init__._create_interpreter_name_lookup_fn"], "torch._dl": [], "google.protobuf.internal.wire_format.MessageByteSize": ["google.protobuf.internal.wire_format.TagByteSize", "google.protobuf.internal.wire_format._VarUInt64ByteSizeNoTag", "google.protobuf.message", "google.protobuf.message.ByteSize"], "numpy.core.multiarray.inner": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.inner"], "google.protobuf.internal.wire_format.WIRETYPE_FIXED64": [], "numpy.core.fromnumeric.ndim": ["numpy.core.multiarray.asarray", "numpy.core.fromnumeric._ndim_dispatcher"], "_sentencepiece.SentencePieceProcessor__EncodeAsPieces": [], "_sentencepiece.SentencePieceProcessor_pad_id": [], "torch.tensor.Tensor.rename_": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor._update_names", "torch._namedtensor_internals.update_names", "torch.tensor.Tensor.refine_names", "torch._C._TensorBase"], "time.strptime": [], "numpy.lib.polynomial.poly1d.__mul__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.core.isscalar", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polymul"], "google.protobuf.internal.encoder.SFixed32Sizer": [], "numpy.ma.core._replace_dtype_fields": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy", "numpy.ma.core._replace_dtype_fields_recursive", "numpy.dtype"], "numpy.array_api._typing.Dtype": ["numpy.array_api._typing.Dtype"], "numpy.lib.function_base.__all__": [], "regex.ASCII": ["regex._regex_core.ASCII", "regex.regex.ASCII"], "numpy.multiply": ["numpy.ma.core.multiply", "numpy.core.defchararray.multiply", "numpy.core.umath.multiply", "numpy.array_api.__init__.multiply"], "StringIO": [], "caffe2.python.schema.List.__init__": ["caffe2.python.schema.Field", "caffe2.python.schema.Scalar", "caffe2.python.schema._normalize_field", "numpy", "numpy.int32"], "tempfile.mkdtemp": [], "numpy.lib.utils.__all__": [], "numpy.core.umath.invert": ["numpy.core.umath.invert"], "future.backports.email.message.Message.is_multipart": ["future.builtins.list"], "numpy._typing._generic_alias._GenericAlias.__instancecheck__": ["typing.ClassVar", "typing.NoReturn"], "numpy.core.multiarray.datetime_data": ["numpy.core.multiarray.datetime_data", "numpy.core.numerictypes.datetime_data"], "_sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsPieces": [], "numpy.ma.core.MaskedArray.ptp": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ndarray.trace", "numpy.var", "numpy.subtract"], "transformers.tokenization_utils_base.PaddingStrategy.MAX_LENGTH": ["transformers.tokenization_utils_base.ExplicitEnum"], "asyncio": [], "numpy.core.multiarray.arange": ["numpy.ma.core.arange", "numpy.core.numeric.arange", "numpy.core.multiarray.arange", "numpy.array_api.__init__.arange"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "re", "re.compile"], "torch.nn.Module": ["torch.nn.modules.__init__.Module", "torch.jit.annotations.Module"], "urllib3.packages.six._SixMetaPathImporter._get_module": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code"], "numpy.core.defchararray": ["functools", "numpy.core.overrides", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "numpy.matrixlib.defmatrix.matrix.argmax": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "transformers.pipelines.JsonPipelineDataFormat.save": ["transformers.pipelines.PipelineDataFormat", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines._ScikitCompat.transform", "transformers.pipelines.Pipeline.transform", "transformers.pipelines.Pipeline._forward", "json", "json.dump"], "urllib3.packages.six.X": [], "operator.ne": [], "numpy.core.shape_base": ["numpy.core.fromnumeric", "numpy.core.overrides", "functools", "functools.partial", "numpy.core.overrides.array_function_dispatch", "numpy.core.fromnumeric.size", "numpy.core.fromnumeric.ndim", "numpy.core.fromnumeric.concatenate"], "future.backports.email.message._parseparam": ["future.backports.email.message.Message.__str__", "future.backports.email.message.Message.as_string", "future.backports.email.message.Message.is_multipart", "future.backports.email.message.Message.set_unixfrom", "future.backports.email.message.Message.set_payload", "future.backports.email.message.Message.set_charset", "future.backports.email.message.Message.get_charset", "future.backports.email.message.Message.__setitem__", "future.backports.email.message.Message.__contains__", "future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message.items", "future.backports.email.message.Message.set_raw", "future.backports.email.message.Message.raw_items", "future.backports.email.message.Message.get_content_subtype", "future.backports.email.message.Message.set_default_type", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.set_param", "future.backports.email.message.Message.set_type", "future.backports.email.message.Message.set_boundary", "future.backports.email.message.Message.get_content_charset", "future.backports.email.message.Message.get_charsets", "future.builtins.str", "future.backports.email.message.Message.get_unixfrom", "future.backports.email.message.Message.get_default_type", "future.backports.email.message.Message.get_filename", "future.backports.email.message.Message.__init__", "future.backports.email.message.Message.__getitem__", "future.backports.email.message.Message.__delitem__", "future.backports.email.message.Message.__iter__", "future.backports.email.message.Message.get_content_maintype", "future.backports.email.message.Message.__len__"], "transformers.file_utils.docstring_decorator": ["transformers.file_utils._prepare_output_docstrings", "transformers.file_utils.ModelOutput.__post_init__", "transformers.file_utils.ModelOutput.__delitem__", "transformers.file_utils.ModelOutput.__getitem__", "transformers.file_utils.ModelOutput.__setitem__", "re", "re.search"], "_sentencepiece.SentencePieceTrainer__TrainFromMap2": [], "future.backports.xmlrpc.client.end_double": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "future.backports.xmlrpc.client.Unmarshaller.end_methodName": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.error.HTTPError", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request"], "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "sentencepiece.__init__._surface", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__._end", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__end", "_sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__end"], "numpy.ma.core._MaskedUFunc": [], "numpy.ma.core.ones": ["numpy.ma.core.ones", "numpy.core.numeric.ones", "numpy.array_api.__init__.ones"], "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsPiecesBatch": [], "numpy.core.multiarray.array": ["numpy.ma.core.array", "numpy.core.numeric.array", "numpy.core.records.array", "numpy.core.multiarray.array", "numpy.core.defchararray.array"], "numpy.ma.core.MaskedArray.view": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.getmask", "numpy.ndarray.trace", "numpy.ndarray.view", "numpy.var"], "future.backports.xmlrpc.client.dump_bool": ["future.backports.xmlrpc.client.Unmarshaller.end_value"], "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document": ["torch.utils.data.dataset.Dataset", "typing.List", "random", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document", "random.random", "random.randint"], "caffe2.python.schema.List.all_scalars": ["caffe2.python.schema.Field"], "torch._jit_internal.boolean_dispatch.fn": ["torch._jit_internal.fn", "torch._jit_internal.boolean_dispatch.fn"], "torch._dl.RTLD_LAZY": [], "sentencepiece._sentencepiece.SentencePieceProcessor_IdToPiece": [], "numpy.sum": ["torch.sparse.__init__.sum", "numpy.ma.core.sum", "numpy.core.fromnumeric.sum", "numpy.array_api.__init__.sum"], "numpy.ma.core._MaskedUnaryOperation.__init__": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled"], "sentencepiece._sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsPieces": [], "random.random": [], "future.backports.http.cookiejar.vals_sorted_by_key": ["future.builtins.map"], "tqdm.utils.DisableOnWriteError": ["tqdm.utils.ObjectWrapper"], "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromMap2": [], "_sentencepiece.SentencePieceTrainer__TrainFromMap4": [], "numpy.core.records.record.__getattribute__": ["numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.records.record.__getattribute__", "numpy.core.records.record.__setattr__", "numpy.core.records.recarray.__getattribute__", "numpy.core.records.recarray.__setattr__", "numpy.core.records.format_parser._createdtype", "numpy.core.numerictypes.void"], "numpy.core.multiarray.from_dlpack": ["numpy.core.numeric.from_dlpack", "numpy.core.multiarray.from_dlpack", "numpy.array_api.__init__.from_dlpack", "numpy.core._multiarray_umath.from_dlpack"], "builtins.Exception": [], "torch.cuda._check_capability": ["torch", "torch.cuda.device_count", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "warnings", "warnings.warn", "torch._C"], "_sentencepiece.ImmutableSentencePieceText__score": [], "numpy.ma.core.MaskedArray.__array_finalize__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.getmaskarray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_descr", "numpy.ma.core._check_fill_value", "numpy.ndarray.trace", "numpy.var"], "numpy.ma.core.MaskedArray._recursive_or": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.__new__._recursive_or", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.__new__._recursive_or", "numpy.ndarray.trace", "numpy.var"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol"], "_sentencepiece.new_ImmutableNBestSentencePieceText": [], "future.backports.urllib.request.OpenerDirector.add_handler": ["future.backports.urllib.request.OpenerDirector.add_handler", "future.backports.urllib.request.Request.get_type", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.Request.__init__", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.OpenerDirector.__init__", "future.backports.urllib.request.OpenerDirector._call_chain", "future.backports.urllib.request.ProxyHandler.__init__", "future.backports.urllib.request.HTTPPasswordMgr.__init__", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.AbstractBasicAuthHandler.__init__", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.__init__", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.AbstractDigestAuthHandler.get_entity_digest", "future.backports.urllib.request.AbstractHTTPHandler.__init__", "future.backports.urllib.request.HTTPCookieProcessor.__init__", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.CacheFTPHandler.__init__", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.URLopener.__init__", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.URLopener._open_generic_http", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.URLopener._https_connection", "future.backports.urllib.request.FancyURLopener.__init__", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.__init__", "future.backports.urllib.request.ftpwrapper.init", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.urllib.request.HTTPSHandler.__init__", "future.builtins.int", "bisect", "bisect.insort"], "google.protobuf.internal.well_known_types.ListValue": [], "future.backports.urllib.request.URLopener.http_error": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.Request.get_method", "future.backports.http.client.HTTPSConnection"], "atexit": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize": ["transformers.tokenization_utils.PreTrainedTokenizer"], "torch.cuda._lazy_call": ["torch.cuda.is_initialized", "traceback", "traceback.format_stack"], "_sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsSerializedProto": [], "numpy.ma.core.MaskedArray.__le__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "operator", "operator.le", "numpy.ndarray.trace", "numpy.var"], "numpy.power": ["numpy.lib.scimath.power", "numpy.random.__init__.power", "numpy.ma.core.power", "numpy.core.umath.power"], "numpy.core.isscalar": ["numpy.f2py.auxfuncs.isscalar", "numpy.core.numeric.isscalar"], "numpy.asarray": ["numpy.ma.core.asarray", "numpy.core.numeric.asarray", "numpy.core.multiarray.asarray", "numpy.core.defchararray.asarray", "numpy.array_api.__init__.asarray"], "future.backports.urllib.request.ftpwrapper.endtransfer": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "os", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "torch", "transformers.file_utils.torch_only_method", "torch.cat", "os.path"], "numpy.core._ufunc_config": ["numpy.core.umath.ERR_IGNORE", "numpy.core.umath.ERR_WARN", "numpy.core.umath.ERR_RAISE", "numpy.core.umath.ERR_CALL", "numpy.core.umath.ERR_PRINT", "numpy.core.umath.ERR_LOG", "numpy.core._ufunc_config._unspecified", "numpy.core._ufunc_config._setdef", "contextvars", "contextvars.ContextVar"], "collections._count_elements": [], "google.protobuf.internal.decoder.UInt64Decoder": [], "google.protobuf.internal.well_known_types.ListValue.add_struct": [], "torch.unique_consecutive": ["torch.functional.unique_consecutive"], "future.backports.email.generator.Generator": ["future.backports.email.generator.Generator._handle_text", "future.backports.email.generator.BytesGenerator._handle_text", "future.backports.email.generator._handle_text"], "future.backports.xmlrpc.client.Binary": [], "sentencepiece.__init__._end": ["sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__end", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__end"], "click.testing.isolation.hidden_input": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.testing._pause_echo", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "io.BytesIO", "sys.stdin", "sys.stdout", "sys.stderr", "os.environ", "contextlib.contextmanager"], "hashlib.sha1": [], "pandas.core.groupby.generic.SeriesGroupBy": [], "pandas.core.groupby.groupby.GroupBy": [], "__builtin__.Exception": [], "future.backports.email.message.Message.set_payload": ["future.backports.email.message.Message.get_payload", "future.backports.email.message.Message.set_payload", "future.backports.email.message.Message.set_charset", "future.backports.email.message.Message.get_charset", "future.backports.email.message.Message.get_content_charset", "future.backports.email.message.Message.get_charsets"], "io.StringIO": [], "transformers.pipelines.Conversation": [], "sentencepiece._sentencepiece.new_ImmutableNBestSentencePieceText": [], "torch.cuda.ByteStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "numpy._NoValue": ["numpy._globals._NoValue"], "numpy.array_api._typing.Any": ["torch.jit.annotations.Any", "typing.Any"], "numpy.lib.polynomial.poly1d.__eq__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d"], "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP": [], "future.backports.xmlrpc.client.Unmarshaller.end_boolean": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "numpy.core.multiarray.busdaycalendar": ["numpy.core.multiarray.busdaycalendar", "numpy.core.numerictypes.busdaycalendar"], "pandas.Panel": [], "numpy.core.arrayprint": ["numpy.core.numerictypes.int_", "numpy.core.numerictypes.float_", "numpy.core.numerictypes.complex_", "numpy.core.arrayprint._array_repr_implementation", "numpy.core.arrayprint.array2string", "numpy.core.arrayprint._array_str_implementation", "numpy.core.numerictypes.bool_", "sys", "functools.partial", "sys.maxsize"], "caffe2.python.schema.Struct._struct_from_nested_name.create_internal": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct._struct_from_nested_name.create_internal", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema._struct_from_nested_name.create_internal", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema.Struct"], "torch.autograd.enable_grad": ["torch.__init__.enable_grad", "torch.autograd.grad_mode.enable_grad"], "numpy.core.umath.logical_or": ["numpy.ma.core.logical_or", "numpy.core.umath.logical_or", "numpy.array_api.__init__.logical_or"], "getpass": [], "transformers.modeling_tf_auto.TF_MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING": [], "logging.warning": [], "typing.Type": [], "socket.gethostbyname": [], "google.protobuf.internal.encoder.UInt64Sizer": [], "regex": ["regex.regex", "regex.regex.__all__"], "torch.jit.__init__.RecursiveScriptModule.forward_magic_method": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule"], "numpy.linalg.pinv": ["numpy.dual.pinv", "numpy.linalg.linalg.pinv", "numpy.array_api.linalg.pinv"], "tensorflow.where": [], "tqdm.std.tqdm.fp_write": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.display", "tqdm.std.tqdm.print_status"], "__builtin__": [], "numpy._typing._generic_alias._GenericAlias.__init__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__", "numpy._typing._generic_alias._GenericAlias.__origin__", "numpy._typing._generic_alias._GenericAlias.__args__", "numpy._typing._generic_alias._parse_parameters"], "tensorflow.nn": [], "google.protobuf.internal.encoder.MessageEncoder": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "weakref.proxy": [], "numpy.lib.arraysetops.__all__": [], "numpy.linalg.inv": ["numpy.dual.inv", "numpy.linalg.linalg.inv", "numpy.array_api.linalg.inv"], "future.backports.xmlrpc.client.Error": [], "future.backports.email.headerregistry.Group.__str__": ["future.backports.email.headerregistry.Address.__str__", "future.backports.email.headerregistry.Group.__str__", "future.backports.email.headerregistry.BaseHeader._reconstruct", "future.builtins.str", "future.backports.email.headerregistry.Address.display_name", "future.backports.email.headerregistry.Group.display_name", "future.backports.email.headerregistry.ContentDispositionHeader.content_disposition", "future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.quote_string", "future.backports.email._header_value_parser.SPECIALS"], "sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.__len__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__len__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor.IsUnknown", "sentencepiece.__init__.SentencePieceProcessor.IsControl", "sentencepiece.__init__.SentencePieceProcessor.IsUnused", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIdsBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropyBatch", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.Encode", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.__len__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__._LogStream.__enter__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "torch.nn.modules.container.ModuleList": ["torch.nn.modules.module.Module"], "sentencepiece.__init__.NBestEncode._encode": ["sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.__len__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__len__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor.IsUnknown", "sentencepiece.__init__.SentencePieceProcessor.IsControl", "sentencepiece.__init__.SentencePieceProcessor.IsUnused", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIdsBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropyBatch", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.Encode", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.__len__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__._LogStream.__enter__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__"], "google.protobuf.internal.encoder.DoubleSizer": [], "future.backports.http.cookiejar.http2time": ["future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar._timegm", "future.builtins.int", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar._str2time"], "_sentencepiece.ImmutableNBestSentencePieceText_swiginit": [], "numpy.core.numerictypes._scalar_type_key": ["numpy.core.multiarray.dtype"], "numpy.floor_divide": ["numpy.ma.core.floor_divide", "numpy.core.umath.floor_divide", "numpy.array_api.__init__.floor_divide"], "click.utils": ["click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__iter__", "typing_extensions", "click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.__exit__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__exit__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "typing.TYPE_CHECKING", "typing.TypeVar", "typing_extensions.ParamSpec"], "click.utils.should_strip_ansi": ["click._compat.should_strip_ansi"], "numpy._typing._generic_alias._GenericAlias.__args__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__"], "caffe2.python.schema.ListWithEvicted.__init__": ["caffe2.python.schema.List", "caffe2.python.schema.Field", "caffe2.python.schema.Scalar", "caffe2.python.schema._normalize_field", "numpy", "numpy.int64"], "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING": [], "sentencepiece._sentencepiece.new_SentencePieceProcessor": [], "_sentencepiece.SentencePieceProcessor__DecodePiecesAsImmutableProto": [], "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece_swiginit": [], "torch.contiguous_format": [], "transformers.pipelines.PipedPipelineDataFormat.save": ["transformers.pipelines.PipelineDataFormat", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict"], "winreg.OpenKey": [], "numpy.ma.core.make_mask": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.make_mask_descr", "numpy.ndarray", "numpy", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._shrink_mask", "numpy.ones", "numpy.bool_", "numpy.array"], "numpy.core.numeric.identity": ["numpy.core.multiarray.dtype", "numpy.eye", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module"], "transformers.modeling_tf_auto.TF_MODEL_FOR_QUESTION_ANSWERING_MAPPING": [], "numpy.lib.polynomial.poly1d.integ": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.polyint", "numpy.lib.polynomial.poly1d.__mul__", "numpy.lib.polynomial.poly1d.__getitem__", "numpy.lib.polynomial.poly1d.__setitem__"], "numpy.core._type_aliases._concrete_types": [], "builtins.float": [], "numpy.core._multiarray_umath.from_dlpack": [], "tqdm.std.tqdm.set_lock": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock"], "transformers.modeling_auto.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING": [], "numpy.core.multiarray.ascontiguousarray": ["numpy.core.numeric.ascontiguousarray", "numpy.core.multiarray.ascontiguousarray"], "future.backports.xmlrpc.client.Marshaller.dump_bool": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "numpy.array_api._dtypes._integer_dtypes": [], "numpy.ma.core._DomainTan.__call__": ["numpy", "numpy.core.umath", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.core.umath.less", "numpy.core.umath.absolute", "numpy.core.umath.cos", "numpy.errstate"], "tqdm.std.EMA": [], "future.backports.urllib.parse.splitvalue": ["future.backports.urllib.parse.Quoter.__repr__", "re", "re.compile"], "numpy.core.numerictypes.longfloat": [], "numpy.core.numerictypes.csingle": [], "numpy.ma.extras": ["numpy.ma.extras._fromnxfunction_allargs", "numpy.ma.extras._fromnxfunction_seq", "numpy.ma.extras._fromnxfunction_single", "numpy.ma.extras.apply_along_axis", "numpy.ma.extras.mr_class", "numpy.ma.extras.vander", "numpy.ma.extras.polyfit", "numpy.ma.extras.apply_over_axes", "numpy", "numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.core", "numpy.ma.core.doc_note", "numpy.apply_along_axis", "numpy.vander", "numpy.polyfit", "numpy.apply_over_axes", "numpy.ma.core.dot", "numpy.ma.core.mask_rowcols"], "future.backports.urllib.parse.quote_from_bytes": ["future.builtins.bytes", "future.builtins.str", "future.backports.urllib.parse._ResultMixinStr.encode", "future.backports.urllib.parse._ResultMixinBytes.decode", "future.backports.urllib.parse.Quoter"], "sentencepiece.__init__._begin": ["sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__begin", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__begin"], "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText_ImmutableSentencePiece": [], "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__id": [], "sentencepiece._sentencepiece.ImmutableSentencePieceText_swiginit": [], "contextlib.contextmanager": [], "numpy.core.numeric.dtype": ["numpy.core.numeric.dtype", "numpy.core.multiarray.dtype"], "numpy.split": ["torch.__init__.split", "torch.functional.split", "numpy.lib.shape_base.split", "numpy.core.defchararray.split", "regex.regex.split"], "future.backports.xmlrpc.client.DateTime.__str__": [], "torch.tensor.Tensor.grad": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "warnings", "torch.tensor.Tensor.retain_grad", "torch.tensor.Tensor.grad", "torch.tensor.Tensor.retain_grad_hook", "torch.tensor.grad", "torch._C._TensorBase", "warnings.warn"], "numpy.core.numerictypes.double": [], "numpy.ma.core._frommethod.__call__": ["numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.asanyarray", "numpy.ma.core.MaskedArray.dtype", "numpy"], "urllib3.packages.six.b": ["urllib3.packages.six.MovedModule._resolve", "urllib3.packages.six.MovedAttribute._resolve", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.is_package"], "pickle.dump": [], "numpy.lib.function_base": ["functools", "numpy.core.overrides", "numpy.lib.function_base._inverted_cdf", "numpy.lib.function_base._get_gamma_mask", "numpy.lib.function_base._closest_observation", "numpy.lib.function_base._compute_virtual_index", "numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy", "functools.partial", "numpy.core.overrides.array_function_dispatch", "numpy.intp", "numpy.floor", "numpy.ceil", "numpy.around", "numpy.core.multiarray.bincount", "numpy.core.function_base.add_newdoc", "numpy.core.multiarray.add_docstring", "numpy.core.umath._add_newdoc_ufunc"], "caffe2.python.schema.Struct.__add__": ["caffe2.python.schema.Field", "caffe2.python.schema.Struct", "caffe2.python.schema.Struct.get_children", "collections.OrderedDict", "caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.List.field_types", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.set_type", "future.utils.viewitems"], "urllib3.packages.six.MovedAttribute": ["urllib3.packages.six._LazyDescr"], "future.backports.urllib.request.URLopener.addheader": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.http.client.HTTPSConnection"], "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece_swiginit": [], "numpy.f2py.symbolic.RelOp.tostring": ["enum.Enum", "numpy.f2py.symbolic.Language", "numpy.f2py.symbolic.RelOp"], "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePieces": [], "urllib3.response.HTTPResponse.readinto": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse._init_length", "urllib3.response.HTTPResponse.fileno", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.HTTPResponse.from_httplib", "urllib3.response.HTTPResponse.readable", "io.IOBase", "zlib.error", "brotli.error"], "numpy.ma.core._recursive_mask_or": ["numpy.ma.core._recursive_mask_or", "numpy.core.umath", "numpy.core.umath.logical_or"], "google.protobuf.internal.encoder.BytesSizer": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "typing.IO": [], "handler.decode": [], "future.backports.urllib.parse.splitpasswd": ["future.backports.urllib.parse.Quoter.__repr__", "re", "future.backports.urllib.parse._NetlocResultMixinBase.username", "future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "re.compile", "re.S"], "numpy.ma.core._MaskedUFunc.__init__": [], "numpy.lib.polynomial.poly1d.__ne__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d"], "numpy.lib.histograms.__all__": [], "click.testing.CliRunner.isolation.visible_input": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.testing._pause_echo", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "os.environ", "sys.stdin", "sys.stdout", "sys.stderr", "io.BytesIO", "contextlib.contextmanager"], "torch.jit.__init__.ONNXTracedModule.forward": ["torch.nn.Module", "torch.jit.__init__._unique_state_dict", "torch.jit.__init__.RecursiveScriptModule.graph", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.graph", "torch.jit.__init__.ONNXTracedModule.forward.wrapper", "torch.jit.__init__.ONNXTracedModule.wrapper", "torch.jit.__init__.forward.wrapper", "torch.jit.__init__._create_interpreter_name_lookup_fn"], "transformers.pipelines.DefaultArgumentHandler": ["transformers.pipelines.ArgumentHandler"], "torch.tensor.Tensor.__hash__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "torch.nn.modules.container.Sequential": ["torch.nn.modules.module.Module"], "numpy.ma.core._check_fill_value": ["numpy", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.default_fill_value", "numpy.ndarray", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.view", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__eq__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__le__", "numpy.ma.core.MaskedArray.__ge__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.tofile", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._recursive_set_fill_value", "numpy.dtype", "numpy.asarray", "numpy.array", "numpy.void"], "urllib3.packages.six.Iterator": [], "google.protobuf.internal.encoder.SInt64Sizer": [], "urllib3.packages.six._LazyModule.__init__": ["types", "urllib3.packages.six._LazyModule", "types.ModuleType"], "numpy.ma.mrecords.MaskedRecords.__setattr__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.__getattribute__", "numpy.ma.mrecords.MaskedRecords.__setattr__", "numpy.ndarray", "numpy.ma.mrecords.MaskedRecords.__new__", "numpy.ma.mrecords.MaskedRecords.__array_finalize__", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.__len__", "numpy.ma.mrecords.MaskedRecords.__getitem__", "numpy.ma.mrecords.MaskedRecords.__setitem__", "numpy.ma.mrecords.MaskedRecords.__repr__", "numpy.ma.mrecords.MaskedRecords.view", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ma.mrecords.MaskedRecords.__getstate__", "numpy.ma.mrecords.MaskedRecords.__setstate__", "numpy.ma.mrecords.MaskedRecords.__reduce__", "numpy.ma.masked", "numpy.ma.filled", "numpy.ma.getmaskarray", "numpy.ndarray.__getattribute__"], "google.protobuf.internal.encoder.Int64Sizer": [], "future.backports.xmlrpc.client.end_dateTime": ["future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data", "future.backports.xmlrpc.client._datetime_type"], "numpy.core.overrides.array_function_from_dispatcher.decorator": ["numpy.core.overrides.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_from_dispatcher.decorator", "numpy.core.overrides.array_function_dispatch"], "future.backports.urllib.parse._NetlocResultMixinBase.password": [], "numpy.ma.core._extrema_operation.outer": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.getmaskarray", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core.MaskedArray"], "urllib3.packages.six.byte2int": [], "sentencepiece._sentencepiece.ImmutableNBestSentencePieceText_swiginit": [], "google.protobuf.internal.encoder.SFixed32Encoder": [], "numpy.ma.core._MaskedPrintOption.enable": ["numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__", "numpy.ma.core.MaskedArray.shrink_mask"], "transformers.data.processors.squad.SquadV1Processor": ["transformers.data.processors.squad.SquadProcessor"], "google.protobuf.internal.decoder.EnumDecoder": ["google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.containers", "google.protobuf.internal.containers.UnknownFieldSet", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.message._unknown_fields", "google.protobuf.message._unknown_field_set"], "torch.jit.__init__.ScriptMeta": [], "urllib3.packages.six.next": [], "caffe2.python.schema.Scalar.set_metadata": ["caffe2.python.schema.Field", "caffe2.python.schema.Scalar.set_value", "caffe2.python.schema.Metadata", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.List.field_types", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.set_type"], "_sentencepiece.SentencePieceProcessor_IdToPiece": [], "urllib3.packages.six._SixMetaPathImporter.create_module": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code", "urllib3.packages.six._SixMetaPathImporter.find_spec"], "numpy.lib.arrayterator.Arrayterator": [], "pandas.core.series.Series": [], "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromMap": [], "numpy.lib.polynomial.poly1d.__init__": ["numpy.core.overrides.set_module", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.__iter__", "numpy.lib.polynomial.poly1d.deriv", "numpy.lib.polynomial.roots", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.coeffs", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.__div__", "numpy.lib.polynomial.__rdiv__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.variable", "numpy.lib.polynomial.poly1d.__setitem__", "warnings", "numpy.lib.polynomial.poly", "numpy.core.atleast_1d", "numpy.lib.function_base.trim_zeros", "numpy.lib.polynomial.poly1d.__len__", "numpy.core.numeric", "warnings.warn", "numpy.core.numeric.array"], "future.backports.http.cookies.BaseCookie.__parse_string": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.Morsel.__init__", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.isReservedKey", "future.backports.http.cookies.Morsel.OutputString", "future.backports.http.cookies.BaseCookie.__init__", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.BaseCookie.__parse_string", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_encode", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.Morsel", "future.backports.http.cookies._unquote"], "sentencepiece._sentencepiece.SentencePieceProcessor_serialized_model_proto": [], "tensorflow.reverse": [], "numpy.core.function_base": ["functools", "numpy.core.overrides", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING": [], "torch.tensor.Tensor.reinforce.trim": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.reinforce.trim", "torch.tensor.Tensor.trim", "torch.tensor.reinforce.trim", "torch._C._TensorBase"], "numpy.core.numerictypes.longdouble": [], "regex.UNICODE": ["regex._regex_core.UNICODE", "regex.regex.UNICODE"], "pandas.core.common.is_builtin_func": [], "future.backports.urllib.request.Request.has_header": [], "numpy.ma.core.MaskedArray.__gt__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "operator", "operator.gt", "numpy.ndarray.trace", "numpy.var"], "numpy.core.multiarray.MAXDIMS": ["numpy.core.numeric.MAXDIMS", "numpy.core.multiarray.MAXDIMS"], "google.protobuf.internal.encoder.Fixed64Sizer": [], "numpy.polynomial._polybase.ABCPolyBase.has_samedomain": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy", "abc.ABC", "os.name", "numpy.all"], "future.backports.xmlrpc.client.Unmarshaller.end_fault": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "google.protobuf.internal.type_checkers.BoolValueChecker": [], "tqdm.std.TqdmWarning": [], "numpy.ma.core.MaskedArray.__getstate__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.getmaskarray", "numpy.ndarray.trace", "numpy.var"], "numpy.ma.core.MaskedArray.__setstate__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__eq__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__le__", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__ge__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__pow__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.make_mask_descr", "numpy.ndarray.trace", "numpy.var"], "numpy.core._ufunc_config.errstate": ["numpy.core.overrides.set_module", "contextlib", "contextlib.ContextDecorator"], "numpy.polynomial._polybase.ABCPolyBase.fit": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.domain", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_term", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_scalar", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_", "numpy.polynomial.polyutils", "numpy.polynomial._polybase.ABCPolyBase.has_sametype", "numpy.polynomial._polybase.ABCPolyBase.__len__", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.window", "numpy.polynomial._polybase.ABCPolyBase.symbol", "numpy.polynomial._polybase.ABCPolyBase.copy", "numpy.polynomial._polybase.ABCPolyBase.identity", "numpy.polynomial._polybase.ABCPolyBase.degree", "numpy.polynomial._polybase.ABCPolyBase.cutdeg", "numpy.polynomial._polybase.ABCPolyBase._pow", "numpy.polynomial._polybase.ABCPolyBase.__pow__", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.symbol", "numpy.polynomial.polyutils.getdomain", "numpy.polynomial.polyutils.mapdomain", "abc.ABC", "os.name"], "transformers.data.processors.utils.DataProcessor.get_labels": [], "numpy.core.overrides.set_module.decorator": ["numpy.core.overrides.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_from_dispatcher.decorator"], "mimetypes.guess_type": [], "numpy.lib.stride_tricks": [], "transformers.data.processors.glue.glue_convert_examples_to_features": ["typing.Union", "typing.Optional", "typing.List", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue._tf_glue_convert_examples_to_features", "tensorflow", "transformers.data.processors.glue._glue_convert_examples_to_features", "tensorflow.data"], "numpy.ma.core.__all__": [], "click._termui_impl.ProgressBar.render_progress": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "click.utils.echo", "click._compat.term_len", "shutil", "shutil.get_terminal_size", "typing.Generic"], "numpy.lib.arraysetops": ["functools", "numpy.core.overrides", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "future.backports.urllib.parse._NetlocResultMixinStr": ["future.backports.urllib.parse._NetlocResultMixinBase", "future.backports.urllib.parse._ResultMixinStr"], "torch.save": ["torch.__init__.save", "numpy.lib.npyio.save", "torch.serialization.save"], "numpy.ma.core.MaskedArray.tobytes": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document": ["torch.utils.data.dataset.Dataset", "random", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document.truncate_seq_pair", "transformers.data.datasets.language_modeling.create_examples_from_document.truncate_seq_pair", "torch", "torch.tensor", "torch.long", "random.random", "random.randint"], "numpy.logical_not": ["numpy.ma.core.logical_not", "numpy.core.umath.logical_not", "numpy.array_api.__init__.logical_not"], "future.backports.email.message.Message.get_content_type": ["future.backports.email.message.Message.values", "future.backports.email.message._splitparam"], "_sentencepiece.SentencePieceProcessor__NBestEncodeAsSerializedProto": [], "numpy.ndarray.__getitem__": [], "itertools.chain.from_iterable": [], "joblib._dask._joblib_probe_task": [], "future.backports.http.cookies._quote": ["future.backports.http.cookies.BaseCookie.__parse_string", "future.builtins.str", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.isReservedKey", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.BaseCookie.js_output"], "numpy.ma.core._MaskedBinaryOperation.outer": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.getdata", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core.getmask", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.getmaskarray", "numpy.core.umath", "numpy", "numpy.ma.core.get_masked_subclass", "numpy.copyto", "numpy.core.umath.logical_or"], "click._compat.open_stream": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._AtomicFile.close", "os", "click._compat.get_text_stdin", "click._compat._AtomicFile.name", "click._compat.get_text_stdout", "click._compat.get_binary_stdin", "click._compat.get_binary_stdout", "click._compat._wrap_io_open", "random", "click._compat._NonClosingTextIOWrapper.__del__", "click._compat._FixupStream.read1", "click._compat._FixupStream.readable", "click._compat._FixupStream.seekable", "click._compat._AtomicFile.__repr__", "errno", "click._compat._AtomicFile", "typing.Optional", "typing.cast", "typing.IO", "typing.Any", "typing.Tuple", "random.randrange", "os.fspath", "os.fsdecode", "os.stat", "os.O_EXCL", "os.O_RDWR", "os.O_CREAT", "os.open", "os.path", "os.access", "os.W_OK", "os.name", "os.chmod", "errno.EEXIST", "errno.EACCES"], "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesAsImmutableProtoBatch": [], "numpy.ma.core.MaskedArray.sort": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ndarray.trace", "numpy.ndarray.sort", "numpy.var", "numpy.take_along_axis"], "numpy.ma.core.filled": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.fill_value", "numpy.ndarray", "numpy", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core._check_fill_value", "numpy.ma.core._recursive_filled", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.array", "numpy.ma.core.asarray", "numpy.asanyarray", "numpy.copyto", "numpy.choose"], "sentencepiece._sentencepiece.ImmutableNBestSentencePieceText__nbests_size": [], "numpy.typing": ["numpy._pytesttester.PytestTester", "numpy._typing._add_docstring._docstrings", "numpy._typing.ArrayLike", "numpy._typing.DTypeLike", "numpy._typing.NBitBase", "numpy._typing.NDArray"], "numpy.polynomial._polybase.ABCPolyBase.integ": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.symbol", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.basis_name", "numpy.polynomial._polybase.ABCPolyBase._mul", "numpy.polynomial._polybase.ABCPolyBase._fromroots", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.ABCPolyBase.has_sametype", "numpy.polynomial._polybase.ABCPolyBase.__format__", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_term", "numpy.polynomial._polybase.ABCPolyBase.__mul__", "numpy.polynomial._polybase.ABCPolyBase.__mod__", "numpy.polynomial._polybase.ABCPolyBase.__divmod__", "numpy.polynomial._polybase.ABCPolyBase.__rmul__", "numpy.polynomial._polybase.ABCPolyBase.__rmod__", "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__", "numpy.polynomial._polybase.ABCPolyBase.trim", "numpy.polynomial._polybase.ABCPolyBase.mapparms", "numpy.polynomial._polybase.ABCPolyBase.fromroots", "os.name", "abc.ABC"], "_sentencepiece.new_ImmutableSentencePieceText": [], "numpy.tril": ["numpy.lib.twodim_base.tril", "numpy.array_api.__init__.tril"], "pickle.HIGHEST_PROTOCOL": [], "logging.info": [], "torch._namedtensor_internals.single_ellipsis_index": ["torch._namedtensor_internals.is_ellipsis"], "numpy.ma.core._check_mask_axis": ["numpy", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy._NoValue"], "future.backports.xmlrpc.client.__repr__": ["future.utils.ensure_new_type"], "future.backports.http.client.HTTPConnection": ["future.backports.http.client.HTTPResponse", "future.backports.http.client.HTTPConnection.set_debuglevel"], "tensorflow.shape": [], "numpy.ma.core.wrapped_method": ["numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask"], "pandas.core.groupby.PanelGroupBy": [], "numpy.lib.shape_base": ["numpy.core.vstack", "functools", "numpy.core.overrides", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "numpy.core.multiarray.MAY_SHARE_EXACT": ["numpy.core.numeric.MAY_SHARE_EXACT", "numpy.core.multiarray.MAY_SHARE_EXACT"], "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsPieces": [], "future.backports.xmlrpc.client.dump_datetime": ["future.backports.xmlrpc.client._strftime", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__id": [], "sentencepiece.__init__._id": ["sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__id", "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__id"], "numpy.matrixlib.defmatrix.matrix": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "contextlib": [], "google.protobuf.internal.encoder.UInt32Sizer": [], "uuid": [], "numpy.core.multiarray.nditer": ["numpy.core.numeric.nditer", "numpy.core.multiarray.nditer"], "numpy.core.numerictypes.float16": [], "future.backports.email.message.Message.set_param": ["future.backports.email.message.Message.set_charset", "future.backports.email.message.Message.get_charset", "future.backports.email.message.Message.get_content_charset", "future.backports.email.message.Message.get_charsets", "future.backports.email.message.Message.values", "future.backports.email.message.Message.add_header", "future.backports.email.message.Message.replace_header", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.get_param", "future.backports.email.message.Message.set_param", "future.backports.email.message.Message.del_param", "future.backports.email.message._formatparam"], "numpy.core.multiarray.datetime_as_string": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.datetime_as_string"], "numpy.core.multiarray.CLIP": ["numpy.core.numeric.CLIP", "numpy.core.multiarray.CLIP"], "operator.itemgetter": [], "subprocess": [], "google.protobuf.descriptor.DescriptorBase": ["google.protobuf.descriptor.DescriptorMetaclass"], "google.protobuf.internal.type_checkers.Uint32ValueChecker": ["google.protobuf.internal.type_checkers.IntValueChecker"], "numpy.core.einsumfunc": [], "numpy.array_api._array_object.Array.__str__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.array_api._array_object.Array.__str__", "numpy.ndarray"], "urllib3.packages.six.MovedAttribute.__init__": ["urllib3.packages.six._LazyDescr", "urllib3.packages.six.MovedAttribute"], "tqdm.std.TqdmDefaultWriteLock.create_th_lock": ["tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.TRLock", "warnings.warn", "tqdm.std.TqdmDeprecationWarning"], "numpy.asanyarray": ["numpy.ma.core.asanyarray", "numpy.core.numeric.asanyarray", "numpy.core.multiarray.asanyarray"], "pandas.core.groupby.groupby.DataFrameGroupBy.progress_apply": [], "torch.tensor.Tensor": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "socket.gethostbyname_ex": [], "importlib.util.spec_from_loader": [], "functools.update_wrapper": [], "torch.jit.annotations.List": ["torch.jit.annotations.List", "torch._jit_internal.List"], "numpy.random._generator.Generator": [], "future.backports.urllib.parse._NetlocResultMixinBase.username": [], "tqdm.std.Bar.colour": ["warnings.warn", "tqdm.std.TqdmWarning", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.print_status", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.Bar.__init__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm._decr_instances", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.display", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.std.Bar.colour", "tqdm.std.colour"], "pandas.core.groupby.DataFrameGroupBy.progress_apply": [], "caffe2.python.schema.Scalar.has_blobs": ["caffe2.python.schema.Field"], "click.termui._getchar": [], "numpy.core.numeric.extend_all": [], "google.protobuf.internal.decoder.MessageDecoder": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "future.backports.xmlrpc.client.Unmarshaller.end_array": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "numpy.lib.twodim_base.diag": ["numpy.core.numeric.asanyarray", "numpy.core.numeric.zeros", "numpy.core.numeric.diagonal", "numpy.lib.twodim_base._diag_dispatcher"], "future.backports.urllib.parse.unquote": ["future.backports.urllib.parse._NetlocResultMixinStr._userinfo", "future.backports.urllib.parse._NetlocResultMixinStr._hostinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._userinfo", "future.backports.urllib.parse._NetlocResultMixinBytes._hostinfo", "future.backports.urllib.parse.Quoter.__init__", "future.backports.urllib.parse.Quoter.__missing__", "future.builtins.range", "future.backports.urllib.parse.unquote_to_bytes"], "numpy.ma.core._frommethod.__init__": [], "tqdm.std.EMA.__call__": ["tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str"], "google.protobuf.internal.containers.field_number": [], "future.backports.xmlrpc.client.ExpatParser.feed": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "future.backports.urllib.parse.splittag": ["future.backports.urllib.parse.Quoter.__repr__", "re", "future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "re.compile"], "future.backports.urllib.parse.urlunsplit": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.backports.urllib.parse._coerce_args"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.__len__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__len__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor.IsUnknown", "sentencepiece.__init__.SentencePieceProcessor.IsControl", "sentencepiece.__init__.SentencePieceProcessor.IsUnused", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIdsBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropyBatch", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.Encode", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.__len__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__._LogStream.__enter__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "future.backports.urllib.parse.password": [], "numpy.core.records.record": ["numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.numerictypes.void"], "numpy.broadcast": ["torch.cuda.nccl.broadcast", "numpy.core.numeric.broadcast", "numpy.core.multiarray.broadcast"], "google.protobuf.internal.encoder": ["google.protobuf.internal.encoder._SimpleSizer", "google.protobuf.internal.encoder._SignedVarintSize", "google.protobuf.internal.encoder._ModifiedSizer", "google.protobuf.internal.encoder._FixedSizer", "google.protobuf.internal.encoder._VarintEncoder", "google.protobuf.internal.encoder._SignedVarintEncoder", "google.protobuf.internal.encoder._SimpleEncoder", "google.protobuf.internal.encoder._ModifiedEncoder", "google.protobuf.internal.encoder._StructPackEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.ZigZagEncode", "google.protobuf.internal.wire_format.WIRETYPE_FIXED32", "google.protobuf.internal.wire_format.WIRETYPE_FIXED64", "google.protobuf.internal.wire_format.WIRETYPE_VARINT"], "numpy.core._multiarray_umath._flagdict": [], "future.backports.misc.K": [], "socket.getfqdn": [], "future.backports.xmlrpc.client.end_string": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "numpy.core.hstack": ["numpy.ma.extras.hstack", "numpy.core.shape_base.hstack"], "transformers.data.processors.glue.glue_output_modes": [], "torch.nonzero": ["numpy.ma.core.nonzero", "numpy.core.fromnumeric.nonzero", "numpy.array_api.__init__.nonzero"], "google.protobuf.internal.wire_format.WIRETYPE_FIXED32": [], "numpy.ma.core.ndim": ["numpy", "numpy.ma.core.getdata", "numpy.ndim"], "collections.Mapping": [], "future.backports.xmlrpc.client.end_boolean": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "torch.nn.modules.container.Container": ["torch.nn.modules.module.Module"], "_sentencepiece.ImmutableSentencePieceText__pieces_size": [], "sentencepiece._sentencepiece.SentencePieceTrainer__TrainFromMap3": [], "requests.cookies.RequestsCookieJar.multiple_domains": ["requests.compat.cookielib", "requests.compat.MutableMapping", "requests.cookies.RequestsCookieJar.list_domains", "requests.cookies.RequestsCookieJar.multiple_domains", "requests.cookies.RequestsCookieJar.set_cookie", "requests.cookies.RequestsCookieJar.iterkeys", "requests.cookies.RequestsCookieJar.itervalues", "requests.cookies.RequestsCookieJar.iteritems", "requests.compat.cookielib.CookieJar"], "numpy.ma.core._MaskedBinaryOperation.__call__": ["numpy.ma.core._MaskedUFunc", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.getdata", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy", "numpy.ma.core.getmask", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.core.umath", "numpy.ma.core.getmaskarray", "numpy.ma.core.get_masked_subclass", "numpy.ma.core.MaskedArray", "numpy.errstate", "numpy.seterr", "numpy.copyto", "numpy.core.umath.logical_or"], "numpy.ma.core.MaskedArray.shape": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.shape", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.getmask", "numpy.ndarray.trace", "numpy.var"], "_sentencepiece.ImmutableSentencePieceText__text": [], "torch.version.cuda": [], "numpy.ma.core.MaskedArray.count": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.core.numeric.normalize_axis_tuple", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.ndarray.trace", "numpy.var", "numpy._NoValue", "numpy.matrix", "numpy.zeros", "numpy.bool_", "numpy.full", "numpy.AxisError", "numpy.intp", "numpy.array"], "google.protobuf.pyext._message.FieldDescriptor": [], "numpy.core._type_aliases.sctypeDict": ["numpy.core.numerictypes.sctypeDict"], "builtins.complex": [], "click.testing.CliRunner.isolation.hidden_input": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.testing._pause_echo", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "os.environ", "sys.stdin", "sys.stdout", "sys.stderr", "io.BytesIO", "contextlib.contextmanager"], "packaging.specifiers.Specifier._compare_not_equal": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier._canonical_spec", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "DLFCN.RTLD_GLOBAL": [], "torch.utils.hooks": [], "numpy.core.numerictypes.int64": ["numpy.array_api.__init__.int64"], "os.stat": [], "google.protobuf.internal.decoder.Int32Decoder": [], "torch.unique": ["torch.functional.unique", "numpy.lib.arraysetops.unique", "numpy.ma.extras.unique"], "numpy.polynomial._polybase.ABCPolyBase.linspace": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.domain", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_term", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_scalar", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.basis_name", "numpy.polynomial._polybase.ABCPolyBase._int", "numpy.polynomial._polybase.ABCPolyBase._line", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.__init__", "numpy.polynomial._polybase.ABCPolyBase.__len__", "numpy.polynomial._polybase.ABCPolyBase.__neg__", "numpy.polynomial._polybase.ABCPolyBase.__ne__", "numpy.polynomial._polybase.ABCPolyBase.truncate", "numpy.polynomial._polybase.ABCPolyBase.convert", "numpy.polynomial._polybase.ABCPolyBase.integ", "numpy.polynomial._polybase.ABCPolyBase.linspace", "numpy.polynomial._polybase.ABCPolyBase.identity", "numpy", "numpy.polynomial._polybase.ABCPolyBase.symbol", "numpy.polynomial._polybase.ABCPolyBase.has_sametype", "numpy.polynomial._polybase.ABCPolyBase.copy", "abc.ABC", "numpy.linspace", "os.name"], "itertools": [], "numpy.matmul": ["torch.__init__.matmul", "numpy.core.numeric.matmul", "numpy.core.multiarray.matmul", "numpy.array_api.linalg.matmul", "numpy.array_api.__init__.matmul"], "joblib._dask._make_tasks_summary": ["joblib._dask._WeakKeyDictionary.__len__", "joblib._dask._funcname"], "numpy.lib.type_check.imag": ["numpy.core.numeric.asanyarray", "numpy.lib.type_check._imag_dispatcher"], "numpy.core.multiarray.zeros": ["numpy.ma.core.zeros", "numpy.core.numeric.zeros", "numpy.core.multiarray.zeros", "numpy.array_api.__init__.zeros"], "tqdm.std.tqdm.format_dict": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "collections.defaultdict"], "numpy._typing._generic_alias._GenericAlias.__call__": ["typing.ClassVar", "typing.Any"], "transformers.pipelines.QuestionAnsweringPipeline": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines.Pipeline"], "numpy.core.records.format_parser._setfieldnames": ["numpy.core.overrides.set_module", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.format_parser._createdtype", "numpy.core.records.record.__str__", "numpy.core.records.format_parser.__init__", "numpy.core.records.record.pprint", "numpy.core.records.recarray.__new__", "numpy.core.records.recarray.__array_finalize__", "numpy.core.records.record.__repr__", "numpy.core.records.recarray.__repr__", "numpy.core.records.record.__getattribute__", "numpy.core.records.record.__getitem__", "numpy.core.records.recarray.__getattribute__", "numpy.core.records.recarray.__getitem__", "numpy.core.records.recarray.field", "numpy.core.records.find_duplicate"], "numpy.core.numerictypes.bool_": ["numpy.ma.core.bool_"], "torch.BoolStorage": ["torch.storage._StorageBase"], "numpy.lib.polynomial._raise_power": ["numpy.lib.polynomial.poly1d.__init__", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.polynomial.poly1d.__neg__", "numpy.lib.polynomial.poly1d.__ne__", "numpy.lib.polynomial.poly1d.integ"], "numpy.ma.core.MaskedArray.take": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.getmask", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ndarray.trace", "numpy.var", "numpy.take"], "tqdm.std.TqdmDefaultWriteLock.create_mp_lock": ["tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.TRLock", "threading.RLock", "multiprocessing.RLock"], "past.builtins.noniterators.filter": ["future.builtins.iterators.filter", "future.builtins.__init__.filter", "past.builtins.noniterators.filter", "past.builtins.__init__.filter"], "future.backports.xmlrpc.client.MultiCall.__repr__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.__str__", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.__repr__"], "numpy.core.multiarray.fromstring": ["numpy.core.numeric.fromstring", "numpy.core.records.fromstring", "numpy.core.multiarray.fromstring"], "transformers.pipelines.QuestionAnsweringArgumentHandler": ["transformers.pipelines.ArgumentHandler"], "torch.nn.modules.container.ModuleDict.values": ["torch.nn.modules.module.Module", "torch._jit_internal._copy_to_script_wrapper"], "packaging.specifiers.SpecifierSet.__repr__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__"], "torch.cuda.IntStorage": ["torch.cuda._CudaBase", "torch", "torch.storage._StorageBase", "torch._C"], "tqdm.notebook.display": ["tqdm.notebook.tqdm_notebook.display", "tqdm.notebook.tqdm_notebook.update", "tqdm.notebook.tqdm_notebook.close", "tqdm.notebook.close", "html.escape", "tqdm.notebook.TqdmHBox.__repr__", "tqdm.notebook.TqdmHBox._repr_pretty_", "tqdm.notebook.tqdm_notebook.reset", "re", "tqdm.notebook.display", "IPython.display.display", "re.split"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter"], "numpy.core._multiarray_umath.from_dlpack.__module__": [], "pandas.core.groupby.SeriesGroupBy": [], "transformers.tokenization_utils_base.PaddingStrategy": ["transformers.tokenization_utils_base.ExplicitEnum"], "_sentencepiece.SentencePieceTrainer__TrainFromMap3": [], "torch.uint8": ["numpy.array_api.__init__.uint8"], "click.termui": ["typing", "typing.TYPE_CHECKING", "typing.TypeVar", "typing.Callable", "typing.Optional"], "unittest.TestCase": [], "future.backports.xmlrpc.client.Transport.send_headers": ["future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection"], "numpy.lib.format._read_array_header": ["numpy.lib.format._read_bytes", "struct", "numpy.lib.format._filter_header", "numpy.lib.utils.safe_eval", "numpy.lib.format.descr_to_dtype", "struct.calcsize", "struct.unpack"], "numpy.core.overrides.array_function_dispatch.decorator": ["numpy.core.overrides.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_from_dispatcher.decorator", "numpy.core._multiarray_umath.add_docstring", "numpy.core.overrides.verify_matching_signatures", "numpy.core.overrides.public_api", "numpy.core.overrides.array_function_dispatch.decorator.public_api", "numpy.core.overrides.decorator.public_api"], "time.gmtime": [], "numpy.compat.pickle": ["numpy.compat.py3k.pickle"], "caffe2.python.schema.Scalar.__init__": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.Field.has_blobs", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.List.has_blobs", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.ListWithEvicted.has_blobs", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Struct.has_blobs", "caffe2.python.schema.Scalar.has_blobs", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.metadata", "caffe2.python.schema.Scalar.set_metadata", "caffe2.python.schema.Scalar._validate_metadata", "caffe2.python.schema.metadata"], "datetime.datetime": [], "numpy.ma.core.MaskedArray.iscontiguous": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "google.protobuf.internal.well_known_types.Struct": [], "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter": ["transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize", "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__", "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus", "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator", "numpy", "numpy.random"], "numpy.compat.py3k._isfileobj": ["io", "io.FileIO", "io.BufferedReader", "io.BufferedWriter"], "time.strftime": [], "future.utils.as_native_str.encoder": ["future.utils.encoder", "future.utils.as_native_str.encoder", "future.utils.wrapper", "future.utils.as_native_str.encoder.wrapper", "future.utils.encoder.wrapper", "functools", "functools.wraps"], "sentencepiece._sentencepiece.SentencePieceProcessor_LoadFromFile": [], "future.backports.urllib.request.HTTPPasswordMgr.add_password": ["future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.HTTPPasswordMgr.is_suburi", "future.builtins.str", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.is_unverifiable", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.get_authorization", "future.backports.urllib.request.AbstractHTTPHandler.set_http_debuglevel", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.UnknownHandler.unknown_open", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.URLopener.cleanup", "future.backports.urllib.request.URLopener.open_unknown", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth"], "numpy.ma.core.flatten_structured_array": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy", "numpy.ma.core.MaskedArray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core.flatten_sequence", "numpy.ma.core.flatten_structured_array.flatten_sequence", "numpy.ma.core.getmaskarray", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.asanyarray", "numpy.array"], "numpy.polynomial._polybase.ABCPolyBase.deriv": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.symbol", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.basis_name", "numpy.polynomial._polybase.ABCPolyBase._mul", "numpy.polynomial._polybase.ABCPolyBase._fromroots", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.ABCPolyBase.has_sametype", "numpy.polynomial._polybase.ABCPolyBase.__format__", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_term", "numpy.polynomial._polybase.ABCPolyBase.__mul__", "numpy.polynomial._polybase.ABCPolyBase.__mod__", "numpy.polynomial._polybase.ABCPolyBase.__divmod__", "numpy.polynomial._polybase.ABCPolyBase.__rmul__", "numpy.polynomial._polybase.ABCPolyBase.__rmod__", "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__", "numpy.polynomial._polybase.ABCPolyBase.trim", "numpy.polynomial._polybase.ABCPolyBase.mapparms", "numpy.polynomial._polybase.ABCPolyBase.fromroots", "os.name", "abc.ABC"], "click.testing.name": ["click.testing.CliRunner.should_strip_ansi"], "urllib3.util.response.is_response_to_head": [], "numpy.ma.core.MaskedArrayFutureWarning": [], "torch._dl.RTLD_GLOBAL": [], "click._termui_impl.ProgressBar.finish": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Generic"], "numpy.core.multiarray.WRAP": ["numpy.core.numeric.WRAP", "numpy.core.multiarray.WRAP"], "google.protobuf.internal.wire_format.Fixed64ByteSize": ["google.protobuf.internal.wire_format.TagByteSize"], "numpy.core.multiarray.asanyarray": ["numpy.ma.core.asanyarray", "numpy.core.numeric.asanyarray", "numpy.core.multiarray.asanyarray"], "numpy.f2py.symbolic.Expr.__repr__": [], "future.backports.urllib.parse.urlunparse": ["future.backports.urllib.parse.DefragResult.geturl", "future.backports.urllib.parse.SplitResult.geturl", "future.backports.urllib.parse.ParseResult.geturl", "future.backports.urllib.parse.DefragResultBytes.geturl", "future.backports.urllib.parse.SplitResultBytes.geturl", "future.backports.urllib.parse.ParseResultBytes.geturl", "future.backports.urllib.parse._coerce_args", "future.backports.urllib.parse.urlunsplit"], "torch.load": ["torch.__init__.load", "numpy.lib.npyio.load", "joblib.__init__.load", "torch.serialization.load"], "numpy.core._multiarray_umath._set_promotion_state": [], "future.backports.xmlrpc.client.DateTime": [], "joblib.parallel.AutoBatchingMixin": ["joblib._parallel_backends.AutoBatchingMixin"], "tqdm.utils._screen_shape_wrapper": ["tqdm.utils._screen_shape_windows", "tqdm.utils._screen_shape_tput", "tqdm.utils._screen_shape_linux"], "numpy.ma.core.__itruediv__": ["numpy.ma.core.getdata", "numpy.ma.core._DomainSafeDivide", "numpy.ma.core.getmask", "numpy.ma.core.mask_or", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__eq__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__le__", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__ge__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__pow__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy", "numpy.where", "numpy.true_divide"], "future.backports.http.cookiejar._str2time": ["future.builtins.int", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "time", "future.backports.http.cookiejar.Cookie.__init__", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.Cookie.__str__", "future.backports.http.cookiejar.CookiePolicy.set_ok", "future.backports.http.cookiejar.CookiePolicy.return_ok", "future.backports.http.cookiejar.CookiePolicy.path_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.__init__", "future.backports.http.cookiejar.DefaultCookiePolicy.is_not_allowed", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_path", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_version", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_verifiability", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_expires", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_port", "future.backports.http.cookiejar.DefaultCookiePolicy.path_return_ok", "future.backports.http.cookiejar.CookieJar.__init__", "future.backports.http.cookiejar.CookieJar.set_policy", "future.backports.http.cookiejar.CookieJar._cookies_for_request", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar.set_cookie_if_ok", "future.backports.http.cookiejar.CookieJar.set_cookie", "future.backports.http.cookiejar.CookieJar.extract_cookies", "future.backports.http.cookiejar.CookieJar.__iter__", "future.backports.http.cookiejar.CookieJar.__str__", "future.backports.http.cookiejar.FileCookieJar.__init__", "future.backports.http.cookiejar.FileCookieJar.revert", "future.backports.http.cookiejar.LWPCookieJar.as_lwp_str", "future.backports.http.cookiejar._timegm", "future.backports.http.cookiejar.offset_from_tz_string", "time.localtime", "time.time"], "operator.length_hint": [], "numpy.array_api._typing.Array._new": [], "numpy.ma.core.MaskedArray.__ipow__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.getdata", "numpy.ma.core.getmask", "numpy.ma.core.mask_or", "numpy.ndarray.trace", "numpy.var", "numpy.where", "numpy.errstate", "numpy.logical_not", "numpy.isfinite", "numpy.copyto"], "tqdm.std.tqdm.write": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.fp_write", "sys", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.display", "tqdm.std.tqdm.print_status", "sys.stdout"], "torch.manager_path": ["platform", "torch._utils_internal.get_file_path", "torch._utils_internal.prepare_multiprocessing_environment", "os", "os.path", "platform.system"], "itertools.chain": [], "numpy.core.einsumfunc.__all__": [], "numpy.ma.core.MaskedArray.__lt__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "operator", "operator.lt", "numpy.ndarray.trace", "numpy.var"], "numpy.core.numerictypes.single": [], "tqdm.std.tqdm.__reversed__": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm.__reversed__"], "numpy.random.bit_generator.SeedSequence": [], "numpy._CopyMode": ["numpy._globals._CopyMode"], "_sentencepiece.SentencePieceProcessor__DecodePiecesBatch": [], "sys.maxsize": [], "numpy.ma.core.MaskedArray.partition": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "warnings", "numpy.ma.core.MaskedArray.argsort", "numpy.ndarray.trace", "numpy.var", "warnings.warn"], "future.backports.xmlrpc.client._datetime_type": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "datetime.datetime", "datetime.datetime.strptime"], "numpy.array_api.__init__.logical_not": ["numpy.ma.core.logical_not", "numpy.core.umath.logical_not", "numpy.array_api.__init__.logical_not", "numpy.array_api._elementwise_functions.logical_not"], "sentencepiece.__init__.SentencePieceTrainer._Train._encode": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.SentencePieceTrainer", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._surface", "io.StringIO", "io.BytesIO", "csv", "sys", "csv.writer", "sys.version_info"], "google.protobuf.internal.decoder.Fixed64Decoder": [], "numpy.ma.core.MaskedArray.flat": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedIterator", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.flat", "numpy.ndarray.trace", "numpy.var"], "future.backports.xmlrpc.client.dump_double": ["future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.utils.ensure_new_type", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "google.protobuf.internal.wire_format.SFixed32ByteSize": ["google.protobuf.internal.wire_format.TagByteSize"], "transformers.file_utils.replace_return_docstrings.docstring_decorator": ["transformers.file_utils.docstring_decorator", "transformers.file_utils.add_start_docstrings.docstring_decorator", "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator", "transformers.file_utils.add_end_docstrings.docstring_decorator", "transformers.file_utils.add_code_sample_docstrings.docstring_decorator", "transformers.file_utils.replace_return_docstrings.docstring_decorator", "transformers.file_utils.ModelOutput.__post_init__", "transformers.file_utils.ModelOutput.__delitem__", "transformers.file_utils.ModelOutput.__getitem__", "transformers.file_utils.ModelOutput.__setitem__", "re", "transformers.file_utils._prepare_output_docstrings", "re.search"], "numpy.polynomial._polybase.ABCPolyBase._line": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "numpy.core.multiarray.concatenate": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.concatenate"], "pandas.core.frame.DataFrame.progress_apply": [], "urllib3.packages.six._SixMetaPathImporter.__get_module": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code"], "sentencepiece._sentencepiece.new_ImmutableSentencePieceText": [], "future.backports.urllib.request.FileHandler": ["future.backports.urllib.request.BaseHandler", "future.backports.urllib.request.FileHandler.get_names"], "torch.tensor.retain_grad.retain_grad_hook": ["weakref", "torch.tensor.Tensor.retain_grad.retain_grad_hook", "torch.tensor.Tensor.retain_grad_hook", "torch.tensor.retain_grad.retain_grad_hook", "torch.tensor.Tensor.retain_grad", "torch.tensor.Tensor.grad", "torch.tensor.grad", "torch", "torch.contiguous_format", "weakref.ref"], "torch.as_tensor": [], "future.backports.urllib.request.URLopener.__del__": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.http.client.HTTPSConnection"], "urllib3.packages.six._SixMetaPathImporter.__init__": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code"], "caffe2.python.schema.Scalar.__call__": ["caffe2.python.schema.Field"], "click.utils.LazyFile.close": [], "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__piece": [], "transformers.modeling_tf_auto.TF_MODEL_WITH_LM_HEAD_MAPPING": [], "future.backports.urllib.parse._decode_args": [], "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsSerializedProto": [], "numpy._typing._generic_alias._GenericAlias.__origin__": ["typing.ClassVar"], "torch.utils.data.dataset.ConcatDataset": ["torch.utils.data.dataset.Dataset"], "google.protobuf.internal.type_checkers.Int32ValueChecker": ["google.protobuf.internal.type_checkers.IntValueChecker"], "numpy.choose": ["numpy.ma.core.choose", "numpy.core.fromnumeric.choose"], "numpy.lib.polynomial": ["functools", "numpy.core.overrides", "numpy.lib.polynomial.poly1d.__repr__", "re", "numpy.lib.polynomial.RankWarning", "warnings", "functools.partial", "numpy.core.overrides.array_function_dispatch", "re.compile", "warnings.simplefilter"], "tornado.gen.TimeoutError": [], "caffe2.python.schema.Scalar._validate_metadata": ["caffe2.python.schema.Field", "numpy", "numpy.issubdtype", "numpy.integer"], "_sentencepiece.SentencePieceProcessor__NBestEncodeAsPieces": [], "transformers.pipelines._ScikitCompat": ["abc.ABC"], "os.getcwd": [], "pandas.core.groupby.groupby.PanelGroupBy.progress_apply": [], "tqdm.std.tqdm.get_lock": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmDefaultWriteLock"], "tokenizers.tokenizers.Encoding": [], "tqdm.std.tqdm.display": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.TqdmDeprecationWarning", "sys", "sys.stderr"], "numpy.iscomplexobj": ["numpy.lib.type_check.iscomplexobj"], "click._compat.isatty": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.IO", "typing.Any"], "future.backports.email.utils.formatdate": ["time", "future.backports.email.utils.localtime", "future.backports.email.utils._format_timetuple_and_zone", "time.time", "time.localtime", "time.gmtime", "time.daylight", "time.altzone", "time.timezone"], "future.backports.urllib.request.URLopener.cleanup": ["future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_full_url", "future.backports.urllib.request.Request.add_data", "future.backports.urllib.request.Request.has_data", "future.backports.urllib.request.Request.get_data", "future.backports.urllib.request.URLopener.open_data", "future.backports.http.client", "future.backports.urllib.request.FileHandler.file_open", "future.backports.urllib.request.FileHandler.open_local_file", "future.backports.urllib.request.URLopener.open_file", "future.backports.urllib.request.URLopener.open_local_file", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.file_close", "future.backports.http.client.HTTPSConnection"], "tqdm.std.TqdmMonitorWarning": ["tqdm.std.TqdmWarning"], "sentencepiece._sentencepiece.ImmutableSentencePieceText_SerializeAsString": [], "torch.tensor.wrapped": ["torch.tensor.Tensor.reinforce", "torch.tensor.Tensor.stft", "torch.tensor.Tensor.__format__", "torch.tensor.Tensor.__floordiv__", "torch.tensor.Tensor.__rfloordiv__", "torch.tensor.Tensor.__cuda_array_interface__", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor.unflatten", "functools", "functools.wraps"], "numpy.core.multiarray.ndarray": ["numpy.core.numeric.ndarray", "numpy.core.multiarray.ndarray"], "numpy.core.defchararray.asarray": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.array", "numpy.core.overrides.set_module"], "caffe2.python.schema.Scalar.metadata": ["caffe2.python.schema.Field"], "numpy.core.multiarray.lexsort": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.lexsort"], "torch.nn.modules.container.ModuleDict": ["torch.nn.modules.module.Module"], "future.backports.urllib.parse._NetlocResultMixinBase.hostname": ["future.backports.urllib.parse._NetlocResultMixinBase.hostname", "future.backports.urllib.parse.hostname"], "numpy.ma.core.MaskedConstant.__iop__": ["numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.__iadd__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.__isub__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.__imul__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.__itruediv__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.__ipow__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.__iop__"], "numpy.prod": ["numpy.ma.core.prod", "numpy.core.fromnumeric.prod", "numpy.array_api.__init__.prod"], "uuid.UUID": [], "transformers.tokenization_utils_base.BatchEncoding": ["collections.UserDict"], "future.backports.urllib.request.OpenerDirector.error": ["future.builtins.dict", "future.backports.urllib.request.HTTPDefaultErrorHandler.http_error_default", "future.backports.urllib.request.HTTPRedirectHandler.http_error_302", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.HTTPBasicAuthHandler.http_error_401", "future.backports.urllib.request.ProxyBasicAuthHandler.http_error_407", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.HTTPDigestAuthHandler.http_error_401", "future.backports.urllib.request.ProxyDigestAuthHandler.http_error_407", "future.backports.urllib.request.URLopener.http_error", "future.backports.urllib.request.URLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_default", "future.backports.urllib.request.FancyURLopener.http_error_302", "future.backports.urllib.request.FancyURLopener.http_error_301", "future.backports.urllib.request.FancyURLopener.http_error_303", "future.backports.urllib.request.FancyURLopener.http_error_307", "future.backports.urllib.request.FancyURLopener.http_error_401", "future.backports.urllib.request.FancyURLopener.http_error_407"], "numpy.matrixlib.defmatrix.bmat": ["numpy.matrixlib.defmatrix.matrix", "numpy.matrixlib.defmatrix._from_string", "sys", "numpy.matrixlib.defmatrix.matrix.tolist", "numpy.core.numeric.concatenate", "numpy.core.numeric", "numpy.core.overrides.set_module", "sys._getframe", "numpy.core.numeric.ndarray"], "torch.utils.data.sampler.num_samples": ["torch.utils.data.sampler.SequentialSampler.__len__", "torch.utils.data.sampler.RandomSampler.__len__", "torch.utils.data.sampler.SubsetRandomSampler.__len__", "torch.utils.data.sampler.WeightedRandomSampler.__len__", "torch.utils.data.sampler.BatchSampler.__len__"], "numpy.core.multiarray.may_share_memory": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.may_share_memory"], "tqdm.std.TqdmDefaultWriteLock.__exit__": ["tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.TRLock"], "pandas.core.frame.DataFrame.progress_applymap": [], "future.backports.urllib.request._parse_proxy": ["future.backports.urllib.parse.splittype", "future.backports.urllib.request.Request.set_proxy", "future.backports.urllib.request.Request.has_proxy", "future.backports.urllib.request.ProxyHandler.proxy_open", "future.backports.urllib.request.URLopener.open_unknown_proxy", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.ftpwrapper.endtransfer", "future.backports.urllib.parse.splituser", "future.backports.urllib.request.HTTPPasswordMgr.find_user_password", "future.backports.urllib.request.HTTPPasswordMgrWithDefaultRealm.find_user_password", "future.backports.urllib.request.FancyURLopener.get_user_passwd", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.HTTPPasswordMgr.add_password", "future.backports.urllib.parse.splitpasswd"], "numpy.core.multiarray.vdot": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.vdot"], "numpy.core.overrides.decorator": ["numpy.core.overrides.verify_matching_signatures", "numpy.core._multiarray_umath.add_docstring", "numpy.core.overrides.public_api", "numpy.core.overrides.array_function_dispatch.decorator.public_api", "numpy.core.overrides.decorator.public_api", "numpy.core.overrides.array_function_dispatch"], "base64.decodebytes": [], "numpy.array_api.__init__.asarray": ["numpy.ma.core.asarray", "numpy.core.numeric.asarray", "numpy.core.multiarray.asarray", "numpy.core.defchararray.asarray", "numpy.array_api.__init__.asarray", "numpy.array_api._creation_functions.asarray"], "numpy.ma.core.MaskedArray.__ne__": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "operator", "operator.ne", "numpy.ndarray.trace", "numpy.var"], "numpy.core.numeric.copyto": ["numpy.core.numeric.copyto", "numpy.core.multiarray.copyto"], "torch.tensor.Tensor.retain_grad.retain_grad_hook": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "weakref", "torch.tensor.Tensor.retain_grad.retain_grad_hook", "torch.tensor.Tensor.retain_grad_hook", "torch.tensor.retain_grad.retain_grad_hook", "torch.tensor.Tensor.retain_grad", "torch.tensor.Tensor.grad", "torch.tensor.grad", "torch.contiguous_format", "torch._C._TensorBase", "weakref.ref"], "os.fspath": [], "numpy.polynomial._polybase.ABCPolyBase.identity": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.window", "numpy.polynomial.polyutils", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.symbol", "numpy.polynomial._polybase.symbol", "numpy.polynomial.polyutils.mapparms", "abc.ABC", "os.name"], "numpy.lib.format._check_version": [], "numpy.matrixlib.defmatrix.matrix.max": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "numpy.array2string": ["numpy.core.arrayprint.array2string"], "numpy.core.multiarray.busday_offset": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.busday_offset"], "torch.floor_divide": ["numpy.ma.core.floor_divide", "numpy.core.umath.floor_divide", "numpy.array_api.__init__.floor_divide"], "numpy.core.multiarray.compare_chararrays": ["numpy.core.numeric.compare_chararrays", "numpy.core.multiarray.compare_chararrays"], "numpy.lib.polynomial.__all__": [], "google.protobuf.internal.type_checkers.Int64ValueChecker": ["google.protobuf.internal.type_checkers.IntValueChecker"], "numpy.ma.core.MaskedArray.tofile": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ndarray.trace", "numpy.var"], "numpy.core.function_base.__all__": [], "future.builtins.iterators.filter": ["future.builtins.iterators.filter", "future.builtins.__init__.filter", "past.builtins.noniterators.filter", "past.builtins.__init__.filter"], "_sentencepiece.new_ImmutableSentencePieceText_ImmutableSentencePiece": [], "click.testing.output": ["click.testing.CliRunner.should_strip_ansi"], "google.protobuf.internal.encoder.FloatSizer": [], "pandas.core.window.rolling._Rolling_and_Expanding": [], "_sentencepiece.SentencePieceProcessor_SetEncodeExtraOptions": [], "numpy.unravel_index": ["numpy.lib.index_tricks.unravel_index", "numpy.core.multiarray.unravel_index"], "future.backports.xmlrpc.client.end_array": [], "torch.tensor.Tensor.__reversed__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "builtins.str": [], "urllib3.packages.six.create_bound_method": ["types", "types.MethodType"], "google.protobuf.internal.wire_format.UInt64ByteSize": ["google.protobuf.internal.wire_format.TagByteSize", "google.protobuf.internal.wire_format._VarUInt64ByteSizeNoTag"], "_sentencepiece.new_SentencePieceProcessor": [], "pandas.core.window.rolling.Rolling": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "os", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "os.path"], "future.builtins.__init__.open": ["future.builtins.misc.open", "future.builtins.__init__.open"], "functools": [], "future.backports.email.message.Message.get_default_type": [], "glob.glob": [], "typing.cast": [], "os.RTLD_LAZY": [], "google.protobuf.internal.type_checkers.EnumValueChecker": [], "urllib3.packages.six.reraise": [], "urllib3.packages.six.Module_six_moves_urllib_parse": ["urllib3.packages.six._LazyModule"], "torch.ByteStorage": ["torch.storage._StorageBase"], "_sentencepiece.SentencePieceProcessor_LoadFromSerializedProto": [], "sentencepiece._sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsSerializedProto": [], "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED": [], "future.utils.metaclass": [], "pandas.core.groupby.groupby.PanelGroupBy": [], "click.testing.CliRunner.isolation.should_strip_ansi": ["click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "click.testing.CliRunner.should_strip_ansi", "typing", "click.testing.make_input_stream", "sys", "click.formatting", "click.testing.CliRunner.make_env", "io", "click.testing.EchoingStdin", "click.testing._NamedTextIOWrapper", "click.termui", "click.utils", "click.testing.CliRunner.isolation.visible_input", "click.testing.isolation.visible_input", "click.testing.CliRunner.isolation.hidden_input", "click.testing.isolation.hidden_input", "click.testing.CliRunner.isolation._getchar", "click.testing.isolation._getchar", "click.testing.CliRunner.isolation.should_strip_ansi", "click.testing.isolation.should_strip_ansi", "os", "contextlib", "click.utils.should_strip_ansi", "click.formatting.FORCED_WIDTH", "typing.Optional", "typing.Union", "typing.Mapping", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Iterator", "typing.Tuple", "click.termui.visible_prompt_func", "click.termui.hidden_prompt_func", "click.termui._getchar", "os.environ", "sys.stdin", "sys.stdout", "sys.stderr", "io.BytesIO", "contextlib.contextmanager"], "transformers.pipelines.CsvPipelineDataFormat.save": ["transformers.pipelines.PipelineDataFormat", "typing.List", "transformers.pipelines._ScikitCompat.predict", "transformers.pipelines.Pipeline.predict", "transformers.pipelines.PipelineDataFormat.from_str", "transformers.pipelines._ScikitCompat.transform", "transformers.pipelines.Pipeline.transform", "transformers.pipelines.Pipeline._forward", "csv", "csv.DictWriter"], "numpy.core.multiarray.BUFSIZE": ["numpy.core.numeric.BUFSIZE", "numpy.core.multiarray.BUFSIZE"], "numpy.ma.core._convert2ma.__call__": ["numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__pow__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__ipow__", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.put", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.ptp", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__iop__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.argsort"], "tqdm.utils.disp_len": ["tqdm.utils._text_width"], "transformers.data.SquadExample": ["transformers.data.processors.SquadExample"], "numpy.bool_": ["numpy.ma.core.bool_"], "transformers.file_utils.add_start_docstrings.docstring_decorator": ["transformers.file_utils.docstring_decorator", "transformers.file_utils.add_start_docstrings.docstring_decorator", "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator", "transformers.file_utils.add_end_docstrings.docstring_decorator", "transformers.file_utils.add_code_sample_docstrings.docstring_decorator", "transformers.file_utils.replace_return_docstrings.docstring_decorator"], "numpy.lib.ufunclike.__all__": [], "sentencepiece._sentencepiece.SentencePieceProcessor_swiginit": [], "future.backports.xmlrpc.client.Unmarshaller.end_double": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "numpy.core.fromnumeric.var": ["numpy", "numpy.core.multiarray", "numpy.core.fromnumeric.var", "numpy.core._methods", "numpy.core.fromnumeric._var_dispatcher", "numpy.core.multiarray.ndarray", "numpy.core._methods._var", "numpy._NoValue"], "tqdm.std.tqdm._comparable": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet"], "torch.QUInt8Storage": ["torch.storage._StorageBase"], "torch.BFloat16Storage": ["torch.storage._StorageBase"], "tqdm.std.colour": ["warnings.warn", "tqdm.std.TqdmWarning", "tqdm.std.tqdm.__len__", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.print_status", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.acquire", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.Bar.__init__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm._decr_instances", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.display", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.inner_generator", "tqdm.std.tqdm.inner", "tqdm.std.Bar.colour", "tqdm.std.colour"], "_sentencepiece.SentencePieceProcessor_PieceToId": [], "future.backports.xmlrpc.client.DateTime.__repr__": ["future.utils.ensure_new_type"], "numpy.lib.nanfunctions.__all__": [], "caffe2.python.schema._struct_from_nested_name.create_internal": ["caffe2.python.schema.Field.field_names", "caffe2.python.schema.List.field_names", "caffe2.python.schema.ListWithEvicted.field_names", "caffe2.python.schema.Struct.field_names", "caffe2.python.schema.Scalar.field_names", "caffe2.python.schema.Struct._struct_from_nested_name", "caffe2.python.schema.Struct._get_field_by_nested_name", "caffe2.python.schema.Struct.__len__", "caffe2.python.schema.Struct._struct_from_nested_name.create_internal", "caffe2.python.schema.Struct.create_internal", "caffe2.python.schema._struct_from_nested_name.create_internal", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.Field.field_metadata", "caffe2.python.schema.Field.field_blobs", "caffe2.python.schema.List.field_types", "caffe2.python.schema.List.field_metadata", "caffe2.python.schema.List.field_blobs", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.ListWithEvicted.field_metadata", "caffe2.python.schema.ListWithEvicted.field_blobs", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Struct.field_metadata", "caffe2.python.schema.Struct.field_blobs", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.field_metadata", "caffe2.python.schema.Scalar.field_blobs", "caffe2.python.schema._SchemaNode.get_field", "caffe2.python.schema.Struct"], "google.protobuf.internal.decoder.SInt32Decoder": [], "transformers.modeling_auto.MODEL_FOR_QUESTION_ANSWERING_MAPPING": [], "numpy.lib.polynomial.__str__.fmt_float": ["numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.coeffs", "numpy.core.numeric", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.type_check.iscomplex", "numpy.lib.polynomial.poly1d.__str__.fmt_float", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.__str__.fmt_float", "numpy.lib.type_check.real", "numpy.lib.type_check.imag", "numpy.lib.polynomial._raise_power", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__sub__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.lib.polynomial.poly1d.__eq__", "numpy.core.numeric.logical_or"], "tqdm.std.status_printer.fp_write": ["tqdm.std.tqdm.fp_write", "sys", "tqdm.std.tqdm.status_printer.print_status", "tqdm.std.tqdm.print_status", "tqdm.std.status_printer.print_status", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.TqdmDefaultWriteLock.release", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm._decr_instances", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.pandas", "tqdm.std.tqdm.__reversed__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__hash__", "tqdm.std.tqdm.close", "tqdm.std.tqdm.refresh", "tqdm.std.tqdm.unpause", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.display", "sys.stderr", "sys.stdout"], "google.protobuf.internal.wire_format.Fixed32ByteSize": ["google.protobuf.internal.wire_format.TagByteSize"], "numpy.ma.mrecords.MaskedRecords.__setstate__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.__getstate__", "numpy.ma.mrecords.MaskedRecords.__setstate__", "numpy.ndarray", "numpy.dtype", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.bool_", "numpy.ma.mrecords.MaskedRecords.__new__", "numpy.ma.mrecords.MaskedRecords.__array_finalize__", "numpy.ma.mrecords.MaskedRecords._data", "numpy.ma.mrecords.MaskedRecords.__len__", "numpy.ma.mrecords.MaskedRecords.__getattribute__", "numpy.ma.mrecords.MaskedRecords.__setattr__", "numpy.ma.mrecords.MaskedRecords.__getitem__", "numpy.ma.mrecords.MaskedRecords.__setitem__", "numpy.ma.mrecords.MaskedRecords.__str__", "numpy.ma.mrecords.MaskedRecords.__repr__", "numpy.ma.mrecords.MaskedRecords.__reduce__", "numpy.ndarray.__setstate__"], "sentencepiece._sentencepiece.SentencePieceProcessor__DecodePiecesAsSerializedProto": [], "sentencepiece._sentencepiece.SentencePieceProcessor__NBestEncodeAsPieces": [], "numpy.core.numerictypes.sctypeDict": ["numpy.core.numerictypes.sctypeDict", "numpy.core._type_aliases.sctypeDict"], "future.backports.xmlrpc.client.end_value": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "numpy.all": ["numpy.ma.core.all", "numpy.core.fromnumeric.all", "numpy.array_api.__init__.all"], "numpy.ma.mrecords.MaskedRecords.tolist": ["numpy.ma.MaskedArray", "numpy.array", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask"], "numpy.core.numeric.nonzero": ["numpy.ma.core.nonzero", "numpy.core.fromnumeric.nonzero", "numpy.array_api.__init__.nonzero"], "future.backports.email._header_value_parser": ["future.backports.email._header_value_parser.TokenList.__repr__", "future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.Terminal.__repr__", "re", "future.backports.email._header_value_parser.ValueTerminal", "re.compile"], "future.backports.email.message.Message.get_content_maintype": [], "handler.encode": [], "tensorflow.gather_nd": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special", "collections.Counter", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.do_lower_case", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "re", "sacremoses", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.save_vocabulary", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.move_added_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_to_tensor", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.get_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_batch", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__", "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator", "pickle", "transformers.file_utils.is_torch_available", "torch", "torch.load", "pickle.load", "sacremoses.MosesPunctNormalizer", "sacremoses.MosesTokenizer", "sacremoses.MosesDetokenizer", "re.compile"], "caffe2.python.schema.Field.__eq__": [], "urllib3.packages.six._MovedItems": ["urllib3.packages.six._LazyModule"], "tensorflow.reshape": [], "google.protobuf.internal.encoder.SInt32Sizer": [], "numpy.array_api.__init__.ones": ["numpy.ma.core.ones", "numpy.core.numeric.ones", "numpy.array_api.__init__.ones", "numpy.array_api._creation_functions.ones"], "operator.attrgetter": [], "numpy.lib.twodim_base": ["numpy.core.iinfo", "numpy.lib.twodim_base.eye", "functools", "numpy.core.overrides", "numpy.core.numeric.int8", "numpy.core.numeric.int16", "numpy.core.numeric.int32", "numpy.lib.twodim_base._eye_dispatcher", "numpy.lib.twodim_base._tri_dispatcher", "numpy.lib.twodim_base.tri", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "numpy.compat.py3k.long": ["numpy.compat.py3k.long", "past.builtins.__init__.long", "past.types.__init__.long"], "future.builtins.super": ["future.builtins.misc.super", "future.builtins.__init__.super"], "click.formatting": ["click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.write_text", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "typing.Optional"], "dask.distributed.Client": [], "google.protobuf.internal.type_checkers.Uint64ValueChecker": ["google.protobuf.internal.type_checkers.IntValueChecker"], "tqdm.std.tqdm.wrapattr": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status", "tqdm.std.tqdm.inner_generator", "tqdm.utils.CallbackIOWrapper", "contextlib.contextmanager"], "numpy.polynomial._polybase.ABCPolyBase.basis_name": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "torch.QInt32Storage": ["torch.storage._StorageBase"], "ctypes.CDLL": [], "numpy.random.__init__.Generator": ["future.backports.email.generator.Generator", "numpy.random.__init__.Generator", "numpy.random._generator.Generator"], "pandas.core.groupby.groupby.GroupBy.progress_transform": [], "traceback.print_exc": [], "pandas.core.groupby.generic.DataFrameGroupBy": [], "click.exceptions.ClickException": [], "builtins.all": [], "torch.serialization.load": ["cPickle", "pickle", "torch.serialization._check_dill_version", "sys", "torch.serialization._open_file_like", "torch.serialization._is_zipfile", "torch.serialization._legacy_load", "torch.serialization._open_zipfile_reader", "torch.serialization._is_torchscript_zip", "torch.serialization._load", "warnings", "torch", "warnings.warn", "sys.version_info", "torch.jit"], "torch.random.seed": ["torch.random.seed", "torch._C.default_generator", "torch._C.default_generator.seed"], "numpy.lib.npyio": ["numpy.lib.npyio.loadtxt", "numpy.core.overrides", "numpy.lib.npyio._loadtxt_dispatcher", "numpy.lib.npyio._genfromtxt_dispatcher", "numpy.lib.npyio.genfromtxt", "functools", "functools.partial", "numpy.core.overrides.array_function_dispatch", "numpy.core.multiarray.packbits", "numpy.core.multiarray.unpackbits", "numpy.lib._datasource.DataSource"], "transformers.modelcard.ModelCard": [], "numpy.f2py.symbolic.Expr.tostring": ["numpy.f2py.symbolic.Precedence", "numpy.f2py.symbolic.Language", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic.ArithOp", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.RelOp"], "packaging.specifiers.Specifier.__repr__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "pandas.core.series.Series.progress_map": [], "_sentencepiece.SentencePieceProcessor__DecodePiecesAsSerializedProto": [], "tqdm.std.pandas.inner_generator.wrapper": ["pandas.Panel", "warnings.catch_warnings", "warnings.simplefilter", "pandas.core.window.rolling.Rolling", "pandas.core.window.expanding.Expanding", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "pandas.core.groupby.groupby.PanelGroupBy", "pandas.core.groupby.PanelGroupBy", "pandas.core.series.Series", "tqdm.std.tqdm.pandas.inner_generator", "tqdm.std.tqdm.inner_generator", "tqdm.std.pandas.inner_generator", "pandas.core.groupby.generic.SeriesGroupBy", "pandas.core.groupby.groupby.SeriesGroupBy", "pandas.core.groupby.SeriesGroupBy", "pandas.core.frame.DataFrame", "pandas.core.groupby.generic.DataFrameGroupBy", "pandas.core.groupby.groupby.DataFrameGroupBy", "pandas.core.groupby.DataFrameGroupBy", "pandas.core.groupby.groupby.GroupBy", "pandas.core.groupby.GroupBy", "tqdm.std.tqdm.pandas.inner", "tqdm.std.tqdm.inner_generator.inner", "tqdm.std.tqdm.inner", "tqdm.std.pandas.inner_generator.inner", "pandas.Panel.progress_apply", "pandas.core.groupby.generic.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.PanelGroupBy.progress_apply", "pandas.core.groupby.PanelGroupBy.progress_apply", "pandas.core.series.Series.progress_apply", "pandas.core.series.Series.progress_map", "pandas.core.window.rolling.Rolling.progress_apply", "pandas.core.window.rolling._Rolling_and_Expanding.progress_apply", "pandas.core.window._Rolling_and_Expanding.progress_apply", "pandas.core.window.expanding.Expanding.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.groupby.GroupBy.progress_transform", "pandas.core.groupby.GroupBy.progress_apply", "pandas.core.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.GroupBy.progress_transform", "pandas.core.frame.DataFrame.progress_apply", "pandas.core.frame.DataFrame.progress_applymap", "pandas.core.groupby.generic.SeriesGroupBy.progress_apply", "pandas.core.groupby.generic.SeriesGroupBy.progress_map", "pandas.core.groupby.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.groupby.SeriesGroupBy.progress_map", "pandas.core.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.SeriesGroupBy.progress_map"], "urllib3.packages.six._SixMetaPathImporter.exec_module": ["urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six.get_code"], "joblib._dask._WeakKeyDictionary": [], "urllib3.packages.six.iterlists": ["urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six.Module_six_moves_urllib.__dir__"], "torch.no_grad": ["torch.__init__.no_grad", "torch.autograd.no_grad"], "numpy.core.numerictypes.complex_": [], "sys.exc_info": [], "past.types.oldstr": ["past.utils.PY2"], "posixpath.commonprefix": [], "_sentencepiece.SentencePieceTrainer__TrainFromMap": [], "future.backports.http.cookies.Morsel": ["future.builtins.dict", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.set", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output"], "numpy.zeros": ["numpy.ma.core.zeros", "numpy.core.numeric.zeros", "numpy.core.multiarray.zeros", "numpy.array_api.__init__.zeros"], "torch.multiprocessing._atfork.register_after_fork": ["torch.multiprocessing._atfork._register"], "types.ModuleType": [], "caffe2.python.workspace.StringifyBlobName": ["caffe2.python.workspace._StringifyName"], "pandas.core.groupby.GroupBy.progress_transform": [], "torch.tensor.Tensor._update_names": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor._update_names", "torch.tensor.Tensor", "torch._C._TensorBase"], "numpy.core.__init__.recarray": ["numpy.core.records.recarray", "numpy.core.__init__.recarray"], "numpy.core.records.recarray": [], "torch.float32": ["numpy.array_api.__init__.float32"], "click.testing.EchoingStdin._echo": [], "future.backports.email.message.Message.del_param": ["future.backports.email.message.Message.add_header", "future.backports.email.message.Message.replace_header", "future.backports.email.message.Message.is_multipart", "future.backports.email.message.Message.get_payload", "future.backports.email.message.Message.set_payload", "future.backports.email.message.Message.get_content_type", "future.backports.email.message.Message.get_content_maintype", "future.backports.email.message.Message.get_content_subtype", "future.backports.email.message.Message.get_default_type", "future.backports.email.message.Message.set_default_type", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.get_param", "future.backports.email.message.Message.set_param", "future.backports.email.message.Message.del_param", "future.backports.email.message.Message.set_type", "future.backports.email.message.Message.values", "future.backports.email.message._formatparam"], "numpy.ma.core.make_mask_descr": ["numpy.ma.core._replace_dtype_fields"], "torch._torch_docs": ["torch._torch_docs.parse_kwargs", "torch._torch_docs.merge_dicts", "torch._C._add_docstr"], "torch.cuda._CudaBase.type": ["torch.cuda._lazy_new", "torch.cuda.device", "torch.cuda._CudaBase"], "torch._load_global_deps": ["platform", "os", "ctypes", "os.path", "platform.system", "ctypes.CDLL", "ctypes.RTLD_GLOBAL"], "future.builtins.chr": ["future.builtins.misc.chr", "future.builtins.__init__.chr", "past.builtins.misc.chr", "past.builtins.__init__.chr"], "torch._cufft_get_plan_cache_size": [], "typing.Callable": [], "numpy.array_api._array_object.Array._new": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array._validate_index", "numpy.array_api._array_object.Array.__index__", "numpy.array_api._array_object.Array.__xor__", "numpy.array_api._array_object.Array.__ixor__", "numpy.array_api._array_object.Array.__rxor__", "numpy.array_api._dtypes._all_dtypes", "numpy.ndarray", "numpy.generic", "numpy.asarray"], "http.cookiejar": [], "builtins.bytes": [], "torch.float16": [], "future.backports.xmlrpc.client.Unmarshaller.end_value": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "future.backports.xmlrpc.client.dump_array": ["future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.__dump", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.Marshaller.dump_struct"], "numpy.core.numeric._full_dispatcher": [], "urllib3.packages.six.Module_six_moves_urllib_error": ["urllib3.packages.six._LazyModule"], "click.testing.make_input_stream": ["click.testing.CliRunner.should_strip_ansi", "click.testing.EchoingStdin.__init__", "click.testing.EchoingStdin.__getattr__", "click.testing.EchoingStdin.__iter__", "click.testing._NamedTextIOWrapper.__init__", "click.testing.Result.__init__", "click.testing.Result.output", "click.testing.Result.stdout", "click.testing.Result.stderr", "click.testing.CliRunner.__init__", "click.testing.CliRunner.get_default_prog_name", "click.testing.CliRunner.isolation", "click.testing.CliRunner.isolated_filesystem", "click.testing.CliRunner.visible_input", "click.testing.CliRunner.hidden_input", "click.testing.CliRunner._getchar", "typing", "click._compat._find_binary_reader", "io", "io.BytesIO", "typing.Optional", "typing.Union", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO"], "google.protobuf.internal.encoder.Int32Sizer": [], "struct": [], "google.protobuf.internal.type_checkers.DoubleValueChecker": [], "transformers.pipelines.ArgumentHandler": ["abc.ABC"], "google.protobuf.internal.encoder.Fixed64Encoder": [], "numpy._typing._generic_alias._GenericAlias.__reduce__": ["typing.ClassVar", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__", "typing.Any"], "future.backports.xmlrpc.client.Marshaller.dump_bytes": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "base64", "base64.encodebytes"], "google.protobuf.internal.encoder.SInt32Encoder": [], "future.backports.urllib.response.addbase": ["future.builtins.object"], "urllib3.packages.six.print_": ["sys", "urllib3.packages.six._LazyDescr.__init__", "urllib3.packages.six.MovedModule.__init__", "urllib3.packages.six._LazyModule.__init__", "urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six.MovedAttribute.__init__", "urllib3.packages.six._SixMetaPathImporter.__init__", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.is_package", "urllib3.packages.six.Module_six_moves_urllib.__dir__", "urllib3.packages.six.write", "urllib3.packages.six.print_.write", "sys.stdout"], "urllib3.packages.six.Module_six_moves_urllib.__dir__": ["types", "types.ModuleType"], "torch.cuda.device.__enter__": ["torch", "torch.cuda._lazy_init", "torch._C"], "future.backports.email.message.Message.add_header": ["future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message._formatparam"], "transformers.pipelines.Pipeline": ["transformers.file_utils.add_end_docstrings", "transformers.pipelines._ScikitCompat"], "packaging.specifiers.Specifier._compare_less_than_equal": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier._canonical_spec", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "torch.tensor._wrap_type_error_to_not_implemented.wrapped": ["functools", "torch._six", "torch.tensor.Tensor.reinforce", "torch.tensor.Tensor.stft", "torch.tensor.Tensor.__format__", "torch.tensor.Tensor.__floordiv__", "torch.tensor.Tensor.__rfloordiv__", "torch.tensor.Tensor.__cuda_array_interface__", "torch.tensor.Tensor.refine_names", "torch.tensor.Tensor.unflatten", "inspect", "torch.tensor.wrapped", "torch.tensor._wrap_type_error_to_not_implemented.wrapped", "functools.WRAPPER_ASSIGNMENTS", "functools.wraps", "torch._six.PY2", "inspect.ismethoddescriptor"], "tqdm.std.tqdm.pandas.inner": ["tqdm.utils.Comparable", "tqdm.std.tqdm._decr_instances", "weakref.WeakSet", "pandas.Panel", "warnings.catch_warnings", "warnings.simplefilter", "pandas.core.window.rolling.Rolling", "pandas.core.window.expanding.Expanding", "pandas.core.window.rolling._Rolling_and_Expanding", "pandas.core.window._Rolling_and_Expanding", "pandas.core.groupby.groupby.PanelGroupBy", "pandas.core.groupby.PanelGroupBy", "pandas.core.series.Series", "tqdm.std.tqdm.pandas.inner_generator", "tqdm.std.tqdm.inner_generator", "tqdm.std.pandas.inner_generator", "pandas.core.groupby.generic.SeriesGroupBy", "pandas.core.groupby.groupby.SeriesGroupBy", "pandas.core.groupby.SeriesGroupBy", "pandas.core.frame.DataFrame", "pandas.core.groupby.generic.DataFrameGroupBy", "pandas.core.groupby.groupby.DataFrameGroupBy", "pandas.core.groupby.DataFrameGroupBy", "pandas.core.groupby.groupby.GroupBy", "pandas.core.groupby.GroupBy", "tqdm.std.tqdm.__len__", "tqdm.std.TqdmWarning.__init__", "tqdm.std.TqdmDefaultWriteLock.__init__", "tqdm.std.TqdmDefaultWriteLock.__enter__", "tqdm.std.TqdmDefaultWriteLock.__exit__", "tqdm.std.TqdmDefaultWriteLock.create_mp_lock", "tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.Bar.__init__", "tqdm.std.Bar.__format__", "tqdm.std.EMA.__init__", "tqdm.std.tqdm.format_sizeof", "tqdm.std.tqdm.format_interval", "tqdm.std.tqdm.format_num", "tqdm.std.tqdm.status_printer", "tqdm.std.tqdm.format_meter", "tqdm.std.tqdm._get_free_pos", "tqdm.std.tqdm.write", "tqdm.std.tqdm.external_write_mode", "tqdm.std.tqdm.set_lock", "tqdm.std.tqdm.get_lock", "tqdm.std.tqdm.__init__", "tqdm.std.tqdm.__contains__", "tqdm.std.tqdm.__enter__", "tqdm.std.tqdm.__exit__", "tqdm.std.tqdm.__str__", "tqdm.std.tqdm.__iter__", "tqdm.std.tqdm.update", "tqdm.std.tqdm.reset", "tqdm.std.tqdm.set_description", "tqdm.std.tqdm.set_description_str", "tqdm.std.tqdm.set_postfix", "tqdm.std.tqdm.set_postfix_str", "tqdm.std.tqdm.moveto", "tqdm.std.tqdm.format_dict", "tqdm.std.tqdm.wrapattr", "tqdm.std.tqdm.fp_write", "tqdm.std.tqdm.print_status", "tqdm.std.TqdmDeprecationWarning", "sys", "pandas.core.common.is_builtin_func", "tqdm.std.tqdm.pandas.wrapper", "tqdm.std.tqdm.inner_generator.wrapper", "tqdm.std.tqdm.inner.wrapper", "tqdm.std.tqdm.wrapper", "tqdm.std.pandas.inner_generator.wrapper", "pandas.Panel.progress_apply", "pandas.core.groupby.generic.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.DataFrameGroupBy.progress_apply", "pandas.core.groupby.groupby.PanelGroupBy.progress_apply", "pandas.core.groupby.PanelGroupBy.progress_apply", "pandas.core.series.Series.progress_apply", "pandas.core.series.Series.progress_map", "pandas.core.window.rolling.Rolling.progress_apply", "pandas.core.window.rolling._Rolling_and_Expanding.progress_apply", "pandas.core.window._Rolling_and_Expanding.progress_apply", "pandas.core.window.expanding.Expanding.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_apply", "pandas.core.groupby.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.groupby.GroupBy.progress_transform", "pandas.core.groupby.GroupBy.progress_apply", "pandas.core.groupby.GroupBy.progress_aggregate", "pandas.core.groupby.GroupBy.progress_transform", "sys.stderr", "pandas.core.frame.DataFrame.progress_apply", "pandas.core.frame.DataFrame.progress_applymap", "pandas.core.groupby.generic.SeriesGroupBy.progress_apply", "pandas.core.groupby.generic.SeriesGroupBy.progress_map", "pandas.core.groupby.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.groupby.SeriesGroupBy.progress_map", "pandas.core.groupby.SeriesGroupBy.progress_apply", "pandas.core.groupby.SeriesGroupBy.progress_map"], "copyreg.pickle": [], "torch.tensor.grad": ["warnings", "torch.tensor.Tensor.retain_grad", "torch.tensor.Tensor.grad", "torch.tensor.Tensor.retain_grad_hook", "torch.tensor.grad", "warnings.warn"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol", "collections.OrderedDict", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter"], "torch._six.PY2": ["future.utils.__init__.PY2", "past.utils.__init__.PY2"], "future.backports.xmlrpc.client.end_struct": ["future.builtins.dict", "future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "future.builtins.range"], "pandas.core.window.expanding.Expanding": [], "numpy.core.multiarray.MAY_SHARE_BOUNDS": ["numpy.core.numeric.MAY_SHARE_BOUNDS", "numpy.core.multiarray.MAY_SHARE_BOUNDS"], "torch.jit.__init__.TracedModule.forward": ["torch.jit.__init__.ScriptModule"], "future.backports.urllib.request._proxy_bypass_macosx_sysconf": ["future.backports.urllib.parse.splitport", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "future.backports.urllib.request.ip2num", "future.backports.urllib.request._proxy_bypass_macosx_sysconf.ip2num", "fnmatch.fnmatch", "future.builtins.int", "socket", "socket.gethostbyname", "socket.error", "re.match"], "numpy.ma.core.__iop__": [], "os.listdir": [], "numpy.core.multiarray.result_type": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.result_type"], "future.backports.http.cookiejar.offset_from_tz_string": ["future.backports.http.cookiejar.CookiePolicy.domain_return_ok", "future.backports.http.cookiejar.DefaultCookiePolicy.blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_name", "future.backports.http.cookiejar.DefaultCookiePolicy.set_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_domain", "future.backports.http.cookiejar.DefaultCookiePolicy.domain_return_ok", "future.backports.http.cookiejar.CookieJar._cookies_for_domain", "future.backports.http.cookiejar.CookieJar._normalized_cookie_tuples", "future.backports.http.cookiejar.CookieJar._cookie_from_cookie_tuple", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "future.backports.http.cookiejar.CookieJar.make_cookies", "future.backports.http.cookiejar.CookieJar.no_matching_rfc2965", "future.builtins.int"], "google.protobuf.descriptor._Deprecated": ["google.protobuf.descriptor._Deprecated", "warnings", "google.protobuf.descriptor.Descriptor.fields_by_camelcase_name", "google.protobuf.descriptor.FieldDescriptor.camelcase_name", "warnings.warn"], "click._compat._FixupStream.__getattr__": ["click._compat._FixupStream.__getattr__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.name", "click._compat.name", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.Any"], "torch.empty": ["numpy.ma.core.empty", "numpy.core.numeric.empty", "numpy.core.multiarray.empty", "numpy.array_api.__init__.empty"], "tqdm.utils.DisableOnWriteError.__init__": ["tqdm.utils.ObjectWrapper", "tqdm.utils.DisableOnWriteError"], "tqdm.std.Bar": [], "sentencepiece.__init__.ImmutableNBestSentencePieceText.__len__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.delete_ImmutableNBestSentencePieceText"], "numpy.array_api._elementwise_functions.floor_divide": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.floor_divide"], "random.randint": [], "numpy.ma.mrecords.MaskedRecords.__reduce__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords._mrreconstruct"], "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document.truncate_seq_pair": ["torch.utils.data.dataset.Dataset", "random", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document.truncate_seq_pair", "transformers.data.datasets.language_modeling.create_examples_from_document.truncate_seq_pair", "torch", "typing.List", "torch.tensor", "torch.long", "random.random", "random.randint"], "google.protobuf.internal.encoder.SpecificEncoder.EncodeField": ["google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "struct", "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.core.function_base._linspace_dispatcher": [], "numpy.array_api._set_functions.unique_inverse": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._set_functions.UniqueInverseResult", "numpy.array_api._array_object.Array._new", "numpy.unique"], "packaging.specifiers.Specifier._get_operator": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier.operator", "packaging.specifiers.Specifier._get_operator", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.f2py.symbolic.Expr.__rtruediv__": ["numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr"], "packaging.specifiers.Specifier.contains": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "typing.Optional", "packaging.specifiers.prereleases", "packaging.specifiers._coerce_version", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.eye": ["numpy.lib.twodim_base.eye", "numpy.array_api.__init__.eye"], "numpy.core.records.record.__setattr__": ["numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.records.record.__getattribute__", "numpy.core.records.record.__setattr__", "numpy.core.records.recarray.__getattribute__", "numpy.core.records.recarray.__setattr__", "numpy.core.numerictypes.void"], "numpy.core.records.fromstring": ["numpy.core.records.format_parser._createdtype", "numpy.core.numeric", "numpy.core.records.format_parser", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records._deprecate_shape_0_as_None", "numpy.core.records.recarray.__array_finalize__", "numpy.core.records.recarray", "numpy.core.overrides.set_module", "numpy.core.numeric.dtype"], "numpy.full": ["numpy.core.numeric.full", "numpy.array_api.__init__.full"], "numpy.lib.histograms._hist_bin_auto": ["numpy.lib.histograms._hist_bin_fd", "numpy.lib.histograms._hist_bin_sturges"], "numpy.lib.utils.safe_eval": ["numpy.lib.utils.source", "ast", "ast.literal_eval"], "past.builtins.misc.chr": ["past.builtins.str"], "numpy.AxisError": ["numpy.core.numeric.AxisError"], "types.GeneratorType": [], "numpy.ma.core.logical_and": ["numpy.ma.core.logical_and", "numpy.core.umath.logical_and", "numpy.array_api.__init__.logical_and"], "numpy.lib.histograms._hist_bin_stone": ["numpy.lib.histograms._ptp", "numpy", "numpy.lib.histograms.jhat", "numpy.lib.histograms._hist_bin_stone.jhat", "warnings", "warnings.warn", "numpy.sqrt"], "transformers.data.processors.SquadExample": ["transformers.data.processors.squad.SquadExample"], "numpy.array_api._creation_functions.full_like": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "typing.Union", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "numpy.array_api._creation_functions._check_valid_dtype", "numpy", "numpy.array_api._dtypes._all_dtypes", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.full_like"], "transformers.data.processors.glue.QnliProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "numpy.array_api.__init__.multiply": ["numpy.ma.core.multiply", "numpy.core.defchararray.multiply", "numpy.core.umath.multiply", "numpy.array_api.__init__.multiply", "numpy.array_api._elementwise_functions.multiply"], "future.backports.email._header_value_parser.WhiteSpaceTokenList.value": ["future.backports.email._header_value_parser.TokenList"], "future.backports.email.utils._qdecode": ["quopri.decodestring"], "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField": ["google.protobuf.internal.decoder.SpecificDecoder", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder", "google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes"], "future.backports.email.message._splitparam": ["future.backports.email.message.Message.as_string", "future.backports.email.message.Message.is_multipart", "future.backports.email.message.Message.attach", "future.backports.email.message.Message.get_payload", "future.backports.email.message.Message.set_payload", "future.backports.email.message.Message.set_charset", "future.backports.email.message.Message.get_charset", "future.backports.email.message.Message.__contains__", "future.backports.email.message.Message.values", "future.backports.email.message.Message.set_raw", "future.backports.email.message.Message.raw_items", "future.backports.email.message.Message.get_all", "future.backports.email.message.Message.add_header", "future.backports.email.message.Message.replace_header", "future.backports.email.message.Message.get_content_maintype", "future.backports.email.message.Message.get_default_type", "future.backports.email.message.Message.set_default_type", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.get_param", "future.backports.email.message.Message.set_param", "future.backports.email.message.Message.del_param", "future.backports.email.message.Message.get_filename", "future.backports.email.message.Message.get_boundary", "future.backports.email.message.Message.set_boundary", "future.backports.email.message.Message.get_content_charset", "future.backports.email.message.Message.get_charsets", "future.backports.email.message.Message.get_content_subtype", "future.backports.email.message.Message.__str__", "future.builtins.str"], "google.protobuf.internal.encoder._VarintSize": [], "packaging.specifiers.SpecifierSet.__eq__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.Specifier", "packaging.specifiers.SpecifierSet"], "uu": [], "numpy.array_api._creation_functions.triu": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.triu"], "numpy.core.umath.remainder": ["numpy.ma.core.remainder", "numpy.core.umath.remainder", "numpy.array_api.__init__.remainder"], "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField": ["google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "struct", "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "time.struct_time": [], "transformers.data.processors.glue.MnliProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "tensorflow.int32": [], "html.escape": [], "numpy.ma.core.MaskedIterator": [], "torch._six.queue": ["Queue", "queue"], "transformers.data.processors.glue.StsbProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "packaging.specifiers.Specifier.__init__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "typing.Optional", "packaging.specifiers.Specifier._canonical_spec", "packaging.specifiers.InvalidSpecifier", "typing.Tuple", "packaging.specifiers.prereleases", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.polynomial._polybase.ABCPolyBase.__mul__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "os.name", "abc.ABC"], "caffe2.python.schema.Field.slice": ["caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Field.slice", "caffe2.python.schema.slice", "caffe2.python.schema.Struct.__len__"], "six.StringIO": [], "torch.stft": ["torch.functional.stft"], "numpy.core.defchararray.chararray.__array_finalize__": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.numeric.ndarray.argsort"], "google.protobuf.internal.encoder._FloatingPointEncoder": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "struct.calcsize"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsIds": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "numpy.take_along_axis": ["numpy.lib.shape_base.take_along_axis"], "numpy.array_api._data_type_functions.result_type": ["typing.Union", "numpy.array_api._array_object.Array", "numpy.array_api._typing.Dtype", "numpy.array_api._dtypes._all_dtypes", "numpy", "numpy.array_api._dtypes._result_type", "numpy.ndarray"], "numpy.f2py.symbolic.Expr.__truediv__": ["numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.as_apply", "numpy.f2py.symbolic.ArithOp"], "numpy.core.fromnumeric.nonzero": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._nonzero_dispatcher"], "click.formatting.HelpFormatter.dedent": [], "torch.autograd.grad_mode.enable_grad": ["torch.autograd.grad_mode._DecoratorContextManager"], "future.types.newint.BaseNewInt": [], "urllib3.packages.six.get_code": [], "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "numpy.datetime64": [], "numpy.single": [], "numpy.core._asarray.require": ["numpy.core.multiarray.asanyarray", "numpy.core.multiarray.array", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module"], "torch.autograd.grad_mode.no_grad": ["torch.autograd.grad_mode._DecoratorContextManager"], "future.backports.email._header_value_parser.value": ["future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.Comment.quote", "future.backports.email._header_value_parser.quote", "future.builtins.super", "future.backports.email._header_value_parser.DisplayName", "future.backports.email._header_value_parser.quote_string"], "transformers.data.processors.glue.Sst2Processor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "caffe2.python.workspace._StringifyName": ["past.builtins.basestring"], "numpy.array_api._creation_functions.linspace": ["typing.Union", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "numpy.array_api._creation_functions._check_valid_dtype", "numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.linspace"], "numpy.core._multiarray_umath.lexsort": [], "torch.utils.data.dataloader.DataLoader._auto_collation": [], "numpy.random.__init__.bytes": ["future.builtins.__init__.bytes", "numpy.random.__init__.bytes", "numpy.compat.py3k.bytes"], "transformers.file_utils.cached_path": ["typing.Union", "typing.Dict", "pathlib.Path", "transformers.file_utils.is_remote_url", "transformers.file_utils.get_from_cache", "transformers.file_utils.ModelOutput.__post_init__", "os", "urllib.parse.urlparse", "filelock.FileLock", "zipfile.is_zipfile", "shutil", "tarfile", "zipfile.ZipFile", "typing.Optional", "tarfile.is_tarfile", "tarfile.open", "os.path", "os.listdir", "os.makedirs", "shutil.rmtree"], "os.O_CREAT": [], "joblib._parallel_backends.ParallelBackendBase": ["abc.ABCMeta"], "torch.utils.data.dataloader._DatasetKind.create_fetcher": ["torch.utils.data.dataloader._DatasetKind", "torch.utils.data.dataloader.DataLoader._auto_collation", "torch.utils.data._utils", "torch.utils.data._utils.fetch"], "torch.__init__.matmul": ["torch.__init__.matmul", "numpy.core.numeric.matmul", "numpy.core.multiarray.matmul", "numpy.array_api.linalg.matmul", "numpy.array_api.__init__.matmul"], "transformers.data.processors.glue.StsbProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.array_api._elementwise_functions.isfinite": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.isfinite"], "torch.functional.unique_consecutive": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.functional.unique_consecutive", "torch", "torch._VF", "torch.jit", "torch._VF.unique_consecutive"], "numpy.longdouble": [], "future.backports.email._header_value_parser.Parameter.param_value": ["future.backports.email._header_value_parser.TokenList"], "tqdm.utils.ObjectWrapper": [], "numpy.core.numerictypes.issubsctype": ["numpy.core.numerictypes.obj2sctype", "numpy.core.overrides.set_module"], "numpy.array_api.__init__.floor_divide": ["numpy.ma.core.floor_divide", "numpy.core.umath.floor_divide", "numpy.array_api.__init__.floor_divide", "numpy.array_api._elementwise_functions.floor_divide"], "numpy.core.numeric.clongdouble": [], "numpy.f2py.symbolic.ArithOp": ["enum.Enum"], "torch.utils.data.TensorDataset": ["torch.utils.data.dataset.TensorDataset"], "numpy.polynomial.polyutils.mapparms": [], "transformers.data.processors.glue.MrpcProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.ma.core.where": ["numpy._NoValue", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.nonzero", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core.getdata", "numpy.ma.core.getmaskarray", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.mask", "numpy.ma.core._shrink_mask", "numpy.zeros", "numpy.ones", "numpy.where"], "future.backports.email.errors.HeaderMissingRequiredValue": ["future.backports.email.errors.HeaderDefect"], "numpy.ma.core.asanyarray": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype"], "__builtin__.dict": [], "numpy.f2py.symbolic.Expr.__rfloordiv__": ["numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr"], "numpy.core.numeric.floor": ["numpy.ma.core.floor", "numpy.core.umath.floor", "numpy.array_api.__init__.floor"], "numpy.ma.core.cumsum": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ma.core._convert2ma._replace_return_type"], "click._compat._AtomicFile.__repr__": ["click._compat._AtomicFile.__repr__"], "packaging.specifiers.BaseSpecifier.__eq__": ["abc", "abc.ABCMeta", "abc.abstractmethod"], "click._compat.get_text_stdout": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._get_windows_console_stream", "click._winconsole._get_windows_console_stream", "sys", "click._compat._force_correct_text_writer", "sys.stdout", "typing.Optional", "typing.TextIO"], "numpy.polynomial.polyutils.trimcoef": ["numpy.polynomial.polyutils.as_series", "numpy", "numpy.nonzero", "numpy.abs"], "numpy.lib.npyio._loadtxt_dispatcher": [], "tensorflow.string": [], "numpy.compat.py3k.pickle": ["numpy.compat.py3k.pickle", "pickle5", "pickle"], "future.backports.xmlrpc.client._iso8601_format": ["future.backports.xmlrpc.client.Unmarshaller.end_value"], "numpy.finfo": ["numpy.core.getlimits.finfo", "numpy.array_api.__init__.finfo"], "numpy.dot": ["numpy.ma.extras.dot", "numpy.core.numeric.dot", "numpy.core.multiarray.dot"], "numpy.core.numeric.matmul": ["torch.__init__.matmul", "numpy.core.numeric.matmul", "numpy.core.multiarray.matmul", "numpy.array_api.linalg.matmul", "numpy.array_api.__init__.matmul"], "numpy.array_api._sorting_functions.argsort": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._array_object.Array._new", "numpy.argsort", "numpy.flip"], "numpy.array_api._elementwise_functions.bitwise_invert": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._integer_or_boolean_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.invert"], "future.backports.email._header_value_parser.Value.stripped_value": ["future.backports.email._header_value_parser.TokenList"], "numpy.f2py.symbolic.Expr.__floordiv__": ["numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.Op"], "numpy.ma.core.inner": ["numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray", "numpy", "numpy.inner"], "numpy.array_api._manipulation_functions.squeeze": ["numpy.array_api._array_object.Array", "typing.Union", "typing.Tuple", "numpy", "numpy.array_api._array_object.Array._new", "numpy.squeeze"], "torch.cuda._utils._get_device_index": ["torch", "torch.device", "torch._six", "torch.cuda"], "torch.cuda.get_device_capability": ["torch.cuda.get_device_properties", "torch.cuda.device"], "caffe2.python.schema.Scalar.id": ["caffe2.python.schema.Field"], "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "future.backports.email.message.Message.raw_items": ["future.backports.email.message.Message.__iter__"], "numpy.polynomial._polybase.ABCPolyBase.copy": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "caffe2.proto.caffe2_pb2": ["google.protobuf.symbol_database", "google.protobuf.descriptor", "google.protobuf.internal.enum_type_wrapper", "google.protobuf.reflection", "google.protobuf.message", "sys", "google.protobuf.symbol_database.Default", "google.protobuf.descriptor.FileDescriptor", "google.protobuf.descriptor.EnumDescriptor", "google.protobuf.descriptor.Descriptor", "google.protobuf.descriptor.EnumValueDescriptor", "google.protobuf.descriptor.FieldDescriptor", "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper", "google.protobuf.reflection.GeneratedProtocolMessageType", "google.protobuf.message.Message", "sys.version_info"], "numpy.polynomial._polybase.domain": ["abc", "abc.abstractmethod"], "numpy.core._multiarray_umath.add_docstring": [], "os.fsdecode": [], "numpy.polynomial._polybase.ABCPolyBase.fromroots": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase._roots", "numpy.polynomial._polybase.ABCPolyBase._fromroots", "numpy.polynomial._polybase.ABCPolyBase.roots", "numpy.polynomial._polybase.ABCPolyBase.fromroots", "numpy.polynomial._polybase.roots", "numpy.polynomial.polyutils", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_sametype", "numpy.polynomial._polybase.ABCPolyBase.__len__", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.window", "numpy.polynomial._polybase.ABCPolyBase.degree", "numpy.polynomial._polybase.ABCPolyBase.cutdeg", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.symbol", "numpy.polynomial._polybase.symbol", "numpy.polynomial.polyutils.as_series", "numpy.polynomial.polyutils.getdomain", "numpy.polynomial.polyutils.mapparms", "abc.ABC", "os.name"], "numpy.array_api.__init__.float32": ["numpy.array_api.__init__.float32", "numpy.array_api._dtypes.float32"], "numpy.core.multiarray.ravel_multi_index": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.ravel_multi_index"], "numpy.array_api.__init__.broadcast_to": ["numpy.lib.stride_tricks.broadcast_to", "numpy.array_api.__init__.broadcast_to", "numpy.array_api._data_type_functions.broadcast_to"], "numpy.core.defchararray.chararray.rstrip": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.rstrip", "numpy.core.defchararray.rstrip", "numpy.core.numeric.ndarray.argsort"], "google.protobuf.internal.encoder._SignedVarintSize": [], "google.protobuf.internal.containers": ["typing.TypeVar", "google.protobuf.internal.containers.BaseContainer"], "numpy.size": ["numpy.ma.core.size", "numpy.core.fromnumeric.size"], "numpy.dual.pinv": ["numpy.dual.pinv", "numpy.linalg.linalg.pinv", "numpy.array_api.linalg.pinv"], "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "tqdm.utils._text_width": ["tqdm.utils.ObjectWrapper.__setattr__", "tqdm.utils.ObjectWrapper.wrapper_setattr", "tqdm.utils.DisableOnWriteError.disable_on_exception", "unicodedata.east_asian_width"], "future.backports.email._header_value_parser.Attribute.stripped_value": ["future.backports.email._header_value_parser.TokenList"], "numpy.array_api._creation_functions.ones": ["typing.Union", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "typing.Tuple", "numpy.array_api._creation_functions._check_valid_dtype", "numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.ones"], "numpy.core.numeric.fromstring": ["numpy.core.numeric.fromstring", "numpy.core.records.fromstring", "numpy.core.multiarray.fromstring"], "numpy.polynomial._polybase.ABCPolyBase.degree": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.__len__", "os.name", "abc.ABC"], "future.backports.urllib.request._proxy_bypass_macosx_sysconf.ip2num": ["future.backports.urllib.parse.splitport", "future.backports.urllib.request.Request.get_host", "future.backports.urllib.request.Request.get_origin_req_host", "future.backports.urllib.request.Request.get_method", "future.backports.urllib.request.Request.header_items", "future.backports.urllib.request.AbstractDigestAuthHandler.get_algorithm_impls", "future.backports.urllib.request.FileHandler.get_names", "future.backports.urllib.request.CacheFTPHandler.setTimeout", "future.backports.urllib.request.FancyURLopener.prompt_user_passwd", "future.backports.urllib.request.Request.add_unredirected_header", "future.backports.urllib.request.BaseHandler.add_parent", "future.backports.urllib.request.HTTPErrorProcessor.http_response", "future.backports.urllib.request.HTTPRedirectHandler.redirect_request", "future.backports.urllib.request.HTTPPasswordMgr.reduce_uri", "future.backports.urllib.request.AbstractBasicAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractBasicAuthHandler.retry_http_basic_auth", "future.backports.urllib.request.AbstractDigestAuthHandler.reset_retry_count", "future.backports.urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "future.backports.urllib.request.AbstractDigestAuthHandler.retry_http_digest_auth", "future.backports.urllib.request.AbstractHTTPHandler.do_request_", "future.backports.urllib.request.HTTPCookieProcessor.http_request", "future.backports.urllib.request.HTTPCookieProcessor.http_response", "future.backports.urllib.request.URLopener.retrieve", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.backports.urllib.request.FancyURLopener.retry_proxy_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_proxy_https_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_http_basic_auth", "future.backports.urllib.request.FancyURLopener.retry_https_basic_auth", "future.backports.urllib.request.ftpwrapper.retrfile", "future.backports.urllib.request.ftpwrapper.real_close", "re", "future.backports.urllib.request.ip2num", "future.backports.urllib.request._proxy_bypass_macosx_sysconf.ip2num", "fnmatch.fnmatch", "future.builtins.int", "socket", "future.builtins.map", "socket.gethostbyname", "socket.error", "re.match"], "numpy.array_api._array_object.Array._validate_index": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._validate_index", "numpy.array_api._array_object.Array.__dlpack_device__", "numpy.array_api._array_object.Array.__floordiv__", "numpy.array_api._array_object.Array.__getitem__", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__index__", "numpy.array_api._array_object.Array.__invert__", "numpy.array_api._array_object.Array.__lshift__", "numpy.array_api._array_object.Array.__rshift__", "numpy.array_api._array_object.Array.__setitem__", "numpy.array_api._array_object.Array.__truediv__", "numpy.array_api._array_object.Array.__iadd__", "numpy.array_api._array_object.Array.__iand__", "numpy.array_api._array_object.Array.__ifloordiv__", "numpy.array_api._array_object.Array.__rfloordiv__", "numpy.array_api._array_object.Array.__ilshift__", "numpy.array_api._array_object.Array.__rlshift__", "numpy.array_api._array_object.Array.__imatmul__", "numpy.array_api._array_object.Array.__imod__", "numpy.array_api._array_object.Array.__imul__", "numpy.array_api._array_object.Array.__ior__", "numpy.array_api._array_object.Array.__ipow__", "numpy.array_api._array_object.Array.__irshift__", "numpy.array_api._array_object.Array.__rrshift__", "numpy.array_api._array_object.Array.__isub__", "numpy.array_api._array_object.Array.__itruediv__", "numpy.array_api._array_object.Array.__rtruediv__", "numpy.array_api._array_object.Array.__ixor__", "numpy.array_api._array_object.Array.to_device", "numpy.array_api._array_object.Array.device", "numpy.array_api._array_object.Array.ndim", "numpy.array_api._array_object.Array.size", "numpy.array_api._array_object.Array.__bool__", "typing.SupportsIndex", "numpy.array_api._array_object.Array", "numpy.array_api._array_object.Array._check_allowed_dtypes", "numpy.array_api._array_object.Array.dtype", "numpy.array_api._dtypes._boolean_dtypes", "numpy.array_api._array_object.Array.__pos__", "operator", "numpy.array_api._dtypes._integer_dtypes", "operator.index", "numpy.ndarray"], "collections.namedtuple": [], "joblib._parallel_backends.AutoBatchingMixin": [], "numpy.core.umath.floor_divide": ["numpy.ma.core.floor_divide", "numpy.core.umath.floor_divide", "numpy.array_api.__init__.floor_divide"], "torch._C._VariableFunctions": [], "numpy.ma.core.round": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray"], "google.protobuf.internal.encoder.EncodePackedField": ["google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise"], "numpy.ma.extras.MAxisConcatenator.makemat": ["numpy.lib.index_tricks.AxisConcatenator", "numpy.ma.core.concatenate", "numpy.ma.core.array"], "torch.tensor.Tensor.__array__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "numpy.core.numeric.flatiter": ["numpy.core.numeric.flatiter", "numpy.core.multiarray.flatiter"], "numpy.core.umath.arcsinh": ["numpy.ma.core.arcsinh", "numpy.core.umath.arcsinh"], "sacremoses.MosesPunctNormalizer": [], "torch._six.inf": ["numpy.core.numeric.inf", "numpy.array_api.__init__.inf"], "future.backports.email.message.Message.set_unixfrom": ["future.backports.email.message.Message.set_unixfrom", "future.backports.email.message.Message.get_unixfrom"], "click.termui.prompt": ["typing", "click.types.ParamType", "click.types.convert_type", "click.termui.prompt", "click.termui._build_prompt", "gettext.gettext", "click.exceptions.UsageError", "click.utils.echo", "click.termui.prompt_func", "click.termui.prompt.prompt_func", "typing.Optional", "typing.Union", "typing.Any", "typing.Callable"], "torch.serialization._open_file_like": ["torch.serialization._is_path", "torch.serialization._open_file", "torch.serialization._open_buffer_writer", "torch.serialization._open_buffer_reader"], "numpy.array_api.linalg.vecdot": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.broadcast_arrays", "numpy.moveaxis"], "transformers.modeling_auto.AutoModel": [], "numpy.core.arrayprint._array_repr_implementation": ["numpy.core.arrayprint.array2string", "numpy.core.multiarray.ndarray", "numpy.core.arrayprint.dtype_is_implied", "numpy.core.arrayprint.dtype_short_repr", "numpy.core.numerictypes.flexible"], "numpy.core.records.recarray.__setattr__": ["numpy.core.records.record.__getattribute__", "numpy.core.records.record.__setattr__", "numpy.core.records.recarray.__getattribute__", "numpy.core.records.recarray.__setattr__", "numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.numeric", "numpy.core.records.record", "numpy.core.records.format_parser._parseFormats", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.format_parser._createdtype", "numpy.core.records.record.__repr__", "numpy.core.records.record.__getitem__", "numpy.core.records.recarray.__new__", "numpy.core.records.recarray.__array_finalize__", "numpy.core.records.recarray.__getitem__", "numpy.core.records.recarray.__repr__", "numpy.core.records.recarray.field", "numpy.core.numeric.dtype", "numpy.core.numerictypes.void"], "fnmatch.fnmatch": [], "numpy.f2py.symbolic.OpError": [], "numpy.ndim": ["numpy.ma.core.ndim", "numpy.core.fromnumeric.ndim"], "click._compat._NonClosingTextIOWrapper.__del__": ["io", "io.TextIOWrapper"], "tqdm.notebook.TqdmHBox.__repr__": ["IPython.html.widgets.HBox", "ipywidgets.HBox", "IPython.html.widgets.ContainerWidget", "tqdm.notebook.TqdmHBox", "tqdm.notebook.TqdmHBox._repr_pretty_"], "google.protobuf.internal.decoder.MessageDecoder.DecodeField": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "struct.calcsize": [], "numpy.linalg.linalg.inv": ["numpy.linalg.linalg._makearray", "numpy.linalg.linalg._assert_stacked_2d", "numpy.linalg.linalg._assert_stacked_square", "numpy.linalg.linalg._commonType", "numpy.linalg.linalg.isComplexType", "numpy.linalg.linalg.get_linalg_error_extobj", "numpy.linalg.linalg._raise_linalgerror_singular", "numpy.linalg._umath_linalg", "numpy.linalg.linalg._unary_dispatcher", "numpy.linalg._umath_linalg.inv"], "numpy.polynomial._polybase.ABCPolyBase.__mod__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "numpy.ma.core._extremum_fill_value._scalar_fill_value": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._get_dtype_of", "numpy.ma.core._recursive_fill_value", "numpy.ma.core._scalar_fill_value", "numpy.ma.core.default_fill_value._scalar_fill_value", "numpy.ma.core._extremum_fill_value._scalar_fill_value"], "numpy.lib.format._filter_header": ["tokenize", "io.StringIO", "tokenize.generate_tokens", "tokenize.NUMBER", "tokenize.NAME", "tokenize.untokenize"], "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField": ["google.protobuf.internal.decoder.SpecificDecoder", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder", "google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes"], "google.protobuf.internal.decoder._ConvertToUnicode": [], "numpy.array_api._elementwise_functions.cosh": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.cosh"], "numpy.lib.function_base._closest_observation": ["numpy", "numpy.lib.function_base._discret_interpolation_to_boundaries", "numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.floor"], "transformers.data.processors.glue.Sst2Processor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.polynomial._polybase.ABCPolyBase._pow": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "numpy.array_api._elementwise_functions.log1p": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.log1p"], "numpy.polynomial._polybase.ABCPolyBase.__ne__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "numpy.half": [], "numpy.core.numeric.compare_chararrays": ["numpy.core.numeric.compare_chararrays", "numpy.core.multiarray.compare_chararrays"], "numpy.lib.twodim_base.triu": ["numpy.core.numeric.asanyarray", "numpy.lib.twodim_base.tri", "numpy.core.numeric.where", "numpy.core.numeric.zeros", "numpy.lib.twodim_base._trilu_dispatcher"], "numpy.ma.core._MaskedPrintOption": ["numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.__repr__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.__str__"], "sentencepiece.__init__.SentencePieceProcessor.IsControl": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_IsControl", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_IsControl"], "numpy.array_api._elementwise_functions.log2": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.log2"], "typing_extensions": [], "future.builtins.misc.chr": ["future.builtins.misc.chr", "future.builtins.__init__.chr", "past.builtins.misc.chr", "past.builtins.__init__.chr", "__builtin__.unichr"], "torch.jit.__init__._create_interpreter_name_lookup_fn": ["torch.jit.__init__._get_interpreter_name_for_var", "torch.jit.__init__._create_interpreter_name_lookup_fn._get_interpreter_name_for_var"], "packaging.specifiers.SpecifierSet.__init__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "typing.Optional", "packaging.specifiers.BaseSpecifier.__hash__", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.BaseSpecifier.contains", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.version", "packaging.specifiers.Specifier._canonical_spec", "packaging.specifiers.Specifier.__hash__", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier.__contains__", "packaging.specifiers.Specifier.contains", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__hash__", "packaging.specifiers.SpecifierSet.__contains__", "packaging.specifiers.SpecifierSet.contains", "typing.Set", "packaging.specifiers.Specifier", "packaging.specifiers.prereleases"], "numpy.core.fromnumeric.argsort": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._argsort_dispatcher"], "sacremoses": [], "google.protobuf.internal.decoder.DecodeField": ["google.protobuf.internal.decoder._ConvertToUnicode", "google.protobuf.internal.decoder.StringDecoder._ConvertToUnicode", "google.protobuf.message", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.containers", "google.protobuf.internal.containers.UnknownFieldSet", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.message._unknown_fields", "google.protobuf.message._unknown_field_set"], "numpy.f2py.symbolic._FromStringWorker.restore": ["numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic._FromStringWorker.process.restore", "numpy.f2py.symbolic.process.restore", "numpy.f2py.symbolic.unreplace_parenthesis"], "numpy.core.umath.mod": ["numpy.ma.core.mod", "numpy.core.defchararray.mod", "numpy.core.umath.mod"], "numpy.array_api._elementwise_functions.positive": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.positive"], "numpy.core.numeric.nested_iters": ["numpy.core.numeric.nested_iters", "numpy.core.multiarray.nested_iters"], "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "struct", "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.f2py.symbolic.Expr.linear_solve": ["numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic.Expr.__init__", "numpy.f2py.symbolic.Expr.__eq__", "numpy.f2py.symbolic.Expr.__lt__", "numpy.f2py.symbolic.Expr.__le__", "numpy.f2py.symbolic.Expr.__gt__", "numpy.f2py.symbolic.Expr.__ge__", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__neg__", "numpy.f2py.symbolic.Expr.__mul__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__pow__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic._Pair.__init__", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.__init__", "numpy.f2py.symbolic.as_numer_denom"], "numpy.array_api._elementwise_functions.square": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.square"], "numpy.ma.core.frombuffer": ["numpy.ma.core.frombuffer", "numpy.core.numeric.frombuffer", "numpy.core.multiarray.frombuffer"], "numpy.core.numeric.absolute": ["numpy.ma.core.absolute", "numpy.core.umath.absolute"], "numpy.core.umath.add": ["numpy.ma.core.add", "numpy.core.defchararray.add", "numpy.core.umath.add", "numpy.array_api.__init__.add"], "torch.cuda.device_count": ["torch.cuda.is_available", "torch", "torch._C"], "numpy.compat.getargspec": ["numpy.compat._inspect.getargspec"], "numpy.lib.type_check._real_dispatcher": [], "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.apply_along_axis": ["numpy.lib.shape_base.apply_along_axis", "numpy.ma.extras.apply_along_axis"], "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "numpy.ma.mrecords.MaskedRecords.__new__": ["numpy.ma.MaskedArray", "numpy.ma.nomask", "numpy.recarray", "numpy.dtype", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ma", "numpy", "numpy.ma.mrecords.MaskedRecords.copy", "numpy.ma.mrecords.copy", "numpy.ma.mrecords.MaskedRecords.__len__", "numpy.ma.MAError", "numpy.ma.mrecords.MaskedRecords.__getitem__", "numpy.ma.mrecords.MaskedRecords.__setitem__", "numpy.array", "numpy.size", "numpy.resize", "numpy.reshape", "numpy.ma.make_mask_descr", "numpy.recarray.__new__"], "torch._C.default_generator.initial_seed": [], "future.backports.email.errors.HeaderParseError": ["future.backports.email.errors.MessageParseError"], "google.protobuf.internal.type_checkers.IntValueChecker": [], "future.backports.email.utils.localtime": ["future.backports.datetime", "time", "future.backports.datetime.datetime", "future.backports.datetime.timezone", "future.backports.datetime.timedelta", "time.mktime", "time.localtime", "time.daylight", "time.altzone", "time.timezone", "time.tzname", "time.gmtime"], "transformers.data.processors.glue.RteProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.ma.core.MaskedArray.__new__._recursive_or": ["numpy.ndarray", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.__setmask__", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core._get_data", "numpy.ma.core.get_fill_value", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.set_fill_value", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.real", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.prod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.var", "numpy", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._arraymethod", "numpy.ma.core.transpose", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.toflex", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedConstant", "numpy.ma.core.make_mask_descr", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskError", "numpy.ma.core.MaskedArray.__new__._recursive_or", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.__new__._recursive_or", "numpy.ma.core.getmask", "numpy.ma.core.getmaskarray", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.mvoid.__len__", "numpy.ma.core._check_fill_value", "numpy.ma.core.hardmask", "numpy.ndarray.trace", "numpy.ndarray.view", "numpy.var", "numpy.array", "numpy.ones", "numpy.zeros", "numpy.resize", "numpy.reshape", "numpy.logical_or", "numpy.asanyarray", "numpy.void"], "tqdm.notebook.tqdm_notebook.reset": ["tqdm.std.tqdm", "tqdm.notebook.tqdm_notebook", "tqdm.notebook.TqdmHBox._json_", "tqdm.notebook.TqdmHBox.__repr__", "tqdm.notebook.TqdmHBox._repr_pretty_", "tqdm.notebook.tqdm_notebook.status_printer", "tqdm.notebook.tqdm_notebook.__init__", "tqdm.notebook.tqdm_notebook.__iter__"], "future.backports.xmlrpc.client.GzipDecodedResponse.close": ["gzip", "gzip.GzipFile"], "sentencepiece.__init__._LogStream.__enter__": ["sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "os", "os.dup", "os.dup2"], "numpy.core._multiarray_umath.busday_count": [], "numpy.core.umath.equal": ["numpy.ma.core.equal", "numpy.core.defchararray.equal", "numpy.core.umath.equal", "numpy.array_api.__init__.equal"], "click._compat._FixupStream.seekable": ["click._compat._AtomicFile.__exit__", "click._compat._FixupStream.__getattr__", "click._compat._AtomicFile.__getattr__", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__enter__", "typing", "typing.cast"], "transformers.tokenization_transfo_xl.tokenize_numbers": ["typing.List", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize", "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__", "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__", "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__", "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__", "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus", "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator", "re", "re.sub"], "numpy.ma.extras._fromnxfunction_allargs": ["numpy.ma.extras._fromnxfunction"], "torch.__init__.save": ["torch.__init__.save", "numpy.lib.npyio.save", "torch.serialization.save"], "sentencepiece.__init__.ImmutableSentencePieceText.__len__": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__._text", "sentencepiece.__init__.ImmutableSentencePieceText._score", "sentencepiece.__init__._score", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableSentencePieceText", "_sentencepiece.delete_ImmutableSentencePieceText"], "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "torch.jit.__init__.ONNXTracedModule.forward.wrapper": ["torch.nn.Module", "torch.jit.__init__._unique_state_dict", "torch.jit.__init__.RecursiveScriptModule.graph", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.graph", "torch.jit.__init__.ONNXTracedModule.forward.wrapper", "torch.jit.__init__.ONNXTracedModule.wrapper", "torch.jit.__init__.forward.wrapper", "torch.jit.__init__._create_interpreter_name_lookup_fn", "torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.RecursiveScriptModule.__len__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__._CachedForward.__get__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.RecursiveScriptModule.__bool__"], "torch.tensor.Tensor.__reduce_ex__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._namedtensor_internals.check_serializing_named_tensor", "collections.OrderedDict", "torch.utils", "torch._utils", "torch.per_tensor_affine", "torch.per_channel_affine", "torch.sparse_coo", "torch._C._TensorBase"], "numpy.ma.core.choose": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core.nmask", "numpy.ma.core.choose.nmask", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.fmask", "numpy.ma.core.choose.fmask", "numpy", "numpy.ma.core.make_mask", "numpy.ma.core.mask_or", "numpy.ma.core.getmask", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.choose"], "numpy.core.numeric.single": [], "numpy.core._multiarray_umath.min_scalar_type": [], "numpy.core.umath.ERR_CALL": ["numpy.core.umath.ERR_CALL"], "numpy.ma.core.exp": ["numpy.ma.core.exp", "numpy.core.umath.exp", "numpy.array_api.__init__.exp"], "numpy.core._multiarray_umath.may_share_memory": [], "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "click.formatting.HelpFormatter.indentation": ["contextlib.contextmanager", "click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.write_text", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "typing.Iterator"], "torch.jit.__init__.ScriptModule.__getattr__": ["torch._six.with_metaclass", "torch.jit.__init__.ScriptMeta", "torch.nn.Module", "torch.jit.__init__.ONNXTracedModule.forward", "torch.jit.__init__.TracedModule.forward", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.forward", "torch.jit.__init__._CachedForward", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.ScriptModule"], "numpy.array_api._set_functions.unique_all": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._set_functions.UniqueAllResult", "numpy.array_api._array_object.Array._new", "numpy.unique"], "numpy.core._multiarray_umath.putmask": [], "torch._lobpcg.LOBPCG_call_tracker": [], "transformers.data.processors.glue.Sst2Processor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.core.numerictypes.sctype2char": ["numpy.core.numerictypes.obj2sctype", "numpy.core._type_aliases._concrete_types", "numpy.core.multiarray.dtype", "numpy.core.overrides.set_module"], "numpy.lib.type_check._imag_dispatcher": [], "numpy.array_api._elementwise_functions.logical_and": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._boolean_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.logical_and"], "future.backports.xmlrpc.client.Marshaller.__dump": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.ExpatParser.feed", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.utils.ensure_new_type"], "past.types.olddict": ["sys", "sys.version_info"], "torch.cat": ["torch.distributions.constraints.cat"], "urllib3.response.HTTPResponse.fileno": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "future.backports.email.message.Message.items": ["future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve"], "numpy.around": ["numpy.ma.core.around", "numpy.core.fromnumeric.around"], "io.BufferedReader": [], "click.formatting.HelpFormatter.write": [], "numpy.core._multiarray_umath.is_busday": [], "torch.functional.split": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.functional.split", "torch", "torch.jit"], "numpy.ma.extras._fromnxfunction_single": ["numpy.ma.extras._fromnxfunction"], "numpy.array_api.__init__.exp": ["numpy.ma.core.exp", "numpy.core.umath.exp", "numpy.array_api.__init__.exp", "numpy.array_api._elementwise_functions.exp"], "numpy.core.numerictypes.issubdtype": ["numpy.core.numerictypes.issubclass_", "numpy.core.multiarray.dtype", "numpy.core.overrides.set_module"], "packaging.specifiers.SpecifierSet.__hash__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.__hash__", "packaging.specifiers.Specifier.__hash__", "packaging.specifiers.SpecifierSet.__hash__"], "numpy.core.fromnumeric.argmax": ["numpy", "numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._argmax_dispatcher", "numpy._NoValue"], "numpy.array_api._elementwise_functions.equal": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.equal"], "numpy.ma.core.doc_note": ["numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._convert2ma._replace_return_type", "re", "inspect", "inspect.cleandoc", "re.split"], "future.types.newrange.next": ["future.types.newrange.range_iterator.__next__", "future.types.newrange.range_iterator.next", "future.types.newrange.next"], "joblib.__init__.load": ["torch.__init__.load", "numpy.lib.npyio.load", "joblib.__init__.load", "joblib.numpy_pickle.load"], "numpy.ma.core.display": [], "numpy.lib.histograms._hist_bin_sqrt": ["numpy.lib.histograms._ptp", "numpy", "numpy.sqrt"], "numpy.core.umath.subtract": ["numpy.ma.core.subtract", "numpy.core.umath.subtract", "numpy.array_api.__init__.subtract"], "future.types.newrange.stop": [], "numpy.array_api._elementwise_functions.atan2": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.arctan2"], "numpy.polynomial.polyutils.as_series": ["numpy", "numpy.polynomial.polyutils.trimseq", "numpy.array", "numpy.common_type", "numpy.dtype", "numpy.empty"], "numpy.core.numerictypes.datetime_data": ["numpy.core.multiarray.datetime_data", "numpy.core.numerictypes.datetime_data"], "numpy.core.umath.arccos": ["numpy.lib.scimath.arccos", "numpy.ma.core.arccos", "numpy.core.umath.arccos"], "contextvars.ContextVar": [], "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise", "struct.calcsize", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.array_api._dtypes.uint8": ["numpy.array_api.__init__.uint8"], "future.backports.email._header_value_parser.QuotedString.quoted_value": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "numpy.core.umath.floor": ["numpy.ma.core.floor", "numpy.core.umath.floor", "numpy.array_api.__init__.floor"], "numpy.f2py.symbolic._Pair.substitute": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic._Pair"], "future.backports.urllib.parse.Quoter": ["collections", "collections.defaultdict"], "transformers.data.processors.glue.ColaProcessor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.polynomial._polybase.ABCPolyBase.__format__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "future.backports.email.generator.Generator._handle_text": ["future.backports.email.generator.Generator._handle_text", "future.backports.email.generator.BytesGenerator._handle_text", "future.backports.email.generator._handle_text", "future.builtins.str", "future.backports.email.utils._has_surrogates"], "numpy.lib.polynomial.variable": [], "urllib3.response.HTTPResponse.from_httplib": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse.getheaders", "urllib3.response.DeflateDecoder.__getattr__", "urllib3.response.DeflateDecoder.decompress", "urllib3.response.GzipDecoder.__getattr__", "urllib3.response.GzipDecoder.decompress", "urllib3.response.MultiDecoder.decompress", "urllib3.response.HTTPResponse.release_conn", "urllib3.response.HTTPResponse.drain_conn", "urllib3.response.HTTPResponse._init_decoder", "urllib3.response.HTTPResponse._flush_decoder", "urllib3.response.HTTPResponse._error_catcher", "urllib3.response.HTTPResponse.read", "urllib3.response.HTTPResponse.stream", "urllib3.response.HTTPResponse.from_httplib", "urllib3.response.HTTPResponse.getheader", "urllib3.response.HTTPResponse.readable", "urllib3.response.HTTPResponse.readinto", "urllib3.response.HTTPResponse.supports_chunked_reads", "urllib3.response.HTTPResponse.read_chunked", "urllib3.response.HTTPResponse.geturl", "urllib3.response.HTTPResponse.__iter__", "urllib3._collections.HTTPHeaderDict", "urllib3.packages.six", "urllib3.packages.six.PY2", "brotli.error", "urllib3._collections.HTTPHeaderDict.from_httplib", "io.IOBase", "zlib.error"], "errno.EACCES": [], "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.array_api._elementwise_functions.divide": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.divide"], "torch.serialization._open_zipfile_reader": ["torch.serialization._opener"], "numpy.core.numeric.set_numeric_ops": ["numpy.core.numeric.set_numeric_ops", "numpy.core.multiarray.set_numeric_ops"], "numpy.core.umath.sinh": ["numpy.ma.core.sinh", "numpy.core.umath.sinh", "numpy.array_api.__init__.sinh"], "numpy.array_api._elementwise_functions.log": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.log"], "numpy.core.records.fromrecords": ["numpy.core.records.format_parser._createdtype", "numpy.core.records.fromarrays", "numpy.core.numeric", "numpy.core.records.format_parser.__init__", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.record.__getattribute__", "numpy.core.records.record.__getitem__", "numpy.core.records.record.pprint", "numpy.core.records.recarray.__array_finalize__", "numpy.core.records.recarray.__getattribute__", "numpy.core.records.recarray.__getitem__", "numpy.core.records.recarray.field", "numpy.core.records.record", "numpy.core.records.format_parser", "numpy.core.records._deprecate_shape_0_as_None", "numpy.core.records.recarray", "warnings", "numpy.core.overrides.set_module", "numpy.core.numeric.array", "numpy.core.numeric.dtype", "warnings.warn"], "tqdm.utils._screen_shape_linux": ["array.array", "fcntl.ioctl", "termios.TIOCGWINSZ", "tqdm.utils.FormatReplace.__init__", "tqdm.utils.ObjectWrapper.__init__", "tqdm.utils.SimpleTextIOWrapper.__init__", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.DisableOnWriteError.disable_on_exception", "tqdm.utils.DisableOnWriteError.__init__", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils.CallbackIOWrapper.__init__", "tqdm.utils.CallbackIOWrapper.write", "os", "os.environ"], "numpy.ma.core.hardmask": [], "numpy.ma.core._convert2ma": [], "past.builtins.__init__.map": ["future.builtins.iterators.map", "future.builtins.__init__.map", "past.builtins.noniterators.map", "past.builtins.__init__.map"], "future.types.newrange.newrange.start": ["collections.Sequence", "collections.abc.Sequence"], "numpy.logical_or": ["numpy.ma.core.logical_or", "numpy.core.umath.logical_or", "numpy.array_api.__init__.logical_or"], "urllib3.packages.six.print_.write": ["sys", "urllib3.packages.six._LazyDescr.__init__", "urllib3.packages.six.MovedModule.__init__", "urllib3.packages.six._LazyModule.__init__", "urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six.MovedAttribute.__init__", "urllib3.packages.six._SixMetaPathImporter.__init__", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.is_package", "urllib3.packages.six.Module_six_moves_urllib.__dir__", "urllib3.packages.six.write", "urllib3.packages.six.print_.write", "urllib3.packages.six.MovedModule.__getattr__", "sys.stdout"], "numpy.core._methods._var": ["numpy.core.multiarray.asanyarray", "numpy.core._methods._count_reduce_items", "warnings", "numpy.core.multiarray", "numpy.core.numerictypes", "numpy.core._ufunc_config._no_nep50_warning", "numpy.core.umath", "numpy.core.multiarray.dtype", "numpy.core.multiarray.ndarray", "numpy.core.numerictypes.integer", "numpy.core.numerictypes.bool_", "numpy.core.numerictypes.floating", "warnings.warn", "numpy.core.umath.true_divide", "numpy.core.umath.multiply", "numpy.core.umath.add", "numpy.core.umath.conjugate", "numpy.core.umath.maximum"], "numpy.ma.core._DomainGreaterEqual": [], "caffe2.python.schema.Scalar": ["caffe2.python.schema.Field"], "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__surface": [], "re.search": [], "packaging.specifiers._version_split": ["packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "typing.List", "packaging.specifiers.Specifier.version", "packaging.specifiers.version"], "numpy.polynomial._polybase.ABCPolyBase": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "numpy.core._multiarray_umath.busday_offset": [], "io.FileIO": [], "numpy.array_api._statistical_functions.max": ["numpy.array_api._array_object.Array", "typing.Optional", "typing.Union", "typing.Tuple", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.max"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_to_tensor": ["transformers.tokenization_utils.PreTrainedTokenizer", "torch", "transformers.file_utils.torch_only_method", "torch.LongTensor"], "numpy.ma.core._replace_dtype_fields_recursive": ["numpy.ma.core._replace_dtype_fields_recursive", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.mvoid.__len__", "numpy.dtype"], "numpy.core.umath.sqrt": ["numpy.lib.scimath.sqrt", "numpy.ma.core.sqrt", "numpy.core.umath.sqrt", "numpy.array_api.__init__.sqrt"], "torch.jit.__init__.ONNXTracedModule.wrapper": ["torch.nn.Module", "torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.RecursiveScriptModule.__len__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__._CachedForward.__get__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.RecursiveScriptModule.__bool__"], "google.protobuf.internal.encoder._ModifiedSizer": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer"], "numpy.ma.extras._fromnxfunction_seq": ["numpy.ma.extras._fromnxfunction"], "numpy.array_api._statistical_functions.sum": ["numpy.array_api._array_object.Array", "typing.Optional", "numpy.array_api._typing.Dtype", "typing.Union", "typing.Tuple", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes.float64", "numpy.array_api._dtypes.float32", "numpy", "numpy.array_api._array_object.Array._new", "numpy.sum"], "tqdm.utils.SimpleTextIOWrapper.__init__": ["tqdm.utils.ObjectWrapper", "tqdm.utils.SimpleTextIOWrapper"], "torch.jit.__init__.graph": [], "textwrap": [], "numpy.lib.scimath.log": ["numpy.lib.scimath._fix_real_lt_zero", "numpy.core.numeric", "numpy.core.overrides.array_function_dispatch", "numpy.lib.scimath._unary_dispatcher", "numpy.core.numeric.log"], "numpy.core.numeric.nan": ["numpy.core.numeric.nan", "numpy.array_api.__init__.nan"], "transformers.data.processors.glue.RteProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "click._compat._AtomicFile.name": [], "numpy.core.numerictypes.int_": [], "time.ctime": [], "numpy.core.numerictypes.issubclass_": ["numpy.core.overrides.set_module"], "numpy.array_api._elementwise_functions.tan": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.tan"], "numpy._globals._CopyMode": ["enum", "enum.Enum"], "numpy.core.numeric.asfortranarray": ["numpy.core.numeric.asfortranarray", "numpy.core.multiarray.asfortranarray"], "numpy.array_api._elementwise_functions.sin": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.sin"], "numpy.array_api._elementwise_functions.sign": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.sign"], "numpy.ma.core.expand_dims": ["numpy.lib.shape_base.expand_dims", "numpy.ma.core.expand_dims", "numpy.array_api.__init__.expand_dims", "numpy.expand_dims"], "numpy.core.numeric.BUFSIZE": ["numpy.core.numeric.BUFSIZE", "numpy.core.multiarray.BUFSIZE"], "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProtoBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsImmutableProtoBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__EncodeAsImmutableProtoBatch"], "numpy.array_api.__init__.sin": ["numpy.ma.core.sin", "numpy.core.umath.sin", "numpy.array_api.__init__.sin", "numpy.array_api._elementwise_functions.sin"], "numpy.array_api._elementwise_functions.greater_equal": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.greater_equal"], "numpy.array_api._elementwise_functions.bitwise_and": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._integer_or_boolean_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.bitwise_and"], "errno": [], "google.protobuf.internal.encoder.MapSizer.FieldSize": ["google.protobuf.internal.encoder.MessageSizer", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.subtract": ["numpy.ma.core.subtract", "numpy.core.umath.subtract", "numpy.array_api.__init__.subtract"], "numpy.array_api._manipulation_functions.roll": ["numpy.array_api._array_object.Array", "typing.Union", "typing.Optional", "typing.Tuple", "numpy", "numpy.array_api._array_object.Array._new", "numpy.roll"], "numpy.ma.core._recursive_fill_value": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.shape", "numpy.ma.core._recursive_fill_value", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.tofile", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__format__", "numpy", "numpy.array", "numpy.full"], "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField": ["google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.wire_format.WIRETYPE_VARINT"], "numpy.array_api._statistical_functions.var": ["numpy.array_api._array_object.Array", "typing.Optional", "typing.Union", "typing.Tuple", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.var"], "google.protobuf.internal.encoder._VarintEncoder": ["struct", "google.protobuf.internal.encoder.EncodeVarint", "google.protobuf.internal.encoder._VarintEncoder.EncodeVarint", "struct.Struct"], "numpy.ma.core._DomainedBinaryOperation": ["numpy.ma.core._MaskedUFunc"], "future.backports.xmlrpc.client.Transport.request": ["future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "socket", "future.backports.http.client", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.DateTime.__le__", "future.backports.xmlrpc.client.DateTime.__ge__", "future.backports.xmlrpc.client.DateTime.__eq__", "future.backports.xmlrpc.client.DateTime.__ne__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.DateTime.decode", "future.backports.xmlrpc.client.DateTime.encode", "future.backports.xmlrpc.client.Binary.__eq__", "future.backports.xmlrpc.client.Binary.__ne__", "future.backports.xmlrpc.client.Binary.decode", "future.backports.xmlrpc.client.Binary.encode", "future.backports.xmlrpc.client.ExpatParser.feed", "future.backports.xmlrpc.client.ExpatParser.close", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Unmarshaller.close", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Unmarshaller.end", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client._MultiCallMethod.__getattr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.MultiCall.__getattr__", "future.backports.xmlrpc.client.GzipDecodedResponse.close", "future.backports.xmlrpc.client._Method.__getattr__", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.Transport.close", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.ServerProxy.__close", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.ServerProxy.__getattr__", "errno", "socket.error", "future.backports.http.client.BadStatusLine", "errno.ECONNRESET", "errno.ECONNABORTED", "errno.EPIPE"], "numpy.ma.core.sin": ["numpy.ma.core.sin", "numpy.core.umath.sin", "numpy.array_api.__init__.sin"], "torch.serialization._load": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization._get_restore_location", "io", "torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "io.BytesIO"], "future.backports.email.message.Message.as_string": ["io.StringIO", "future.backports.email.message.Message.as_string", "future.backports.email.message.Message.get_unixfrom", "future.backports.email.message.Message.get_payload", "future.backports.email.message.Message.get_charset", "future.backports.email.message.Message.__getitem__", "future.backports.email.message.Message.get", "future.backports.email.message.Message.get_all", "future.backports.email.message.Message.get_content_type", "future.backports.email.message.Message.get_content_maintype", "future.backports.email.message.Message.get_content_subtype", "future.backports.email.message.Message.get_default_type", "future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.get_param", "future.backports.email.message.Message.get_filename", "future.backports.email.message.Message.get_boundary", "future.backports.email.message.Message.get_content_charset", "future.backports.email.message.Message.get_charsets", "future.backports.email.generator.Generator", "future.backports.email.message.Message.set_unixfrom"], "numpy.matrixlib.defmatrix._from_string": ["numpy.matrixlib.defmatrix.matrix.max", "numpy.matrixlib.defmatrix.matrix.argmax", "numpy.matrixlib.defmatrix.matrix._collapse", "numpy.core.numeric.concatenate"], "packaging.specifiers.BaseSpecifier.contains": ["abc", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "typing.Optional", "abc.ABCMeta", "abc.abstractmethod"], "click._compat._NonClosingTextIOWrapper.__init__": ["io", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._FixupStream", "io.TextIOWrapper", "typing.BinaryIO", "typing.Any", "typing.Optional", "typing.cast"], "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropy": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__CalculateEntropy", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__CalculateEntropy"], "numpy.array_api.__init__.where": ["numpy.ma.core.where", "numpy.core.numeric.where", "numpy.core.multiarray.where", "numpy.array_api.__init__.where", "certifi.__init__.where", "numpy.array_api._searching_functions.where"], "numpy.lib.polynomial.RankWarning": ["numpy.core.overrides.set_module"], "tqdm.utils.FormatReplace": [], "torch._utils_internal.get_file_path": ["os", "os.path"], "numpy.lib.index_tricks.unravel_index": ["numpy.lib.index_tricks.unravel_index", "numpy.core.multiarray.unravel_index"], "numpy.core.fromnumeric._var_dispatcher": [], "numpy.core.umath.bitwise_and": ["numpy.ma.core.bitwise_and", "numpy.core.umath.bitwise_and", "numpy.array_api.__init__.bitwise_and"], "numpy.core.numeric.zeros_like": ["numpy.core.multiarray.empty_like", "numpy.core.multiarray.dtype", "numpy.core.multiarray.zeros", "numpy.core.multiarray", "numpy.core.numeric._zeros_like_dispatcher", "numpy.core.multiarray.copyto"], "future.builtins.__init__.map": ["future.builtins.iterators.map", "future.builtins.__init__.map", "past.builtins.noniterators.map", "past.builtins.__init__.map"], "numpy.core.fromnumeric.size": ["numpy.core.multiarray.asarray", "numpy.core.fromnumeric._size_dispatcher"], "packaging.specifiers.operator": ["packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__"], "numpy.ma.core.soften_mask": [], "numpy.core.function_base.add_newdoc": ["numpy.core.function_base._add_docstring"], "numpy.ma.core._MaskedUnaryOperation": ["numpy.ma.core._MaskedUFunc"], "transformers.data.processors.glue.QqpProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.array_api._dtypes._all_dtypes": [], "numpy.core._multiarray_umath.result_type": [], "click._compat._AtomicFile": [], "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField": ["google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.encoder.TagBytes"], "numpy.core.records.format_parser._parseFormats": ["numpy.core.overrides.set_module", "numpy.core.records.format_parser._createdtype", "numpy.core.numeric", "numpy.core.records.format_parser.__init__", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.record.__getattribute__", "numpy.core.records.record.__getitem__", "numpy.core.records.record.pprint", "numpy.core.records.recarray.__array_finalize__", "numpy.core.records.recarray.__getattribute__", "numpy.core.records.recarray.__getitem__", "numpy.core.records.recarray.field", "numpy.core.numeric.dtype"], "numpy.core.numeric.MAY_SHARE_EXACT": ["numpy.core.numeric.MAY_SHARE_EXACT", "numpy.core.multiarray.MAY_SHARE_EXACT"], "google.protobuf.internal.decoder._SimpleDecoder": ["google.protobuf.internal.decoder.SpecificDecoder", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder"], "ast": [], "numpy.core.shape_base.atleast_1d": ["numpy.core.multiarray.asanyarray", "numpy.core.shape_base._atleast_1d_dispatcher"], "packaging.specifiers._is_not_suffix": ["packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__"], "numpy.core.umath._add_newdoc_ufunc": ["numpy.core.umath._add_newdoc_ufunc", "numpy.core._multiarray_umath._add_newdoc_ufunc"], "numpy.array_api.__init__.abs": ["numpy.ma.core.abs", "numpy.array_api.__init__.abs", "numpy.array_api._elementwise_functions.abs"], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_workers": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data._utils", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_worker", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_workers", "torch.utils.data.dataloader.DataLoader.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__len__", "torch.utils.data._utils.python_exit_status", "torch.utils.data._utils.signal_handling"], "numpy.polynomial._polybase.ABCPolyBase.truncate": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase._int", "numpy.polynomial._polybase.ABCPolyBase.integ", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.__len__", "os.name", "abc.ABC"], "future.backports.email.utils._has_surrogates": [], "numpy.lib.twodim_base._diag_dispatcher": [], "click.formatting.HelpFormatter.write_heading": ["click.formatting.HelpFormatter.write_heading"], "numpy.ceil": ["numpy.ma.core.ceil", "numpy.core.umath.ceil", "numpy.array_api.__init__.ceil"], "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.lib.function_base.vectorize._func": ["numpy.core.overrides.set_module", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func"], "numpy.core.umath.arctanh": ["numpy.lib.scimath.arctanh", "numpy.ma.core.arctanh", "numpy.core.umath.arctanh"], "numpy.core.fromnumeric.ravel": ["numpy", "numpy.core.multiarray.asarray", "numpy.core.multiarray.asanyarray", "numpy.core.fromnumeric._ravel_dispatcher", "numpy.matrix"], "transformers.tokenization_transfo_xl.detokenize_numbers": ["transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "re", "re.sub"], "numpy.array_api._elementwise_functions.log10": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.log10"], "numpy.ma.core.shape": ["numpy", "numpy.ma.core.getdata", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.shape", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.getmask", "numpy.shape"], "numpy._globals._NoValue": ["numpy._globals._NoValue"], "google.protobuf.message.DecodeError": ["google.protobuf.message.Error"], "numpy.core.overrides.array_function_dispatch.decorator.public_api": ["numpy.core.overrides.decorator", "numpy.core.overrides.set_module.decorator", "numpy.core.overrides.array_function_dispatch.decorator", "numpy.core.overrides.array_function_from_dispatcher.decorator", "numpy.core._multiarray_umath.add_docstring", "numpy.core.overrides.verify_matching_signatures", "numpy.core.overrides.public_api", "numpy.core.overrides.array_function_dispatch.decorator.public_api", "numpy.core.overrides.decorator.public_api"], "numpy.array_api._statistical_functions.std": ["numpy.array_api._array_object.Array", "typing.Optional", "typing.Union", "typing.Tuple", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.std"], "numpy.core.numeric.diagonal": ["numpy.ma.core.diagonal", "numpy.core.fromnumeric.diagonal", "numpy.array_api.linalg.diagonal"], "numpy.core.fromnumeric._ndim_dispatcher": [], "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "tqdm.utils.wrap": ["inspect.signature", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.move_added_token": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.move_added_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter"], "transformers.data.processors.squad_convert_examples_to_features": ["transformers.data.processors.squad.squad_convert_examples_to_features"], "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "filelock.__init__.FileLock": ["filelock.__init__.FileLock"], "collections.abc": [], "numpy.linspace": ["numpy.core.function_base.linspace", "numpy.array_api.__init__.linspace"], "numpy.polynomial._polybase.ABCPolyBase._fromroots": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "urllib3.packages.six.add_metaclass.wrapper": ["urllib3.packages.six.wrapper", "urllib3.packages.six.add_metaclass.wrapper", "urllib3.packages.six.metaclass"], "click._compat.get_binary_stdin": ["click._compat._find_binary_reader", "sys", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "sys.stdin", "typing.BinaryIO"], "numpy.ma.core.flatten_sequence": ["numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.flatten_sequence", "numpy.ma.core.flatten_structured_array.flatten_sequence"], "tqdm.utils.SimpleTextIOWrapper.write": ["tqdm.utils.ObjectWrapper", "tqdm.utils.ObjectWrapper.__setattr__", "tqdm.utils.ObjectWrapper.wrapper_setattr", "tqdm.utils.DisableOnWriteError.disable_on_exception"], "numpy.core.multiarray.bincount": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.bincount"], "transformers.data.processors.glue._tf_glue_convert_examples_to_features": ["typing.Optional", "tensorflow", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.glue_convert_examples_to_features", "transformers.data.processors.glue.gen", "transformers.data.processors.glue._tf_glue_convert_examples_to_features.gen", "tensorflow.data", "tensorflow.float32", "tensorflow.int64", "tensorflow.TensorShape", "tensorflow.int32"], "packaging.specifiers.prereleases": ["abc", "typing.Optional", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.prereleases", "packaging.specifiers.Specifier.operator", "packaging.specifiers.Specifier._get_operator", "packaging.specifiers.operator", "packaging.specifiers.Specifier.version", "packaging.specifiers.version", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.BaseSpecifier.__hash__", "packaging.specifiers.BaseSpecifier.contains", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.Specifier._canonical_spec", "packaging.specifiers.Specifier.__hash__", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier.__contains__", "packaging.specifiers.Specifier.contains", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.SpecifierSet.__hash__", "packaging.specifiers.SpecifierSet.__contains__", "packaging.specifiers.SpecifierSet.contains", "abc.abstractmethod"], "numpy.core.arrayprint.array2string": ["numpy", "numpy.core.arrayprint._make_options_dict", "numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.StructuredVoidFormat.__call__", "warnings", "numpy.core.arrayprint._array2string", "numpy.core.overrides.array_function_dispatch", "numpy.core.arrayprint._array2string_dispatcher", "numpy._NoValue", "warnings.warn"], "click._compat._AtomicFile.__enter__": [], "numpy.ma.core.floor_divide": ["numpy.ma.core.floor_divide", "numpy.core.umath.floor_divide", "numpy.array_api.__init__.floor_divide"], "numpy.take": ["numpy.ma.core.take", "numpy.core.fromnumeric.take"], "_sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__end": [], "numpy.ma.core.anom": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.expand_dims"], "future.backports.email._header_value_parser.Terminal.__repr__": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.builtins.super", "future.backports.email._header_value_parser.Terminal"], "numpy.core.shape_base.hstack": ["numpy.core.overrides", "numpy.core.shape_base._arrays_for_stack_dispatcher", "numpy.core.shape_base.atleast_1d", "numpy.core.numeric", "numpy.core.shape_base._vhstack_dispatcher", "numpy.core.numeric.concatenate", "numpy.core.overrides.ARRAY_FUNCTION_ENABLED"], "numpy.ma.core.absolute": ["numpy.ma.core.absolute", "numpy.core.umath.absolute"], "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsImmutableProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__EncodeAsImmutableProto"], "click._compat._AtomicFile.close": ["click._compat._AtomicFile.close", "os", "os.replace"], "numpy.array_api._elementwise_functions.remainder": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.remainder"], "numpy.ma.core._extrema_operation": ["numpy.ma.core._MaskedUFunc"], "tqdm.utils.disp_trim": ["tqdm.utils.disp_len"], "numpy.core.umath.log10": ["numpy.lib.scimath.log10", "numpy.ma.core.log10", "numpy.core.umath.log10", "numpy.array_api.__init__.log10"], "torch._C.default_generator": [], "numpy.lib.function_base._inverted_cdf": ["numpy.lib.function_base._discret_interpolation_to_boundaries", "numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func"], "numpy.lib.twodim_base._tri_dispatcher": [], "click.formatting.HelpFormatter.write_usage": ["click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.write_text", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "gettext.gettext", "click.formatting.indent", "click._compat.term_len", "click.formatting.wrap_text", "typing.Optional"], "csv.writer": [], "torch._C.default_generator.manual_seed": [], "numpy.array_api.__init__.matmul": ["torch.__init__.matmul", "numpy.core.numeric.matmul", "numpy.core.multiarray.matmul", "numpy.array_api.linalg.matmul", "numpy.array_api.__init__.matmul"], "numpy.array_api._elementwise_functions.asin": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.arcsin"], "numpy.isfinite": ["numpy.core.umath.isfinite", "numpy.array_api.__init__.isfinite"], "numpy.core.umath.negative": ["numpy.ma.core.negative", "numpy.core.umath.negative", "numpy.array_api.__init__.negative"], "future.backports.email.headerregistry.ContentDispositionHeader.content_disposition": ["future.backports.email.headerregistry.ParameterizedMIMEHeader", "future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email.headerregistry.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.parse_content_disposition_header"], "numpy.polynomial._polybase.ABCPolyBase.__neg__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "packaging.specifiers.Specifier.__contains__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "typing.Union", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.version.Version", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "torch.jit.__init__.RecursiveScriptModule.__getattr__": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule", "torch.jit.__init__.script_method"], "transformers.data.processors.glue.ColaProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "future.backports.email._header_value_parser.get_token": ["future.backports.email._header_value_parser.Token", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.get_ttext", "future.backports.email.errors.HeaderParseError"], "torch._utils_internal.prepare_multiprocessing_environment": [], "google.protobuf.internal.decoder.DecodeRepeatedField": ["google.protobuf.message", "google.protobuf.internal.decoder._ConvertToUnicode", "google.protobuf.internal.decoder.StringDecoder._ConvertToUnicode", "google.protobuf.internal.wire_format", "google.protobuf.internal.containers", "google.protobuf.internal.containers.UnknownFieldSet", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.message._unknown_fields", "google.protobuf.message._unknown_field_set"], "past.utils.PY2": ["future.utils.__init__.PY2", "past.utils.__init__.PY2"], "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "google.protobuf.message": [], "google.protobuf.internal.decoder._DoubleDecoder": ["struct", "google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.decoder.InnerDecode", "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode", "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode", "google.protobuf.internal.decoder._FloatDecoder.InnerDecode", "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode", "google.protobuf.internal.wire_format", "struct.unpack", "google.protobuf.internal.wire_format.WIRETYPE_FIXED64"], "numpy._typing._generic_alias._to_str": ["numpy._typing._generic_alias._GenericAlias.__repr__"], "numpy.polynomial._polybase.ABCPolyBase.cutdeg": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.degree", "numpy.polynomial._polybase.ABCPolyBase.cutdeg", "os.name", "abc.ABC"], "numpy.ma.core.flatten_structured_array.flatten_sequence": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy", "numpy.ma.core.MaskedArray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core.flatten_sequence", "numpy.ma.core.flatten_structured_array.flatten_sequence", "numpy.ma.core.getmaskarray", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.mvoid.__iter__", "numpy.asanyarray", "numpy.array"], "future.backports.email.utils._format_timetuple_and_zone": [], "numpy.round_": ["numpy.ma.core.round_", "numpy.core.fromnumeric.round_"], "future.backports.email._header_value_parser.AddrSpec.value": ["future.backports.email._header_value_parser.TokenList"], "numpy.core.umath.log2": ["numpy.lib.scimath.log2", "numpy.ma.core.log2", "numpy.core.umath.log2", "numpy.array_api.__init__.log2"], "google.protobuf.internal.decoder.EnumDecoder.DecodeField": ["google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.containers", "google.protobuf.internal.containers.UnknownFieldSet", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.message._unknown_fields", "google.protobuf.message._unknown_field_set"], "numpy.core.fromnumeric.shape": ["numpy.core.multiarray.asarray", "numpy.core.fromnumeric._shape_dispatcher"], "numpy.apply_over_axes": ["numpy.lib.shape_base.apply_over_axes", "numpy.ma.extras.apply_over_axes"], "numpy.core.numeric.int8": ["numpy.array_api.__init__.int8"], "numpy.lib.polynomial._binary_op_dispatcher": [], "numpy.array_api._elementwise_functions.bitwise_or": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._integer_or_boolean_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.bitwise_or"], "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsImmutableProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsImmutableProto"], "numpy.core.multiarray.dragon4_positional": ["numpy.core.multiarray.dragon4_positional"], "tensorflow.int64": [], "numpy.lib.type_check._is_type_dispatcher": [], "numpy.array_api._dtypes.uint64": ["numpy.array_api.__init__.uint64"], "numpy.array_api._elementwise_functions.less": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.less"], "click._compat._FixupStream.readable": ["click._compat._AtomicFile.__exit__", "click._compat._FixupStream.__getattr__", "click._compat._AtomicFile.__getattr__", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__enter__", "typing", "typing.cast"], "numpy.core.numeric.ascontiguousarray": ["numpy.core.numeric.ascontiguousarray", "numpy.core.multiarray.ascontiguousarray"], "google.protobuf.message._unknown_field_set": [], "numpy.core._multiarray_umath._get_implementing_args": [], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.__len__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__len__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor.IsUnknown", "sentencepiece.__init__.SentencePieceProcessor.IsControl", "sentencepiece.__init__.SentencePieceProcessor.IsUnused", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIdsBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropyBatch", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.Encode", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.__len__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__._LogStream.__enter__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__len__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "numpy.matrixlib.defmatrix.matrix._collapse": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.core._multiarray_umath.can_cast": [], "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value": ["future.backports.email._header_value_parser.WhiteSpaceTerminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "urllib3.packages.six.MovedModule._resolve": ["urllib3.packages.six._LazyDescr", "urllib3.packages.six._import_module"], "google.protobuf.internal.encoder.BytesEncoder.EncodeField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.ma.core.round_": ["numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy", "numpy.ma.core.getdata", "numpy.ma.core.getmask", "numpy.round_"], "numpy.lib.twodim_base._eye_dispatcher": [], "numpy.lib.npyio.loadtxt": ["numpy.lib.npyio.WriteWrap.write_bytes", "numpy", "numpy.lib.npyio.NpzFile.__exit__", "numpy.lib.npyio._read", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module", "numpy.float64"], "torch.jit.__init__.RecursiveScriptModule.graph": ["torch.jit.__init__.ScriptModule"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "numpy.polynomial._polybase.ABCPolyBase.symbol": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "torch.arange": ["numpy.ma.core.arange", "numpy.core.numeric.arange", "numpy.core.multiarray.arange", "numpy.array_api.__init__.arange"], "numpy.lib.function_base.vectorize.func": ["numpy.core.overrides.set_module", "numpy.lib.function_base.vectorize.__init__"], "urllib3.response.HTTPResponse.readable": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "future.backports.email.message.Message.set_charset": ["future.backports.email.message.Message.set_charset", "future.backports.email.message.Message.get_charset", "future.backports.email.message.Message.get_content_charset", "future.backports.email.message.Message.get_charsets"], "torch._overrides.handle_torch_function": ["torch._overrides._get_overloaded_args", "types"], "sentencepiece.__init__.SentencePieceProcessor.Encode": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "future.backports.email.message.Message.get_content_charset": ["future.backports.email.message.Message.set_charset", "future.backports.email.message.Message.get_charset", "future.backports.email.message.Message.get_content_charset", "future.backports.email.message.Message.get_charsets", "future.backports.email.message.Message.__str__", "future.backports.email.message.Message.as_string", "future.builtins.str"], "numpy.lib.twodim_base.eye": ["numpy.core.numeric.zeros", "operator", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module", "operator.index"], "click._compat.get_binary_stdout": ["click._compat._find_binary_writer", "sys", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "sys.stdout", "typing.BinaryIO"], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_worker": ["torch.utils.data.dataloader._BaseDataLoaderIter"], "transformers.data.processors.glue.WnliProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.core.numeric.normalize_axis_tuple": ["operator", "numpy.core.multiarray.normalize_axis_index", "operator.index"], "numpy.intp": [], "numpy.lib._datasource.DataSource": ["numpy.core.overrides.set_module"], "numpy.array_api._manipulation_functions.concat": ["typing.Union", "typing.Optional", "typing.Tuple", "typing.List", "numpy.array_api._array_object.Array", "numpy.array_api._data_type_functions.result_type", "numpy", "numpy.array_api._array_object.Array._new", "numpy.concatenate"], "numpy.clongdouble": [], "numpy.array_api.__init__.int8": ["numpy.array_api.__init__.int8", "numpy.array_api._dtypes.int8"], "torch._linalg_utils": [], "transformers.data.processors.squad.SquadProcessor": ["transformers.data.processors.utils.DataProcessor"], "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples": ["transformers.data.processors.glue.MnliProcessor", "os", "os.path"], "sacremoses.MosesTokenizer": ["sacremoses.tokenize.MosesTokenizer"], "numpy.core.fromnumeric.choose": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._choose_dispatcher"], "numpy.core._methods": ["numpy.core.numerictypes", "numpy.core.umath", "numpy.core.umath.logical_or", "numpy.core.umath.logical_and", "numpy.core.umath.minimum", "numpy.core.umath.maximum", "numpy.core.umath.add", "numpy.core.umath.multiply", "numpy.core.numerictypes.dtype", "numpy.core.numerictypes.csingle", "numpy.core.numerictypes.cdouble", "numpy.core.numerictypes.single", "numpy.core.numerictypes.double", "numpy.core.numerictypes.longdouble", "numpy.core.numerictypes.clongdouble"], "click.formatting.HelpFormatter.write_dl": ["click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.write_text", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "click.formatting.measure_table", "click.formatting.iter_rows", "click.formatting.wrap_text", "click._compat.term_len", "typing.Sequence", "typing.Tuple"], "future.backports.xmlrpc.client.DateTime.make_comparable": ["future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.ExpatParser.close", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.close", "future.backports.xmlrpc.client.Unmarshaller.start", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.GzipDecodedResponse.close", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.close", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.ServerProxy.__close", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.DateTime.decode", "future.backports.xmlrpc.client.DateTime.encode", "future.backports.xmlrpc.client.Binary.decode", "future.backports.xmlrpc.client.Binary.encode", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client._iso8601_format", "future.builtins.str"], "tqdm.utils.CallbackIOWrapper.write": ["tqdm.utils.ObjectWrapper", "functools.wraps"], "numpy.array_api._array_object.Array.__xor__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__bool__", "numpy.ndarray"], "google.protobuf.internal.encoder._TagSize": ["google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.PackTag"], "google.protobuf.internal.encoder.EncodeField": ["google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise"], "numpy.object": ["future.builtins.__init__.object"], "torch.utils.data.dataloader.DataLoader.__init__": ["torch", "torch.utils.data.dataloader.DataLoader.multiprocessing_context", "torch.utils.data.dataloader.multiprocessing_context", "torch.utils.data.IterableDataset", "torch.utils.data.dataloader._DatasetKind", "torch.utils.data.dataloader.DataLoader._index_sampler", "torch.utils.data.dataloader._InfiniteConstantSampler", "torch.utils.data.RandomSampler", "torch.utils.data.SequentialSampler", "torch.utils.data.BatchSampler", "torch.utils.data._utils", "torch.utils.data._utils.collate", "torch._C"], "numpy.core.fromnumeric.all": ["numpy", "numpy.core.fromnumeric._wrapreduction", "numpy.core.fromnumeric._all_dispatcher", "numpy._NoValue", "numpy.logical_and"], "numpy.core.numeric.broadcast": ["torch.cuda.nccl.broadcast", "numpy.core.numeric.broadcast", "numpy.core.multiarray.broadcast"], "past.builtins.basestring": ["numpy.compat.py3k.basestring", "past.builtins.__init__.basestring", "past.types.basestring.basestring", "past.types.__init__.basestring", "past.types.basestring", "__builtin__.basestring"], "numpy.ma.core.baseclass": [], "future.utils": ["future.utils.raise_", "future.utils.tobytes", "future.utils.native_str_to_bytes", "future.utils.lrange", "future.utils.lzip", "future.utils.lmap", "future.utils.lfilter", "future.utils.raise_with_traceback", "future.utils.exec_", "__builtin__", "builtins", "sys", "types", "__builtin__.range", "__builtin__.zip", "__builtin__.map", "__builtin__.filter", "sys.version_info", "types.ClassType"], "tqdm.utils.ObjectWrapper.wrapper_getattr": ["tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr"], "numpy.core.records.recarray.__repr__": ["numpy.core.records.record", "numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.numeric", "numpy.core.records.record.__repr__", "numpy.core.records.recarray.__repr__", "numpy.core.arrayprint._get_legacy_print_mode", "numpy.core.numerictypes.void", "numpy.core.numeric.dtype", "numpy.core.numeric.array2string"], "numpy.ma.core._deprecate_argsort_axis": ["numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedArrayFutureWarning", "warnings", "warnings.warn"], "numpy.core.multiarray.packbits": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.packbits"], "urllib3.packages.six.moves.http_client.IncompleteRead": [], "numpy.ma.core.min": ["numpy", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.asanyarray", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._check_mask_axis", "numpy.ma.core.minimum_fill_value", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.MaskError", "numpy._NoValue", "numpy.copyto", "numpy.nan"], "datetime": [], "numpy.core.numeric.fromfile": ["numpy.core.numeric.fromfile", "numpy.core.records.fromfile", "numpy.core.multiarray.fromfile"], "numpy.core.records.recarray.__array_finalize__": ["numpy.core.records.record"], "numpy.array_api._sorting_functions.sort": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._array_object.Array._new", "numpy.sort", "numpy.flip"], "numpy._typing.ArrayLike": ["numpy.typing.__init__.ArrayLike", "numpy._typing._array_like.ArrayLike"], "transformers.data.processors.glue.MrpcProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "numpy.array_api.__init__.int32": ["numpy.array_api.__init__.int32", "numpy.array_api._dtypes.int32"], "google.protobuf.internal.encoder.RepeatedFieldSize": [], "numpy._typing.DTypeLike": ["numpy.typing.__init__.DTypeLike", "numpy._typing._dtype_like.DTypeLike"], "tqdm.notebook.tqdm_notebook.update": ["tqdm.std.tqdm", "tqdm.notebook.TqdmHBox._json_", "tqdm.notebook.tqdm_notebook.status_printer", "tqdm.notebook.tqdm_notebook.__init__", "tqdm.notebook.tqdm_notebook"], "numpy.core.umath.power": ["numpy.lib.scimath.power", "numpy.random.__init__.power", "numpy.ma.core.power", "numpy.core.umath.power"], "numpy.array_api.__init__.tril": ["numpy.lib.twodim_base.tril", "numpy.array_api.__init__.tril", "numpy.array_api._creation_functions.tril"], "numpy.core.umath.ERR_LOG": ["numpy.core.umath.ERR_LOG"], "sentencepiece.__init__.SentencePieceProcessor.EncodeAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "numpy.array_api._searching_functions.nonzero": ["numpy.array_api._array_object.Array", "numpy", "typing.Tuple", "numpy.array_api._array_object.Array._new", "numpy.nonzero"], "torch._namedtensor_internals.update_names": ["torch._namedtensor_internals.namer_api_name", "torch._namedtensor_internals.update_names_with_list", "torch._namedtensor_internals.update_names_with_mapping"], "packaging.specifiers.Specifier.operator": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "errno.EEXIST": [], "google.protobuf.internal.api_implementation": ["google.protobuf.internal._api_implementation", "os", "sys", "warnings", "os.getenv", "google.protobuf.internal._api_implementation.api_version", "warnings.warn", "sys.version"], "click._compat._find_binary_reader": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._is_binary_reader", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Optional"], "numpy.array_api.linalg.matmul": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.matmul"], "numpy.core.umath.not_equal": ["numpy.ma.core.not_equal", "numpy.core.defchararray.not_equal", "numpy.core.umath.not_equal", "numpy.array_api.__init__.not_equal"], "numpy.array_api.linalg.tensordot": ["numpy.array_api._array_object.Array", "numpy.array_api._typing.Union", "numpy.array_api._typing.Tuple", "numpy.array_api._typing.Sequence", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.tensordot"], "re.S": [], "numpy.ma.core.flat": ["numpy.ma.core.MaskedIterator", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.flat"], "future.backports.urllib.request.AbstractDigestAuthHandler": [], "numpy.array_api._utility_functions.all": ["numpy.array_api._array_object.Array", "typing.Optional", "typing.Union", "typing.Tuple", "numpy", "numpy.array_api._array_object.Array._new", "numpy.asarray", "numpy.all"], "numpy.core.numeric.from_dlpack": ["numpy.core.numeric.from_dlpack", "numpy.core.multiarray.from_dlpack", "numpy.array_api.__init__.from_dlpack"], "caffe2.python.utils": [], "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "operator.lt": [], "google.protobuf.internal.encoder._SignedVarintEncoder": ["struct", "google.protobuf.internal.encoder.EncodeSignedVarint", "google.protobuf.internal.encoder._SignedVarintEncoder.EncodeSignedVarint", "struct.Struct"], "future.backports.email.message.Message.__str__": ["future.utils.as_native_str"], "numpy.lib.function_base.vectorize.__init__": ["numpy.core.overrides.set_module", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.iterable", "numpy.core.numerictypes.typecodes", "numpy.core.numeric", "numpy.lib.function_base._parse_gufunc_signature", "numpy.core.numeric.dtype"], "numpy.core.numeric.longdouble": [], "numpy.f2py.symbolic.Language": ["enum.Enum"], "numpy.array_api._creation_functions.empty_like": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "numpy.array_api._creation_functions._check_valid_dtype", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.empty_like"], "numpy.polynomial._polybase.ABCPolyBase.__pow__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "os.name", "abc.ABC"], "numpy.core.numeric.moveaxis": ["numpy.core.multiarray.asarray", "numpy.core.numeric.normalize_axis_tuple", "numpy.core.numeric._moveaxis_dispatcher"], "numpy.array_api._data_type_functions.broadcast_to": ["numpy.array_api._array_object.Array", "typing.Tuple", "numpy", "numpy.array_api._array_object.Array._new", "numpy.broadcast_to"], "numpy.array_api._statistical_functions.min": ["numpy.array_api._array_object.Array", "typing.Optional", "typing.Union", "typing.Tuple", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.min"], "torch._lobpcg.LOBPCG.__init__": ["torch._lobpcg.LOBPCG.call_tracker", "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform", "torch._lobpcg.LOBPCG.__init__", "torch._lobpcg.LOBPCG.update_converged_count", "torch._lobpcg.LOBPCG.stop_iteration", "torch._lobpcg.LOBPCG.run", "torch", "torch.zeros"], "google.protobuf.descriptor.DescriptorMetaclass": [], "torch.jit.__init__.CompilationUnit.__getattr__": ["torch.jit.__init__.ONNXTracedModule.forward", "torch.jit.__init__.ONNXTracedModule.wrapper", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.TracedModule.forward", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.graph", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__dir__"], "numpy.array_api.__init__.expand_dims": ["numpy.lib.shape_base.expand_dims", "numpy.ma.core.expand_dims", "numpy.array_api.__init__.expand_dims", "numpy.array_api._manipulation_functions.expand_dims"], "sentencepiece.__init__.SentencePieceProcessor.IsUnknown": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_IsUnknown", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_IsUnknown"], "future.backports.email.message.Message.__init__": ["future.backports.email._policybase.compat32", "future.builtins.list"], "torch._namedtensor_internals.replace_ellipsis_by_position": ["torch._namedtensor_internals.expand_single_ellipsis"], "time.altzone": [], "numpy.compat.formatargspec": ["numpy.compat._inspect.formatargspec"], "tqdm.utils._term_move_up": ["colorama", "os", "os.name"], "numpy.timedelta64": [], "random.randrange": [], "click._compat.term_len": ["click._compat.strip_ansi", "click._compat._AtomicFile.__exit__"], "numpy.core.umath.arcsin": ["numpy.lib.scimath.arcsin", "numpy.ma.core.arcsin", "numpy.core.umath.arcsin"], "torch.serialization._is_zipfile": [], "numpy.core._multiarray_umath.where": [], "numpy.lib.polynomial.polyint": ["numpy.lib.polynomial.poly1d.__mul__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__getitem__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.lib.polynomial.poly1d.integ", "numpy.core.numeric", "numpy.core.atleast_1d", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.polyint", "numpy.lib.polynomial._polyint_dispatcher", "numpy.core.numeric.zeros", "numpy.core.numeric.ones", "numpy.core.numeric.asarray", "numpy.core.numeric.concatenate", "numpy.core.numeric.arange"], "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "future.backports.email._header_value_parser.ValueTerminal.value": ["future.backports.email._header_value_parser.Terminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "numpy.ma.core._DomainGreater": [], "transformers.data.processors.glue.RteProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "tqdm.utils.DisableOnWriteError.disable_on_exception": ["tqdm.utils.ObjectWrapper", "weakref.proxy", "tqdm.utils.DisableOnWriteError.disable_on_exception.inner", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils._environ_cols_wrapper.inner", "tqdm.utils.disable_on_exception.inner"], "numpy.array_api._creation_functions.empty": ["typing.Union", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "typing.Tuple", "numpy.array_api._creation_functions._check_valid_dtype", "numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.empty"], "numpy.core.numeric.integer": [], "click._compat._wrap_io_open": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.Union", "typing.Optional", "typing.IO", "typing.Any"], "urllib3.packages.six.MovedAttribute._resolve": ["urllib3.packages.six._LazyDescr", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six._import_module", "urllib3.packages.six.MovedModule.__getattr__"], "numpy.core.umath.less_equal": ["numpy.ma.core.less_equal", "numpy.core.defchararray.less_equal", "numpy.core.umath.less_equal", "numpy.array_api.__init__.less_equal"], "google.protobuf.internal.encoder.GroupSizer.FieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.outer": ["numpy.ma.core.outer", "numpy.core.numeric.outer", "numpy.array_api.linalg.outer"], "numpy.core.umath.logical_xor": ["numpy.ma.core.logical_xor", "numpy.core.umath.logical_xor", "numpy.array_api.__init__.logical_xor"], "numpy.array_api._statistical_functions.mean": ["numpy.array_api._array_object.Array", "typing.Optional", "typing.Union", "typing.Tuple", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.mean"], "numpy.core.umath.multiply": ["numpy.ma.core.multiply", "numpy.core.defchararray.multiply", "numpy.core.umath.multiply", "numpy.array_api.__init__.multiply"], "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "struct.calcsize", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.ma.core._DomainCheckInterval": [], "numpy.core.overrides.decorator.public_api": ["numpy.core.overrides.verify_matching_signatures", "numpy.core._multiarray_umath.add_docstring", "numpy.core.overrides.public_api", "numpy.core.overrides.array_function_dispatch.decorator.public_api", "numpy.core.overrides.decorator.public_api", "numpy.core._multiarray_umath.implement_array_function", "functools", "numpy.core.overrides.array_function_dispatch", "functools.wraps"], "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise", "struct.calcsize", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__NBestEncodeAsImmutableProto", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__NBestEncodeAsImmutableProto"], "numpy.ma.extras.polyfit": ["numpy.ma.core.asarray", "numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.extras.MAxisConcatenator.__getitem__", "numpy.ma.core.getmask", "numpy.ma.core.mask_or", "numpy.ma.core.nomask", "numpy.ma.extras.mask_rows", "numpy.ma.extras.cov", "numpy", "numpy.polyfit"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.do_lower_case": ["transformers.tokenization_utils.PreTrainedTokenizer"], "numpy.core.numeric.ALLOW_THREADS": ["numpy.core.numeric.ALLOW_THREADS", "numpy.core.multiarray.ALLOW_THREADS"], "numpy.array_api._array_object.Array.__index__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "numpy.array_api._searching_functions.argmin": ["numpy.array_api._array_object.Array", "typing.Optional", "numpy", "numpy.array_api._array_object.Array._new", "numpy.asarray", "numpy.argmin"], "multiprocessing.RLock": [], "numpy.dual.inv": ["numpy.dual.inv", "numpy.linalg.linalg.inv", "numpy.array_api.linalg.inv"], "builtins.FileNotFoundError": [], "numpy.lib.shape_base.expand_dims": ["numpy.matrixlib.defmatrix.matrix", "numpy.core.numeric.asarray", "numpy.core.numeric.asanyarray", "numpy.core.numeric.normalize_axis_tuple", "numpy.lib.shape_base._expand_dims_dispatcher"], "numpy.polynomial._polybase.ABCPolyBase.__rmul__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "os.name", "abc.ABC"], "numpy.ma.core.argmin": ["numpy", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.minimum_fill_value", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ndarray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy._NoValue"], "struct.unpack": [], "torch.cuda.device": [], "numpy.core.umath.less": ["numpy.ma.core.less", "numpy.core.defchararray.less", "numpy.core.umath.less", "numpy.array_api.__init__.less"], "numpy.core.defchararray.multiply": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.defchararray.chararray.__getitem__", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray.chararray.find", "numpy.core.defchararray.chararray.index", "numpy.core.defchararray.chararray.isdigit", "numpy.core.defchararray.chararray.islower", "numpy.core.defchararray.chararray.istitle", "numpy.core.defchararray.chararray.isupper", "numpy.core.defchararray.chararray.join", "numpy.core.defchararray.chararray.lstrip", "numpy.core.defchararray.chararray.rfind", "numpy.core.defchararray.chararray.rindex", "numpy.core.defchararray.chararray.rsplit", "numpy.core.defchararray.chararray.rstrip", "numpy.core.defchararray.chararray.split", "numpy.core.defchararray.chararray.splitlines", "numpy.core.defchararray.chararray.strip", "numpy.core.defchararray.chararray.title", "numpy.core.defchararray.chararray.zfill", "numpy.core.defchararray.chararray.isnumeric", "numpy.core.numerictypes.integer", "numpy.core.defchararray._get_num_chars", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._multiply_dispatcher", "numpy.asarray"], "csv.DictWriter": [], "numpy.ma.nomask": ["numpy.ma.core.nomask"], "sentencepiece.__init__.SentencePieceProcessor.EncodeAsIds": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "numpy.core.numeric.frombuffer": ["numpy.ma.core.frombuffer", "numpy.core.numeric.frombuffer", "numpy.core.multiarray.frombuffer"], "numpy.f2py.symbolic.insert_quotes": ["numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__"], "numpy.lib._datasource.DataSource._possible_names": ["numpy.core.overrides.set_module", "numpy.lib._datasource.DataSource._possible_names", "numpy.lib._datasource.DataSource._splitzipext"], "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "struct.calcsize", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "future.backports.email._header_value_parser.BareQuotedString.value": ["future.backports.email._header_value_parser.QuotedString", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "torch.cuda.nccl.broadcast": [], "torch.cuda._lazy_new": ["torch.cuda._lazy_init", "torch.cuda._CudaBase"], "torch.tensor.Tensor.__rpow__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch._C._TensorBase"], "__future__.absolute_import": [], "numpy.core._ufunc_config._unspecified": [], "click.utils.echo": ["click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "click._compat._default_text_stderr", "click._compat._default_text_stdout", "click._compat._find_binary_writer", "click.globals.resolve_color_default", "click._compat.should_strip_ansi", "click._compat.WIN", "click._compat.strip_ansi", "click._compat.auto_wrap_for_ansi", "typing.Optional", "typing.Any", "typing.IO", "typing.Union"], "numpy.core._multiarray_umath.vdot": [], "io.BufferedWriter": [], "numpy.lib.histograms._hist_bin_sturges": ["numpy.lib.histograms._ptp", "numpy", "numpy.log2"], "numpy.core._multiarray_umath.concatenate": [], "click._compat._NonClosingTextIOWrapper.isatty": ["io", "io.TextIOWrapper"], "numpy.reshape": ["numpy.ma.core.reshape", "numpy.core.fromnumeric.reshape", "numpy.array_api.__init__.reshape"], "joblib._dask._funcname": ["joblib._dask.DaskDistributedBackend.retrieval_context", "dask.utils.funcname"], "urllib3.response.HTTPResponse._init_length": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse._init_length", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.HTTPResponse.fileno", "urllib3.exceptions.InvalidHeader", "urllib3.response.HTTPResponse.readinto", "brotli.error", "io.IOBase", "zlib.error"], "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise", "struct.calcsize", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.f2py.symbolic.Expr.traverse": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.__getitem__"], "numpy.array_api._creation_functions.zeros": ["typing.Union", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "typing.Tuple", "numpy.array_api._creation_functions._check_valid_dtype", "numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.zeros"], "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField": ["google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes"], "future.utils.surrogateescape": ["future.utils.surrogateescape.b", "future.utils.surrogateescape.u", "future.utils", "codecs", "future.utils.PY3", "codecs.lookup"], "numpy.core.umath.tanh": ["numpy.ma.core.tanh", "numpy.core.umath.tanh", "numpy.array_api.__init__.tanh"], "transformers.data.processors.squad.SquadProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "json", "os", "json.load", "os.path"], "tensorflow.TensorShape": [], "urllib3.exceptions.ProtocolError": ["urllib3.exceptions.HTTPError"], "packaging.specifiers.Specifier.version": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.isnan": ["numpy.core.umath.isnan", "numpy.array_api.__init__.isnan"], "google.protobuf.internal.decoder.GroupDecoder.DecodeField": ["google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.encoder.TagBytes"], "future.backports.email._header_value_parser._find_mime_parameters": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_phrase", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.parse_mime_parameters"], "numpy.array_api._elementwise_functions.isnan": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.isnan"], "future.backports.email.message.Message.get_unixfrom": [], "numpy.f2py.symbolic.Expr.__radd__": ["numpy.f2py.symbolic.as_number"], "numpy.core.numerictypes.unicode_": [], "click.formatting.HelpFormatter.write_text": ["click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.indentation", "click.formatting.indent", "click.formatting.wrap_text", "click.formatting.HelpFormatter.write_text"], "torch._storage_docs.add_docstr_all": ["torch._C._add_docstr"], "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropyBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__CalculateEntropyBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__CalculateEntropyBatch"], "numpy.ma.core.isMaskedArray": ["numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray"], "numpy._typing._generic_alias.NDArray": ["numpy._typing._generic_alias.NDArray", "numpy.typing.__init__.NDArray"], "torch._utils.ExceptionWrapper": [], "torch.multiprocessing._atfork._register": ["torch.multiprocessing._atfork._register", "torch.multiprocessing._atfork.wrapper", "torch.multiprocessing._atfork._register.wrapper", "multiprocessing.util", "os", "os.register_at_fork", "multiprocessing.util.register_after_fork"], "numpy.core.umath.minimum": ["numpy.ma.core.minimum", "numpy.core.umath.minimum"], "numpy.ma.core._get_dtype_of": ["numpy", "numpy.dtype", "numpy.asanyarray"], "numpy.array_api._creation_functions.arange": ["typing.Union", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "numpy.array_api._creation_functions._check_valid_dtype", "numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.arange"], "numpy.array_api._elementwise_functions.negative": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.negative"], "numpy.ma.core.abs": ["numpy.ma.core.abs", "numpy.array_api.__init__.abs"], "google.protobuf.internal.encoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise"], "torch.jit": ["torch.jit._graph_for", "torch.jit._parse_env", "torch.utils.set_module", "torch.jit._builtins._register_builtin", "torch.jit._unwrap_optional", "torch.jit.is_scripting", "torch.jit._get_methods", "weakref", "collections", "os", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.Attribute", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.items", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.items", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit._make_fail", "torch.jit.ScriptModule", "torch.jit.RecursiveScriptModule", "weakref.WeakKeyDictionary", "collections.namedtuple", "os.environ"], "future.backports.email.errors.InvalidHeaderDefect": ["future.backports.email.errors.HeaderDefect"], "os.access": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer": ["transformers.tokenization_utils.PreTrainedTokenizer"], "numpy.lib.index_tricks.IndexExpression": [], "regex.regex.UNICODE": ["regex._regex_core.UNICODE", "regex.regex.UNICODE"], "numpy.f2py.symbolic.Expr.__add__": ["numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.as_terms", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.as_complex", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic._pairs_add", "numpy.f2py.symbolic.as_real"], "packaging.specifiers.SpecifierSet.__contains__": ["packaging.specifiers.BaseSpecifier"], "numpy.array_api._array_object.Array.__rxor__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__bool__", "numpy.ndarray"], "numpy.core.numeric.NaN": ["numpy.core.numeric.NaN"], "google.protobuf.internal.encoder.GroupEncoder.EncodeField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP"], "numpy.core.numeric.promote_types": ["numpy.core.numeric.promote_types", "numpy.core.multiarray.promote_types"], "torch.tensor.Tensor.__repr__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "sys", "sys.version_info", "sys.stdout", "torch._tensor_str", "torch._C._TensorBase"], "google.protobuf.internal.decoder._FieldSkipper": ["google.protobuf.internal.decoder._SkipVarint", "google.protobuf.internal.decoder._SkipFixed64", "google.protobuf.internal.decoder._SkipLengthDelimited", "google.protobuf.internal.decoder._SkipGroup", "google.protobuf.internal.decoder._EndGroup", "google.protobuf.internal.decoder._SkipFixed32", "google.protobuf.internal.decoder._RaiseInvalidWireType", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder.SkipField", "google.protobuf.internal.decoder._FieldSkipper.SkipField", "google.protobuf.internal.wire_format.TAG_TYPE_MASK"], "torch.cuda._dummy_type.init_err": ["torch.cuda._CudaBase.type", "torch.cuda.type", "torch.cuda.init_err", "torch.cuda._dummy_type.init_err"], "future.builtins.str.__new__": [], "torch.randn": ["torch.__init__.randn", "numpy.matlib.randn", "numpy.random.__init__.randn"], "numpy.core.umath.divide": ["numpy.ma.core.divide", "numpy.core.umath.divide", "numpy.array_api.__init__.divide"], "click._compat.get_text_stdin": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._get_windows_console_stream", "click._winconsole._get_windows_console_stream", "sys", "click._compat._force_correct_text_reader", "sys.stdin", "typing.Optional", "typing.TextIO"], "future.backports.urllib.parse._fix_result_transcoding": ["future.backports.urllib.parse.DefragResult", "future.backports.urllib.parse.DefragResultBytes", "future.backports.urllib.parse.SplitResult", "future.backports.urllib.parse.SplitResultBytes", "future.backports.urllib.parse.ParseResult", "future.backports.urllib.parse.ParseResultBytes"], "numpy.array_api.__init__.float64": ["numpy.array_api.__init__.float64", "numpy.array_api._dtypes.float64"], "os.open": [], "typing.TYPE_CHECKING": [], "torch.jit.__init__.RecursiveScriptModule.graph_for": ["torch.jit.__init__.ScriptModule"], "numpy.array_api.__init__.sum": ["torch.sparse.__init__.sum", "numpy.ma.core.sum", "numpy.core.fromnumeric.sum", "numpy.array_api.__init__.sum", "numpy.array_api._statistical_functions.sum"], "bisect.insort": [], "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField": ["google.protobuf.internal.decoder.SpecificDecoder", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder", "google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes"], "regex.regex.split": ["regex.regex._compile"], "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "sentencepiece._sentencepiece.ImmutableNBestSentencePieceText__nbests", "_sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.ImmutableNBestSentencePieceText__nbests"], "math.nan": [], "numpy.array_api._elementwise_functions.asinh": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.arcsinh"], "numpy.ma.core.log": ["numpy.lib.scimath.log", "numpy.ma.core.log", "numpy.core.umath.log", "numpy.array_api.__init__.log"], "numpy.matrix": ["numpy.matrixlib.defmatrix.matrix"], "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "torch.serialization._check_dill_version": ["torch.serialization.check_module_version_greater_or_equal"], "numpy.f2py.symbolic.Expr.contains": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit"], "torch.nn.modules.__init__.Module": ["torch.nn.modules.__init__.Module", "torch.jit.annotations.Module", "torch.nn.modules.module.Module"], "torch.utils.data._utils.MP_STATUS_CHECK_INTERVAL": [], "google.protobuf.internal.wire_format.TagByteSize": ["google.protobuf.internal.wire_format._VarUInt64ByteSizeNoTag", "google.protobuf.internal.wire_format.PackTag"], "numpy.array_api._set_functions.unique_counts": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._set_functions.UniqueCountsResult", "numpy.array_api._array_object.Array._new", "numpy.unique"], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__del__": ["torch.utils.data.dataloader._BaseDataLoaderIter"], "numpy.polynomial._polybase.ABCPolyBase._repr_latex_scalar": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_term", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_scalar", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_", "numpy.polynomial.polyutils", "os.name", "abc.ABC", "numpy.polynomial.polyutils.format_float"], "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.wire_format.WIRETYPE_VARINT"], "urllib3.exceptions.HTTPError": [], "numpy.ndarray.__new__": [], "google.protobuf.internal.encoder._SimpleSizer": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer"], "future.backports.email.message.Message.get_charsets": ["future.backports.email.message.Message.is_multipart"], "google.protobuf.internal.decoder._StructPackDecoder": ["struct", "google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.decoder.InnerDecode", "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode", "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode", "google.protobuf.internal.decoder._FloatDecoder.InnerDecode", "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode", "struct.calcsize", "struct.unpack"], "itertools.takewhile": [], "future.backports.http.client.HTTPResponse": ["io", "io.RawIOBase"], "google.protobuf.internal.containers.UnknownFieldSet": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.get_vocab": ["transformers.tokenization_utils.PreTrainedTokenizer"], "json.dump": [], "numpy.array_api.__init__.divide": ["numpy.ma.core.divide", "numpy.core.umath.divide", "numpy.array_api.__init__.divide", "numpy.array_api._elementwise_functions.divide"], "future.backports.email._header_value_parser.TokenList.value": ["future.builtins.list", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "future.builtins.__init__.input": ["future.builtins.misc.input", "future.builtins.__init__.input"], "numpy.array_api._constants.pi": ["numpy.core.umath.pi", "numpy.array_api.__init__.pi"], "torch._lobpcg.LOBPCG.update_residual": ["torch._linalg_utils", "torch._linalg_utils.matmul"], "transformers.data.processors.glue.WnliProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "operator.le": [], "torch._lobpcg.LOBPCG.run": ["torch", "torch.jit"], "transformers.data.processors.glue.RteProcessor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "transformers.data.processors.glue.MrpcProcessor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.array_api._dtypes.int32": ["numpy.array_api.__init__.int32"], "google.protobuf.internal.api_implementation.Type": [], "time.daylight": [], "numpy.array_api._array_object.Array.__ixor__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__bool__", "numpy.ndarray"], "sentencepiece.__init__.ImmutableNBestSentencePieceText.nbests": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.delete_ImmutableNBestSentencePieceText"], "torch._lobpcg.LOBPCG._update_basic": ["torch", "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform", "torch._lobpcg.LOBPCG.__init__", "torch._lobpcg.LOBPCG.update_converged_count", "torch._lobpcg.LOBPCG.stop_iteration", "torch._lobpcg.LOBPCG.run", "torch._linalg_utils", "torch._linalg_utils.qform", "torch._linalg_utils.symeig", "torch._linalg_utils.matmul", "torch.matmul"], "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "tqdm.std.TqdmDefaultWriteLock": ["tqdm.std.TqdmDefaultWriteLock.create_th_lock", "tqdm.std.TRLock"], "numpy.polynomial._polybase.ABCPolyBase.__rmod__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "caffe2.python.schema.id": [], "numpy.core.numeric.nditer": ["numpy.core.numeric.nditer", "numpy.core.multiarray.nditer"], "tqdm.utils.CallbackIOWrapper.__init__": ["tqdm.utils.ObjectWrapper", "tqdm.utils.CallbackIOWrapper", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr", "functools.wraps", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.CallbackIOWrapper.__init__.write", "tqdm.utils.CallbackIOWrapper.write", "tqdm.utils.__init__.write", "tqdm.utils.CallbackIOWrapper.__init__.read", "tqdm.utils.CallbackIOWrapper.read", "tqdm.utils.__init__.read"], "tqdm.notebook.tqdm_notebook.close": ["tqdm.std.tqdm", "tqdm.notebook.tqdm_notebook"], "numpy.array_api.__init__.uint8": ["numpy.array_api.__init__.uint8", "numpy.array_api._dtypes.uint8"], "future.backports.email.message.Message.set_boundary": ["future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.errors", "future.builtins.list", "future.backports.email.message.Message.get_boundary", "future.backports.email.message.Message.set_boundary", "future.backports.email.message.Message.attach", "future.backports.email.message.Message.set_charset", "future.backports.email.message.Message.get_charset", "future.backports.email.message.Message.add_header", "future.backports.email.message.Message.replace_header", "future.backports.email.message.Message.get_content_charset", "future.backports.email.message.Message.get_charsets", "future.backports.email.message.Message.values", "future.backports.email.message.Message.keys", "future.backports.email.errors.HeaderParseError"], "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.ma.core.argsort": ["numpy", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core._deprecate_argsort_axis", "numpy.ma.core.MaskedArray", "numpy.ma.core.fill_value", "numpy.ma.core.maximum_fill_value", "numpy.ma.core.minimum_fill_value", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy._NoValue", "numpy.asanyarray", "numpy.issubdtype", "numpy.floating", "numpy.nan"], "numpy.core.umath.ERR_IGNORE": ["numpy.core.umath.ERR_IGNORE"], "numpy.matrixlib.defmatrix.matrix.tolist": ["numpy.core.overrides.set_module", "numpy.core.numeric", "numpy.matrixlib.defmatrix.matrix.T", "numpy.matrixlib.defmatrix.T", "numpy.matrixlib.defmatrix.matrix.A", "numpy.matrixlib.defmatrix.matrix.A1", "numpy.matrixlib.defmatrix.A", "numpy.matrixlib.defmatrix.A1", "numpy.matrixlib.defmatrix.matrix.H", "numpy.matrixlib.defmatrix.H", "numpy.matrixlib.defmatrix.matrix.I", "numpy.matrixlib.defmatrix.I", "numpy.core.numeric.ndarray"], "numpy.array_api._elementwise_functions.sinh": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.sinh"], "google.protobuf.internal.encoder.BoolEncoder.EncodeField": ["google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.wire_format.WIRETYPE_VARINT"], "future.types.newrange.count": [], "numpy.core.umath.arccosh": ["numpy.ma.core.arccosh", "numpy.core.umath.arccosh"], "torch.utils.data.dataloader.DataLoader.__setattr__": ["torch.utils.data.dataloader.DataLoader.__setattr__", "torch.utils.data.dataloader.DataLoader"], "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP": [], "numpy.lib.type_check.iscomplexobj": ["numpy.core.numeric.asarray", "numpy.core.numeric", "numpy.lib.type_check._is_type_dispatcher", "numpy.core.numeric.complexfloating"], "click._compat._AtomicFile.__init__": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.IO", "typing.Any"], "datetime.datetime.now": [], "numpy.array_api._elementwise_functions.logical_not": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._boolean_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.logical_not"], "numpy.ma.core.argmax": ["numpy", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.maximum_fill_value", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ndarray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy._NoValue"], "packaging.specifiers.BaseSpecifier.__str__": ["abc", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "abc.ABCMeta", "abc.abstractmethod"], "future.builtins.__init__.bytes": ["future.builtins.__init__.bytes", "numpy.random.__init__.bytes", "numpy.compat.py3k.bytes", "future.types.newbytes"], "numpy.lib.function_base._get_gamma_mask": ["numpy", "numpy.core.numeric.where", "numpy.full", "numpy.copyto"], "numpy.array_api._dtypes.uint16": ["numpy.array_api.__init__.uint16"], "tqdm.std.format_sizeof": ["tqdm.std.tqdm.format_num"], "torch.cuda.CudaError": [], "numpy.core._multiarray_umath.empty_like": [], "os.W_OK": [], "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "struct.calcsize", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "google.protobuf.internal.encoder.SpecificSizer.FieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.ma.core.empty": ["numpy.ma.core.empty", "numpy.core.numeric.empty", "numpy.core.multiarray.empty", "numpy.array_api.__init__.empty"], "google.protobuf.internal.encoder._SimpleEncoder": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder"], "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField": ["google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.containers", "google.protobuf.internal.containers.UnknownFieldSet", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.message._unknown_fields", "google.protobuf.message._unknown_field_set"], "numpy.ma.core.mask_rowcols": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.array", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.getmask", "numpy", "numpy.unique"], "future.builtins.zip": ["future.builtins.iterators.zip", "future.builtins.__init__.zip", "past.builtins.noniterators.zip", "past.builtins.__init__.zip"], "numpy.array_api._manipulation_functions.reshape": ["numpy.array_api._array_object.Array", "typing.Tuple", "numpy", "numpy.array_api._array_object.Array._new", "numpy.reshape"], "numpy.core._ufunc_config._setdef": ["numpy.core.umath.UFUNC_BUFSIZE_DEFAULT", "numpy.core.umath.ERR_DEFAULT", "numpy.core.umath", "numpy.core.umath.seterrobj"], "click.exceptions.FileError": ["click.exceptions.ClickException"], "numpy.typing.__init__.NDArray": ["numpy._typing._generic_alias.NDArray", "numpy.typing.__init__.NDArray", "numpy._typing.NDArray"], "numpy.array_api._data_type_functions.astype": ["numpy.array_api._array_object.Array", "numpy.array_api._typing.Dtype", "numpy.array_api._array_object.Array._new"], "numpy.array_api._creation_functions.zeros_like": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "numpy.array_api._creation_functions._check_valid_dtype", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.zeros_like"], "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform": ["torch", "torch._linalg_utils", "torch.matmul", "torch.cholesky", "torch.inverse", "torch._linalg_utils.qform"], "transformers.data.processors.squad.squad_convert_examples_to_features.gen": ["multiprocessing.cpu_count", "transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset", "transformers.data.processors.squad.SquadProcessor.get_train_examples", "transformers.data.processors.squad.SquadProcessor.get_dev_examples", "transformers.data.processors.squad.SquadProcessor._create_examples", "multiprocessing.Pool", "functools.partial", "transformers.data.processors.squad.squad_convert_example_to_features", "transformers.data.processors.squad.squad_convert_example_to_features_init", "tqdm.tqdm", "torch", "torch.utils.data.TensorDataset", "transformers.data.processors.squad.gen", "transformers.data.processors.squad.squad_convert_examples_to_features.gen", "transformers.data.processors.squad.SquadExample.__init__", "transformers.data.processors.squad.SquadFeatures.__init__", "transformers.data.processors.squad.SquadResult.__init__", "tensorflow", "torch.tensor", "torch.arange", "torch.long", "torch.float", "tensorflow.int32", "tensorflow.int64", "tensorflow.string", "tensorflow.TensorShape", "tensorflow.data"], "numpy.ma.core.sum": ["numpy", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._check_mask_axis", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy._NoValue"], "packaging.version.Version": ["packaging.version._BaseVersion", "packaging.version.Version.__repr__", "packaging.version.Version.release", "packaging.version.Version.pre", "packaging.version.Version.is_prerelease", "packaging.version.Version.is_postrelease", "packaging.version.Version.is_devrelease", "re", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.polynomial._polybase.ABCPolyBase.convert": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.window", "abc.ABC", "os.name"], "numpy.dtype.fields": [], "torch.utils.data._utils.IS_WINDOWS": [], "click._compat._AtomicFile.__getattr__": ["click._compat._FixupStream.__getattr__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.name", "click._compat.name", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.Any"], "future.backports.email.errors": ["future.backports.email.errors.MissingHeaderBodySeparatorDefect"], "tqdm.utils._is_utf": [], "numpy.array_api._manipulation_functions.expand_dims": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._array_object.Array._new", "numpy.expand_dims"], "future.backports.email._header_value_parser.get_address_list": ["future.backports.email._header_value_parser.AddressList", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.get_address", "future.backports.email.errors", "future.backports.email._header_value_parser.get_invalid_mailbox", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.get_cfws", "future.backports.email._header_value_parser.Address", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.ObsoleteHeaderDefect"], "tqdm.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "numpy.floor": ["numpy.ma.core.floor", "numpy.core.umath.floor", "numpy.array_api.__init__.floor"], "numpy.floating": [], "numpy.ma.core.ids": ["numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.ids"], "numpy.core.numeric.int16": ["numpy.array_api.__init__.int16"], "transformers.data.processors.glue.QqpProcessor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.linalg.linalg.eigvals": ["numpy.linalg.linalg._makearray", "numpy.linalg.linalg._assert_stacked_2d", "numpy.linalg.linalg._assert_stacked_square", "numpy.linalg.linalg._assert_finite", "numpy.linalg.linalg._commonType", "numpy.linalg.linalg.get_linalg_error_extobj", "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence", "numpy.linalg.linalg.isComplexType", "numpy.linalg._umath_linalg", "numpy.core.all", "numpy.linalg.linalg._realType", "numpy.linalg.linalg._complexType", "numpy.linalg.linalg._unary_dispatcher", "numpy.linalg._umath_linalg.eigvals"], "numpy.ma.core.outer": ["numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy", "numpy.ma.core.getmask", "numpy.ma.core.getmaskarray", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.make_mask", "numpy.ma.core.getdata", "numpy.core.umath", "numpy.ma.core.get_masked_subclass", "numpy.ma.core.MaskedArray", "numpy.outer", "numpy.copyto", "numpy.core.umath.logical_or"], "numpy.ndarray.sort": [], "tqdm.utils.ObjectWrapper.__setattr__": ["tqdm.utils.ObjectWrapper.__setattr__", "tqdm.utils.ObjectWrapper.wrapper_setattr"], "transformers.data.processors.glue.MrpcProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.lib.shape_base.split": ["numpy.lib.shape_base.array_split", "numpy.lib.shape_base._split_dispatcher"], "numpy.core.records.recarray.field": ["numpy.core.records.record.__getattribute__", "numpy.core.records.record.__setattr__", "numpy.core.records.recarray.__getattribute__", "numpy.core.records.recarray.__setattr__", "numpy.core.records.record.pprint", "numpy.core.records.format_parser._setfieldnames"], "future.backports.email.message.Message.set_raw": ["future.backports.email.message.Message.get_filename", "future.backports.email.message.Message.values"], "torch.serialization._legacy_save": ["sys", "StringIO", "torch.serialization.persistent_id", "torch.serialization._legacy_save.persistent_id", "torch.serialization._save.persistent_id", "torch.serialization._should_read_directly", "StringIO.StringIO", "sys.version_info", "sys.byteorder"], "future.backports.email.utils.unquote": ["future.builtins.str", "future.builtins.str.startswith", "future.builtins.str.endswith"], "future.backports.email._header_value_parser.parse_mime_parameters": ["future.backports.email._header_value_parser.MimeParameters", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.get_parameter", "future.backports.email.errors", "future.backports.email._header_value_parser.get_invalid_parameter", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "google.protobuf.internal.encoder.StringEncoder.EncodeField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.inner": ["numpy.ma.core.inner", "numpy.core.numeric.inner", "numpy.core.multiarray.inner"], "google.protobuf.internal.encoder.FieldSize": [], "numpy.core.umath.bitwise_xor": ["numpy.ma.core.bitwise_xor", "numpy.core.umath.bitwise_xor", "numpy.array_api.__init__.bitwise_xor"], "future.backports.xmlrpc.client.getparser": ["future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client._datetime_type", "future.backports.xmlrpc.client.Fault", "future.backports.xmlrpc.client.Unmarshaller", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "base64", "future.backports.xmlrpc.client._binary", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client._datetime", "future.backports.xmlrpc.client.ExpatParser", "future.backports.xmlrpc.client.getparser", "base64.decodebytes"], "click._compat._FixupStream.__init__": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.BinaryIO"], "transformers.data.processors.glue.WnliProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "torch.jit.__init__.TracedModule.__getattr__": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.TracedModule"], "future.backports.email.headerregistry.Address.addr_spec": ["future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.quote_string", "future.backports.email._header_value_parser.DOT_ATOM_ENDS"], "torch.serialization._is_torchscript_zip": ["os", "os.sep"], "numpy.array_api._elementwise_functions.trunc": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._integer_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.trunc"], "future.backports.http.client.HTTPConnection.set_debuglevel": ["future.backports.http.client.HTTPResponse", "future.backports.http.client.HTTPConnection.set_debuglevel"], "numpy.ma.core.ravel": ["numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray.__repr__", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__rpow__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.resize", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__repr__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.dtype", "numpy.ndarray", "numpy.ndarray.ravel"], "numpy.ma.core.__new__._recursive_or": ["numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core.copy", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedConstant", "numpy.ndarray", "numpy.ma.core.make_mask_descr", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskError", "numpy.ma.core.MaskedArray.__new__._recursive_or", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.__new__._recursive_or", "numpy.ma.core.getmask", "numpy.ma.core.getmaskarray", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.fill_value", "numpy.ma.core._check_fill_value", "numpy.ma.core.hardmask", "numpy.ndarray.view", "numpy.array", "numpy.ones", "numpy.zeros", "numpy.resize", "numpy.reshape", "numpy.logical_or", "numpy.asanyarray", "numpy.void"], "future.backports.email._header_value_parser.DisplayName.value": ["future.backports.email._header_value_parser.Phrase", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.Comment.quote", "future.backports.email._header_value_parser.quote", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.builtins.super", "future.backports.email._header_value_parser.DisplayName", "future.backports.email._header_value_parser.quote_string"], "numpy.array_api._data_type_functions.iinfo": ["typing.Union", "numpy.array_api._typing.Dtype", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._data_type_functions.iinfo_object", "numpy.iinfo"], "numpy.core.multiarray.unravel_index": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.unravel_index"], "click.formatting.HelpFormatter.indent": [], "caffe2.python.schema._SchemaNode": [], "numpy.f2py.symbolic.Expr.__hash__": ["numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.Expr.__hash__"], "numpy._typing._generic_alias._parse_parameters": ["collections.abc.Iterable", "typing.Any", "numpy._typing._generic_alias._GenericAlias.__origin__", "numpy._typing._generic_alias._GenericAlias.__typing_unpacked_tuple_args__", "numpy._typing._generic_alias._GenericAlias.__init__", "numpy._typing._generic_alias._GenericAlias.__mro_entries__", "numpy._typing._generic_alias._GenericAlias.__dir__", "numpy._typing._generic_alias._GenericAlias.__instancecheck__", "numpy._typing._generic_alias._GenericAlias.__getitem__", "numpy._typing._generic_alias._GenericAlias.__iter__", "numpy._typing._generic_alias._GenericAlias.__getattribute__", "numpy._typing._generic_alias._GenericAlias.__args__", "typing.TypeVar", "collections.abc.Generator"], "time.localtime": [], "numpy.lib.npyio.genfromtxt": ["numpy.lib._iotools.NameValidator", "numpy.lib.npyio._ensure_ndmin_ndarray_check_param", "numpy.compat.os_PathLike", "numpy.compat.os_fspath", "contextlib", "numpy", "numpy.lib.npyio.NpzFile.__iter__", "numpy.lib.npyio.BagObj.__getattribute__", "numpy.lib.npyio.NpzFile.__enter__", "numpy.lib.npyio.NpzFile.__exit__", "numpy.lib.npyio.NpzFile.close", "numpy.lib.npyio.NpzFile.__del__", "numpy.lib.npyio.NpzFile.__len__", "numpy.lib.npyio.NpzFile.__getitem__", "numpy.lib.npyio.WriteWrap.close", "numpy.lib.npyio.WriteWrap.write", "numpy.lib.npyio.WriteWrap.write_bytes", "numpy.lib.npyio.WriteWrap.write_normal", "numpy.lib.npyio.WriteWrap.first_write", "numpy.lib._iotools.LineSplitter", "numpy.lib.npyio.BagObj.__init__", "numpy.lib.npyio.BagObj.__dir__", "numpy.lib.npyio.NpzFile.__init__", "numpy.lib.npyio.WriteWrap.__init__", "numpy.lib._iotools._is_string_like", "numpy.lib._iotools.easy_dtype", "numpy.lib._iotools.flatten_dtype", "numpy.compat.asbytes", "numpy.lib._iotools._decode_line", "numpy.lib._iotools.StringConverter", "itertools", "warnings", "numpy.lib.npyio.tobytes_first", "numpy.lib.npyio.genfromtxt.tobytes_first", "functools", "numpy.lib._iotools.ConverterLockError", "operator.itemgetter", "numpy.lib._iotools.ConverterError", "numpy.lib._iotools.ConversionWarning", "numpy.lib._iotools.has_nested_fields", "numpy.ma.make_mask_descr", "numpy.lib.npyio.encode_unicode_cols", "numpy.lib.npyio.genfromtxt.encode_unicode_cols", "numpy.ma.MaskedArray", "numpy.lib.npyio._ensure_ndmin_ndarray", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module", "warnings.warn", "contextlib.closing", "contextlib.nullcontext", "functools.partial", "numpy.lib._iotools.NameValidator.defaultdeletechars", "itertools.chain", "numpy.lib", "numpy.dtype", "numpy.array", "numpy.VisibleDeprecationWarning", "numpy.issubdtype", "numpy.character", "numpy.unicode_", "numpy.bytes_"], "torch.__init__.split": ["torch.__init__.split", "torch.functional.split", "numpy.lib.shape_base.split", "numpy.core.defchararray.split", "regex.regex.split"], "numpy.lib.npyio.save": ["numpy.compat.os_fspath", "contextlib", "numpy", "numpy.lib.format", "numpy.lib.npyio._save_dispatcher", "contextlib.nullcontext", "numpy.asanyarray", "numpy.lib.format.write_array"], "numpy.array_api._elementwise_functions.subtract": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.subtract"], "numpy.array_api._elementwise_functions.greater": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.greater"], "future.backports.email._header_value_parser.QuotedString.stripped_value": ["future.backports.email._header_value_parser.TokenList"], "numpy.core.numeric.WRAP": ["numpy.core.numeric.WRAP", "numpy.core.multiarray.WRAP"], "future.backports.xmlrpc.client.GzipDecodedResponse": ["gzip", "gzip.GzipFile"], "numpy.array_api.linalg": ["typing.TYPE_CHECKING"], "__future__.unicode_literals": [], "torch._namedtensor_internals.unzip_namedshape": ["collections.OrderedDict"], "numpy.ma.extras.hstack": ["numpy.ma.extras.hstack", "numpy.core.shape_base.hstack"], "numpy.ma.core.compress": ["numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core._data", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.asarray"], "numpy.core.numeric.convolve": ["numpy.core.multiarray.array", "numpy.core.multiarray", "numpy.core.numeric._convolve_dispatcher", "numpy.core.multiarray.correlate"], "numpy.core.umath.greater_equal": ["numpy.ma.core.greater_equal", "numpy.core.defchararray.greater_equal", "numpy.core.umath.greater_equal", "numpy.array_api.__init__.greater_equal"], "future.builtins.misc.input": ["future.builtins.misc.input", "future.builtins.__init__.input"], "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsIds": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "packaging.utils.canonicalize_version": ["typing.Union", "packaging.version.Version", "packaging.version.InvalidVersion", "re", "re.sub"], "numpy.ma.extras.mr_class": ["numpy.ma.extras.MAxisConcatenator"], "torch.tensor.Tensor.__deepcopy__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.share_memory_", "torch.no_grad", "torch.per_tensor_affine", "torch.per_channel_affine", "torch._utils", "torch._C._TensorBase"], "numpy.ma.make_mask_descr": ["numpy.ma.core.make_mask_descr"], "regex.regex.ASCII": ["regex._regex_core.ASCII", "regex.regex.ASCII"], "torch._C.default_generator.set_state": [], "torch.cuda._CudaBase": ["torch.cuda._lazy_new"], "future.backports.email._header_value_parser.ContentType": ["future.backports.email._header_value_parser.ParameterizedHeaderValue"], "google.protobuf.internal.decoder.BytesDecoder.DecodeField": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "numpy.ma.core.power": ["numpy.ma.core.MaskError", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.__sub__", "numpy.ma.core.MaskedArray.__rsub__", "numpy.ma.core.MaskedArray.__isub__", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.mask_or", "numpy.ma.core.getdata", "numpy.ma.core.MaskedArray", "numpy.ma.core.MaskedArray.dtype", "numpy", "numpy.core.umath", "numpy.ndarray", "numpy.core.umath.power", "numpy.errstate", "numpy.where", "numpy.logical_not", "numpy.isfinite", "numpy.logical_or"], "__future__.division": [], "numpy.ma.extras.apply_along_axis": ["numpy.ma.core.array", "numpy.core.multiarray.normalize_axis_index", "numpy.ma.extras._fromnxfunction.__init__", "numpy.ma.extras.MAxisConcatenator.__getitem__", "numpy.ma.extras.mr_class.__init__", "numpy", "numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.core.zeros", "numpy.ma.extras.flatten_inplace", "numpy.ma.core.asarray", "numpy.ma.core", "numpy.zeros", "numpy.asarray", "numpy.isscalar", "numpy.product", "numpy.dtype", "numpy.ma.core.default_fill_value"], "numpy.array_api._dtypes._dtype_categories": [], "sentencepiece.__init__.ImmutableSentencePieceIterator.__len__": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__"], "certifi.__init__.where": ["numpy.ma.core.where", "numpy.core.numeric.where", "numpy.core.multiarray.where", "numpy.array_api.__init__.where", "certifi.__init__.where", "certifi.core.where"], "numpy.core.umath.bitwise_or": ["numpy.ma.core.bitwise_or", "numpy.core.umath.bitwise_or", "numpy.array_api.__init__.bitwise_or"], "numpy.core.umath.ERR_RAISE": ["numpy.core.umath.ERR_RAISE"], "numpy.core.numeric.asanyarray": ["numpy.ma.core.asanyarray", "numpy.core.numeric.asanyarray", "numpy.core.multiarray.asanyarray"], "numpy.core.multiarray.add_docstring": ["numpy.lib.function_base.add_docstring", "numpy.core.multiarray.add_docstring"], "future.backports.email._header_value_parser.ValueTerminal": ["future.backports.email._header_value_parser.Terminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "torch.serialization._save": ["io", "torch.serialization.persistent_id", "torch.serialization._legacy_save.persistent_id", "torch.serialization._save.persistent_id", "torch.serialization._should_read_directly", "io.BytesIO"], "numpy.array_api._creation_functions.full": ["typing.Union", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "typing.Tuple", "numpy.array_api._creation_functions._check_valid_dtype", "numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._dtypes._all_dtypes", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.full"], "click.formatting.HelpFormatter.write_paragraph": [], "numpy.core.umath.fmod": ["numpy.ma.core.fmod", "numpy.core.umath.fmod"], "numpy.core.numeric.double": [], "numpy.core.fromnumeric.concatenate": ["numpy.ma.core.concatenate", "numpy.core.numeric.concatenate", "numpy.core.multiarray.concatenate"], "numpy.lib.polynomial._polydiv_dispatcher": ["numpy.lib.polynomial.poly1d.__mul__", "numpy.lib.polynomial.poly1d.__rmul__", "numpy.lib.polynomial.poly1d.__sub__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.__div__", "numpy.lib.polynomial.poly1d.__rdiv__", "numpy.lib.polynomial.poly1d.deriv"], "future.types.newrange.step": [], "numpy.core.numeric.CLIP": ["numpy.core.numeric.CLIP", "numpy.core.multiarray.CLIP"], "future.backports.xmlrpc.client.Unmarshaller.close": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.ResponseError", "future.backports.xmlrpc.client.Fault", "future.backports.xmlrpc.client.DateTime.timetuple"], "google.protobuf.internal.type_checkers.TypeChecker": [], "numpy.polynomial._polybase.ABCPolyBase._repr_latex_": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_term", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.basis_name", "numpy.polynomial._polybase.ABCPolyBase._div", "numpy.polynomial._polybase.ABCPolyBase._int", "numpy.polynomial._polybase.ABCPolyBase._fit", "numpy.polynomial._polybase.ABCPolyBase._line", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.__init__", "numpy.polynomial._polybase.ABCPolyBase.__iter__", "numpy.polynomial._polybase.ABCPolyBase.__truediv__", "numpy.polynomial._polybase.ABCPolyBase.__floordiv__", "numpy.polynomial._polybase.ABCPolyBase.__divmod__", "numpy.polynomial._polybase.ABCPolyBase.__rdiv__", "numpy.polynomial._polybase.ABCPolyBase.__rtruediv__", "numpy.polynomial._polybase.ABCPolyBase.__rfloordiv__", "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__", "numpy.polynomial._polybase.ABCPolyBase.trim", "numpy.polynomial._polybase.ABCPolyBase.integ", "numpy.polynomial._polybase.ABCPolyBase.deriv", "numpy.polynomial._polybase.ABCPolyBase.linspace", "numpy.polynomial._polybase.ABCPolyBase.fit", "numpy.polynomial._polybase.ABCPolyBase.identity", "numpy.polynomial._polybase.ABCPolyBase.basis", "numpy.polynomial._polybase.ABCPolyBase.has_samecoef", "numpy.polynomial._polybase.ABCPolyBase._repr_latex_scalar", "numpy.polynomial._polybase.ABCPolyBase.__call__", "numpy.polynomial._polybase.ABCPolyBase.copy", "numpy.polynomial._polybase.ABCPolyBase.cutdeg", "numpy.polynomial._polybase.ABCPolyBase.truncate", "numpy.polynomial._polybase.ABCPolyBase.convert", "numpy.polynomial._polybase.ABCPolyBase.cast", "numbers", "numpy", "numbers.Real", "abc.ABC", "numpy.signbit", "os.name"], "regex._regex_core.ASCII": ["regex._regex_core.ASCII", "regex.regex.ASCII"], "numpy.core.numeric.int32": ["numpy.array_api.__init__.int32"], "future.backports.email._parseaddr.quote": [], "numpy.core.numeric.empty": ["numpy.ma.core.empty", "numpy.core.numeric.empty", "numpy.core.multiarray.empty", "numpy.array_api.__init__.empty"], "google.protobuf.internal.encoder._ModifiedEncoder": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder"], "torch.LongTensor": ["torch.__init__.LongTensor"], "future.backports.email._header_value_parser.SPECIALS": [], "transformers.data.processors.glue.QnliProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "click._compat._FixupStream.read1": ["click._compat._FixupStream.__getattr__", "click._compat._AtomicFile.__getattr__", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.cast"], "torch._lobpcg.LOBPCG": [], "tqdm.utils.envwrap.wrap": ["tqdm.utils.FormatReplace.__init__", "tqdm.utils.ObjectWrapper.__init__", "tqdm.utils.SimpleTextIOWrapper.__init__", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.DisableOnWriteError.disable_on_exception", "tqdm.utils.DisableOnWriteError.__init__", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils.CallbackIOWrapper.__init__", "tqdm.utils.CallbackIOWrapper.write", "os", "functools.partialmethod", "functools.partial", "tqdm.utils.ObjectWrapper.wrapper_getattr", "tqdm.utils.ObjectWrapper.wrapper_setattr", "tqdm.utils.wrap", "tqdm.utils.envwrap.wrap", "inspect.signature", "tqdm.utils.ObjectWrapper.__getattr__", "os.environ"], "functools.WRAPPER_UPDATES": [], "google.protobuf.internal.encoder._StructPackEncoder": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "struct.calcsize"], "__builtin__.FileNotFoundError": [], "numpy.array_api._elementwise_functions.logaddexp": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.logaddexp"], "numpy.array_api._elementwise_functions.exp": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.exp"], "future.backports.email.parser.Parser": [], "tqdm.std.format_dict": ["collections.defaultdict"], "numpy.array_api.__init__.triu": ["numpy.lib.twodim_base.triu", "numpy.array_api.__init__.triu", "numpy.array_api._creation_functions.triu"], "future.builtins.misc.super": ["future.builtins.misc.super", "future.builtins.__init__.super", "future.builtins.newsuper.newsuper"], "future.backports.http.cookiejar._timegm": ["future.backports.http.cookiejar.DefaultCookiePolicy.return_ok_secure", "future.backports.http.cookiejar.Cookie.has_nonstandard_attr", "future.backports.http.cookiejar.Cookie.get_nonstandard_attr", "future.backports.http.cookiejar.Cookie.set_nonstandard_attr", "future.backports.http.cookiejar.CookieJar._cookie_attrs", "future.backports.http.cookiejar.CookieJar._cookies_from_attrs_set", "calendar.timegm"], "numpy.ma.core.ptp": ["numpy", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core.asanyarray", "numpy._NoValue", "numpy.subtract"], "future.types.newbytes": ["future.utils.PY2", "future.utils.PY3", "future.types.newbytes.newbytes.__str__", "future.types.newbytes.newbytes.rstrip", "future.types.newbytes.newbytes.strip"], "torch.prod": ["numpy.ma.core.prod", "numpy.core.fromnumeric.prod", "numpy.array_api.__init__.prod"], "numpy.lib.scimath.power": ["numpy.lib.scimath._fix_real_lt_zero", "numpy.lib.scimath._fix_int_lt_zero", "numpy.core.numeric", "numpy.core.overrides.array_function_dispatch", "numpy.lib.scimath._power_dispatcher", "numpy.core.numeric.power"], "numpy.array_api._searching_functions.argmax": ["numpy.array_api._array_object.Array", "typing.Optional", "numpy", "numpy.array_api._array_object.Array._new", "numpy.asarray", "numpy.argmax"], "sentencepiece.__init__.SentencePieceProcessor.NBestEncode": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode._encode", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore._encode", "sentencepiece.__init__.SentencePieceProcessor._encode", "sentencepiece.__init__.SentencePieceTrainer._Train._encode", "sentencepiece.__init__.SentencePieceTrainer._encode", "sentencepiece.__init__.NBestEncode._encode", "sentencepiece.__init__.SampleEncodeAndScore._encode", "sentencepiece.__init__._Train._encode", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._end", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.__len__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.nbests", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__len__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor.IsUnknown", "sentencepiece.__init__.SentencePieceProcessor.IsControl", "sentencepiece.__init__.SentencePieceProcessor.IsUnused", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIdsBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropy", "sentencepiece.__init__.SentencePieceProcessor._CalculateEntropyBatch", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.Encode", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncode", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsIds", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScore", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsIds", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.__len__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__._LogStream.__enter__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__len__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__len__", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "transformers.data.processors.squad.SquadProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset", "transformers.data.processors.squad.SquadProcessor.get_train_examples", "transformers.data.processors.squad.SquadProcessor.get_dev_examples", "transformers.data.processors.squad.SquadProcessor._create_examples", "tqdm.tqdm", "transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "transformers.data.processors.squad.SquadExample"], "numpy.array_api._elementwise_functions.expm1": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.expm1"], "numpy.int32": ["numpy.array_api.__init__.int32"], "future.backports.email._parseaddr.parsedate_tz": ["future.backports.email._parseaddr.AddrlistClass.getaddress", "future.backports.email._parseaddr._parsedate_tz"], "tqdm.utils.ObjectWrapper.__init__": [], "transformers.modeling_tf_auto.TFAutoModel": [], "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField": ["google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.message", "google.protobuf.internal.containers", "google.protobuf.internal.containers.UnknownFieldSet", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.message._unknown_fields", "google.protobuf.message._unknown_field_set"], "numpy.polynomial._polybase.ABCPolyBase._mul": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "numpy.core._multiarray_umath.dot": [], "numpy.ma.make_mask_none": ["numpy.ma.core.make_mask_none"], "torch.utils.data.dataloader.DataLoader.multiprocessing_context": ["torch.utils.data.dataloader.DataLoader.multiprocessing_context", "torch.utils.data.dataloader.multiprocessing_context", "torch._six.string_classes", "torch.multiprocessing", "multiprocessing", "multiprocessing.context", "torch.multiprocessing._supports_context", "torch.multiprocessing.get_all_start_methods", "torch.multiprocessing.get_context"], "transformers.data.processors.glue.ColaProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.lib.index_tricks.CClass": ["numpy.lib.index_tricks.AxisConcatenator"], "future.backports.http.cookies.Morsel.__init__": ["future.builtins.dict", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.set", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.builtins.dict.__setitem__"], "packaging.specifiers.Specifier._canonical_spec": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.utils.canonicalize_version", "typing.Tuple", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder._ConvertToUnicode", "google.protobuf.internal.decoder.StringDecoder._ConvertToUnicode", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "transformers.file_utils.ModelOutput.__post_init__": ["collections.OrderedDict", "dataclasses.fields", "transformers.file_utils.is_tensor", "transformers.file_utils.ModelOutput.__setattr__", "transformers.file_utils.ModelOutput.to_tuple"], "transformers.data.processors.squad.squad_convert_example_to_features_init": [], "functools.partialmethod": [], "future.backports.xmlrpc.client.gzip_encode": ["gzip", "future.backports.xmlrpc.client.ExpatParser.feed", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.Transport.get_host_info", "io.BytesIO", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data", "gzip.GzipFile"], "torch._six.exec_": ["sys", "sys._getframe"], "urllib3.packages.six.wrapper": ["urllib3.packages.six.metaclass"], "numpy.array_api.__init__.log": ["numpy.lib.scimath.log", "numpy.ma.core.log", "numpy.core.umath.log", "numpy.array_api.__init__.log", "numpy.array_api._elementwise_functions.log"], "future.builtins.__init__.super": ["future.builtins.misc.super", "future.builtins.__init__.super"], "datetime.datetime.max": [], "regex._regex_core.UNICODE": ["regex._regex_core.UNICODE", "regex.regex.UNICODE"], "transformers.tokenization_transfo_xl.LMOrderedIterator": [], "tensorflow.data": [], "torch._torch_docs.parse_kwargs": ["re", "re.compile"], "transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "transformers.data.processors.squad.SquadExample"], "numpy.f2py.symbolic.Expr.__pos__": [], "numpy.array_api._creation_functions.ones_like": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "numpy.array_api._creation_functions._check_valid_dtype", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.ones_like"], "transformers.file_utils.is_tf_available": [], "numpy.seterr": ["numpy.core._ufunc_config.seterr"], "numpy.array_api._elementwise_functions.acosh": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.arccosh"], "future.backports.email._parseaddr.mktime_tz": ["future.backports.email._parseaddr.AddrlistClass.__init__", "future.backports.email._parseaddr.AddrlistClass.gotonext", "future.backports.email._parseaddr.AddrlistClass.getaddrlist", "future.backports.email._parseaddr.AddrlistClass.getaddress", "future.backports.email._parseaddr.AddrlistClass.getrouteaddr", "future.backports.email._parseaddr.AddrlistClass.getaddrspec", "future.backports.email._parseaddr.AddrlistClass.getdomain", "future.backports.email._parseaddr.AddrlistClass.getdelimited", "future.backports.email._parseaddr.AddrlistClass.getquote", "future.backports.email._parseaddr.AddrlistClass.getcomment", "future.backports.email._parseaddr.AddrlistClass.getdomainliteral", "future.backports.email._parseaddr.AddrlistClass.getatom", "future.backports.email._parseaddr.AddrlistClass.getphraselist", "future.backports.email._parseaddr.AddressList.__init__", "future.backports.email._parseaddr.AddressList.__getitem__", "time", "calendar", "calendar.timegm", "time.mktime"], "urllib3.packages.six.metaclass.__new__": ["sys", "types", "urllib3.packages.six._LazyModule.__dir__", "urllib3.packages.six._SixMetaPathImporter._add_module", "urllib3.packages.six._SixMetaPathImporter._get_module", "urllib3.packages.six._SixMetaPathImporter.find_module", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.__get_module", "urllib3.packages.six._SixMetaPathImporter.load_module", "urllib3.packages.six._SixMetaPathImporter.get_code", "urllib3.packages.six._SixMetaPathImporter.create_module", "urllib3.packages.six._SixMetaPathImporter.exec_module", "urllib3.packages.six.Module_six_moves_urllib.__dir__", "types.resolve_bases", "sys.version_info"], "numpy.core.numeric.half": [], "numpy.array_api._creation_functions.tril": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.tril"], "tqdm.utils._screen_shape_tput": ["tqdm.utils.FormatReplace.__init__", "tqdm.utils.ObjectWrapper.__init__", "tqdm.utils.SimpleTextIOWrapper.__init__", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.DisableOnWriteError.disable_on_exception", "tqdm.utils.DisableOnWriteError.__init__", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils.CallbackIOWrapper.__init__", "tqdm.utils.CallbackIOWrapper.write", "subprocess.check_call", "shlex", "shlex.split"], "torch.jit.__init__.forward.wrapper": ["torch.jit.__init__._unique_state_dict", "torch.jit.__init__.RecursiveScriptModule.graph", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.graph", "torch.jit.__init__.ONNXTracedModule.forward.wrapper", "torch.jit.__init__.ONNXTracedModule.wrapper", "torch.jit.__init__.forward.wrapper", "torch.jit.__init__._create_interpreter_name_lookup_fn", "torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.RecursiveScriptModule.__len__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__._CachedForward.__get__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.RecursiveScriptModule.__bool__"], "google.protobuf.internal.encoder.MessageSizer.FieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.core.numeric.log": ["numpy.lib.scimath.log", "numpy.ma.core.log", "numpy.core.umath.log", "numpy.array_api.__init__.log"], "torch._six.queue.Empty": [], "contextlib.ContextDecorator": [], "future.types.newrange.start": [], "numpy.core.records.record.__str__": ["numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.arrayprint._get_legacy_print_mode", "numpy.core.records.record.__str__", "numpy.core.numerictypes.void"], "numpy.f2py.symbolic.RelOp": ["enum.Enum"], "future.backports.email._header_value_parser.AddressList.addresses": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "transformers.data.processors.squad.SquadExample.__init__": ["transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "transformers.data.processors.squad.SquadProcessor._create_examples", "transformers.data.processors.squad._is_whitespace"], "numpy.array_api._elementwise_functions.sqrt": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.sqrt"], "numpy.core._multiarray_umath.fastCopyAndTranspose": [], "numpy.f2py.symbolic.Expr.__rmul__": ["numpy.f2py.symbolic.as_number"], "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.array_api._dtypes.int64": ["numpy.array_api.__init__.int64"], "numpy.polynomial._polybase.ABCPolyBase._repr_latex_term": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.basis_name", "numpy.polynomial._polybase.ABCPolyBase._div", "numpy.polynomial._polybase.ABCPolyBase._int", "numpy.polynomial._polybase.ABCPolyBase._fit", "numpy.polynomial._polybase.ABCPolyBase._line", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.ABCPolyBase._get_coefficients", "numpy.polynomial._polybase.ABCPolyBase.__init__", "numpy.polynomial._polybase.ABCPolyBase.__iter__", "numpy.polynomial._polybase.ABCPolyBase.__truediv__", "numpy.polynomial._polybase.ABCPolyBase.__floordiv__", "numpy.polynomial._polybase.ABCPolyBase.__divmod__", "numpy.polynomial._polybase.ABCPolyBase.__rdiv__", "numpy.polynomial._polybase.ABCPolyBase.__rtruediv__", "numpy.polynomial._polybase.ABCPolyBase.__rfloordiv__", "numpy.polynomial._polybase.ABCPolyBase.__rdivmod__", "numpy.polynomial._polybase.ABCPolyBase.trim", "numpy.polynomial._polybase.ABCPolyBase.integ", "numpy.polynomial._polybase.ABCPolyBase.deriv", "numpy.polynomial._polybase.ABCPolyBase.linspace", "numpy.polynomial._polybase.ABCPolyBase.fit", "numpy.polynomial._polybase.ABCPolyBase.identity", "numpy.polynomial._polybase.ABCPolyBase.basis", "os.name", "abc.ABC"], "transformers.file_utils.torch_only_method": ["transformers.file_utils.wrapper", "transformers.file_utils.torch_only_method.wrapper", "transformers.file_utils.torch_required.wrapper", "transformers.file_utils.tf_required.wrapper"], "future.backports.http.cookies.Morsel.OutputString": ["future.builtins.dict", "future.backports.http.cookies.Morsel.__setitem__", "future.backports.http.cookies.Morsel.set", "future.backports.http.cookies.BaseCookie.__set", "future.backports.http.cookies.BaseCookie.__setitem__", "future.backports.http.cookies.set", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output", "future.backports.http.cookies.BaseCookie.value_decode", "future.backports.http.cookies.BaseCookie.value_encode", "future.backports.http.cookies.SimpleCookie.value_decode", "future.backports.http.cookies.SimpleCookie.value_encode", "future.builtins.int", "future.backports.http.cookies._getdate", "future.backports.http.cookies.BaseCookie.__parse_string", "future.builtins.str"], "numpy.core.numeric.csingle": [], "numpy.core._multiarray_umath.shares_memory": [], "numpy.ma.mrecords.MaskedRecords.__repr__": ["numpy.ma.MaskedArray", "numpy.ma.mrecords.MaskedRecords.__len__", "numpy.ma.mrecords.MaskedRecords.__new__", "numpy.ma.mrecords.MaskedRecords.__array_finalize__", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ma.mrecords.MaskedRecords._fieldmask", "numpy.ma.mrecords.MaskedRecords.__getattribute__", "numpy.ma.mrecords.MaskedRecords.__str__"], "numpy.array_api.linalg.inv": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.linalg"], "transformers.data.processors.glue.QqpProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "packaging.specifiers.SpecifierSet.__str__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.BaseSpecifier.__hash__", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.BaseSpecifier.contains", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.version", "packaging.specifiers.Specifier._canonical_spec", "packaging.specifiers.Specifier.__hash__", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier.__contains__", "packaging.specifiers.Specifier.contains", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__hash__", "packaging.specifiers.SpecifierSet.__contains__", "packaging.specifiers.SpecifierSet.contains"], "torch.jit.__init__._unique_state_dict": ["torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsIds": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "numpy.core.numeric.allclose": ["numpy.core.numeric.isclose", "numpy.core.numeric._allclose_dispatcher"], "uu.Error": [], "numpy.array_api._set_functions.unique_values": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._array_object.Array._new", "numpy.unique"], "sentencepiece.__init__.SentencePieceProcessor.CalculateEntropy": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_CalculateEntropy", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_CalculateEntropy"], "torch.serialization._legacy_load": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization._get_restore_location", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization.legacy_load", "torch.serialization._legacy_load.legacy_load", "tarfile", "torch.serialization._is_zipfile", "sys", "torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "sys.version_info", "tarfile.TarError"], "os.O_RDWR": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter"], "numbers.Complex": [], "numpy.core.defchararray.chararray.lstrip": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.lstrip", "numpy.core.defchararray.lstrip", "numpy.core.numeric.ndarray.argsort"], "torch.__init__.enable_grad": ["torch.__init__.enable_grad", "torch.autograd.enable_grad"], "numpy.ma.core.logical_or": ["numpy.ma.core.logical_or", "numpy.core.umath.logical_or", "numpy.array_api.__init__.logical_or"], "transformers.data.processors.glue.StsbProcessor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "torch.utils.data.dataloader._BaseDataLoaderIter.__getstate__": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader.__next__"], "numpy.array_api._creation_functions.eye": ["typing.Optional", "numpy.array_api._typing.Dtype", "numpy.array_api._typing.Device", "numpy.array_api._creation_functions._check_valid_dtype", "numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.eye"], "numpy.core.fromnumeric.prod": ["numpy", "numpy.core.fromnumeric._wrapreduction", "numpy.core.fromnumeric._prod_dispatcher", "numpy._NoValue", "numpy.multiply"], "numpy.ma.core._recursive_set_fill_value": ["numpy", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._recursive_set_fill_value", "numpy.resize", "numpy.array"], "numpy.lib.histograms._hist_bin_doane": ["numpy", "numpy.lib.histograms._ptp", "numpy.sqrt", "numpy.std", "numpy.true_divide", "numpy.power", "numpy.mean", "numpy.log2", "numpy.absolute"], "numpy.core.umath.ERR_PRINT": ["numpy.core.umath.ERR_PRINT"], "tqdm.utils._screen_shape_windows": ["sys.stdin", "ctypes.create_string_buffer", "sys.stdout", "ctypes.windll", "struct", "ctypes.windll.kernel32", "struct.unpack"], "numpy.array_api.__init__.all": ["numpy.ma.core.all", "numpy.core.fromnumeric.all", "numpy.array_api.__init__.all", "numpy.array_api._utility_functions.all"], "numpy.csingle": [], "numpy.f2py.symbolic._FromStringWorker.parse": ["numpy.f2py.symbolic.eliminate_quotes"], "transformers.data.processors.squad.gen": ["transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "transformers.data.processors.squad.SquadProcessor.get_train_examples", "transformers.data.processors.squad.SquadExample.__init__", "transformers.data.processors.squad.SquadFeatures.__init__", "transformers.data.processors.squad.SquadResult.__init__", "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset", "transformers.data.processors.squad.SquadProcessor.get_dev_examples", "transformers.data.processors.squad.SquadProcessor._create_examples"], "numpy.core.records.fromfile": ["numpy.core.records.format_parser._createdtype", "numpy.core.records._deprecate_shape_0_as_None", "numpy.core.records.record.pprint", "contextlib.nullcontext", "numpy.compat.os_fspath", "numpy.core.records.recarray.__array_finalize__", "numpy.core.records.get_remaining_size", "numpy.core.records.recarray", "numpy.core.numeric", "numpy.core.records.format_parser", "numpy.core.records.format_parser._setfieldnames", "numpy.core.numerictypes", "numpy.core.overrides.set_module", "numpy.core.numeric.dtype", "numpy.core.numeric.array", "numpy.core.numerictypes.intp"], "numpy.array_api._elementwise_functions.not_equal": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.not_equal"], "numpy.array_api._elementwise_functions.acos": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.arccos"], "numpy.array_api.linalg.pinv": ["numpy.array_api._array_object.Array", "numpy.array_api._typing.Optional", "numpy.array_api._typing.Union", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.finfo", "numpy.linalg"], "numpy.array_api.linalg.matrix_transpose": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._array_object.Array._new", "numpy.swapaxes"], "tqdm.utils.CallbackIOWrapper": ["tqdm.utils.ObjectWrapper"], "google.protobuf.internal.wire_format.ZigZagEncode": [], "numpy.array_api._statistical_functions.prod": ["numpy.array_api._array_object.Array", "typing.Optional", "numpy.array_api._typing.Dtype", "typing.Union", "typing.Tuple", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes.float64", "numpy.array_api._dtypes.float32", "numpy", "numpy.array_api._array_object.Array._new", "numpy.prod"], "google.protobuf.internal.decoder._SignedVarintDecoder": ["google.protobuf.internal.decoder.DecodeVarint", "google.protobuf.internal.decoder._VarintDecoder.DecodeVarint", "google.protobuf.internal.decoder._SignedVarintDecoder.DecodeVarint"], "torch._lobpcg.LOBPCG.update_converged_count": ["torch", "torch._lobpcg.LOBPCG.update_converged_count", "torch._lobpcg.LOBPCG._update_basic", "torch._lobpcg.LOBPCG._get_svqb", "torch.norm"], "torch._C._cudart.cudaGetErrorString": [], "ast.literal_eval": [], "time.timezone": [], "tqdm.utils.ObjectWrapper.wrapper_setattr": [], "numpy.array_api._creation_functions.meshgrid": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "typing.List", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.meshgrid"], "numpy.array_api._dtypes.float32": ["numpy.array_api.__init__.float32"], "google.protobuf.internal.encoder._FixedSizer": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer"], "future.backports.http.cookies.BaseCookie.__init__": ["future.builtins.dict", "future.backports.http.cookies.Morsel.output", "future.backports.http.cookies.Morsel.js_output", "future.backports.http.cookies.BaseCookie.output", "future.backports.http.cookies.BaseCookie.js_output", "future.backports.http.cookies.output"], "numpy.f2py.symbolic.Expr.parse": ["numpy.f2py.symbolic.Language", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore"], "torch.__init__.no_grad": ["torch.__init__.no_grad", "torch.autograd.no_grad"], "numpy.ma.core.true_divide": ["numpy.ma.core.true_divide", "numpy.core.umath.true_divide"], "packaging.specifiers.SpecifierSet.__and__": ["packaging.specifiers.BaseSpecifier", "typing.Union", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.SpecifierSet"], "google.protobuf.internal.decoder._ModifiedDecoder": ["google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.decoder.InnerDecode", "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode", "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode", "google.protobuf.internal.decoder._FloatDecoder.InnerDecode", "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode"], "math.inf": [], "numpy.core.records.fromarrays": ["numpy.core.numeric", "numpy.core.records._deprecate_shape_0_as_None", "numpy.core.records.record.pprint", "numpy.core.records.format_parser._createdtype", "numpy.core.records.format_parser", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.recarray.__array_finalize__", "numpy.core.records.recarray", "numpy.core.overrides.set_module", "numpy.core.numeric.asarray", "numpy.core.numeric.dtype"], "numpy.array_api._elementwise_functions.logical_or": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._boolean_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.logical_or"], "numpy.ma.core.any": ["numpy", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core._check_mask_axis", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy._NoValue"], "numpy.f2py.symbolic.Expr.polynomial_atoms": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit"], "future.backports.email.message._formatparam": ["future.backports.email.message.Message._get_params_preserve", "future.backports.email.message.Message.get_params", "future.backports.email.message.Message.get_param", "future.backports.email.message.Message.set_param", "future.backports.email.message.Message.del_param", "future.backports.email.message.Message.values", "future.backports.email.message.Message.__len__", "future.backports.email.message.Message.get_filename", "future.backports.email.utils", "future.backports.email.utils.encode_rfc2231", "future.backports.email.utils.quote"], "transformers.data.processors.squad.squad_convert_example_to_features": ["transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset", "transformers.data.processors.squad.SquadProcessor.get_train_examples", "transformers.data.processors.squad.SquadProcessor.get_dev_examples", "transformers.data.processors.squad.SquadProcessor._create_examples", "transformers.data.processors.squad.SquadExample.__init__", "transformers.data.processors.squad.SquadFeatures.__init__", "transformers.data.processors.squad.SquadResult.__init__", "transformers.data.processors.squad._improve_answer_span", "transformers.data.processors.squad._new_check_is_max_context", "numpy", "transformers.data.processors.squad.SquadFeatures", "numpy.ones_like", "numpy.where", "numpy.asarray"], "numpy.compat.py3k.bytes": ["future.builtins.__init__.bytes", "numpy.random.__init__.bytes", "numpy.compat.py3k.bytes"], "numpy.core.numerictypes.string_": [], "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__init__": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter", "torch.utils.data.dataloader.DataLoader.multiprocessing_context", "torch.utils.data.dataloader.multiprocessing_context", "torch.multiprocessing", "itertools", "torch.utils.data.dataloader._InfiniteConstantSampler.__init__", "torch.utils.data.dataloader._InfiniteConstantSampler.__iter__", "torch.utils.data.dataloader.DataLoader.__init__", "torch.utils.data.dataloader.DataLoader.__iter__", "torch.utils.data.dataloader.DataLoader._auto_collation", "torch.utils.data.dataloader.DataLoader._index_sampler", "torch.utils.data.dataloader._BaseDataLoaderIter.__init__", "torch.utils.data.dataloader._BaseDataLoaderIter.__iter__", "torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._SingleProcessDataLoaderIter.__init__", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__init__", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_put_index", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_worker", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_workers", "torch.utils.data._utils", "threading", "torch._six.queue", "torch", "torch.utils.data.dataloader._DatasetKind.create_fetcher", "torch.utils.data.dataloader.DataLoader.__setattr__", "torch.utils.data.dataloader.DataLoader.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._BaseDataLoaderIter.__len__", "torch.utils.data.dataloader._BaseDataLoaderIter.__getstate__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__del__", "torch.utils.data._utils.worker", "torch.utils.data._utils.pin_memory", "torch.utils.data._utils.signal_handling", "itertools.cycle", "torch.cuda", "threading.Event", "threading.Thread", "torch._six.queue.Queue"], "transformers.data.processors.glue.ColaProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "numpy.core.records.record.__repr__": ["numpy.core.records.record.pprint", "numpy.core.numerictypes", "numpy.core.arrayprint._get_legacy_print_mode", "numpy.core.numerictypes.void"], "numpy.core._multiarray_umath.copyto": [], "tqdm.notebook.close": ["tqdm.notebook.tqdm_notebook"], "torch._lobpcg.LOBPCG.stop_iteration": [], "numpy.core.multiarray.dragon4_scientific": ["numpy.core.multiarray.dragon4_scientific"], "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__len__": ["sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__"], "numpy.core.umath.conjugate": ["numpy.ma.core.conjugate", "numpy.core.umath.conjugate"], "numpy._typing.NDArray": ["numpy._typing._generic_alias.NDArray", "numpy.typing.__init__.NDArray"], "numpy.core.umath.exp": ["numpy.ma.core.exp", "numpy.core.umath.exp", "numpy.array_api.__init__.exp"], "numpy.core.numeric.fromiter": ["numpy.core.numeric.fromiter", "numpy.core.multiarray.fromiter"], "numpy.array_api.__init__.argmax": ["numpy.ma.core.argmax", "numpy.core.fromnumeric.argmax", "numpy.array_api.__init__.argmax", "numpy.array_api._searching_functions.argmax"], "numpy.core.records.format_parser.__init__": ["numpy.core.overrides.set_module", "numpy.core.records.format_parser._setfieldnames"], "torch.tensor.Tensor.__array_wrap__": ["torch", "torch._C._add_docstr", "torch._C", "torch.tensor.Tensor.__rdiv__", "torch.tensor.__rdiv__", "torch.tensor._wrap_type_error_to_not_implemented", "torch.tensor.Tensor.__array__", "torch.tensor.Tensor.__array_wrap__", "torch.tensor.Tensor.__cuda_array_interface__", "torch.from_numpy", "torch._C._TensorBase"], "numpy.array_api._elementwise_functions.atan": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.arctan"], "packaging.specifiers.Specifier.__eq__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.InvalidSpecifier", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "transformers.tokenization_transfo_xl.LMMultiFileIterator": ["transformers.tokenization_transfo_xl.LMShuffledIterator"], "numpy.array_api._dtypes.int16": ["numpy.array_api.__init__.int16"], "numpy.core.numeric.issubdtype": ["numpy.lib.utils.issubdtype", "numpy.core.numerictypes.issubdtype"], "numpy.lib.polynomial._polyder_dispatcher": ["numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__"], "numpy.lib.function_base.vectorize._get_ufunc_and_otypes": ["numpy.core.overrides.set_module", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes._func", "numpy.lib.function_base._get_ufunc_and_otypes._func", "numpy.core.umath.frompyfunc", "numpy.core.numeric.asarray", "builtins", "builtins.any"], "operator.ge": [], "transformers.data.processors.squad.SquadProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "json", "os", "json.load", "os.path"], "packaging.specifiers.Specifier.__str__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.ma.core.nonzero": ["numpy.array"], "uu.decode": [], "numpy.lib.function_base._compute_virtual_index": ["numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func"], "numpy.array_api._manipulation_functions.permute_dims": ["numpy.array_api._array_object.Array", "typing.Tuple", "numpy", "numpy.array_api._array_object.Array._new", "numpy.transpose"], "numpy.ma.core.harden_mask": [], "numpy.array_api._creation_functions.from_dlpack": ["numpy.array_api._typing.Array", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._typing.Array._new", "numpy.array_api._array_object.Array._new", "numpy.from_dlpack"], "numpy._typing._add_docstring._docstrings": [], "numpy.lib.npyio.load": ["numpy.lib.format", "numpy.lib.npyio.NpzFile.__len__", "contextlib", "numpy.lib.npyio.NpzFile", "numpy.compat.os_fspath", "numpy.lib.npyio.BagObj.__getattribute__", "numpy.lib.npyio.NpzFile.__enter__", "numpy.lib.npyio.NpzFile.__exit__", "numpy.lib.npyio.NpzFile.close", "numpy.lib.npyio.NpzFile.__del__", "numpy.lib.npyio.NpzFile.__iter__", "numpy.lib.npyio.NpzFile.__getitem__", "numpy.lib.npyio.WriteWrap.close", "numpy.lib.npyio.WriteWrap.write", "numpy.lib.npyio.WriteWrap.write_bytes", "numpy.lib.npyio.WriteWrap.write_normal", "numpy.lib.npyio.WriteWrap.first_write", "numpy.compat.pickle", "numpy.core.overrides.set_module", "numpy.lib.format._MAX_HEADER_SIZE", "numpy.lib.format.MAGIC_PREFIX", "numpy.lib.format.open_memmap", "numpy.lib.format.read_array", "numpy.compat.pickle.load", "numpy.compat.pickle.UnpicklingError", "contextlib.ExitStack"], "numbers.Real": [], "caffe2.python.scope.CurrentDeviceScope": [], "caffe2.proto.caffe2_pb2.CUDA": [], "torch.jit.annotations.Any": ["torch.jit.annotations.Any", "torch._jit_internal.Any"], "google.protobuf.internal.encoder.BytesSizer.FieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "transformers.data.processors.glue._glue_convert_examples_to_features": ["typing.List", "typing.Optional", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.label_from_example", "transformers.data.processors.glue._glue_convert_examples_to_features.label_from_example", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.utils.InputFeatures"], "caffe2.python.schema._normalize_field": ["caffe2.python.schema.Field", "caffe2.python.schema.Field.field_types", "caffe2.python.schema.List.field_types", "caffe2.python.schema.ListWithEvicted.field_types", "caffe2.python.schema.Struct.field_types", "caffe2.python.schema.Scalar.field_type", "caffe2.python.schema.Scalar.field_types", "caffe2.python.schema.Scalar.set_type", "caffe2.python.schema.Scalar", "numpy", "numpy.dtype"], "future.types.newrange.newrange.stop": ["collections.Sequence", "collections.abc.Sequence"], "numpy.isinf": ["numpy.core.umath.isinf", "numpy.array_api.__init__.isinf"], "torch.cuda.device_of": ["torch.cuda.device"], "transformers.data.processors.glue.StsbProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "numpy.core.umath.hypot": ["numpy.ma.core.hypot", "numpy.core.umath.hypot"], "packaging.specifiers.SpecifierSet.contains": ["packaging.specifiers.BaseSpecifier", "typing.Optional", "packaging.version.Version", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.prereleases", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.BaseSpecifier.__hash__", "packaging.specifiers.BaseSpecifier.contains", "packaging.specifiers.Specifier.version", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.Specifier._canonical_spec", "packaging.specifiers.Specifier.__hash__", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier.__contains__", "packaging.specifiers.Specifier.contains", "packaging.specifiers.SpecifierSet.__str__", "packaging.specifiers.SpecifierSet.__hash__", "packaging.specifiers.SpecifierSet.__contains__", "packaging.specifiers.SpecifierSet.contains"], "numpy.lib.index_tricks.MGridClass": ["numpy.lib.index_tricks.nd_grid"], "numpy.lib.function_base.trim_zeros": ["numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base._trim_zeros"], "urllib3.packages.six.write": ["urllib3.packages.six.MovedModule.__getattr__"], "google.protobuf.message._unknown_fields": [], "numpy.core.numeric.where": ["numpy.ma.core.where", "numpy.core.numeric.where", "numpy.core.multiarray.where", "numpy.array_api.__init__.where", "certifi.__init__.where"], "cPickle": [], "numpy.polynomial.polyutils.mapdomain": ["numpy", "numpy.polynomial.polyutils.mapparms", "numpy.asanyarray"], "numpy.ma.extras.unique": ["numpy", "numpy.ma.core.MaskedArray", "numpy.unique"], "numpy.lib.histograms._hist_bin_fd": ["numpy", "numpy.subtract", "numpy.percentile"], "numpy.core.arrayprint.get_printoptions": ["sys", "numpy.core.overrides.set_module", "sys.maxsize"], "future.backports.email.message.Message.get_charset": [], "regex.regex": ["regex.regex.compile", "threading.RLock", "regex.regex._pickle", "regex.regex._compile", "regex._regex_core", "copyreg", "regex.DEFAULT_VERSION", "regex._regex_core.DEFAULT_VERSION", "copyreg.pickle"], "typing_extensions.ParamSpec": [], "numpy.core.umath.tan": ["numpy.ma.core.tan", "numpy.core.umath.tan", "numpy.array_api.__init__.tan"], "caffe2.python.schema.Metadata": ["collections.namedtuple"], "click.formatting.HelpFormatter.getvalue": [], "numpy.f2py.symbolic.Precedence": ["enum.Enum"], "future.backports.xmlrpc.client.Transport.close": [], "packaging.specifiers.BaseSpecifier.__hash__": ["abc", "abc.ABCMeta", "abc.abstractmethod"], "click._compat.should_strip_ansi": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "sys", "click._compat.isatty", "click._compat._is_jupyter_kernel_output", "sys.stdin", "typing.Optional", "typing.IO", "typing.Any"], "numpy.lib.function_base.vectorize._vectorize_call_with_signature": ["numpy.core.overrides.set_module", "numpy.core.numeric.asanyarray", "numpy.lib.function_base._parse_input_dimensions", "numpy.lib.function_base._calculate_shapes", "numpy", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.lib.function_base._create_arrays", "numpy.lib.function_base._update_dim_sizes", "builtins", "numpy.broadcast_to", "numpy.ndindex", "builtins.any"], "caffe2.proto.caffe2_pb2.TensorProto": [], "numpy.array_api._elementwise_functions.multiply": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.multiply"], "numpy.can_cast": ["numpy.core.numeric.can_cast", "numpy.core.multiarray.can_cast", "numpy.array_api.__init__.can_cast"], "future.backports.email.generator.BytesGenerator._handle_text": ["future.backports.email.generator.Generator", "future.backports.email.generator.Generator._handle_text", "future.backports.email.generator.BytesGenerator._handle_text", "future.backports.email.generator._handle_text", "future.backports.email.utils._has_surrogates", "future.builtins.super", "future.backports.email.generator.BytesGenerator"], "numpy.array_api._elementwise_functions.bitwise_xor": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._integer_or_boolean_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.bitwise_xor"], "numpy.f2py.symbolic.Expr.__sub__": [], "numpy.f2py.symbolic.Expr.substitute": ["numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.Expr.__mul__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.restore", "re", "numpy.f2py.symbolic.as_array", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic.ewarn", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.visit", "re.match"], "numpy.core._type_aliases._concrete_typeinfo": [], "packaging.specifiers._pad_version": ["typing.List", "packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__", "itertools", "packaging.specifiers.SpecifierSet.__len__", "typing.Tuple", "itertools.takewhile", "itertools.chain"], "future.backports.urllib.request.ip2num": ["future.builtins.map", "future.backports.urllib.request.FancyURLopener.redirect_internal", "future.builtins.int"], "torch.jit.__init__.RecursiveScriptModule.inlined_graph": ["torch.jit.__init__.ScriptModule"], "torch._torch_docs.merge_dicts": [], "click.formatting.HelpFormatter.section": ["contextlib.contextmanager", "click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.write_text", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "typing.Iterator"], "numpy.core.umath.greater": ["numpy.ma.core.greater", "numpy.core.defchararray.greater", "numpy.core.umath.greater", "numpy.array_api.__init__.greater"], "torch.utils.data.dataloader._BaseDataLoaderIter.__init__": ["torch.utils.data.dataloader._BaseDataLoaderIter._next_index", "torch.utils.data.dataloader._BaseDataLoaderIter._next_data", "torch.utils.data.dataloader._BaseDataLoaderIter.__next__", "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data", "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data", "torch.utils.data.dataloader.__next__", "torch", "torch.utils.data.dataloader._InfiniteConstantSampler.__iter__", "torch.utils.data.dataloader.DataLoader.__iter__", "torch.utils.data.dataloader._BaseDataLoaderIter.__iter__", "torch.cuda", "torch.empty", "torch.int64"], "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "transformers.file_utils.is_torch_available": [], "numpy.array_api._elementwise_functions.bitwise_left_shift": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._integer_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.any", "numpy.left_shift"], "numpy.ma.core._scalar_fill_value": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype"], "numpy.polynomial._polybase.ABCPolyBase.has_sametype": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC"], "numpy.array_api._elementwise_functions.atanh": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.arctanh"], "torch.utils.data.dataloader._SingleProcessDataLoaderIter.__init__": ["torch.utils.data.dataloader._BaseDataLoaderIter", "torch.utils.data.dataloader._SingleProcessDataLoaderIter", "torch.utils.data.dataloader._DatasetKind"], "future.backports.email.headerregistry.addr_spec": ["future.backports.email.headerregistry.AddressHeader.value_parser", "future.backports.email._header_value_parser", "future.backports.email._header_value_parser.quote_string", "future.backports.email._header_value_parser.DOT_ATOM_ENDS"], "future.backports.email._parseaddr.parsedate": ["future.backports.email._parseaddr.AddrlistClass.__init__", "future.backports.email._parseaddr.AddrlistClass.gotonext", "future.backports.email._parseaddr.AddrlistClass.getaddrlist", "future.backports.email._parseaddr.AddrlistClass.getaddress", "future.backports.email._parseaddr.AddrlistClass.getrouteaddr", "future.backports.email._parseaddr.AddrlistClass.getaddrspec", "future.backports.email._parseaddr.AddrlistClass.getdomain", "future.backports.email._parseaddr.AddrlistClass.getdelimited", "future.backports.email._parseaddr.AddrlistClass.getquote", "future.backports.email._parseaddr.AddrlistClass.getcomment", "future.backports.email._parseaddr.AddrlistClass.getdomainliteral", "future.backports.email._parseaddr.AddrlistClass.getatom", "future.backports.email._parseaddr.AddrlistClass.getphraselist", "future.backports.email._parseaddr.AddressList.__init__", "future.backports.email._parseaddr.AddressList.__getitem__", "future.backports.email._parseaddr.parsedate_tz"], "datetime.timedelta": [], "numpy.polynomial._polybase.symbol": [], "numpy.array_api.__init__.logical_and": ["numpy.ma.core.logical_and", "numpy.core.umath.logical_and", "numpy.array_api.__init__.logical_and", "numpy.array_api._elementwise_functions.logical_and"], "numpy.array_api._elementwise_functions.pow": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.power"], "numpy.array_api._elementwise_functions.less_equal": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.less_equal"], "numpy.array_api._searching_functions.where": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.where"], "google.protobuf.message.ByteSize": [], "numpy.array_api._elementwise_functions.add": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.add"], "torch.jit.__init__.RecursiveScriptModule": ["torch.jit.__init__.ScriptModule"], "numpy.array_api._elementwise_functions.floor": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._integer_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.floor"], "future.backports.xmlrpc.client.ExpatParser.close": [], "datetime.datetime.strptime": [], "numpy.ma.core.max": ["numpy", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.fill_value", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.asanyarray", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core._check_mask_axis", "numpy.ma.core.maximum_fill_value", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy.ma.core.MaskError", "numpy._NoValue", "numpy.copyto", "numpy.nan"], "numpy.ma.core._frommethod": [], "os.O_EXCL": [], "numpy.f2py.__init__.compile": ["tempfile", "os", "shlex", "sys", "subprocess", "tempfile.mkstemp", "sys.executable", "shlex.split", "subprocess.run", "subprocess.CompletedProcess", "os.close", "os.remove", "os.name"], "numpy.array_api.__init__.nonzero": ["numpy.ma.core.nonzero", "numpy.core.fromnumeric.nonzero", "numpy.array_api.__init__.nonzero", "numpy.array_api._searching_functions.nonzero"], "transformers.data.processors.glue.MnliProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "numpy.f2py.symbolic.Expr.__call__": ["numpy.f2py.symbolic.as_apply", "numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit"], "numpy.array_api._dtypes.uint32": ["numpy.array_api.__init__.uint32"], "tqdm.utils.DisableOnWriteError.inner": ["tqdm.utils.ObjectWrapper", "tqdm.utils.Comparable.__le__", "tqdm.utils.Comparable.__eq__", "tqdm.utils.Comparable.__ne__", "tqdm.utils.Comparable.__ge__", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.__setattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr", "tqdm.utils.ObjectWrapper.wrapper_setattr", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.SimpleTextIOWrapper.__eq__", "tqdm.utils.DisableOnWriteError.disable_on_exception", "tqdm.utils.DisableOnWriteError.__eq__", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils.CallbackIOWrapper.write", "tqdm.utils.CallbackIOWrapper.read"], "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__end": [], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm": ["transformers.tokenization_utils.PreTrainedTokenizer"], "future.backports.xmlrpc.client.Marshaller.dumps": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.__dump", "future.backports.xmlrpc.client.Fault", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "numpy.array_api._manipulation_functions.stack": ["typing.Union", "typing.Tuple", "typing.List", "numpy.array_api._array_object.Array", "numpy.array_api._data_type_functions.result_type", "numpy", "numpy.array_api._array_object.Array._new", "numpy.stack"], "transformers.data.processors.glue.MnliProcessor.get_train_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.array_api._data_type_functions.can_cast": ["numpy.array_api._typing.Dtype", "typing.Union", "numpy.array_api._array_object.Array", "numpy.array_api._dtypes._all_dtypes", "numpy.array_api._dtypes._result_type"], "numpy.core.umath.cos": ["numpy.ma.core.cos", "numpy.core.umath.cos", "numpy.array_api.__init__.cos"], "numpy.lib.stride_tricks.broadcast_to": ["numpy.lib.stride_tricks._broadcast_to", "numpy.core.overrides.array_function_dispatch", "numpy.lib.stride_tricks._broadcast_to_dispatcher"], "numpy.array_api.__init__.from_dlpack": ["numpy.core.numeric.from_dlpack", "numpy.core.multiarray.from_dlpack", "numpy.array_api.__init__.from_dlpack", "numpy.array_api._creation_functions.from_dlpack"], "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset", "transformers.data.processors.squad.SquadProcessor.get_train_examples", "transformers.data.processors.squad.SquadProcessor.get_dev_examples", "transformers.data.processors.squad.SquadProcessor._create_examples", "transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "tqdm.tqdm"], "torch.cuda.get_device_name": ["torch.cuda.get_device_properties", "torch.cuda.device"], "numpy.core.overrides.public_api": ["numpy.core.overrides.public_api", "numpy.core.overrides.array_function_dispatch.decorator.public_api", "numpy.core.overrides.decorator.public_api", "numpy.core._multiarray_umath.implement_array_function", "functools", "functools.wraps"], "numpy.core.numerictypes._minvals": [], "numpy.core._multiarray_umath.datetime_as_string": [], "numpy.core.umath.log": ["numpy.lib.scimath.log", "numpy.ma.core.log", "numpy.core.umath.log", "numpy.array_api.__init__.log"], "numpy.ma.filled": ["numpy.ma.core.filled"], "google.protobuf.internal.decoder.SpecificDecoder.DecodeField": ["google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes"], "packaging.specifiers.Specifier.__hash__": ["packaging.specifiers.BaseSpecifier", "packaging.specifiers.BaseSpecifier.prereleases", "packaging.specifiers.Specifier.prereleases", "packaging.specifiers.Specifier.__repr__", "packaging.specifiers.Specifier._compare_compatible", "packaging.specifiers.Specifier._compare_equal", "packaging.specifiers.Specifier._compare_not_equal", "packaging.specifiers.Specifier._compare_less_than_equal", "packaging.specifiers.Specifier._compare_greater_than_equal", "packaging.specifiers.Specifier._compare_less_than", "packaging.specifiers.Specifier._compare_greater_than", "packaging.specifiers.Specifier._compare_arbitrary", "packaging.specifiers.SpecifierSet.prereleases", "packaging.specifiers.SpecifierSet.__repr__", "re", "packaging.specifiers.BaseSpecifier.__hash__", "packaging.specifiers.Specifier.__hash__", "packaging.specifiers.SpecifierSet.__hash__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsIds": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsIds", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsIds"], "tqdm.notebook.TqdmHBox._repr_pretty_": ["IPython.html.widgets.HBox", "ipywidgets.HBox", "IPython.html.widgets.ContainerWidget"], "numpy.core.numeric.MAXDIMS": ["numpy.core.numeric.MAXDIMS", "numpy.core.multiarray.MAXDIMS"], "os.chmod": [], "numpy.core.umath.isfinite": ["numpy.core.umath.isfinite", "numpy.array_api.__init__.isfinite"], "shutil.get_terminal_size": [], "torch.sparse.__init__.sum": ["torch", "torch._sparse_sum"], "future.backports.email.generator._handle_text": ["future.builtins.str", "future.backports.email.utils._has_surrogates", "future.builtins.super", "future.backports.email.generator.BytesGenerator"], "numpy.ma.core.cumprod": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ma.core._convert2ma._replace_return_type"], "numpy.lib.index_tricks.RClass": ["numpy.lib.index_tricks.AxisConcatenator"], "numpy.amin": ["numpy.ma.core.amin", "numpy.core.fromnumeric.amin"], "transformers.data.processors.utils.InputExample": ["dataclasses.dataclass", "transformers.data.processors.utils.InputExample.to_json_string", "transformers.data.processors.utils.InputFeatures.to_json_string", "typing.Optional", "transformers.data.processors.utils.DataProcessor.get_labels"], "numpy.ma.core.all": ["numpy", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core._check_mask_axis", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray", "numpy._NoValue"], "future.backports.email.message._unquotevalue": ["future.backports.email.message.Message.values", "future.backports.email.utils", "future.backports.email.utils.unquote"], "numpy.integer": [], "numpy.core.numeric.RAISE": ["numpy.core.numeric.RAISE", "numpy.core.multiarray.RAISE"], "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "traceback.format_stack": [], "numpy.polynomial.polyutils.getdomain": ["numpy.polynomial.polyutils.as_series", "numpy", "numpy.array", "numpy.typecodes"], "transformers.data.processors.squad.SquadFeatures.__init__": [], "future.utils.ensure_new_type": ["future.utils.native", "future.types.newbytes", "future.types.newbytes.newbytes", "future.types.newstr.newstr", "future.types.newint.newint", "future.types.newdict.newdict"], "numpy.core.fromnumeric.mean": ["numpy", "numpy.core.multiarray", "numpy.core.fromnumeric.mean", "numpy.core._methods", "numpy.core.fromnumeric._mean_dispatcher", "numpy.core.multiarray.ndarray", "numpy.core._methods._mean", "numpy._NoValue"], "torch.cuda.is_initialized": [], "numpy.ma.extras.vander": ["numpy.ma.extras._fromnxfunction.__init__", "numpy.ma.extras.mr_class.__init__", "numpy", "numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.extras.MAxisConcatenator.__getitem__", "numpy.ma.core.getmask", "numpy.ma.core.nomask", "numpy.vander"], "numpy.f2py.symbolic.Expr.__rsub__": ["numpy.f2py.symbolic.as_number"], "numpy.array_api._elementwise_functions.abs": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.abs"], "numpy.lib.function_base.angle": ["numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.core.numeric.asanyarray", "numpy.core.numeric", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.core.umath.arctan2", "numpy.core.umath.pi", "numpy.lib.function_base._angle_dispatcher", "numpy.core.numeric.complexfloating"], "numpy.ma.core.multiply": ["numpy.ma.core.multiply", "numpy.core.defchararray.multiply", "numpy.core.umath.multiply", "numpy.array_api.__init__.multiply"], "numpy.dual.eigvals": ["numpy.dual.eigvals", "numpy.linalg.linalg.eigvals"], "sentencepiece._sentencepiece.ImmutableSentencePieceText_ImmutableSentencePiece__surface": [], "numpy.array_api._dtypes.int8": ["numpy.array_api.__init__.int8"], "numpy.lib.polynomial.poly": ["numpy.core.atleast_1d", "numpy.linalg.eigvals", "numpy.lib.polynomial.poly1d.__len__", "numpy.lib.type_check.mintypecode", "numpy.lib.polynomial.poly1d.variable", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.poly1d.__add__", "numpy.lib.polynomial.poly1d.__radd__", "numpy.lib.polynomial.poly1d.fmt_float", "numpy.core.ones", "numpy.core.numeric", "numpy.core.array", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.roots", "numpy.lib.polynomial._poly_dispatcher", "numpy.core.numeric.convolve", "numpy.core.numeric.complexfloating", "numpy.core.numeric.asarray", "numpy.core.numeric.all", "numpy.core.numeric.sort"], "google.protobuf.internal.encoder.MessageEncoder.EncodeField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.cdouble": [], "operator.gt": [], "numpy.lib.twodim_base.tri": ["numpy.core.numeric.greater_equal", "numpy.core.numeric.arange", "numpy.lib.twodim_base._min_int", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module", "numpy.core.numeric.greater_equal.outer"], "google.protobuf.internal.encoder.TagBytes": ["google.protobuf.internal.encoder._VarintBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.PackTag"], "future.backports.email._header_value_parser.quote_string": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value"], "numpy.core._type_aliases._concrete_typeinfo.items": [], "numpy.issubdtype": ["numpy.lib.utils.issubdtype", "numpy.core.numerictypes.issubdtype"], "transformers.modeling_auto.AutoModel.from_pretrained": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_utils.PretrainedConfig", "transformers.configuration_auto.AutoConfig", "transformers.configuration_auto.replace_list_option_in_docstrings", "transformers.file_utils.add_start_docstrings", "transformers.configuration_auto.AutoConfig.from_pretrained"], "numpy.core.fromnumeric.argpartition": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._argpartition_dispatcher"], "numpy.inf": ["numpy.core.numeric.inf", "numpy.array_api.__init__.inf"], "numpy.lib.histograms._hist_bin_scott": ["numpy", "numpy.std", "numpy.pi"], "numpy.array_api.__init__.nan": ["numpy.core.numeric.nan", "numpy.array_api.__init__.nan", "numpy.array_api._constants.nan"], "packaging.specifiers.version": ["packaging.specifiers.BaseSpecifier.__str__", "packaging.specifiers.Specifier.__str__", "packaging.specifiers.SpecifierSet.__str__"], "numpy.lib.twodim_base.tril": ["numpy.core.numeric.asanyarray", "numpy.lib.twodim_base.tri", "numpy.core.numeric.where", "numpy.core.numeric.zeros", "numpy.lib.twodim_base._trilu_dispatcher"], "numpy.core.umath.ceil": ["numpy.ma.core.ceil", "numpy.core.umath.ceil", "numpy.array_api.__init__.ceil"], "numpy.ma.core.bool_": ["numpy.ma.core.bool_", "numpy.bool_"], "google.protobuf.internal.decoder.DecodePackedField": ["google.protobuf.message", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.containers", "google.protobuf.internal.containers.UnknownFieldSet", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.message._unknown_fields", "google.protobuf.message._unknown_field_set"], "torch._C.default_generator.get_state": [], "numpy.core.defchararray.chararray.strip": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.lstrip", "numpy.core.defchararray.chararray.rstrip", "numpy.core.defchararray.chararray.strip", "numpy.core.defchararray.strip", "numpy.core.numeric.ndarray.argsort"], "numpy.lib.polynomial._polyval_dispatcher": ["numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__"], "numpy.lib.histograms._hist_bin_rice": ["numpy.lib.histograms._ptp"], "multiprocessing.cpu_count": [], "google.protobuf.internal.encoder.StringSizer.FieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "multiprocessing.Pool": [], "future.builtins.range": ["future.builtins.iterators.range", "future.builtins.__init__.range", "past.builtins.noniterators.range", "past.builtins.__init__.range", "future.types.newrange"], "numpy.f2py.symbolic.Expr.visit": ["numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit", "numpy.f2py.symbolic.ArithOp"], "click._compat._AtomicFile.__exit__": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.Any", "typing.Optional", "typing.Type"], "numpy.core.multiarray.unpackbits": ["numpy.core._multiarray_umath", "numpy.core._multiarray_umath.unpackbits"], "numpy.generic": [], "numpy.array_api._dtypes.bool": ["numpy.array_api.__init__.bool"], "numpy.lib.npyio._genfromtxt_dispatcher": [], "numpy.core._multiarray_umath.inner": [], "numpy.random.__init__.power": ["numpy.lib.scimath.power", "numpy.random.__init__.power", "numpy.ma.core.power", "numpy.core.umath.power"], "google.protobuf.internal.wire_format.ZigZagDecode": [], "transformers.data.processors.glue.Sst2Processor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples": ["transformers.data.processors.glue.MnliProcessor", "os", "os.path"], "numpy.ma.core.divide": ["numpy.ma.core.divide", "numpy.core.umath.divide", "numpy.array_api.__init__.divide"], "transformers.data.processors.glue.QqpProcessor._create_examples": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.utils.InputExample"], "numpy.array_api._constants.nan": ["numpy.core.numeric.nan", "numpy.array_api.__init__.nan"], "numpy.ma.core.reduce": ["numpy.ma.core.get_masked_subclass", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUFunc.__str__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.__str__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__iter__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.__str__", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__lt__", "numpy.ma.core.MaskedArray.__gt__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.put", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.sort", "numpy.ma.core.MaskedArray.ptp", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.MaskedArray.tobytes", "numpy.ma.core.MaskedArray.tofile", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.mvoid.__str__", "numpy.ma.core.mvoid.__iter__", "numpy.ma.core.mvoid.tolist", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__str__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.__init__", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core.make_mask", "numpy.ma.core.dtype", "numpy.core.umath", "numpy", "numpy.array", "numpy.ma.core.MaskedArrayFutureWarning", "warnings", "numpy._NoValue", "numpy.core.umath.logical_and", "warnings.warn"], "future.backports.email._header_value_parser.TokenList.__repr__": ["future.builtins.list", "future.builtins.super", "future.backports.email._header_value_parser.TokenList"], "numpy.ma.core.shrink_mask": ["numpy.ma.core._shrink_mask"], "numpy.polyfit": ["numpy.polynomial.polynomial.polyfit", "numpy.lib.polynomial.polyfit", "numpy.ma.extras.polyfit"], "google.protobuf.internal.decoder.StringDecoder._ConvertToUnicode": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder._ConvertToUnicode", "google.protobuf.internal.decoder.StringDecoder._ConvertToUnicode", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "transformers.data.processors.squad.SquadResult.__init__": [], "click.formatting.HelpFormatter.__init__": ["click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.write_text", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "shutil", "shutil.get_terminal_size", "typing.Optional", "typing.List"], "numpy.core.fromnumeric.sum": ["numpy", "warnings", "numpy.core.fromnumeric._wrapreduction", "numpy.core.fromnumeric._sum_dispatcher", "warnings.warn", "numpy._NoValue", "numpy.add"], "caffe2.python.scope": ["threading", "threading.local"], "numpy.array_api.__init__.argsort": ["numpy.ma.core.argsort", "numpy.core.fromnumeric.argsort", "numpy.array_api.__init__.argsort", "numpy.array_api._sorting_functions.argsort"], "numpy.array_api._constants.e": ["numpy.core.umath.e", "numpy.array_api.__init__.e"], "torch.serialization._open_zipfile_writer": ["torch.serialization._is_path", "torch.serialization._open_zipfile_writer_file", "torch.serialization._open_zipfile_writer_buffer"], "future.types.newrange.newrange.step": ["collections.Sequence", "collections.abc.Sequence"], "numpy.core.overrides.verify_matching_signatures": ["numpy.compat._inspect.getargspec"], "numpy.ma.extras.apply_over_axes": ["numpy.ma.core.asarray", "numpy.ma.extras._fromnxfunction.__call__", "numpy.ma.extras._fromnxfunction_single.__call__", "numpy.ma.extras._fromnxfunction_seq.__call__", "numpy.ma.extras._fromnxfunction_args.__call__", "numpy.ma.extras._fromnxfunction_allargs.__call__", "numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.core.array", "numpy.ma.core", "numpy.ma.core.expand_dims"], "numpy.core.umath.fabs": ["numpy.ma.core.fabs", "numpy.core.umath.fabs"], "numpy.lib.index_tricks.OGridClass": ["numpy.lib.index_tricks.nd_grid"], "numpy.ma.core.count": ["numpy", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core._convert2ma._replace_return_type", "numpy.core.numeric.normalize_axis_tuple", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.tolist", "numpy.ma.core.mvoid.tolist", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy._NoValue", "numpy.matrix", "numpy.zeros", "numpy.bool_", "numpy.full", "numpy.AxisError", "numpy.intp", "numpy.array"], "numpy.array_api._data_type_functions.broadcast_arrays": ["numpy.array_api._array_object.Array", "numpy", "typing.List", "numpy.array_api._array_object.Array._new", "numpy.broadcast_arrays"], "sacremoses.MosesDetokenizer": ["sacremoses.tokenize.MosesDetokenizer"], "urllib3.packages.six._LazyModule": ["types", "types.ModuleType"], "torch._six.metaclass": [], "past.builtins.noniterators.map": ["future.builtins.iterators.map", "future.builtins.__init__.map", "past.builtins.noniterators.map", "past.builtins.__init__.map"], "google.protobuf.internal.wire_format._VarUInt64ByteSizeNoTag": ["google.protobuf.message", "google.protobuf.message.EncodeError"], "transformers.tokenization_transfo_xl.TransfoXLTokenizer.save_vocabulary": ["transformers.tokenization_utils.PreTrainedTokenizer", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string", "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream", "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator", "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream", "typing.Optional", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline", "os", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file", "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file", "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter", "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained", "pickle", "typing.Tuple", "os.path", "pickle.dump"], "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIdsBatch": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsIdsBatch", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__EncodeAsIdsBatch"], "future.backports.email.utils.decode_rfc2231": [], "numpy.ma.core._extremum_fill_value": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._get_dtype_of", "numpy.ma.core._recursive_fill_value", "numpy.ma.core._scalar_fill_value", "numpy.ma.core.default_fill_value._scalar_fill_value", "numpy.ma.core._extremum_fill_value._scalar_fill_value"], "future.backports.email._encoded_words.decode_b": ["future.backports.email.errors", "binascii", "future.backports.email._encoded_words._QByteMap.__missing__", "re", "base64", "future.backports.email.errors.InvalidBase64PaddingDefect", "future.backports.email.errors.InvalidBase64CharactersDefect", "base64.b64decode", "re.match", "binascii.Error"], "numpy.array_api._manipulation_functions.flip": ["numpy.array_api._array_object.Array", "typing.Optional", "typing.Union", "typing.Tuple", "numpy", "numpy.array_api._array_object.Array._new", "numpy.flip"], "past.builtins.__init__.chr": ["future.builtins.misc.chr", "future.builtins.__init__.chr", "past.builtins.misc.chr", "past.builtins.__init__.chr"], "future.backports.xmlrpc.client.Unmarshaller.start": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "numpy.amax": ["numpy.ma.core.amax", "numpy.core.fromnumeric.amax"], "google.protobuf.internal.decoder.StringDecoder.DecodeField": ["google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder._ConvertToUnicode", "google.protobuf.internal.decoder.StringDecoder._ConvertToUnicode", "google.protobuf.message", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.encoder.TagBytes"], "numpy.array_api._dtypes.float64": ["numpy.array_api.__init__.float64"], "numpy.array_api.__init__.prod": ["numpy.ma.core.prod", "numpy.core.fromnumeric.prod", "numpy.array_api.__init__.prod", "numpy.array_api._statistical_functions.prod"], "contextvars": [], "future.utils.surrogateescape.register_surrogateescape": ["future.utils", "codecs", "future.utils.surrogateescape.surrogateescape_handler", "future.utils.PY3", "codecs.lookup_error", "codecs.register_error"], "numpy.ma.core.default_fill_value._scalar_fill_value": ["numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._get_dtype_of", "numpy.ma.core._recursive_fill_value", "numpy.ma.core._scalar_fill_value", "numpy.ma.core.default_fill_value._scalar_fill_value", "numpy.ma.core._extremum_fill_value._scalar_fill_value"], "numpy.lib.format.descr_to_dtype": ["numpy", "numpy.lib.format.descr_to_dtype", "numpy.dtype", "numpy.void"], "numpy.core.iinfo": ["numpy.core.getlimits.iinfo", "numpy.array_api.__init__.iinfo"], "numpy.array_api._constants.inf": ["numpy.core.numeric.inf", "numpy.array_api.__init__.inf"], "transformers.data.processors.glue.MnliProcessor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.ma.extras.atleast_1d": ["numpy.ma.extras.atleast_1d", "numpy.core.shape_base.atleast_1d"], "urllib3.packages.six._LazyDescr": [], "google.protobuf.internal.decoder._FloatDecoder": ["struct", "google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.decoder.InnerDecode", "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode", "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode", "google.protobuf.internal.decoder._FloatDecoder.InnerDecode", "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode", "google.protobuf.internal.wire_format", "struct.unpack", "google.protobuf.internal.wire_format.WIRETYPE_FIXED32"], "numpy.array_api._elementwise_functions.round": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.round"], "numpy.array_api._data_type_functions.finfo": ["typing.Union", "numpy.array_api._typing.Dtype", "numpy.array_api._array_object.Array", "numpy", "numpy.array_api._data_type_functions.finfo_object", "numpy.finfo"], "numpy.array_api._elementwise_functions.tanh": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.tanh"], "numpy.core.defchararray.split": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray._split_dispatcher", "numpy.core.defchararray.chararray.rsplit", "numpy.core.defchararray.chararray.split", "numpy.core.defchararray.chararray.splitlines", "numpy.core.defchararray.split"], "numpy.ma.core.mean": ["numpy", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.core.numerictypes", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.core.multiarray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray", "numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "numpy._NoValue", "numpy.core.numerictypes.float16", "numpy.core.numerictypes.integer", "numpy.core.numerictypes.bool_", "numpy.core.multiarray.dtype"], "google.protobuf.internal.decoder._VarintDecoder": ["google.protobuf.internal.decoder.DecodeVarint", "google.protobuf.internal.decoder._VarintDecoder.DecodeVarint", "google.protobuf.internal.decoder._SignedVarintDecoder.DecodeVarint"], "torch._lobpcg.LOBPCG.call_tracker": ["torch", "torch.jit"], "numpy.core.numerictypes._maxvals": [], "numpy.core.umath.ERR_WARN": ["numpy.core.umath.ERR_WARN"], "torch._tensor_docs.add_docstr_all": ["torch._C._add_docstr"], "numpy.polynomial._polybase.ABCPolyBase.mapparms": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial.polyutils", "numpy.polynomial.polyutils.mapparms", "abc.ABC", "os.name"], "numpy.array_api.__init__.empty": ["numpy.ma.core.empty", "numpy.core.numeric.empty", "numpy.core.multiarray.empty", "numpy.array_api.__init__.empty", "numpy.array_api._creation_functions.empty"], "transformers.tokenization_utils_base.ExplicitEnum": ["enum.Enum"], "numpy.core.numeric.cdouble": [], "torch.__init__.load": ["torch.__init__.load", "numpy.lib.npyio.load", "joblib.__init__.load", "torch.serialization.load"], "textwrap.dedent": [], "click.utils.LazyFile.__repr__": ["click.utils.LazyFile.__repr__", "click.utils.KeepOpenFile.__repr__", "click.utils.format_filename"], "past.types.long": ["numpy.compat.py3k.long", "past.builtins.__init__.long", "past.types.__init__.long"], "numpy.core.umath.cosh": ["numpy.ma.core.cosh", "numpy.core.umath.cosh", "numpy.array_api.__init__.cosh"], "numpy.core.umath.true_divide": ["numpy.ma.core.true_divide", "numpy.core.umath.true_divide"], "tqdm.utils.FormatReplace.__init__": [], "caffe2.python.core.BlobReference": [], "numpy.array_api._elementwise_functions.bitwise_right_shift": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._integer_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.any", "numpy.right_shift"], "numpy.f2py.symbolic.Expr.symbols": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit"], "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsImmutableProto": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.delete_SentencePieceProcessor"], "io.open": [], "transformers.data.processors.glue.QnliProcessor.get_dev_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.ma.core.size": ["numpy", "numpy.ma.core.getdata", "numpy.size"], "numpy.vander": ["numpy.lib.twodim_base.vander", "numpy.ma.extras.vander"], "numpy.ma.core.std": ["numpy", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.dtype", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy._NoValue", "numpy.power"], "numpy.core.numeric.fastCopyAndTranspose": ["numpy.core.numeric.fastCopyAndTranspose", "numpy.core.multiarray.fastCopyAndTranspose"], "transformers.data.datasets.language_modeling.create_examples_from_document.truncate_seq_pair": ["random", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document", "transformers.data.datasets.language_modeling.TextDataset.__init__", "transformers.data.datasets.language_modeling.TextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.truncate_seq_pair", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__", "transformers.data.datasets.language_modeling.TextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__", "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__", "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document.truncate_seq_pair", "transformers.data.datasets.language_modeling.create_examples_from_document.truncate_seq_pair", "torch", "typing.List", "torch.tensor", "torch.long", "random.random", "random.randint"], "numpy.array_api.__init__.int16": ["numpy.array_api.__init__.int16", "numpy.array_api._dtypes.int16"], "numpy.core.numeric.MAY_SHARE_BOUNDS": ["numpy.core.numeric.MAY_SHARE_BOUNDS", "numpy.core.multiarray.MAY_SHARE_BOUNDS"], "torch.cuda.type": ["torch.cuda.device", "torch.cuda._CudaBase"], "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField": ["google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes"], "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder._VarintBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.wire_format.WIRETYPE_VARINT", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED", "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP"], "future.backports.email._header_value_parser.WhiteSpaceTerminal.value": ["future.backports.email._header_value_parser.Terminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "future.builtins.__init__.chr": ["future.builtins.misc.chr", "future.builtins.__init__.chr", "past.builtins.misc.chr", "past.builtins.__init__.chr"], "click._compat._FixupStream.writable": ["click._compat._AtomicFile.__exit__", "click._compat._FixupStream.__getattr__", "click._compat._AtomicFile.__getattr__", "click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__enter__", "typing", "typing.cast"], "numpy.core._multiarray_umath": [], "regex.regex.compile": ["regex.regex._compile"], "numpy.array_api._elementwise_functions.logical_xor": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._boolean_dtypes", "numpy.array_api._dtypes._result_type", "numpy", "numpy.array_api._array_object.Array._normalize_two_args", "numpy.array_api._array_object.Array._new", "numpy.logical_xor"], "numpy.core.umath.arctan": ["numpy.ma.core.arctan", "numpy.core.umath.arctan"], "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsIds": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__NBestEncodeAsIds", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__NBestEncodeAsIds"], "numpy.array_api.__init__.logical_or": ["numpy.ma.core.logical_or", "numpy.core.umath.logical_or", "numpy.array_api.__init__.logical_or", "numpy.array_api._elementwise_functions.logical_or"], "numpy.core.umath.arctan2": ["numpy.ma.core.arctan2", "numpy.core.umath.arctan2"], "numpy.core._asarray._require_dispatcher": [], "numpy.ma.core._MaskedBinaryOperation": ["numpy.ma.core._MaskedUFunc"], "numpy.polynomial._polybase.window": ["abc", "abc.abstractmethod"], "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField": ["google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format.WIRETYPE_START_GROUP", "google.protobuf.internal.wire_format.WIRETYPE_END_GROUP"], "numpy.array_api._elementwise_functions.isinf": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.isinf"], "caffe2.python.utils.Caffe2TensorToNumpyArray": ["caffe2.proto.caffe2_pb2", "numpy", "caffe2.proto.caffe2_pb2.TensorProto", "numpy.asarray", "numpy.float32", "numpy.float64", "numpy.int64", "numpy.int", "numpy.int16", "numpy.uint16", "numpy.int8", "numpy.uint8"], "numpy.f2py.symbolic._FromStringWorker.process": ["numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic.replace_parenthesis", "numpy.f2py.symbolic._FromStringWorker.process.restore", "numpy.f2py.symbolic.process.restore", "numpy.f2py.symbolic.as_complex", "numpy.f2py.symbolic.Expr.__mul__", "numpy.f2py.symbolic.Expr.__getitem__", "re", "numpy.f2py.symbolic.as_ternary", "numpy.f2py.symbolic.Language", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.RelOp", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic._Pair", "numpy.f2py.symbolic.Expr.__init__", "numpy.f2py.symbolic.Expr.__eq__", "numpy.f2py.symbolic.Expr.__lt__", "numpy.f2py.symbolic.Expr.__le__", "numpy.f2py.symbolic.Expr.__gt__", "numpy.f2py.symbolic.Expr.__ge__", "numpy.f2py.symbolic.Expr.__neg__", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__pow__", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic._Pair.__init__", "numpy.f2py.symbolic._FromStringWorker.__init__", "numpy.f2py.symbolic.as_integer", "numpy.f2py.symbolic.as_real", "numpy.f2py.symbolic.as_string", "numpy.f2py.symbolic._get_parenthesis_kind", "numpy.f2py.symbolic.as_array", "numpy.f2py.symbolic.as_apply", "numpy.f2py.symbolic.as_symbol", "numpy.f2py.symbolic.ewarn", "re.match", "re.I", "re.split"], "datetime.datetime.utcfromtimestamp": [], "numpy.core.numerictypes.busdaycalendar": ["numpy.core.multiarray.busdaycalendar", "numpy.core.numerictypes.busdaycalendar"], "google.protobuf.internal.encoder.MapEncoder.EncodeField": ["google.protobuf.internal.encoder.MessageEncoder", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField"], "torch.cuda.init_err": [], "transformers.data.processors.glue.QnliProcessor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "numpy.core.numerictypes.sctypes": ["numpy.core.numerictypes.sctypes", "numpy.core._type_aliases.sctypes"], "torch.functional.unique": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.functional.unique", "torch", "torch._VF", "torch.jit", "torch._unique2", "torch._VF.unique_dim"], "torch._linalg_utils.get_floating_dtype": ["torch", "torch.float16", "torch.float32", "torch.float64"], "numpy.core.records.recarray.__new__": ["numpy.core.records.format_parser._createdtype", "numpy.core.numeric", "numpy.core.records.format_parser", "numpy.core.records.format_parser._setfieldnames", "numpy.core.records.record", "numpy.core.numeric.dtype"], "numpy.lib.arraysetops.unique": ["numpy", "numpy.lib.arraysetops._unique1d", "numpy.lib.arraysetops._unpack_tuple", "numpy.lib.arraysetops.reshape_uniq", "numpy.lib.arraysetops.unique.reshape_uniq", "numpy.lib.arraysetops._unique_dispatcher", "numpy.asanyarray", "numpy.moveaxis", "numpy.AxisError", "numpy.prod", "numpy.intp", "numpy.ascontiguousarray", "numpy.empty"], "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "__builtin__.long": [], "numpy.resize": ["numpy.ma.core.resize", "numpy.core.fromnumeric.resize"], "numpy.core.records.find_duplicate": ["numpy.core.records.record.__getitem__", "numpy.core.records.recarray.__getitem__", "collections.Counter"], "numpy.core.vstack": ["numpy.ma.extras.vstack", "numpy.core.shape_base.vstack"], "torch._C.default_generator.seed": [], "numpy.array_api._utility_functions.any": ["numpy.array_api._array_object.Array", "typing.Optional", "typing.Union", "typing.Tuple", "numpy", "numpy.array_api._array_object.Array._new", "numpy.asarray", "numpy.any"], "numpy.double": [], "numpy.array_api._elementwise_functions.cos": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.cos"], "future.backports.email.message.Message.__contains__": ["future.backports.email.message.Message.get_filename", "future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve"], "regex.sub": ["regex.regex.sub"], "numpy._typing.NBitBase": ["typing.final", "numpy.core.overrides.set_module"], "transformers.modeling_tf_auto.TFAutoModel.from_pretrained": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_utils.PretrainedConfig", "transformers.configuration_auto.AutoConfig", "transformers.configuration_auto.replace_list_option_in_docstrings", "transformers.file_utils.add_start_docstrings", "transformers.configuration_auto.AutoConfig.from_pretrained"], "torch._overrides.has_torch_function": [], "numpy.core.umath.maximum": ["numpy.ma.core.maximum", "numpy.core.umath.maximum"], "numpy.core.arrayprint._array_str_implementation": ["numpy.core.arrayprint.array2string", "numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.StructuredVoidFormat.__call__", "numpy.core.arrayprint._guarded_repr_or_str", "numpy", "numpy.ndarray"], "torch.cuda._lazy_init": ["torch.cuda.is_initialized", "torch.cuda._check_driver", "torch._C._cudart", "sys.version_info", "torch", "torch._six.raise_from", "torch.cuda.device.__enter__", "torch.cuda.device.__exit__", "torch.cuda._CudaBase.type", "torch.cuda.DeferredCudaCallError", "torch._C"], "numpy.ndarray.__setstate__": [], "numpy.f2py.auxfuncs.isscalar": ["numpy.f2py.auxfuncs.isarray", "numpy.f2py.auxfuncs.isstring", "numpy.f2py.auxfuncs.isexternal"], "sentencepiece.__init__.SentencePieceProcessor._EncodeAsIds": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsIds", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor__EncodeAsIds"], "transformers.data.processors.glue.WnliProcessor.get_test_examples": ["transformers.data.processors.utils.DataProcessor", "os", "os.path"], "regex.regex.__all__": [], "future.builtins.iterators.map": ["future.builtins.iterators.map", "future.builtins.__init__.map", "past.builtins.noniterators.map", "past.builtins.__init__.map"], "torch.utils.data._utils._set_python_exit_flag": [], "sentencepiece.__init__.SentencePieceProcessor.IsUnused": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece._sentencepiece.delete_SentencePieceProcessor", "sentencepiece._sentencepiece.SentencePieceProcessor_IsUnused", "_sentencepiece.delete_SentencePieceProcessor", "_sentencepiece.SentencePieceProcessor_IsUnused"], "torch.utils.data.dataloader._InfiniteConstantSampler.__init__": ["torch.utils.data.Sampler", "torch.utils.data.dataloader._InfiniteConstantSampler"], "threading.Thread": [], "numpy.array_api.__init__.mean": ["numpy.ma.core.mean", "numpy.core.fromnumeric.mean", "numpy.array_api.__init__.mean", "numpy.array_api._statistical_functions.mean"], "numpy.linalg.linalg.pinv": ["numpy.linalg.linalg._makearray", "numpy.core.asarray", "numpy.linalg.linalg._is_empty_2d", "numpy.core.empty", "numpy.linalg.linalg.svd", "numpy.core.amax", "numpy.core.newaxis", "numpy.core.divide", "numpy.core.matmul", "numpy.linalg.linalg.transpose", "numpy.core.multiply", "numpy.linalg.linalg._pinv_dispatcher"], "future.backports.xmlrpc.client.ServerProxy.__close": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.__str__", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.__repr__"], "click.utils.KeepOpenFile.__repr__": ["click.utils.LazyFile.__repr__", "click.utils.KeepOpenFile.__repr__"], "numpy.ma.core._DomainTan": [], "transformers.file_utils._prepare_output_docstrings": ["transformers.file_utils.ModelOutput.__post_init__", "transformers.file_utils.ModelOutput.__delitem__", "transformers.file_utils.ModelOutput.__getitem__", "transformers.file_utils.ModelOutput.__setitem__", "re", "transformers.file_utils._convert_output_args_doc", "re.search"], "future.backports.email._header_value_parser.LocalPart.value": ["future.backports.email._header_value_parser.TokenList"], "future.backports.xmlrpc.client.ServerProxy.__request": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.__str__", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.__repr__", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.request", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.dumps", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Transport.parse_response"], "numpy.array_api._dtypes._result_type": [], "numpy.array_api._elementwise_functions.ceil": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.array_api._dtypes._integer_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.ceil"], "ctypes.RTLD_GLOBAL": [], "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "torch.functional.stft": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.functional.stft", "torch", "torch.nn.functional", "torch._VF", "torch.jit", "torch.nn.functional.pad", "torch._VF.stft"], "numpy.lib.utils.source": ["sys", "inspect", "numpy.core.overrides.set_module", "inspect.getsource", "inspect.getsourcefile", "sys.stdout"], "transformers.configuration_auto.replace_list_option_in_docstrings": ["transformers.configuration_auto.docstring_decorator", "transformers.configuration_auto.replace_list_option_in_docstrings.docstring_decorator"], "numpy.ma.core.bitwise_and": ["numpy.ma.core.bitwise_and", "numpy.core.umath.bitwise_and", "numpy.array_api.__init__.bitwise_and"], "future.backports.email._header_value_parser.ParameterizedHeaderValue": ["future.backports.email._header_value_parser.TokenList"], "torch.jit.__init__.TracerWarning.ignore_lib_warnings": ["torch.jit.__init__.TracerWarning.ignore_lib_warnings", "warnings", "torch.jit.__init__.TracerWarning", "warnings.filterwarnings"], "numpy.ma.extras.flatten_inplace": ["numpy.ma.extras.MAxisConcatenator.makemat"], "urllib3.response.DeflateDecoder.decompress": ["urllib3.response.HTTPResponse.data", "urllib3.response.data", "zlib", "zlib.error", "zlib.decompressobj", "zlib.MAX_WBITS"], "packaging.specifiers.InvalidSpecifier": [], "torch.utils.data.SequentialSampler": ["torch.utils.data.sampler.SequentialSampler"], "click._compat._is_binary_reader": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.IO", "typing.Any"], "numpy.core.arrayprint._make_options_dict": ["numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "sys", "warnings", "numpy", "numbers", "operator", "operator.index", "numbers.Number", "numpy.isnan", "sys.maxsize", "warnings.warn"], "sentencepiece.__init__.ImmutableNBestSentencePieceText": ["sentencepiece.__init__.SentencePieceProcessor.vocab_size", "sentencepiece.__init__.ImmutableSentencePieceText._text", "sentencepiece.__init__.SentencePieceProcessor.SetEncodeExtraOptions", "sentencepiece.__init__.SentencePieceProcessor.SetDecodeExtraOptions", "sentencepiece.__init__._LogStream.__exit__", "sentencepiece.__init__._swig_repr", "sentencepiece._sentencepiece", "_sentencepiece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__str__", "sentencepiece.__init__.ImmutableSentencePieceText.__str__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__str__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__str__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__str__", "sentencepiece.__init__.__str__", "sentencepiece.__init__.SentencePieceProcessor.serialized_model_proto", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece.__init__", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._piece", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._id", "sentencepiece.__init__.ImmutableSentencePieceText_ImmutableSentencePiece._begin", "sentencepiece.__init__.ImmutableSentencePieceText.__init__", "sentencepiece.__init__.ImmutableSentencePieceText._pieces_size", "sentencepiece.__init__.ImmutableSentencePieceText._pieces", "sentencepiece.__init__.ImmutableSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableSentencePieceText.pieces", "sentencepiece.__init__.ImmutableSentencePieceText.__getitem__", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__init__", "sentencepiece.__init__.ImmutableNBestSentencePieceText._nbests_size", "sentencepiece.__init__.ImmutableNBestSentencePieceText.SerializeAsString", "sentencepiece.__init__.ImmutableNBestSentencePieceText.__getitem__", "sentencepiece.__init__.SentencePieceProcessor.__init__", "sentencepiece.__init__.SentencePieceProcessor.LoadFromSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.GetPieceSize", "sentencepiece.__init__.SentencePieceProcessor.PieceToId", "sentencepiece.__init__.SentencePieceProcessor.IdToPiece", "sentencepiece.__init__.SentencePieceProcessor.unk_id", "sentencepiece.__init__.SentencePieceProcessor.bos_id", "sentencepiece.__init__.SentencePieceProcessor.eos_id", "sentencepiece.__init__.SentencePieceProcessor.pad_id", "sentencepiece.__init__.SentencePieceProcessor.LoadFromFile", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsPiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._EncodeAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePieces", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor._DecodeIdsAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsSerializedProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._DecodePiecesAsImmutableProtoBatch", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor._NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor._SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.Init", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.EncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsPieces", "sentencepiece.__init__.SentencePieceProcessor.NBestEncodeAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsPieces", "sentencepiece.__init__.SentencePieceProcessor.SampleEncodeAndScoreAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePieces", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodeIdsAsSerializedProto", "sentencepiece.__init__.SentencePieceProcessor.DecodePiecesAsImmutableProto", "sentencepiece.__init__.SentencePieceProcessor.piece_size", "sentencepiece.__init__.SentencePieceProcessor.__getitem__", "sentencepiece.__init__.SentencePieceTrainer.__init__", "sentencepiece.__init__.SentencePieceTrainer._TrainFromString", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap2", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap3", "sentencepiece.__init__.SentencePieceTrainer._TrainFromMap4", "sentencepiece.__init__.SentencePieceTrainer._Train", "sentencepiece.__init__.SentencePieceTrainer.Train", "sentencepiece.__init__._LogStream.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceIterator.__getitem__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__init__", "sentencepiece.__init__.ImmutableSentencePieceTextIterator.__getitem__", "sentencepiece._sentencepiece.delete_ImmutableNBestSentencePieceText", "_sentencepiece.delete_ImmutableNBestSentencePieceText"], "numpy.linalg.linalg._assert_finite": ["numpy.linalg.linalg.LinAlgError", "numpy.core.isfinite"], "numpy.bytes_": [], "sacremoses.tokenize.MosesDetokenizer": ["sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile"], "transformers.configuration_utils.PretrainedConfig": ["transformers.configuration_utils.PretrainedConfig.to_json_string"], "numpy.array_api._array_object.Array.__pos__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy.ndarray"], "click.termui._build_prompt": ["typing", "click.types.ParamType", "click.termui.prompt", "click.types.Choice", "click.termui._format_default", "typing.Optional", "typing.Any"], "future.backports.xmlrpc.client.DateTime.decode": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "struct.calcsize"], "numpy.array_api.__init__.equal": ["numpy.ma.core.equal", "numpy.core.defchararray.equal", "numpy.core.umath.equal", "numpy.array_api.__init__.equal", "numpy.array_api._elementwise_functions.equal"], "numpy.lib.format._MAX_HEADER_SIZE": [], "numpy.ma.core.nmask": ["numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.getmask"], "transformers.modeling_tf_auto.TFAutoModel.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.ma.core.less_equal": ["numpy.ma.core.less_equal", "numpy.core.defchararray.less_equal", "numpy.core.umath.less_equal", "numpy.array_api.__init__.less_equal"], "google.protobuf.internal.decoder.InnerDecode": ["math", "math.inf", "math.nan"], "numpy.core.defchararray.chararray.isdigit": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.isdigit", "numpy.core.defchararray.isdigit", "numpy.core.numeric.ndarray.argsort"], "tqdm.utils.CallbackIOWrapper.__init__.write": ["tqdm.utils.ObjectWrapper", "tqdm.utils.SimpleTextIOWrapper", "tqdm.utils.DisableOnWriteError", "tqdm.utils.CallbackIOWrapper", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr", "functools.wraps", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.CallbackIOWrapper.__init__.write", "tqdm.utils.CallbackIOWrapper.write", "tqdm.utils.__init__.write", "tqdm.utils.CallbackIOWrapper.__init__.read", "tqdm.utils.CallbackIOWrapper.read", "tqdm.utils.__init__.read"], "numpy.lib.scimath.log2": ["numpy.lib.scimath._fix_real_lt_zero", "numpy.core.numeric", "numpy.core.overrides.array_function_dispatch", "numpy.lib.scimath._unary_dispatcher", "numpy.core.numeric.log2"], "future.backports.urllib.parse.DefragResult": ["future.backports.urllib.parse._ResultMixinStr"], "tqdm.utils.__init__.write": ["tqdm.utils.SimpleTextIOWrapper", "tqdm.utils.DisableOnWriteError", "tqdm.utils.CallbackIOWrapper", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr", "functools.wraps", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.CallbackIOWrapper.__init__.write", "tqdm.utils.CallbackIOWrapper.write", "tqdm.utils.__init__.write", "tqdm.utils.CallbackIOWrapper.__init__.read", "tqdm.utils.CallbackIOWrapper.read", "tqdm.utils.__init__.read"], "transformers.data.processors.glue.gen": ["transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "dataclasses.asdict"], "builtins.any": [], "numpy.ma.extras.vstack": ["numpy.ma.extras.vstack", "numpy.core.shape_base.vstack"], "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "torch.jit.__init__.RecursiveScriptModule.__init__": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.RecursiveScriptModule"], "numpy.core.arrayprint.StructuredVoidFormat.from_data": ["numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint._get_format_function", "numpy.core.arrayprint.SubArrayFormat"], "numpy.core.records.get_remaining_size": [], "sentencepiece._sentencepiece.SentencePieceProcessor__NBestEncodeAsImmutableProto": [], "inspect.signature": [], "numpy.array_api.__init__.uint32": ["numpy.array_api.__init__.uint32", "numpy.array_api._dtypes.uint32"], "numpy.core._multiarray_umath.packbits": [], "numpy.lib.function_base.vectorize._get_ufunc_and_otypes._func": ["numpy.core.overrides.set_module", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes._func", "numpy.lib.function_base._get_ufunc_and_otypes._func", "numpy.core.umath.frompyfunc", "numpy.core.numeric.asarray", "builtins", "builtins.any"], "numpy.ma.core.conjugate": ["numpy.ma.core.conjugate", "numpy.core.umath.conjugate"], "numpy.array_api._data_type_functions.finfo_object": ["dataclasses.dataclass"], "future.backports.email.errors.MessageParseError": ["future.backports.email.errors.MessageError"], "google.protobuf.internal.encoder.EncodeSignedVarint": [], "numpy.core.defchararray.less": ["numpy.core.numeric.compare_chararrays", "numpy.core.defchararray._binary_op_dispatcher"], "torch.cholesky": ["numpy.dual.cholesky", "numpy.linalg.linalg.cholesky", "numpy.array_api.linalg.cholesky"], "numpy.core.defchararray.greater_equal": ["numpy.core.numeric.compare_chararrays", "numpy.core.defchararray._binary_op_dispatcher"], "future.backports.email._parseaddr.AddrlistClass.getdomainliteral": [], "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsImmutableProtoBatch": [], "numpy.core.defchararray.mod": ["numpy.core.defchararray._to_string_or_unicode_array", "numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray._mod_dispatcher"], "torch.zeros": ["numpy.ma.core.zeros", "numpy.core.numeric.zeros", "numpy.core.multiarray.zeros", "numpy.array_api.__init__.zeros"], "transformers.configuration_auto.AutoConfig": [], "struct.pack": [], "numpy.array_api.__init__.add": ["numpy.ma.core.add", "numpy.core.defchararray.add", "numpy.core.umath.add", "numpy.array_api.__init__.add", "numpy.array_api._elementwise_functions.add"], "torch._lobpcg.LOBPCG._get_svqb": ["torch", "torch._linalg_utils", "torch._lobpcg.LOBPCG.update", "torch._lobpcg.LOBPCG.update_residual", "torch._lobpcg.LOBPCG.update_converged_count", "torch._lobpcg.LOBPCG._update_basic", "torch._lobpcg.LOBPCG._update_ortho", "torch._lobpcg.LOBPCG.__init__", "torch._lobpcg.LOBPCG.__str__", "torch._lobpcg.LOBPCG.stop_iteration", "torch._lobpcg.LOBPCG.call_tracker", "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform", "torch._lobpcg.LOBPCG._get_svqb", "torch._lobpcg.LOBPCG._get_ortho", "torch.numel", "torch.where", "torch.matmul", "torch._linalg_utils.qform", "torch._linalg_utils.transpose", "torch._linalg_utils.symeig"], "future.backports.email._header_value_parser.GroupList.all_mailboxes": ["future.backports.email._header_value_parser.TokenList"], "numpy.polynomial.polynomial.polyfit": ["numpy.polynomial.polynomial.polyvander", "numpy.polynomial.polynomial.Polynomial._repr_latex_term", "numpy.polynomial.polyutils", "numpy.polynomial.polyutils._fit"], "numpy.core.umath.ERR_DEFAULT": ["numpy.core.umath.ERR_DEFAULT"], "numpy.core.matmul": ["torch.__init__.matmul", "numpy.core.numeric.matmul", "numpy.core.multiarray.matmul", "numpy.array_api.linalg.matmul", "numpy.array_api.__init__.matmul"], "torch.jit._get_methods": ["inspect", "torch.jit.TracedModule.extra_repr", "torch.jit._disable_tracing.__exit__", "torch.jit.RecursiveScriptModule.extra_repr", "inspect.getmembers", "inspect.isfunction", "inspect.ismethod"], "numpy.array_api._typing.Union": ["typing.Union"], "future.backports.email._parseaddr.AddrlistClass.getaddrspec": ["future.backports.email._parseaddr.AddressList.__len__", "future.backports.email._parseaddr.AddrlistClass.getquote", "future.backports.email._parseaddr.quote"], "numpy.array_api.__init__.cos": ["numpy.ma.core.cos", "numpy.core.umath.cos", "numpy.array_api.__init__.cos", "numpy.array_api._elementwise_functions.cos"], "numpy.core.umath.frompyfunc": ["numpy.core.umath.frompyfunc"], "future.types.newbytes.newbytes.__str__": ["future.utils.with_metaclass", "future.types.newbytes.BaseNewBytes", "future.types.newbytes.newbytes"], "future.builtins.iterators.zip": ["future.builtins.iterators.zip", "future.builtins.__init__.zip", "past.builtins.noniterators.zip", "past.builtins.__init__.zip"], "numpy.lib.function_base._parse_input_dimensions": ["numpy.lib.function_base._update_dim_sizes", "numpy", "numpy.lib"], "numpy.ascontiguousarray": ["numpy.core.numeric.ascontiguousarray", "numpy.core.multiarray.ascontiguousarray"], "click.formatting.iter_rows": ["click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.write_text", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "typing.Iterable", "typing.Tuple", "typing.Iterator"], "google.protobuf.internal.decoder._VarintDecoder.DecodeVarint": ["google.protobuf.internal.decoder.DecodeVarint", "google.protobuf.internal.decoder._VarintDecoder.DecodeVarint", "google.protobuf.internal.decoder._SignedVarintDecoder.DecodeVarint"], "urllib.parse.urlparse": [], "numpy.f2py.symbolic._Pair.__init__": [], "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.core.umath.pi": ["numpy.core.umath.pi", "numpy.array_api.__init__.pi"], "numpy.array_api.__init__.less_equal": ["numpy.ma.core.less_equal", "numpy.core.defchararray.less_equal", "numpy.core.umath.less_equal", "numpy.array_api.__init__.less_equal", "numpy.array_api._elementwise_functions.less_equal"], "numpy.core.defchararray.chararray.partition": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.partition", "numpy.core.numeric.ndarray.argsort"], "torch.jit.ScriptModule": ["torch._six.with_metaclass", "torch.jit.ScriptMeta", "torch.nn.Module", "torch.jit.ONNXTracedModule.forward", "torch.jit.TracedModule.forward", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.forward", "torch.jit._CachedForward"], "future.backports.email._parseaddr.AddrlistClass.getquote": [], "numpy.sort": ["numpy.ma.core.sort", "numpy.core.fromnumeric.sort", "numpy.array_api.__init__.sort"], "urllib3.response.DeflateDecoder.__getattr__": ["urllib3.response.DeflateDecoder.__getattr__", "urllib3.response.GzipDecoder.__getattr__"], "transformers.data.processors.glue.RteProcessor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "urllib3.response.HTTPResponse.getheader": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "numpy.argmin": ["numpy.ma.core.argmin", "numpy.core.fromnumeric.argmin", "numpy.array_api.__init__.argmin"], "_sentencepiece.SentencePieceProcessor__CalculateEntropyBatch": [], "numpy.array_api.__init__.logical_xor": ["numpy.ma.core.logical_xor", "numpy.core.umath.logical_xor", "numpy.array_api.__init__.logical_xor", "numpy.array_api._elementwise_functions.logical_xor"], "torch._linalg_utils.symeig": ["torch", "torch.symeig", "torch.flip"], "tqdm.notebook.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "numpy.ma.extras._fromnxfunction_single.__call__": ["numpy.ma.extras._fromnxfunction", "numpy", "numpy.ndarray", "numpy.ma.core.masked_array", "numpy.ma.core.getmaskarray", "numpy.asarray"], "_sentencepiece.SentencePieceProcessor__NBestEncodeAsIds": [], "torch.__init__.LongTensor": ["torch.__init__.LongTensor"], "numpy.polynomial._polybase.ABCPolyBase.__call__": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial.polyutils", "numpy.polynomial.polyutils.mapparms", "abc.ABC", "os.name"], "future.utils.lzip": [], "numpy.core.defchararray.lstrip": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._strip_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.lstrip", "numpy.core.defchararray.lstrip", "numpy.asarray"], "google.protobuf.symbol_database": ["google.protobuf.symbol_database.SymbolDatabase", "google.protobuf.descriptor_pool", "google.protobuf.descriptor_pool.Default"], "numpy.meshgrid": ["torch.functional.meshgrid", "numpy.lib.function_base.meshgrid", "numpy.array_api.__init__.meshgrid"], "tqdm.utils.SimpleTextIOWrapper.__eq__": ["tqdm.utils.ObjectWrapper", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr"], "numpy.f2py.symbolic.as_real": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.OpError"], "numpy.f2py.symbolic.Expr.__init__": ["numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic.Expr"], "numpy.core.defchararray.chararray.istitle": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.istitle", "numpy.core.defchararray.istitle", "numpy.core.numeric.ndarray.argsort"], "numpy.array_api.__init__.isinf": ["numpy.core.umath.isinf", "numpy.array_api.__init__.isinf", "numpy.array_api._elementwise_functions.isinf"], "torch.multiprocessing.get_context": ["joblib.externals.loky.backend.__init__.get_context"], "numpy.ma.core.arccos": ["numpy.lib.scimath.arccos", "numpy.ma.core.arccos", "numpy.core.umath.arccos"], "future.backports.email._policybase.compat32": ["future.backports.email.policy.compat32", "future.backports.email._policybase.compat32"], "future.backports.email._header_value_parser.parse_content_disposition_header": ["future.backports.email._header_value_parser.ContentDisposition", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.get_token", "future.backports.email._header_value_parser._find_mime_parameters", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.parse_mime_parameters", "future.backports.email.errors.HeaderMissingRequiredValue", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "regex._regex_core.DEFAULT_VERSION": ["regex.regex.DEFAULT_VERSION"], "google.protobuf.internal.decoder.SpecificDecoder": ["google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes"], "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.core.defchararray.chararray.replace": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.replace", "numpy.core.defchararray.chararray.__new__", "numpy.core.defchararray.chararray.count", "numpy.core.defchararray.count", "numpy.core.numeric.ndarray.argsort"], "numpy.lib._datasource.DataSource._splitzipext": ["numpy.core.overrides.set_module", "numpy.lib._datasource.DataSource._possible_names", "os", "os.path"], "click._compat._get_windows_console_stream": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.TextIO", "typing.Optional"], "future.backports.xmlrpc.client.Binary.__eq__": ["future.backports.xmlrpc.client.Binary"], "numpy.array_api._typing.Tuple": ["torch.jit.annotations.Tuple"], "future.backports.email._header_value_parser.Comment.__str__": ["future.backports.email._header_value_parser.WhiteSpaceTokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "numpy.f2py.symbolic.Expr.__neg__": [], "numpy.core.defchararray.chararray.rsplit": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.rsplit", "numpy.core.defchararray.rsplit", "numpy.core.numeric.ndarray.argsort"], "numpy.array_api.__init__.isnan": ["numpy.core.umath.isnan", "numpy.array_api.__init__.isnan", "numpy.array_api._elementwise_functions.isnan"], "numpy.VisibleDeprecationWarning": ["numpy.__init__.VisibleDeprecationWarning", "numpy._globals.VisibleDeprecationWarning"], "numpy.array_api.__init__.greater": ["numpy.ma.core.greater", "numpy.core.defchararray.greater", "numpy.core.umath.greater", "numpy.array_api.__init__.greater", "numpy.array_api._elementwise_functions.greater"], "numpy.float32": ["numpy.array_api.__init__.float32"], "numpy.right_shift": ["numpy.ma.core.right_shift", "numpy.core.umath.right_shift"], "numpy.core.function_base._add_docstring": ["numpy.core.function_base._needs_add_docstring", "warnings", "numpy.core.multiarray.add_docstring", "warnings.warn"], "_sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsIds": [], "numpy.polynomial.polyutils.trimseq": [], "binascii": [], "numpy.core.fromnumeric.resize": ["numpy.core.numerictypes", "numpy.core.fromnumeric.ravel", "numpy", "numpy.core.multiarray.concatenate", "numpy.core.fromnumeric.reshape", "numpy.core.fromnumeric._resize_dispatcher", "numpy.core.numerictypes.integer", "numpy.zeros_like"], "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsIds": [], "torch.multiprocessing._atfork.wrapper": [], "torch.multiprocessing._supports_context": ["torch.multiprocessing.spawn._supports_context"], "numpy.logical_xor": ["numpy.ma.core.logical_xor", "numpy.core.umath.logical_xor", "numpy.array_api.__init__.logical_xor"], "numpy.core.defchararray.chararray.rpartition": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.rpartition", "numpy.core.numeric.ndarray.argsort"], "shlex.split": [], "_sentencepiece.SentencePieceProcessor__EncodeAsIds": [], "click.termui.prompt.prompt_func": ["typing", "click.types.ParamType", "click.types.convert_type", "click.termui.prompt", "click.termui._build_prompt", "gettext.gettext", "click.exceptions.UsageError", "click.utils.echo", "click.termui.prompt_func", "click.termui.prompt.prompt_func", "click._termui_impl.raw_terminal", "click._termui_impl.getchar", "click.termui.hidden_prompt_func", "click.exceptions.Abort", "typing.Optional", "typing.Union", "typing.Any", "typing.Callable"], "torch.jit.__init__.TracedModule.__init__": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.TracedModule", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.QualnameWrapper", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.TracedModule.__init__.check_unique", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.__init__.check_unique", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.make_module"], "numpy.ma.core.cosh": ["numpy.ma.core.cosh", "numpy.core.umath.cosh", "numpy.array_api.__init__.cosh"], "tqdm.utils.Comparable.__eq__": [], "numpy.squeeze": ["numpy.ma.core.squeeze", "numpy.core.fromnumeric.squeeze", "numpy.array_api.__init__.squeeze"], "transformers.modeling_auto.AutoModelForSequenceClassification.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "google.protobuf.internal.encoder._VarintEncoder.EncodeVarint": ["struct", "google.protobuf.internal.encoder.EncodeVarint", "google.protobuf.internal.encoder._VarintEncoder.EncodeVarint", "struct.Struct"], "numpy.lib.scimath.sqrt": ["numpy.lib.scimath._fix_real_lt_zero", "numpy.core.numeric", "numpy.core.overrides.array_function_dispatch", "numpy.lib.scimath._unary_dispatcher", "numpy.core.numeric.sqrt"], "future.backports.email._header_value_parser.Group.mailboxes": ["future.backports.email._header_value_parser.TokenList"], "numpy.core.fromnumeric._sum_dispatcher": [], "numpy.array_api.__init__.subtract": ["numpy.ma.core.subtract", "numpy.core.umath.subtract", "numpy.array_api.__init__.subtract", "numpy.array_api._elementwise_functions.subtract"], "torch.jit.__init__.ScriptModule.__setattr__": ["torch._six.with_metaclass", "torch.jit.__init__.ScriptMeta", "torch.nn.Module", "torch.jit.__init__.ONNXTracedModule.forward", "torch.jit.__init__.TracedModule.forward", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.forward", "torch.jit.__init__._CachedForward", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.Attribute", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.ScriptModule"], "tqdm.contrib.slack.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "numpy.stack": ["torch.__init__.stack", "torch.distributions.constraints.stack", "numpy.ma.extras.stack", "numpy.core.shape_base.stack", "numpy.array_api.__init__.stack"], "numpy.core.numeric.array2string": ["numpy.core.arrayprint.array2string"], "torch.jit.__init__.ONNXTracedModule.__init__": ["torch.nn.Module", "torch.jit.__init__.ONNXTracedModule"], "numpy.arcsinh": ["numpy.ma.core.arcsinh", "numpy.core.umath.arcsinh"], "future.backports.xmlrpc.client.Unmarshaller.end": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName", "future.backports.xmlrpc.client.ExpatParser.feed", "future.backports.xmlrpc.client.Transport.get_host_info"], "numpy.lib.function_base._get_ufunc_and_otypes._func": ["numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes._func", "numpy.lib.function_base._get_ufunc_and_otypes._func", "numpy.core.umath.frompyfunc", "numpy.core.numeric.asarray", "builtins", "builtins.any"], "contextlib.ExitStack": [], "numpy.core.fromnumeric.amin": ["numpy", "numpy.core.fromnumeric._wrapreduction", "numpy.core.fromnumeric._amin_dispatcher", "numpy._NoValue", "numpy.minimum"], "numpy.core.fromnumeric._size_dispatcher": [], "tokenize.NUMBER": [], "future.backports.email.errors.InvalidBase64PaddingDefect": ["future.backports.email.errors.MessageDefect"], "numpy.lib.npyio.NpzFile.__del__": ["collections.abc.Mapping"], "torch._six.raise_from": [], "torch._VF": ["sys", "torch._VF.VFModule", "sys.modules"], "numpy.array_api._array_object.Array.size": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "numpy.moveaxis": ["numpy.core.numeric.moveaxis"], "transformers.data.processors.squad._new_check_is_max_context": [], "numpy.array_api.__init__.can_cast": ["numpy.core.numeric.can_cast", "numpy.core.multiarray.can_cast", "numpy.array_api.__init__.can_cast", "numpy.array_api._data_type_functions.can_cast"], "tqdm.utils._environ_cols_wrapper.inner": ["warnings.warn", "tqdm.utils._screen_shape_wrapper", "tqdm.utils.DisableOnWriteError.disable_on_exception.inner", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils._environ_cols_wrapper.inner", "tqdm.utils.disable_on_exception.inner", "functools.wraps"], "numpy.core._methods._count_reduce_items": ["numpy.core.numerictypes", "numpy.lib.stride_tricks.broadcast_to", "numpy.core.multiarray", "numpy.core.multiarray.normalize_axis_index", "numpy.core.numerictypes.intp"], "google.protobuf.internal.decoder._EndGroup": [], "numpy.lib.npyio.genfromtxt.tobytes_first": ["numpy.lib._iotools.NameValidator", "numpy.lib.npyio._ensure_ndmin_ndarray_check_param", "numpy.compat.os_PathLike", "numpy.compat.os_fspath", "contextlib", "numpy", "numpy.lib.npyio.NpzFile.__iter__", "numpy.lib.npyio.BagObj.__getattribute__", "numpy.lib.npyio.NpzFile.__enter__", "numpy.lib.npyio.NpzFile.__exit__", "numpy.lib.npyio.NpzFile.close", "numpy.lib.npyio.NpzFile.__del__", "numpy.lib.npyio.NpzFile.__len__", "numpy.lib.npyio.NpzFile.__getitem__", "numpy.lib.npyio.WriteWrap.close", "numpy.lib.npyio.WriteWrap.write", "numpy.lib.npyio.WriteWrap.write_bytes", "numpy.lib.npyio.WriteWrap.write_normal", "numpy.lib.npyio.WriteWrap.first_write", "numpy.lib._iotools.LineSplitter", "numpy.lib.npyio.BagObj.__init__", "numpy.lib.npyio.BagObj.__dir__", "numpy.lib.npyio.NpzFile.__init__", "numpy.lib.npyio.WriteWrap.__init__", "numpy.lib._iotools._is_string_like", "numpy.lib._iotools.easy_dtype", "numpy.lib._iotools.flatten_dtype", "numpy.compat.asbytes", "numpy.lib._iotools._decode_line", "numpy.lib._iotools.StringConverter", "itertools", "warnings", "numpy.lib.npyio.tobytes_first", "numpy.lib.npyio.genfromtxt.tobytes_first", "functools", "numpy.lib._iotools.ConverterLockError", "operator.itemgetter", "numpy.lib._iotools.ConverterError", "numpy.lib._iotools.ConversionWarning", "numpy.lib._iotools.has_nested_fields", "numpy.ma.make_mask_descr", "numpy.lib.npyio.encode_unicode_cols", "numpy.lib.npyio.genfromtxt.encode_unicode_cols", "numpy.ma.MaskedArray", "numpy.lib.npyio._ensure_ndmin_ndarray", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module", "warnings.warn", "contextlib.closing", "contextlib.nullcontext", "functools.partial", "numpy.lib._iotools.NameValidator.defaultdeletechars", "itertools.chain", "numpy.lib", "numpy.dtype", "numpy.array", "numpy.VisibleDeprecationWarning", "numpy.issubdtype", "numpy.character", "numpy.unicode_", "numpy.bytes_"], "numpy.ma.core.greater_equal": ["numpy.ma.core.greater_equal", "numpy.core.defchararray.greater_equal", "numpy.core.umath.greater_equal", "numpy.array_api.__init__.greater_equal"], "click.formatting.indent": [], "future.backports.email.message.Message.get": ["future.backports.email.message.Message.get_filename", "future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve"], "multiprocessing": [], "_sentencepiece.SentencePieceProcessor_CalculateEntropy": [], "numpy.array_api._array_object.Array.__rshift__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "numpy.lib.scimath._fix_real_lt_zero": ["numpy.core.numeric.asarray", "numpy.core.numeric.any", "numpy.lib.scimath._tocomplex", "numpy.lib.type_check.isreal"], "future.backports.xmlrpc.client._Method.__getattr__": ["future.backports.xmlrpc.client._Method", "future.backports.xmlrpc.client.Unmarshaller.getmethodname"], "past.builtins.noniterators.range": ["future.builtins.iterators.range", "future.builtins.__init__.range", "past.builtins.noniterators.range", "past.builtins.__init__.range"], "torch.jit.__init__._CachedForward.__get__": [], "numpy.core.shape_base._atleast_1d_dispatcher": [], "numpy.f2py.auxfuncs.isarray": ["numpy.f2py.auxfuncs.isexternal"], "numpy.ma.MAError": ["numpy.ma.core.MAError"], "future.backports.email._header_value_parser.MailboxList.mailboxes": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "numpy.array_api.__init__.log2": ["numpy.lib.scimath.log2", "numpy.ma.core.log2", "numpy.core.umath.log2", "numpy.array_api.__init__.log2", "numpy.array_api._elementwise_functions.log2"], "future.backports.email._parseaddr.AddrlistClass.getcomment": [], "numpy.array_api._array_object.Array.__lshift__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "numpy.array_api._array_object.Array.__rrshift__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "numpy.core.fromnumeric.diagonal": ["numpy", "numpy.core.multiarray.asarray", "numpy.core.multiarray.asanyarray", "numpy.core.fromnumeric._diagonal_dispatcher", "numpy.matrix"], "tqdm.auto.tqdm": ["tqdm.autonotebook.tqdm", "tqdm.asyncio.tqdm"], "transformers.data.processors.squad.SquadExample": [], "transformers.data.processors.glue.QnliProcessor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "google.protobuf.symbol_database.Default": [], "numpy.max": ["future.builtins.misc.max", "future.builtins.__init__.max", "numpy.ma.core.max", "numpy.array_api.__init__.max", "numpy.core.max"], "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode": ["struct", "google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.decoder.InnerDecode", "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode", "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode", "google.protobuf.internal.decoder._FloatDecoder.InnerDecode", "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode", "google.protobuf.internal.wire_format", "math", "math.nan", "struct.unpack", "google.protobuf.internal.wire_format.WIRETYPE_FIXED64"], "numpy.ma.extras.MAxisConcatenator": ["numpy.lib.index_tricks.AxisConcatenator", "numpy.ma.core.concatenate"], "numpy.ma.core.amax": ["numpy.ma.core.amax", "numpy.core.fromnumeric.amax", "numpy.amax"], "numpy.zeros_like": ["numpy.ma.core.zeros_like", "numpy.core.numeric.zeros_like", "numpy.array_api.__init__.zeros_like"], "future.backports.email._header_value_parser.Comment.quote": ["future.backports.email._header_value_parser.WhiteSpaceTokenList", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "numpy.ma.extras._fromnxfunction": [], "packaging.version._BaseVersion": ["typing.Tuple", "typing.Any"], "torch._overrides._get_overloaded_args": [], "numpy.core.fromnumeric._argsort_dispatcher": [], "numpy.tan": ["numpy.ma.core.tan", "numpy.core.umath.tan", "numpy.array_api.__init__.tan"], "click._compat._force_correct_text_reader": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._force_correct_text_stream", "click._compat._is_binary_reader", "click._compat._find_binary_reader", "typing.IO", "typing.Optional", "typing.Any", "typing.TextIO"], "tqdm.contrib.bells.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "numpy.lib._iotools.flatten_dtype": ["numpy.lib._iotools.flatten_dtype", "numpy", "numpy.prod"], "numpy.ma.core.around": ["numpy.ma.core.around", "numpy.core.fromnumeric.around"], "tensorflow.float32": [], "future.backports.xmlrpc.client.DateTime.encode": [], "numpy.core.defchararray.chararray.capitalize": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.capitalize", "numpy.core.numeric.ndarray.argsort"], "numpy.lib.type_check.mintypecode": ["numpy.core.numeric.asarray", "numpy.core.overrides.set_module"], "google.protobuf.descriptor.Descriptor": ["google.protobuf.descriptor._NestedDescriptorBase", "google.protobuf.pyext._message", "google.protobuf.pyext._message.Descriptor", "google.protobuf.pyext._message.Message", "google.protobuf.pyext._message.default_pool"], "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.int16": ["numpy.array_api.__init__.int16"], "numpy.compat._inspect.formatargspec": ["numpy.compat._inspect.joinseq", "numpy.compat._inspect.strseq"], "numpy.core._multiarray_umath.unpackbits": [], "numpy.ma.core.tanh": ["numpy.ma.core.tanh", "numpy.core.umath.tanh", "numpy.array_api.__init__.tanh"], "caffe2.python.schema.slice": ["caffe2.python.schema.Field._child_base_id", "caffe2.python.schema.Field.slice", "caffe2.python.schema.slice", "caffe2.python.schema.Struct.__len__"], "numpy.core.defchararray._get_num_chars": ["numpy.core.numerictypes.unicode_", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "numpy.core.numeric.greater_equal.outer": [], "numpy.core._multiarray_umath.implement_array_function": [], "numpy.cosh": ["numpy.ma.core.cosh", "numpy.core.umath.cosh", "numpy.array_api.__init__.cosh"], "numpy.array_api._typing.Sequence": ["typing.Sequence"], "torch.utils.data.dataloader.DataLoader": [], "numpy.core.defchararray.chararray.islower": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.islower", "numpy.core.defchararray.islower", "numpy.core.numeric.ndarray.argsort"], "numpy.core.all": ["numpy.ma.core.all", "numpy.core.fromnumeric.all", "numpy.array_api.__init__.all"], "sentencepiece._sentencepiece.SentencePieceProcessor_IsControl": [], "torch._utils": [], "numpy.lib._iotools.LineSplitter": [], "click._compat.name": [], "numpy.array_api._dtypes._numeric_dtypes": [], "numpy.lib.npyio._read": ["numpy", "numpy.lib.npyio._ensure_ndmin_ndarray_check_param", "numpy.lib.npyio.NpzFile.__len__", "numpy.lib.npyio._check_nonneg_int", "contextlib", "numpy.lib.npyio.BagObj.__getattribute__", "numpy.lib.npyio.NpzFile.__enter__", "numpy.lib.npyio.NpzFile.__exit__", "numpy.lib.npyio.NpzFile.close", "numpy.lib.npyio.NpzFile.__del__", "numpy.lib.npyio.NpzFile.__iter__", "numpy.lib.npyio.NpzFile.__getitem__", "numpy.lib.npyio.WriteWrap.close", "numpy.lib.npyio.WriteWrap.write", "numpy.lib.npyio.WriteWrap.write_bytes", "numpy.lib.npyio.WriteWrap.write_normal", "numpy.lib.npyio.WriteWrap.first_write", "os", "numpy.lib.npyio._preprocess_comments", "numpy.core._multiarray_umath._load_from_filelike", "numpy.lib.npyio._ensure_ndmin_ndarray", "warnings", "numpy.float64", "numpy.dtype", "numpy.lib", "numpy.concatenate", "warnings.warn", "os.PathLike", "os.fspath", "contextlib.nullcontext", "contextlib.closing"], "numpy.core.numeric._convolve_dispatcher": [], "numpy.core.umath.isinf": ["numpy.core.umath.isinf", "numpy.array_api.__init__.isinf"], "subprocess.check_call": [], "torch.sparse_coo": [], "urllib3.packages.six._import_module": ["sys", "sys.modules"], "torch._namedtensor_internals.update_names_with_list": ["torch._namedtensor_internals.resolve_ellipsis", "torch._namedtensor_internals.namer_api_name"], "torch.serialization._check_seekable": ["io", "torch.serialization.raise_err_msg", "torch.serialization._check_seekable.raise_err_msg", "torch.serialization._opener.__enter__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "io.UnsupportedOperation"], "numpy.polynomial._polybase.roots": ["numpy.polynomial._polybase.ABCPolyBase._roots", "numpy.polynomial._polybase.ABCPolyBase._fromroots", "numpy.polynomial._polybase.ABCPolyBase.roots", "numpy.polynomial._polybase.ABCPolyBase.fromroots", "numpy.polynomial._polybase.roots", "numpy.polynomial.polyutils", "numpy.polynomial.polyutils.mapdomain"], "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsImmutableProto": [], "numpy.typing.__init__.ArrayLike": ["numpy.typing.__init__.ArrayLike", "numpy._typing.ArrayLike"], "numpy.array_api._set_functions.UniqueCountsResult": ["typing.NamedTuple", "numpy.array_api._array_object.Array"], "numpy.ones_like": ["numpy.ma.core.ones_like", "numpy.core.numeric.ones_like", "numpy.array_api.__init__.ones_like"], "numpy.f2py.symbolic.Expr.__mul__": ["numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.as_factors", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.as_complex", "numpy.f2py.symbolic.as_terms", "numpy.f2py.symbolic._pairs_add", "numpy.f2py.symbolic.as_real"], "future.backports.email._header_value_parser.MimeParameters": ["future.backports.email._header_value_parser.TokenList"], "torch._namedtensor_internals.expand_single_ellipsis": [], "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.ma.core.fmod": ["numpy.ma.core.fmod", "numpy.core.umath.fmod"], "torch.per_tensor_affine": [], "torch.jit.OrderedModuleDict.__getitem__": ["torch.jit.OrderedDictWrapper", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique"], "future.backports.email.utils.quote": ["future.backports.urllib.parse.quote", "future.backports.email.quoprimime.quote", "future.backports.email._parseaddr.quote"], "torch.jit.__init__.RecursiveScriptModule.__getstate__": ["torch.jit.__init__.ScriptModule", "pickle", "pickle.PickleError"], "torch.serialization.check_module_version_greater_or_equal": ["warnings", "warnings.warn"], "numpy.core.fromnumeric.amax": ["numpy", "numpy.core.fromnumeric._wrapreduction", "numpy.core.fromnumeric._amax_dispatcher", "numpy._NoValue", "numpy.maximum"], "numpy.linalg.linalg._commonType": ["numpy.core.single", "numpy.core.inexact", "numpy.core.double", "numpy.linalg.linalg.isComplexType", "numpy.linalg.linalg._realType", "numpy.core.cdouble"], "numpy.core.defchararray.chararray.rfind": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.rfind", "numpy.core.defchararray.rfind", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.endswith", "numpy.core.numeric.ndarray.argsort"], "numpy.core.shape_base.vstack": ["numpy.core.overrides", "numpy.core.shape_base._arrays_for_stack_dispatcher", "numpy.core.shape_base.atleast_2d", "numpy.core.numeric", "numpy.core.shape_base._vhstack_dispatcher", "numpy.core.numeric.concatenate", "numpy.core.overrides.ARRAY_FUNCTION_ENABLED"], "click._compat._find_binary_writer": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._is_binary_writer", "typing.IO", "typing.Any", "typing.cast", "typing.BinaryIO", "typing.Optional"], "numpy.cos": ["numpy.ma.core.cos", "numpy.core.umath.cos", "numpy.array_api.__init__.cos"], "google.protobuf.message.Error": [], "future.backports.datetime.timedelta": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "urllib3.response.HTTPResponse.getheaders": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "numpy.compat.py3k.basestring": ["numpy.compat.py3k.basestring", "past.builtins.__init__.basestring", "past.types.basestring.basestring", "past.types.__init__.basestring"], "numpy.linalg.linalg._realType": ["numpy.core.double"], "numpy.array_api._array_object.Array.__ipow__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "tqdm.utils.Comparable.__ne__": [], "future.builtins.iterators.range": ["future.builtins.iterators.range", "future.builtins.__init__.range", "past.builtins.noniterators.range", "past.builtins.__init__.range", "future.types.newrange"], "numpy.ma.core.less": ["numpy.ma.core.less", "numpy.core.defchararray.less", "numpy.core.umath.less", "numpy.array_api.__init__.less"], "numpy.core.fromnumeric._wrapreduction": ["numpy", "numpy.core.multiarray", "numpy.core.multiarray.ndarray", "numpy._NoValue"], "torch.jit.OrderedModuleDict.__setitem__": ["torch.jit.OrderedDictWrapper", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.ScriptModule", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique"], "google.protobuf.internal.decoder._FieldSkipper.SkipField": ["google.protobuf.internal.decoder._SkipVarint", "google.protobuf.internal.decoder._SkipFixed64", "google.protobuf.internal.decoder._SkipLengthDelimited", "google.protobuf.internal.decoder._SkipGroup", "google.protobuf.internal.decoder._EndGroup", "google.protobuf.internal.decoder._SkipFixed32", "google.protobuf.internal.decoder._RaiseInvalidWireType", "google.protobuf.internal.wire_format", "google.protobuf.internal.decoder.SkipField", "google.protobuf.internal.decoder._FieldSkipper.SkipField", "google.protobuf.internal.wire_format.TAG_TYPE_MASK"], "google.protobuf.internal.encoder.SpecificSizer": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.array_api.__init__.ceil": ["numpy.ma.core.ceil", "numpy.core.umath.ceil", "numpy.array_api.__init__.ceil", "numpy.array_api._elementwise_functions.ceil"], "torch.utils.data.BatchSampler": ["torch.utils.data.sampler.BatchSampler"], "torch.serialization._is_path": ["pathlib", "sys", "sys.version_info", "pathlib.Path"], "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "sentencepiece._sentencepiece.SentencePieceProcessor_IsUnused": [], "transformers.data.processors.glue._glue_convert_examples_to_features.label_from_example": ["typing.List", "typing.Optional", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.label_from_example", "transformers.data.processors.glue._glue_convert_examples_to_features.label_from_example", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.utils.InputFeatures", "typing.Union"], "__builtin__.filter": [], "numpy.isscalar": ["numpy.f2py.auxfuncs.isscalar", "numpy.core.numeric.isscalar"], "google.protobuf.descriptor.FileDescriptor": ["google.protobuf.descriptor.DescriptorBase", "google.protobuf.pyext._message", "google.protobuf.descriptor.Descriptor.fields_by_camelcase_name", "google.protobuf.descriptor.FieldDescriptor.camelcase_name", "google.protobuf.descriptor.FileDescriptor", "google.protobuf.pyext._message.FileDescriptor", "google.protobuf.pyext._message.default_pool"], "future.backports.email._parseaddr.AddrlistClass.getphraselist": ["future.backports.email._parseaddr.AddressList.__len__"], "torch.jit._make_fail": ["torch.jit.fail", "torch.jit._make_fail.fail"], "tqdm.utils.disable_on_exception.inner": ["weakref.proxy", "tqdm.utils.DisableOnWriteError.disable_on_exception.inner", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils._environ_cols_wrapper.inner", "tqdm.utils.disable_on_exception.inner", "tqdm.utils.Comparable.__le__", "tqdm.utils.Comparable.__eq__", "tqdm.utils.Comparable.__ne__", "tqdm.utils.Comparable.__ge__", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.__setattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr", "tqdm.utils.ObjectWrapper.wrapper_setattr", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.SimpleTextIOWrapper.__eq__", "tqdm.utils.DisableOnWriteError.disable_on_exception", "tqdm.utils.DisableOnWriteError.__eq__", "tqdm.utils.CallbackIOWrapper.write", "tqdm.utils.CallbackIOWrapper.read"], "packaging.version.Version.__repr__": ["packaging.version._BaseVersion", "packaging.version.Version.__repr__", "packaging.version.Version.release", "packaging.version.Version.pre", "packaging.version.Version.is_prerelease", "packaging.version.Version.is_postrelease", "packaging.version.Version.is_devrelease", "re", "packaging.version.Version.__str__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.ma.core.sqrt": ["numpy.lib.scimath.sqrt", "numpy.ma.core.sqrt", "numpy.core.umath.sqrt", "numpy.array_api.__init__.sqrt"], "numpy.lib.twodim_base.vander": ["numpy.core.numeric.asarray", "numpy.core.numeric.empty", "numpy.core.numeric.promote_types", "numpy.core.numeric.multiply", "numpy.lib.twodim_base._vander_dispatcher", "numpy.core.numeric.multiply.accumulate"], "future.backports.email._header_value_parser.TokenList": ["future.builtins.list"], "numpy.core.numeric.dot": ["numpy.ma.extras.dot", "numpy.core.numeric.dot", "numpy.core.multiarray.dot"], "multiprocessing.util.register_after_fork": [], "tqdm.contrib.discord.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "click.utils.format_filename": ["click.utils.LazyFile.close", "click.utils.LazyFile.close_intelligently", "os", "sys", "os.fspath", "os.path", "sys.getfilesystemencoding"], "torch.serialization._legacy_load.legacy_load.persistent_load": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization._get_restore_location", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization.legacy_load", "torch.serialization._legacy_load.legacy_load", "tarfile", "torch.serialization._is_zipfile", "sys", "torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "contextlib.closing", "torch.serialization.mkdtemp", "torch.serialization._opener.__init__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__init__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._open_zipfile_writer_file.__init__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__init__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "torch.serialization._opener.__enter__", "torch.serialization.storage_to_tensor_type", "struct", "os", "struct.unpack", "sys.version_info", "tarfile.TarError", "tarfile.open", "tarfile.PAX_FORMAT", "os.path"], "torch.jit.__init__._disable_tracing.__enter__": [], "numpy.array_api.__init__.negative": ["numpy.ma.core.negative", "numpy.core.umath.negative", "numpy.array_api.__init__.negative", "numpy.array_api._elementwise_functions.negative"], "click._compat.strip_ansi": [], "torch.jit._graph_for": [], "numpy.core.multiarray.correlate": ["numpy.ma.core.correlate", "numpy.core.numeric.correlate", "numpy.core.multiarray.correlate"], "future.backports.email._header_value_parser.Address.mailboxes": ["future.backports.email._header_value_parser.TokenList"], "numpy.array_api.__init__.sqrt": ["numpy.lib.scimath.sqrt", "numpy.ma.core.sqrt", "numpy.core.umath.sqrt", "numpy.array_api.__init__.sqrt", "numpy.array_api._elementwise_functions.sqrt"], "subprocess.CompletedProcess": [], "numpy.core.ones": ["numpy.ma.core.ones", "numpy.core.numeric.ones", "numpy.array_api.__init__.ones"], "numpy.linalg._umath_linalg.inv": [], "torch.serialization._open_buffer_reader": ["torch.serialization._opener"], "torch.jit.__init__.OrderedModuleDict.__init__": ["torch.jit.__init__.OrderedDictWrapper", "torch.jit.__init__.OrderedModuleDict"], "numpy.core._ufunc_config._no_nep50_warning": ["numpy.core.overrides.set_module", "contextlib", "contextlib.contextmanager"], "torch.utils.set_module": [], "numpy.broadcast_arrays": ["numpy.lib.stride_tricks.broadcast_arrays", "numpy.array_api.__init__.broadcast_arrays"], "numpy.ma.extras._fromnxfunction_seq.__call__": ["numpy.ma.extras._fromnxfunction", "numpy", "numpy.ma.extras._fromnxfunction.__call__", "numpy.ma.extras._fromnxfunction_single.__call__", "numpy.ma.extras._fromnxfunction_seq.__call__", "numpy.ma.extras._fromnxfunction_args.__call__", "numpy.ma.extras._fromnxfunction_allargs.__call__", "numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.core.getmaskarray", "numpy.ma.core.masked_array", "numpy.asarray"], "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise", "struct.calcsize", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "codecs.lookup_error": [], "numpy.core._multiarray_umath.ravel_multi_index": [], "torch.jit.__init__.TracedModule._get_name": ["torch.jit.__init__.ScriptModule"], "Queue": [], "numpy.core.defchararray.chararray.endswith": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray.endswith", "numpy.core.defchararray.chararray.startswith", "numpy.core.numeric.ndarray.argsort"], "numpy.array_api._set_functions.UniqueAllResult": ["typing.NamedTuple", "numpy.array_api._array_object.Array"], "sacremoses.tokenize.MosesTokenizer": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile"], "contextlib.nullcontext": [], "tqdm.utils.Comparable.__le__": [], "numpy.core.arrayprint.dtype_is_implied": ["numpy", "numpy.core.numerictypes.bool_", "numpy.dtype"], "transformers.modeling_auto.AutoModelForTokenClassification.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "tqdm.tk.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "future.backports.email._header_value_parser.DOT_ATOM_ENDS": [], "tqdm.notebook.tqdm_notebook.status_printer": ["tqdm.std.tqdm", "IPython.html.widgets.FloatProgress", "ipywidgets.FloatProgress", "IPython.html.widgets.FloatProgressWidget", "IPython.html.widgets.HTML", "ipywidgets.HTML", "tqdm.notebook.TqdmHBox", "tqdm.notebook.tqdm_notebook.status_printer"], "torch.utils.data.dataloader.multiprocessing_context": ["torch.utils.data.dataloader.DataLoader.multiprocessing_context", "torch.utils.data.dataloader.multiprocessing_context", "torch._six.string_classes", "torch.multiprocessing", "multiprocessing", "multiprocessing.context", "torch.multiprocessing._supports_context", "torch.multiprocessing.get_all_start_methods", "torch.multiprocessing.get_context"], "future.backports.urllib.parse.ParseResultBytes": ["future.backports.urllib.parse._NetlocResultMixinBytes"], "torch.multiprocessing": ["multiprocessing", "torch.multiprocessing.reductions.init_reductions", "sys", "torch", "multiprocessing.__all__", "sys.version_info", "sys.platform", "torch._C"], "numpy.core.arrayprint.IntegerFormat.__call__": [], "google.protobuf.descriptor.FieldDescriptor.camelcase_name": ["google.protobuf.descriptor.DescriptorBase", "google.protobuf.pyext._message", "google.protobuf.descriptor._ToCamelCase", "google.protobuf.pyext._message.FieldDescriptor", "google.protobuf.pyext._message.Message", "google.protobuf.pyext._message.default_pool"], "numpy.core._multiarray_umath.bincount": [], "numpy.core.getlimits.finfo": ["numpy.core.overrides.set_module"], "tqdm.utils.ObjectWrapper.__getattr__": ["tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr"], "numpy.lib._iotools._decode_line": ["numpy.lib._iotools.StringConverter._getdtype", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._dtypeortype"], "click.exceptions.UsageError": ["click.exceptions.ClickException"], "certifi.core.where": ["importlib.resources.as_file", "importlib.resources.files", "importlib.resources.path", "os", "os.path"], "numpy.array_api._typing.Optional": [], "transformers.modeling_auto.AutoModelForPreTraining.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.greater_equal": ["numpy.ma.core.greater_equal", "numpy.core.defchararray.greater_equal", "numpy.core.umath.greater_equal", "numpy.array_api.__init__.greater_equal"], "numpy.lib.arraysetops._unique1d": ["numpy", "numpy.asanyarray", "numpy.empty", "numpy.bool_", "numpy.isnan", "numpy.searchsorted", "numpy.cumsum", "numpy.intp", "numpy.concatenate", "numpy.diff", "numpy.nonzero"], "click.formatting.wrap_text": ["click.formatting.HelpFormatter.write_text", "click._textwrap.TextWrapper", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "click.formatting.indent", "click.formatting._flush_par", "click.formatting.wrap_text._flush_par", "click._compat.term_len", "typing.List", "typing.Tuple"], "multiprocessing.context": [], "torch.jit.__init__.OrderedDictWrapper.__init__": ["torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.__contains__"], "numpy.ma.core.negative": ["numpy.ma.core.negative", "numpy.core.umath.negative", "numpy.array_api.__init__.negative"], "numpy.f2py.symbolic.as_terms": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.as_integer", "numpy.f2py.symbolic.as_real", "numpy.f2py.symbolic.OpError"], "tarfile.is_tarfile": [], "numpy.array_api._array_object.Array.__imod__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "numpy.lib.stride_tricks._broadcast_to_dispatcher": [], "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.empty_like": ["numpy.ma.core.empty_like", "numpy.core.numeric.empty_like", "numpy.core.multiarray.empty_like", "numpy.array_api.__init__.empty_like"], "numpy.f2py.symbolic.fromstring": ["numpy.f2py.symbolic.Language", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.RelOp"], "numpy.ma.core.nomask": ["numpy.ma.core.nomask"], "numpy.lib.scimath._fix_int_lt_zero": ["numpy.core.numeric.asarray", "numpy.core.numeric.any", "numpy.lib.type_check.isreal"], "numpy.lib.npyio.WriteWrap.__init__": [], "dask.utils.funcname": [], "numpy.core.numerictypes.typecodes": ["numpy.core.numerictypes.typecodes"], "packaging.version.InvalidVersion": [], "numpy.common_type": ["numpy.lib.type_check.common_type"], "transformers.data.processors.squad._is_whitespace": ["transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict", "transformers.data.processors.squad.SquadProcessor._create_examples"], "numpy.square": ["numpy.core.umath.square", "numpy.array_api.__init__.square"], "numpy.core.arrayprint.DatetimeFormat.__call__": ["numpy.core.arrayprint._TimelikeFormat"], "future.backports.datetime.timezone": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta"], "urllib3.response.GzipDecoder.decompress": ["urllib3.response.HTTPResponse.data", "urllib3.response.data", "urllib3.response.GzipDecoderState", "zlib", "zlib.decompressobj", "zlib.error", "zlib.MAX_WBITS"], "future.backports.email._header_value_parser.QuotedString": ["future.backports.email._header_value_parser.TokenList"], "numpy.core.defchararray.less_equal": ["numpy.core.numeric.compare_chararrays", "numpy.core.defchararray._binary_op_dispatcher"], "past.builtins.__init__.zip": ["future.builtins.iterators.zip", "future.builtins.__init__.zip", "past.builtins.noniterators.zip", "past.builtins.__init__.zip"], "numpy.lib.function_base.__call__.func": ["numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.lib.function_base.vectorize.__init__"], "numpy.core.arrayprint.BoolFormat.__call__": [], "numpy.core.defchararray.chararray.isalnum": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.isalnum", "numpy.core.numeric.ndarray.argsort"], "numpy.f2py.symbolic.eliminate_quotes": ["numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.repl", "numpy.f2py.symbolic.eliminate_quotes.repl", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic._Pair.__repr__", "re", "re.sub"], "numpy.core.arrayprint.TimedeltaFormat._format_non_nat": ["numpy.core.arrayprint._TimelikeFormat"], "numpy.core.arrayprint.StructuredVoidFormat.__call__": [], "numpy.lib.histograms._hist_bin_stone.jhat": ["numpy.lib.histograms._ptp", "numpy", "numpy.lib.histograms.jhat", "numpy.lib.histograms._hist_bin_stone.jhat", "warnings", "warnings.warn", "numpy.sqrt", "numpy.histogram"], "google.protobuf.internal.wire_format.TAG_TYPE_MASK": [], "future.backports.email._header_value_parser.get_ttext": ["future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.comments", "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.Comment.comments", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.Terminal.comments", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser._validate_xtext", "future.backports.email.errors.HeaderParseError"], "numpy.core.fromnumeric.take": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._take_dispatcher"], "numpy.array_api._array_object.Array.device": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._typing.Device", "numpy.ndarray"], "numpy.ma.core.mod": ["numpy.ma.core.mod", "numpy.core.defchararray.mod", "numpy.core.umath.mod"], "google.protobuf.internal.wire_format.PackTag": ["google.protobuf.message", "google.protobuf.message.EncodeError"], "click._compat._force_correct_text_writer": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._force_correct_text_stream", "click._compat._is_binary_writer", "click._compat._find_binary_writer", "typing.IO", "typing.Optional", "typing.Any", "typing.TextIO"], "torch.jit.TracedModule.__setattr__": ["torch.jit.ScriptModule", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.OrderedDictWrapper.values", "torch.jit.TracedModule"], "termios.TIOCGWINSZ": [], "future.backports.email._header_value_parser.TokenList.has_fws": ["future.builtins.list", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts"], "future.builtins.__init__.range": ["future.builtins.iterators.range", "future.builtins.__init__.range", "past.builtins.noniterators.range", "past.builtins.__init__.range", "future.types.newrange"], "click._winconsole._get_windows_console_stream": ["click._winconsole._WindowsConsoleRawIOBase.__init__", "click._winconsole._WindowsConsoleRawIOBase.isatty", "click._winconsole._WindowsConsoleReader.readinto", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole._WindowsConsoleWriter._get_error_message", "click._winconsole._WindowsConsoleWriter.write", "click._winconsole.ConsoleStream.__init__", "click._winconsole.ConsoleStream.write", "click._winconsole.ConsoleStream.writelines", "click._winconsole.ConsoleStream.__getattr__", "click._winconsole.ConsoleStream.isatty", "typing", "click._winconsole.get_buffer", "click._winconsole._is_console", "click._winconsole._WindowsConsoleReader.readable", "typing.TextIO", "typing.Optional"], "threading.Event": [], "future.backports.xmlrpc.client.dumps": ["future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Fault", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.__dump", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Unmarshaller.xml", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.Marshaller", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Unmarshaller.end_value"], "tqdm.utils.DisableOnWriteError.__eq__": ["tqdm.utils.ObjectWrapper", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr"], "google.protobuf.descriptor.EnumDescriptor": ["google.protobuf.descriptor._NestedDescriptorBase", "google.protobuf.pyext._message", "google.protobuf.pyext._message.EnumDescriptor", "google.protobuf.pyext._message.Message", "google.protobuf.pyext._message.default_pool"], "__builtin__.unichr": [], "urllib3.response.HTTPResponse.read": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse._flush_decoder", "urllib3.response.DeflateDecoder.__getattr__", "urllib3.response.GzipDecoder.__getattr__", "urllib3.response.HTTPResponse.data", "urllib3.response.data", "urllib3.exceptions.IncompleteRead", "urllib3.response.HTTPResponse._init_length", "urllib3.response.HTTPResponse.fileno", "urllib3.response.HTTPResponse._update_chunk_length", "io.IOBase", "zlib.error", "brotli.error"], "numpy.trunc": ["numpy.core.umath.trunc", "numpy.array_api.__init__.trunc"], "numpy.array_api.__init__.iinfo": ["numpy.core.getlimits.iinfo", "numpy.array_api.__init__.iinfo", "numpy.array_api._data_type_functions.iinfo"], "numpy.int8": ["numpy.array_api.__init__.int8"], "numpy.log10": ["numpy.lib.scimath.log10", "numpy.ma.core.log10", "numpy.core.umath.log10", "numpy.array_api.__init__.log10"], "numpy.roll": ["numpy.core.numeric.roll", "numpy.array_api.__init__.roll"], "numpy.array_api.__init__.pi": ["numpy.core.umath.pi", "numpy.array_api.__init__.pi", "numpy.array_api._constants.pi"], "numpy.lib.npyio._ensure_ndmin_ndarray": ["numpy.lib.npyio.BagObj.__getattribute__", "numpy.lib.npyio.WriteWrap.write_normal", "numpy", "numpy.squeeze", "numpy.atleast_1d", "numpy.atleast_2d"], "future.backports.email._header_value_parser.has_fws": ["future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts"], "future.backports.xmlrpc.client._MultiCallMethod.__getattr__": ["future.backports.xmlrpc.client._MultiCallMethod", "future.backports.xmlrpc.client.Unmarshaller.getmethodname"], "numpy.float64": ["numpy.array_api.__init__.float64"], "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "regex.DEFAULT_VERSION": ["regex.regex.DEFAULT_VERSION"], "numpy.core.defchararray.strip": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._clean_args", "numpy.core.defchararray._strip_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.lstrip", "numpy.core.defchararray.chararray.rstrip", "numpy.core.defchararray.chararray.strip", "numpy.core.defchararray.strip", "numpy.asarray"], "future.utils.lfilter": [], "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "numpy.lib.npyio._save_dispatcher": [], "torch._linalg_utils.matmul": ["torch._linalg_utils.is_sparse", "torch", "torch.sparse", "torch.matmul"], "torch.serialization.restore_location": ["torch.serialization.default_restore_location"], "tqdm.gui.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "torch.jit.OrderedDictWrapper.__setitem__": ["torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer"], "numpy.lib.function_base._update_dim_sizes": [], "time.tzname": [], "numpy.ma.extras.cov": ["numpy.ma.extras._covhelper", "numpy", "numpy.ma.core.dot", "numpy.dot"], "numpy.core.arrayprint._array2string_dispatcher": ["numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.StructuredVoidFormat.__call__"], "click._compat._default_text_stderr": [], "numpy.lib._iotools.ConversionWarning": [], "numpy.uint16": ["numpy.array_api.__init__.uint16"], "future.backports.xmlrpc.client.MultiCall.__getattr__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.__str__", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.__repr__", "future.backports.xmlrpc.client._MultiCallMethod", "future.backports.xmlrpc.client.Unmarshaller.getmethodname"], "numpy.core.arrayprint._TimelikeFormat.__call__": ["numpy.core.umath.isnat"], "future.backports.xmlrpc.client.DateTime.__ne__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.ExpatParser.close", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.close", "future.backports.xmlrpc.client.Unmarshaller.start", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.GzipDecodedResponse.close", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.close", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.ServerProxy.__close", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.DateTime.decode", "future.backports.xmlrpc.client.DateTime.encode", "future.backports.xmlrpc.client.Binary.decode", "future.backports.xmlrpc.client.Binary.encode", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection"], "future.backports.datetime.datetime": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "torch.jit.__init__.script_method": ["torch._jit_internal", "torch.jit.frontend.get_jit_def", "torch.jit._recursive.ScriptMethodStub", "torch._jit_internal.createResolutionCallbackFromFrame"], "numpy.core.numerictypes.cdouble": [], "tqdm.notebook.TqdmHBox": ["IPython.html.widgets.HBox", "ipywidgets.HBox", "IPython.html.widgets.ContainerWidget"], "numpy.core.defchararray.rstrip": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._strip_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.rstrip", "numpy.core.defchararray.rstrip", "numpy.asarray"], "google.protobuf.internal.decoder._SkipVarint": [], "future.backports.email._header_value_parser.BareQuotedString.__str__": ["future.backports.email._header_value_parser.QuotedString", "future.backports.email._header_value_parser.quote_string", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "numpy.ma.core.arcsin": ["numpy.lib.scimath.arcsin", "numpy.ma.core.arcsin", "numpy.core.umath.arcsin"], "torch.jit.__init__.RecursiveScriptModule.__bool__": ["torch.jit.__init__.ScriptModule", "torch._six.get_function_from_type", "torch.jit.__init__.RecursiveScriptModule"], "future.utils.exec_": ["sys", "sys._getframe"], "numpy.linalg.linalg._pinv_dispatcher": [], "torch.jit.OrderedModuleDict.items": ["torch.jit.OrderedDictWrapper", "torch.jit.ONNXTracedModule.forward", "torch.jit.ONNXTracedModule.wrapper", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__getattr__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.TracedModule.forward", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.TracedModule.extra_repr", "torch.jit._disable_tracing.__enter__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.graph", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.RecursiveScriptModule.extra_repr", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__dir__"], "numpy.core.fromnumeric._all_dispatcher": [], "urllib3.response.HTTPResponse.drain_conn": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.exceptions.HTTPError", "socket.error", "urllib3.connection.BaseSSLError", "urllib3.connection.HTTPException", "io.IOBase", "zlib.error", "brotli.error"], "numpy.core.defchararray.chararray.splitlines": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.splitlines", "numpy.core.defchararray.splitlines", "numpy.core.numeric.ndarray.argsort"], "numpy.core.numeric.inner": ["numpy.ma.core.inner", "numpy.core.numeric.inner", "numpy.core.multiarray.inner"], "numpy.lib.scimath._unary_dispatcher": [], "numpy.array_api.__init__.greater_equal": ["numpy.ma.core.greater_equal", "numpy.core.defchararray.greater_equal", "numpy.core.umath.greater_equal", "numpy.array_api.__init__.greater_equal", "numpy.array_api._elementwise_functions.greater_equal"], "transformers.data.processors.glue.WnliProcessor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "numpy.core.newaxis": ["numpy.core.numeric.newaxis"], "ipywidgets.HBox": [], "google.protobuf.descriptor.EnumValueDescriptor": ["google.protobuf.descriptor.DescriptorBase", "google.protobuf.pyext._message", "google.protobuf.pyext._message.EnumValueDescriptor", "google.protobuf.pyext._message.Message"], "future.utils.native_str_to_bytes": ["future.types.newbytes", "future.types.newbytes.newbytes"], "shlex": [], "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.array_api.__init__.isfinite": ["numpy.core.umath.isfinite", "numpy.array_api.__init__.isfinite", "numpy.array_api._elementwise_functions.isfinite"], "transformers.configuration_auto.AutoConfig.from_pretrained": ["transformers.configuration_auto.AutoConfig.__init__", "transformers.configuration_auto.AutoConfig.for_model", "transformers.configuration_auto.AutoConfig.from_pretrained", "transformers.configuration_utils.PretrainedConfig", "transformers.configuration_auto.replace_list_option_in_docstrings", "transformers.configuration_utils.PretrainedConfig.get_config_dict"], "torch.serialization._should_read_directly": ["torch.serialization._is_compressed_file", "io", "io.UnsupportedOperation"], "tokenize.untokenize": [], "numpy.lib.index_tricks.nd_grid": [], "torch.jit.__init__._create_interpreter_name_lookup_fn._get_interpreter_name_for_var": ["torch.jit.__init__._get_interpreter_name_for_var", "torch.jit.__init__._create_interpreter_name_lookup_fn._get_interpreter_name_for_var", "inspect", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.CompilationUnit.define", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.items", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.items", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.ScriptModule.define", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.RecursiveScriptModule.define", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "inspect.currentframe"], "binascii.Error": [], "numpy.lib.npyio.BagObj.__dir__": [], "transformers.file_utils.torch_required.wrapper": ["transformers.file_utils.wrapper", "transformers.file_utils.torch_only_method.wrapper", "transformers.file_utils.torch_required.wrapper", "transformers.file_utils.tf_required.wrapper", "transformers.file_utils.is_torch_available", "functools.wraps"], "torch.__init__.randn": ["torch.__init__.randn", "numpy.matlib.randn", "numpy.random.__init__.randn"], "numpy.array_api.__init__.sinh": ["numpy.ma.core.sinh", "numpy.core.umath.sinh", "numpy.array_api.__init__.sinh", "numpy.array_api._elementwise_functions.sinh"], "future.backports.email.message.Message.attach": ["future.backports.email.message.Message.get_payload", "future.backports.email.message.Message.set_payload"], "future.backports.email._header_value_parser.MailboxList.all_mailboxes": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "click.types.ParamType": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "typing.ClassVar", "typing.Optional"], "torch.inverse": [], "numpy.lib.function_base._trim_zeros": [], "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.sign": ["numpy.core.umath.sign", "numpy.array_api.__init__.sign"], "numpy.core.defchararray.chararray.expandtabs": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.expandtabs", "numpy.core.numeric.ndarray.argsort"], "torch._sparse_sum": [], "torch.jit.__init__.RecursiveScriptModule._construct": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.RecursiveScriptModule", "torch.jit.__init__.OrderedDictWrapper", "torch.jit.__init__.OrderedModuleDict"], "numpy.lib.scimath.arctanh": ["numpy.lib.scimath._fix_real_abs_gt_1", "numpy.core.numeric", "numpy.core.overrides.array_function_dispatch", "numpy.lib.scimath._unary_dispatcher", "numpy.core.numeric.arctanh"], "torch.jit.ScriptModule.__setattr__": ["torch._six.with_metaclass", "torch.jit.ScriptMeta", "torch.nn.Module", "torch.jit.ONNXTracedModule.forward", "torch.jit.TracedModule.forward", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.forward", "torch.jit._CachedForward", "torch.jit.OrderedDictWrapper.values", "torch.jit.Attribute", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.ScriptModule"], "future.backports.email._header_value_parser.AddressList.mailboxes": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "numpy.array_api._array_object.Array.__imatmul__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.ndarray"], "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.sinh": ["numpy.ma.core.sinh", "numpy.core.umath.sinh", "numpy.array_api.__init__.sinh"], "numpy.array_api._array_object.Array.__iadd__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "numpy.ma.core.arctan2": ["numpy.ma.core.arctan2", "numpy.core.umath.arctan2"], "numpy.array_api._array_object.Array.__iand__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__bool__", "numpy.ndarray"], "numpy.ma.core.subtract": ["numpy.ma.core.subtract", "numpy.core.umath.subtract", "numpy.array_api.__init__.subtract"], "torch.utils.data._utils.fetch": [], "numpy.core.fromnumeric._wrapfunc": ["numpy.core.fromnumeric._wrapit"], "transformers.data.processors.glue._tf_glue_convert_examples_to_features.gen": ["typing.Optional", "tensorflow", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.glue_convert_examples_to_features", "transformers.data.processors.glue.gen", "transformers.data.processors.glue._tf_glue_convert_examples_to_features.gen", "transformers.data.processors.glue.MrpcProcessor.get_labels", "transformers.data.processors.glue.MnliProcessor.get_labels", "transformers.data.processors.glue.ColaProcessor.get_labels", "transformers.data.processors.glue.Sst2Processor.get_labels", "transformers.data.processors.glue.StsbProcessor.get_labels", "transformers.data.processors.glue.QqpProcessor.get_labels", "transformers.data.processors.glue.QnliProcessor.get_labels", "transformers.data.processors.glue.RteProcessor.get_labels", "transformers.data.processors.glue.WnliProcessor.get_labels", "dataclasses.asdict", "tensorflow.data", "tensorflow.float32", "tensorflow.int64", "tensorflow.TensorShape", "tensorflow.int32"], "numpy.core.numeric.sort": ["numpy.ma.core.sort", "numpy.core.fromnumeric.sort", "numpy.array_api.__init__.sort"], "numpy.core.numeric.greater_equal": ["numpy.ma.core.greater_equal", "numpy.core.defchararray.greater_equal", "numpy.core.umath.greater_equal", "numpy.array_api.__init__.greater_equal"], "future.builtins.newsuper.newsuper": ["sys", "future.builtins.newsuper.find_owner", "sys._getframe"], "numpy.core.shape_base._arrays_for_stack_dispatcher": ["warnings", "warnings.warn"], "numpy.core.defchararray.chararray.rindex": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.rindex", "numpy.core.defchararray.rindex", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.endswith", "numpy.core.numeric.ndarray.argsort"], "numpy.greater": ["numpy.ma.core.greater", "numpy.core.defchararray.greater", "numpy.core.umath.greater", "numpy.array_api.__init__.greater"], "numpy.matlib.randn": ["numpy.matrixlib.defmatrix.asmatrix", "numpy", "numpy.random"], "numpy.lib.utils.issubdtype": ["numpy.lib.utils.issubdtype", "numpy.core.numerictypes.issubdtype"], "future.backports.email._header_value_parser.TokenList.ppstr": ["future.builtins.list"], "tarfile.TarError": [], "torch.serialization._open_zipfile_writer_buffer": ["torch.serialization._opener"], "_sentencepiece.SentencePieceProcessor__EncodeAsImmutableProto": [], "future.backports.email._header_value_parser.AddressList.all_mailboxes": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "numpy.f2py.symbolic.Expr.contains.visit": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit"], "numpy.ma.core.fabs": ["numpy.ma.core.fabs", "numpy.core.umath.fabs"], "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder": ["struct", "google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "struct.calcsize", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "numpy.arccosh": ["numpy.ma.core.arccosh", "numpy.core.umath.arccosh"], "pathlib.Path": [], "torch._linalg_utils.qform": ["torch._linalg_utils.bform"], "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder": ["google.protobuf.internal.encoder.SpecificEncoder", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder", "google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "torch.cuda.is_available": ["torch", "torch._C"], "numpy.lib.format.write_array": ["numpy.lib.format._check_version", "numpy.lib.format._write_array_header", "numpy.lib.format.header_data_from_array_1_0", "numpy.compat.pickle", "numpy.compat.py3k._isfileobj", "numpy", "numpy.compat.pickle.dump", "numpy.nditer"], "numpy.core.defchararray._clean_args": ["numpy.core.defchararray.chararray.argsort"], "typing.final": [], "click.termui.prompt_func": ["click._termui_impl.raw_terminal", "click._termui_impl.getchar", "click.termui.hidden_prompt_func", "click.utils.echo", "click.exceptions.Abort"], "numpy.core.fromnumeric.around": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._around_dispatcher"], "numpy.ma.mrecords.MaskedRecords.copy": ["numpy.ma.MaskedArray"], "torch.serialization.legacy_load.persistent_load": ["torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "contextlib.closing", "torch.serialization.mkdtemp", "torch.serialization._opener.__init__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__init__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._open_zipfile_writer_file.__init__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__init__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "torch.serialization._opener.__enter__", "tarfile", "torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization.storage_to_tensor_type", "struct", "os", "torch.serialization._check_container_source", "torch.serialization._legacy_load._check_container_source", "struct.unpack", "tarfile.open", "tarfile.PAX_FORMAT", "os.path"], "numpy.ma.core.ceil": ["numpy.ma.core.ceil", "numpy.core.umath.ceil", "numpy.array_api.__init__.ceil"], "future.utils.raise_": [], "torch.serialization._save.persistent_id": ["io", "torch.serialization.persistent_id", "torch.serialization._legacy_save.persistent_id", "torch.serialization._save.persistent_id", "torch.serialization._should_read_directly", "torch", "torch.serialization.normalize_storage_type", "torch.serialization.location_tag", "torch.is_storage", "io.BytesIO"], "future.backports.email._header_value_parser.AddressList": ["future.backports.email._header_value_parser.TokenList"], "numpy.array_api._array_object.Array.__truediv__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "google.protobuf.internal.decoder._SkipLengthDelimited": [], "numpy.lib.shape_base.apply_along_axis": ["numpy.core.numeric.asanyarray", "numpy.core.multiarray.normalize_axis_index", "numpy.core.fromnumeric.transpose", "numpy.lib.index_tricks.ndindex", "numpy.core.numeric.zeros", "numpy.matrixlib.defmatrix.matrix", "numpy.lib.shape_base._apply_along_axis_dispatcher"], "numpy.array_api.__init__.inf": ["numpy.core.numeric.inf", "numpy.array_api.__init__.inf", "numpy.array_api._constants.inf"], "urllib3.response.GzipDecoder.__getattr__": ["urllib3.response.DeflateDecoder.__getattr__", "urllib3.response.GzipDecoder.__getattr__"], "sentencepiece._sentencepiece.SentencePieceProcessor_CalculateEntropy": [], "numpy.lib.arraysetops.unique.reshape_uniq": ["numpy", "numpy.lib.arraysetops._unique1d", "numpy.lib.arraysetops._unpack_tuple", "numpy.lib.arraysetops.reshape_uniq", "numpy.lib.arraysetops.unique.reshape_uniq", "numpy.lib.arraysetops._unique_dispatcher", "numpy.asanyarray", "numpy.moveaxis", "numpy.AxisError", "numpy.prod", "numpy.intp", "numpy.ascontiguousarray", "numpy.empty"], "tqdm.rich.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "future.backports.email._parseaddr.AddrlistClass.getaddrlist": ["future.backports.email._parseaddr.AddrlistClass.getaddrlist", "future.backports.email._parseaddr.AddrlistClass.getaddress", "future.backports.email._parseaddr.AddrlistClass.getrouteaddr", "future.backports.email._parseaddr.AddrlistClass.getaddrspec", "future.backports.email._parseaddr.AddressList.__add__", "future.backports.email._parseaddr.AddressList.__iadd__", "future.backports.email._parseaddr.AddressList.__len__"], "_sentencepiece.SentencePieceProcessor_IsUnknown": [], "torch.jit.__init__.ScriptMeta.init_then_script": ["torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta.__init__.make_stubs", "torch.jit.__init__.ScriptMeta.init_then_script.make_stubs", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.__init__.init_then_script.make_stubs", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__._CachedForward.__get__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__len__", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.RecursiveScriptModule.__bool__", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.OrderedDictWrapper.keys", "functools", "functools.wraps"], "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "future.backports.email.errors.InvalidBase64CharactersDefect": ["future.backports.email.errors.MessageDefect"], "numpy.lib.npyio.WriteWrap.write": [], "google.protobuf.internal.encoder._FixedSizer.SpecificSizer": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "future.utils.surrogateescape.b": ["future.utils", "future.utils.PY3"], "numpy.ma.core.floor": ["numpy.ma.core.floor", "numpy.core.umath.floor", "numpy.array_api.__init__.floor"], "numpy.core.defchararray.chararray.startswith": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.startswith", "numpy.core.defchararray.chararray.endswith", "numpy.core.numeric.ndarray.argsort"], "packaging.version.Version.is_prerelease": ["packaging.version._BaseVersion", "packaging.version.Version.__repr__", "packaging.version.Version.release", "packaging.version.Version.pre", "packaging.version.Version.is_prerelease", "packaging.version.Version.is_postrelease", "packaging.version.Version.is_devrelease", "re", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "google.protobuf.descriptor.Descriptor.fields_by_camelcase_name": ["google.protobuf.descriptor._NestedDescriptorBase", "google.protobuf.pyext._message", "google.protobuf.descriptor.Descriptor.fields_by_camelcase_name", "google.protobuf.pyext._message.Descriptor", "google.protobuf.pyext._message.Message", "google.protobuf.pyext._message.default_pool"], "numpy.core.arrayprint.ComplexFloatingFormat.__call__": ["numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.FloatingFormat.__init__", "numpy.core.arrayprint.IntegerFormat.__init__", "numpy.core.arrayprint.BoolFormat.__init__", "numpy.core.arrayprint.ComplexFloatingFormat.__init__", "numpy.core.arrayprint._TimelikeFormat.__init__", "numpy.core.arrayprint.DatetimeFormat.__init__", "numpy.core.arrayprint.SubArrayFormat.__init__", "numpy.core.arrayprint.StructuredVoidFormat.__init__"], "_sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsImmutableProto": [], "tqdm.utils.Comparable.__ge__": [], "click.formatting.measure_table": ["click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.write_text", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "click._compat.term_len", "typing.Iterable", "typing.Tuple", "typing.Dict"], "numpy.f2py.symbolic.Expr.__ge__": [], "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder": ["google.protobuf.internal.decoder.SpecificDecoder", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder", "google.protobuf.internal.decoder.DecodePackedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.EnumDecoder.DecodePackedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodePackedField", "google.protobuf.internal.decoder.DecodeRepeatedField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.EnumDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.StringDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.BytesDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.GroupDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.MessageDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeRepeatedField", "google.protobuf.internal.decoder.DecodeField", "google.protobuf.internal.decoder._SimpleDecoder.SpecificDecoder.DecodeField", "google.protobuf.internal.decoder.EnumDecoder.DecodeField", "google.protobuf.internal.decoder.StringDecoder.DecodeField", "google.protobuf.internal.decoder.BytesDecoder.DecodeField", "google.protobuf.internal.decoder.GroupDecoder.DecodeField", "google.protobuf.internal.decoder.MessageDecoder.DecodeField", "google.protobuf.internal.decoder.SpecificDecoder.DecodeField", "google.protobuf.internal.encoder", "google.protobuf.message", "google.protobuf.internal.encoder.TagBytes"], "future.backports.email._encoded_words._QByteMap.__missing__": ["future.builtins.bytes", "string.digits", "string.ascii_letters", "future.builtins.chr", "string.ascii_letters.encode", "string.digits.encode"], "tqdm.utils.CallbackIOWrapper.read": ["tqdm.utils.ObjectWrapper", "functools.wraps"], "torch.jit.__init__.TracedModule.extra_repr": ["torch.jit.__init__.ScriptModule"], "itertools.cycle": [], "future.backports.email._header_value_parser.WhiteSpaceTerminal": ["future.backports.email._header_value_parser.Terminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "numpy.core.defchararray.chararray.__radd__": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.add", "numpy", "numpy.core.numeric.ndarray.argsort", "numpy.asarray"], "numpy.linalg.linalg._complexType": ["numpy.core.cdouble"], "google.protobuf.internal.decoder._SkipFixed32": [], "numpy.arctan": ["numpy.ma.core.arctan", "numpy.core.umath.arctan"], "numpy.core.defchararray.greater": ["numpy.core.numeric.compare_chararrays", "numpy.core.defchararray._binary_op_dispatcher"], "future.backports.datetime": ["future.backports.datetime._days_before_year", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.timezone", "future.backports.datetime._days_in_month", "future.backports.datetime._ord2ymd", "future.backports.datetime._wrap_strftime", "future.backports.datetime._build_struct_time", "future.backports.datetime._check_date_fields", "future.backports.datetime._check_time_fields", "future.backports.datetime._check_tzinfo_arg", "future.backports.datetime._call_tzinfo_method", "future.backports.datetime._check_tzname", "future.backports.datetime._check_utc_offset", "future.backports.datetime._is_leap", "future.backports.datetime._days_before_month", "future.backports.datetime._ymd2ord", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime", "future.backports.datetime._format_time", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date._cmp", "future.backports.datetime.time._cmp", "future.backports.datetime.datetime._cmp", "future.backports.datetime._cmp", "future.backports.datetime.datetime", "math", "future.backports.datetime.timedelta", "future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime._cmperror", "future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime._isoweek1monday", "time"], "numpy.absolute": ["numpy.ma.core.absolute", "numpy.core.umath.absolute"], "numpy.array_api._array_object.Array.__ifloordiv__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "numpy.array_api.__init__.tan": ["numpy.ma.core.tan", "numpy.core.umath.tan", "numpy.array_api.__init__.tan", "numpy.array_api._elementwise_functions.tan"], "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.core.records._deprecate_shape_0_as_None": ["warnings", "warnings.warn"], "transformers.data.processors.glue.QqpProcessor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "numpy.linalg.linalg._is_empty_2d": ["numpy.core.product"], "numpy.array_api._array_object.Array.__isub__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "numpy.f2py.symbolic.as_array": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op"], "numpy.core.getlimits.iinfo": ["numpy.core.overrides.set_module"], "numpy.swapaxes": ["numpy.ma.core.swapaxes", "numpy.core.fromnumeric.swapaxes"], "torch.matmul": ["torch.__init__.matmul", "numpy.core.numeric.matmul", "numpy.core.multiarray.matmul", "numpy.array_api.linalg.matmul", "numpy.array_api.__init__.matmul"], "torch.jit.__init__.TracedModule": ["torch.jit.__init__.ScriptModule"], "numpy.linalg.linalg._assert_stacked_square": ["numpy.linalg.linalg.LinAlgError"], "numpy.core.arrayprint._get_legacy_print_mode": [], "google.protobuf.message.Message": [], "transformers.file_utils.ModelOutput.__setattr__": ["collections.OrderedDict"], "numpy.lib.function_base._calculate_shapes": [], "transformers.data.processors.utils.InputFeatures.to_json_string": ["dataclasses.dataclass", "typing.List", "typing.Optional", "transformers.data.processors.utils.DataProcessor.get_labels", "typing.Union", "transformers.data.processors.utils.InputExample.to_json_string", "transformers.data.processors.utils.InputFeatures.to_json_string", "json", "dataclasses", "json.dumps", "dataclasses.asdict"], "numpy.array_api.__init__.eye": ["numpy.lib.twodim_base.eye", "numpy.array_api.__init__.eye", "numpy.array_api._creation_functions.eye"], "numpy.linalg._umath_linalg.eigvals": [], "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "numpy.std": ["numpy.ma.core.std", "numpy.core.fromnumeric.std", "numpy.array_api.__init__.std"], "past.builtins.__init__.basestring": ["numpy.compat.py3k.basestring", "past.builtins.__init__.basestring", "past.types.basestring.basestring", "past.types.__init__.basestring", "past.types.basestring", "__builtin__.basestring"], "weakref.WeakKeyDictionary": [], "numpy.ma.core.arccosh": ["numpy.ma.core.arccosh", "numpy.core.umath.arccosh"], "numpy.product": ["tqdm.contrib.itertools.product", "numpy.ma.core.product", "numpy.core.fromnumeric.product"], "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize": ["google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.array_api.__init__.bitwise_xor": ["numpy.ma.core.bitwise_xor", "numpy.core.umath.bitwise_xor", "numpy.array_api.__init__.bitwise_xor", "numpy.array_api._elementwise_functions.bitwise_xor"], "numpy.ma.core.take": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.ma.core._data", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.getmask", "numpy", "numpy.ma.core.MaskedArray", "numpy.take"], "numpy.uint8": ["numpy.array_api.__init__.uint8"], "numpy.core.numeric._zeros_like_dispatcher": [], "numpy.core.defchararray.chararray.split": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.rsplit", "numpy.core.defchararray.chararray.split", "numpy.core.defchararray.chararray.splitlines", "numpy.core.defchararray.split", "numpy.core.numeric.ndarray.argsort"], "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "numpy.ma.core.diagonal": ["numpy.ma.core.diagonal", "numpy.core.fromnumeric.diagonal", "numpy.array_api.linalg.diagonal"], "numpy.f2py.symbolic.Expr.__pow__": ["numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.as_apply", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.ArithOp", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.normalize"], "numpy.f2py.symbolic.Expr.polynomial_atoms.visit": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.ArithOp"], "future.backports.xmlrpc.client.DateTime.__eq__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.ExpatParser.close", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.close", "future.backports.xmlrpc.client.Unmarshaller.start", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.GzipDecodedResponse.close", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.close", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.ServerProxy.__close", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.DateTime.decode", "future.backports.xmlrpc.client.DateTime.encode", "future.backports.xmlrpc.client.Binary.decode", "future.backports.xmlrpc.client.Binary.encode", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection"], "torch.utils.data._utils.signal_handling": [], "numpy.lib._iotools._is_string_like": [], "numpy.ma.core.not_equal": ["numpy.ma.core.not_equal", "numpy.core.defchararray.not_equal", "numpy.core.umath.not_equal", "numpy.array_api.__init__.not_equal"], "transformers.data.processors.glue.StsbProcessor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise": [], "transformers.data.processors.glue.Sst2Processor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "numpy.core.defchararray.chararray.join": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.join", "numpy.core.defchararray.join", "numpy.core.numeric.ndarray.argsort"], "numpy.array_api.__init__.less": ["numpy.ma.core.less", "numpy.core.defchararray.less", "numpy.core.umath.less", "numpy.array_api.__init__.less", "numpy.array_api._elementwise_functions.less"], "numpy.lib.stride_tricks._broadcast_to": ["numpy", "numpy.lib.stride_tricks.DummyArray.__init__", "numpy.lib.stride_tricks._maybe_view_as_subclass", "numpy.iterable", "numpy.array", "numpy.nditer"], "packaging.version.Version.is_devrelease": ["packaging.version._BaseVersion", "packaging.version.Version.__repr__", "packaging.version.Version.release", "packaging.version.Version.pre", "packaging.version.Version.is_prerelease", "packaging.version.Version.is_postrelease", "packaging.version.Version.is_devrelease", "re", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "torch._VF.unique_dim": [], "past.builtins.str": ["future.builtins.__init__.str", "past.builtins.__init__.str", "past.types.oldstr", "__builtin__.str"], "numpy.nonzero": ["numpy.ma.core.nonzero", "numpy.core.fromnumeric.nonzero", "numpy.array_api.__init__.nonzero"], "numpy.linalg": ["numpy._pytesttester.PytestTester", "numpy.linalg.linalg", "numpy.linalg.linalg.__all__"], "transformers.data.processors.utils.InputExample.to_json_string": ["dataclasses.dataclass", "transformers.data.processors.utils.InputExample.to_json_string", "transformers.data.processors.utils.InputFeatures.to_json_string", "typing.Optional", "transformers.data.processors.utils.DataProcessor.get_labels", "json", "dataclasses", "json.dumps", "dataclasses.asdict"], "numpy.linalg.linalg._raise_linalgerror_singular": ["numpy.linalg.linalg.LinAlgError"], "transformers.data.processors.glue.MnliProcessor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "numpy.f2py.symbolic._get_parenthesis_kind": ["numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore"], "numpy.lib.npyio.NpzFile.__enter__": ["collections.abc.Mapping"], "numpy.core.defchararray.chararray.title": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.istitle", "numpy.core.defchararray.chararray.title", "numpy.core.defchararray.title", "numpy.core.numeric.ndarray.argsort"], "numpy.character": [], "torch.jit.__init__.RecursiveScriptModule.extra_repr": ["torch.jit.__init__.ScriptModule"], "numpy.lib.polynomial._polyint_dispatcher": ["numpy.lib.polynomial.poly1d.__repr__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__pow__"], "torch.jit._builtins._register_builtin": ["torch.jit._builtins._get_builtin_table"], "numpy.ma.core.bitwise_xor": ["numpy.ma.core.bitwise_xor", "numpy.core.umath.bitwise_xor", "numpy.array_api.__init__.bitwise_xor"], "torch.multiprocessing.get_all_start_methods": [], "transformers.file_utils.add_start_docstrings": ["transformers.file_utils.docstring_decorator", "transformers.file_utils.add_start_docstrings.docstring_decorator", "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator", "transformers.file_utils.add_end_docstrings.docstring_decorator", "transformers.file_utils.add_code_sample_docstrings.docstring_decorator", "transformers.file_utils.replace_return_docstrings.docstring_decorator"], "_sentencepiece.SentencePieceProcessor__CalculateEntropy": [], "tqdm.contrib.telegram.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "numpy.arctanh": ["numpy.lib.scimath.arctanh", "numpy.ma.core.arctanh", "numpy.core.umath.arctanh"], "numpy.compat._inspect.getargspec": ["numpy.compat._inspect.ismethod", "numpy.compat._inspect.isfunction", "numpy.compat._inspect.getargs"], "numpy.equal": ["numpy.ma.core.equal", "numpy.core.defchararray.equal", "numpy.core.umath.equal", "numpy.array_api.__init__.equal"], "zipfile.is_zipfile": [], "numpy.ma.core.fmask": ["numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled"], "torch.jit.__init__.OrderedDictWrapper.__contains__": ["torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique"], "numpy.ma.core.greater": ["numpy.ma.core.greater", "numpy.core.defchararray.greater", "numpy.core.umath.greater", "numpy.array_api.__init__.greater"], "torch.serialization._opener": [], "packaging.specifiers.SpecifierSet": ["packaging.specifiers.BaseSpecifier"], "numpy.compat.os_PathLike": ["numpy.compat.py3k.os_PathLike"], "numpy.lib.function_base.add_docstring": ["numpy.lib.function_base.add_docstring", "numpy.core.multiarray.add_docstring"], "future.utils.surrogateescape.u": ["future.utils", "future.utils.PY3"], "numpy.ma.extras.dot": ["numpy.ma.extras.dot", "numpy.core.numeric.dot", "numpy.core.multiarray.dot", "numpy.ma.core.dot"], "future.backports.xmlrpc.client.Binary.__ne__": ["future.backports.xmlrpc.client.Binary"], "numpy.f2py.symbolic.Expr.symbols.visit": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit", "numpy.f2py.symbolic.Op"], "numpy.core.numeric.AxisError": ["numpy.core.numeric.AxisError", "numpy.core._exceptions.AxisError"], "errno.EPIPE": [], "numpy.core.numerictypes.flexible": [], "google.protobuf.internal.encoder.PackedFieldSize": [], "numpy.lib.histograms._ptp": ["numpy.lib.histograms._unsigned_subtract"], "torch.utils": [], "numpy.core.fromnumeric.reshape": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._reshape_dispatcher"], "future.backports.email._header_value_parser.Phrase": ["future.backports.email._header_value_parser.TokenList"], "sentencepiece._sentencepiece.SentencePieceProcessor__NBestEncodeAsIds": [], "urllib3.response.HTTPResponse.geturl": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse._init_length", "urllib3.response.HTTPResponse.fileno", "urllib3.response.HTTPResponse._update_chunk_length", "io.IOBase", "zlib.error", "brotli.error"], "future.backports.xmlrpc.client.ResponseError": ["future.backports.xmlrpc.client.Error"], "codecs.register_error": [], "numpy.lib.shape_base.array_split": ["numpy.core.numeric", "numpy.lib.shape_base._array_split_dispatcher", "numpy.core.numeric.array", "numpy.core.numeric.intp", "numpy.core.numeric.swapaxes"], "tarfile.open": [], "numpy.array_api._array_object.Array.to_device": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.array_api._typing.Device", "numpy.array_api._array_object.Array.__dlpack_device__", "numpy.array_api._array_object.Array.to_device", "numpy.array_api._array_object.Array.device", "numpy.array_api._array_object.device", "numpy.ndarray"], "torch.cuda.get_device_properties": ["torch.cuda._lazy_init", "torch.cuda.device", "torch.cuda._utils._get_device_index", "torch.cuda.device_count"], "torch._six.string_classes": [], "numpy.not_equal": ["numpy.ma.core.not_equal", "numpy.core.defchararray.not_equal", "numpy.core.umath.not_equal", "numpy.array_api.__init__.not_equal"], "future.backports.email._parseaddr.AddressList.__init__": ["future.backports.email._parseaddr.AddrlistClass"], "numpy.typecodes": ["numpy.core.numerictypes.typecodes"], "numpy.core.empty": ["numpy.ma.core.empty", "numpy.core.numeric.empty", "numpy.core.multiarray.empty", "numpy.array_api.__init__.empty"], "numpy.less_equal": ["numpy.ma.core.less_equal", "numpy.core.defchararray.less_equal", "numpy.core.umath.less_equal", "numpy.array_api.__init__.less_equal"], "torch._VF.unique_consecutive": ["torch.functional.unique_consecutive"], "numpy.f2py.symbolic.Expr.__le__": [], "urllib3.response.MultiDecoder.decompress": ["urllib3.response.DeflateDecoder.decompress", "urllib3.response.GzipDecoder.decompress", "urllib3.response.MultiDecoder.decompress", "urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.drain_conn", "urllib3.response.HTTPResponse.data", "urllib3.response.HTTPResponse.isclosed", "urllib3.response.HTTPResponse._init_decoder", "urllib3.response.HTTPResponse._decode", "urllib3.response.HTTPResponse._flush_decoder", "urllib3.response.HTTPResponse.read", "urllib3.response.HTTPResponse.getheaders", "urllib3.response.HTTPResponse.getheader", "urllib3.response.HTTPResponse.closed", "urllib3.response.HTTPResponse.readable", "urllib3.response.HTTPResponse.readinto", "urllib3.response.HTTPResponse.supports_chunked_reads", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.HTTPResponse._handle_chunk", "urllib3.response.HTTPResponse.read_chunked", "urllib3.response.data"], "numpy.f2py.symbolic.process.restore": ["numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic.replace_parenthesis", "numpy.f2py.symbolic._FromStringWorker.process.restore", "numpy.f2py.symbolic.process.restore", "numpy.f2py.symbolic.as_complex", "numpy.f2py.symbolic.Expr.__mul__", "numpy.f2py.symbolic.Expr.__getitem__", "re", "numpy.f2py.symbolic.as_ternary", "numpy.f2py.symbolic.Language", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.RelOp", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic._Pair", "numpy.f2py.symbolic.Expr.__init__", "numpy.f2py.symbolic.Expr.__eq__", "numpy.f2py.symbolic.Expr.__lt__", "numpy.f2py.symbolic.Expr.__le__", "numpy.f2py.symbolic.Expr.__gt__", "numpy.f2py.symbolic.Expr.__ge__", "numpy.f2py.symbolic.Expr.__neg__", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__pow__", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic._Pair.__init__", "numpy.f2py.symbolic._FromStringWorker.__init__", "numpy.f2py.symbolic.as_integer", "numpy.f2py.symbolic.as_real", "numpy.f2py.symbolic.as_string", "numpy.f2py.symbolic._get_parenthesis_kind", "numpy.f2py.symbolic.as_array", "numpy.f2py.symbolic.as_apply", "numpy.f2py.symbolic.as_symbol", "numpy.f2py.symbolic.ewarn", "numpy.f2py.symbolic.unreplace_parenthesis", "re.match", "re.I", "re.split"], "torch.jit.__init__.CompilationUnit.__init__": [], "numpy.array_api.__init__.floor": ["numpy.ma.core.floor", "numpy.core.umath.floor", "numpy.array_api.__init__.floor", "numpy.array_api._elementwise_functions.floor"], "torch.serialization._legacy_save.persistent_id": ["sys", "StringIO", "torch.serialization.persistent_id", "torch.serialization._legacy_save.persistent_id", "torch.serialization._save.persistent_id", "torch.serialization._should_read_directly", "torch.nn", "torch.serialization._opener.__init__", "torch.serialization._opener.__enter__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__init__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._open_zipfile_writer_file.__init__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__init__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "torch._utils_internal.get_source_lines_and_file", "torch", "torch.serialization.normalize_storage_type", "torch.serialization.location_tag", "warnings", "torch.is_storage", "StringIO.StringIO", "sys.version_info", "sys.byteorder", "warnings.warn", "torch.nn.Module"], "numpy.array_api._array_object.Array.__imul__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "numpy.core.arrayprint.dtype_short_repr": ["numpy", "numpy.core.numerictypes.flexible", "numpy.dtype"], "numpy.array_api.__init__.tanh": ["numpy.ma.core.tanh", "numpy.core.umath.tanh", "numpy.array_api.__init__.tanh", "numpy.array_api._elementwise_functions.tanh"], "numpy.f2py.symbolic.as_symbol": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op"], "__builtin__.range": [], "inspect.cleandoc": [], "urllib3.response.HTTPResponse._flush_decoder": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "numpy.core.numeric.power": ["numpy.lib.scimath.power", "numpy.random.__init__.power", "numpy.ma.core.power", "numpy.core.umath.power"], "future.backports.xmlrpc.client.ServerProxy.__getattr__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.__str__", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.__repr__", "future.backports.xmlrpc.client._Method", "future.backports.xmlrpc.client.Unmarshaller.getmethodname"], "torch.utils.data._utils.python_exit_status": [], "numpy.lib.function_base.iterable": ["numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.core.overrides.set_module"], "torch.serialization._legacy_load.legacy_load": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization._get_restore_location", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization.legacy_load", "torch.serialization._legacy_load.legacy_load", "tarfile", "torch.serialization._is_zipfile", "sys", "torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "contextlib.closing", "torch.serialization.mkdtemp", "torch.serialization._opener.__init__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__init__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._open_zipfile_writer_file.__init__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__init__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "torch.serialization._opener.__enter__", "torch.serialization.storage_to_tensor_type", "struct", "os", "struct.unpack", "sys.version_info", "tarfile.TarError", "tarfile.open", "tarfile.PAX_FORMAT", "os.path"], "google.protobuf.internal.decoder._FloatDecoder.InnerDecode": ["struct", "google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.decoder.InnerDecode", "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode", "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode", "google.protobuf.internal.decoder._FloatDecoder.InnerDecode", "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode", "google.protobuf.internal.wire_format", "math", "math.inf", "math.nan", "struct.unpack", "google.protobuf.internal.wire_format.WIRETYPE_FIXED32"], "numpy.core.defchararray.chararray.__add__": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.add", "numpy.core.numeric.ndarray.argsort"], "numpy.bitwise_and": ["numpy.ma.core.bitwise_and", "numpy.core.umath.bitwise_and", "numpy.array_api.__init__.bitwise_and"], "future.backports.xmlrpc.client.DateTime.__ge__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.ExpatParser.close", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.close", "future.backports.xmlrpc.client.Unmarshaller.start", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.GzipDecodedResponse.close", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.close", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.ServerProxy.__close", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.DateTime.decode", "future.backports.xmlrpc.client.DateTime.encode", "future.backports.xmlrpc.client.Binary.decode", "future.backports.xmlrpc.client.Binary.encode", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection"], "numpy.lib.scimath.arccos": ["numpy.lib.scimath._fix_real_abs_gt_1", "numpy.core.numeric", "numpy.core.overrides.array_function_dispatch", "numpy.lib.scimath._unary_dispatcher", "numpy.core.numeric.arccos"], "torch.jit.__init__.ScriptModule.__init__": ["torch._six.with_metaclass", "torch.jit.__init__.ScriptMeta", "torch.nn.Module", "torch.jit.__init__.ONNXTracedModule.forward", "torch.jit.__init__.TracedModule.forward", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.forward", "torch.jit.__init__._CachedForward", "torch.jit.__init__.ScriptModule"], "numpy.ma.extras._fromnxfunction.__init__": [], "transformers.data.processors.squad._improve_answer_span": [], "torch.from_numpy": [], "transformers.data.processors.glue.label_from_example": ["transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MrpcProcessor.get_train_examples", "transformers.data.processors.glue.MrpcProcessor.get_dev_examples", "transformers.data.processors.glue.MrpcProcessor.get_test_examples", "transformers.data.processors.glue.MrpcProcessor._create_examples", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_train_examples", "transformers.data.processors.glue.MnliProcessor.get_dev_examples", "transformers.data.processors.glue.MnliProcessor.get_test_examples", "transformers.data.processors.glue.MnliProcessor._create_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples", "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_train_examples", "transformers.data.processors.glue.ColaProcessor.get_dev_examples", "transformers.data.processors.glue.ColaProcessor.get_test_examples", "transformers.data.processors.glue.ColaProcessor._create_examples", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_train_examples", "transformers.data.processors.glue.Sst2Processor.get_dev_examples", "transformers.data.processors.glue.Sst2Processor.get_test_examples", "transformers.data.processors.glue.Sst2Processor._create_examples", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_train_examples", "transformers.data.processors.glue.StsbProcessor.get_dev_examples", "transformers.data.processors.glue.StsbProcessor.get_test_examples", "transformers.data.processors.glue.StsbProcessor._create_examples", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_train_examples", "transformers.data.processors.glue.QqpProcessor.get_dev_examples", "transformers.data.processors.glue.QqpProcessor.get_test_examples", "transformers.data.processors.glue.QqpProcessor._create_examples", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_train_examples", "transformers.data.processors.glue.QnliProcessor.get_dev_examples", "transformers.data.processors.glue.QnliProcessor.get_test_examples", "transformers.data.processors.glue.QnliProcessor._create_examples", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_train_examples", "transformers.data.processors.glue.RteProcessor.get_dev_examples", "transformers.data.processors.glue.RteProcessor.get_test_examples", "transformers.data.processors.glue.RteProcessor._create_examples", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_train_examples", "transformers.data.processors.glue.WnliProcessor.get_dev_examples", "transformers.data.processors.glue.WnliProcessor.get_test_examples", "transformers.data.processors.glue.WnliProcessor._create_examples", "typing.Union"], "torch._unique2": [], "google.protobuf.internal.decoder._RaiseInvalidWireType": [], "future.backports.email._parseaddr.AddrlistClass.getaddress": ["future.backports.email._parseaddr.AddressList.__len__", "future.backports.email._parseaddr.AddrlistClass.getaddrspec", "future.backports.email._parseaddr.AddrlistClass.getrouteaddr"], "numpy.array_api._array_object.Array.__itruediv__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "numpy.random.__init__.randn": ["torch.__init__.randn", "numpy.matlib.randn", "numpy.random.__init__.randn"], "future.backports.email._header_value_parser.get_address": ["future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.Address", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_group", "future.backports.email.errors", "future.backports.email._header_value_parser.get_mailbox", "future.backports.email.errors.HeaderParseError"], "typing.SupportsIndex": [], "tqdm.utils.DisableOnWriteError.disable_on_exception.inner": ["tqdm.utils.ObjectWrapper", "weakref.proxy", "tqdm.utils.DisableOnWriteError.disable_on_exception.inner", "tqdm.utils.DisableOnWriteError.inner", "tqdm.utils._environ_cols_wrapper.inner", "tqdm.utils.disable_on_exception.inner", "tqdm.utils.Comparable.__le__", "tqdm.utils.Comparable.__eq__", "tqdm.utils.Comparable.__ne__", "tqdm.utils.Comparable.__ge__", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.__setattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr", "tqdm.utils.ObjectWrapper.wrapper_setattr", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.SimpleTextIOWrapper.__eq__", "tqdm.utils.DisableOnWriteError.disable_on_exception", "tqdm.utils.DisableOnWriteError.__eq__", "tqdm.utils.CallbackIOWrapper.write", "tqdm.utils.CallbackIOWrapper.read"], "numpy.lib._iotools.NameValidator": [], "numpy.lib.npyio.genfromtxt.encode_unicode_cols": ["numpy.lib._iotools.NameValidator", "numpy.lib.npyio._ensure_ndmin_ndarray_check_param", "numpy.compat.os_PathLike", "numpy.compat.os_fspath", "contextlib", "numpy", "numpy.lib.npyio.NpzFile.__iter__", "numpy.lib.npyio.BagObj.__getattribute__", "numpy.lib.npyio.NpzFile.__enter__", "numpy.lib.npyio.NpzFile.__exit__", "numpy.lib.npyio.NpzFile.close", "numpy.lib.npyio.NpzFile.__del__", "numpy.lib.npyio.NpzFile.__len__", "numpy.lib.npyio.NpzFile.__getitem__", "numpy.lib.npyio.WriteWrap.close", "numpy.lib.npyio.WriteWrap.write", "numpy.lib.npyio.WriteWrap.write_bytes", "numpy.lib.npyio.WriteWrap.write_normal", "numpy.lib.npyio.WriteWrap.first_write", "numpy.lib._iotools.LineSplitter", "numpy.lib.npyio.BagObj.__init__", "numpy.lib.npyio.BagObj.__dir__", "numpy.lib.npyio.NpzFile.__init__", "numpy.lib.npyio.WriteWrap.__init__", "numpy.lib._iotools._is_string_like", "numpy.lib._iotools.easy_dtype", "numpy.lib._iotools.flatten_dtype", "numpy.compat.asbytes", "numpy.lib._iotools._decode_line", "numpy.lib._iotools.StringConverter", "itertools", "warnings", "numpy.lib.npyio.tobytes_first", "numpy.lib.npyio.genfromtxt.tobytes_first", "functools", "numpy.lib._iotools.ConverterLockError", "operator.itemgetter", "numpy.lib._iotools.ConverterError", "numpy.lib._iotools.ConversionWarning", "numpy.lib._iotools.has_nested_fields", "numpy.ma.make_mask_descr", "numpy.lib.npyio.encode_unicode_cols", "numpy.lib.npyio.genfromtxt.encode_unicode_cols", "numpy.ma.MaskedArray", "numpy.lib.npyio._ensure_ndmin_ndarray", "numpy.core.overrides.set_array_function_like_doc", "numpy.core.overrides.set_module", "warnings.warn", "contextlib.closing", "contextlib.nullcontext", "functools.partial", "numpy.lib._iotools.NameValidator.defaultdeletechars", "itertools.chain", "numpy.lib", "numpy.dtype", "numpy.array", "numpy.VisibleDeprecationWarning", "numpy.issubdtype", "numpy.character", "numpy.unicode_", "numpy.bytes_"], "numpy.core.defchararray.chararray.index": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.index", "numpy.core.defchararray.chararray.rindex", "numpy.core.defchararray.index", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.endswith", "numpy.core.numeric.ndarray.argsort"], "torch.serialization._get_restore_location.restore_location": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization.default_restore_location", "torch._six.string_classes", "torch", "torch.device"], "numpy.array_api.__init__.uint64": ["numpy.array_api.__init__.uint64", "numpy.array_api._dtypes.uint64"], "numpy.core.fromnumeric._mean_dispatcher": [], "google.protobuf.internal.decoder._SkipGroup": ["google.protobuf.internal.decoder.ReadTag", "google.protobuf.internal.decoder.SkipField", "google.protobuf.internal.decoder._FieldSkipper.SkipField"], "numpy.core.numerictypes.object_": [], "numpy.array_api._array_object.Array.__ilshift__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "click.types.convert_type": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.Tuple", "click.types.ParamType", "click.types.FuncParamType", "typing.Optional", "typing.Any"], "torch.jit.__init__.RecursiveScriptModule.__contains__": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.OrderedDictWrapper.keys"], "numpy.array_api.__init__.finfo": ["numpy.core.getlimits.finfo", "numpy.array_api.__init__.finfo", "numpy.array_api._data_type_functions.finfo"], "numpy.ma.core.minimum": ["numpy.ma.core.minimum", "numpy.core.umath.minimum"], "numpy.lib.shape_base._expand_dims_dispatcher": [], "numpy.lib.npyio._ensure_ndmin_ndarray_check_param": [], "ctypes.windll": [], "google.protobuf.internal.decoder._SkipFixed64": [], "numpy.ma.core.maximum": ["numpy.ma.core.maximum", "numpy.core.umath.maximum"], "numpy.core.numeric.outer": ["numpy.core.multiarray.asarray", "numpy.core.umath.multiply", "numpy.core.numeric._outer_dispatcher"], "torch.jit.__init__.TracedModule.__setattr__": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.TracedModule"], "torch.cuda._check_driver": ["torch", "torch._C"], "numpy.array_api.linalg.diagonal": ["numpy.array_api._array_object.Array", "numpy", "numpy.array_api._array_object.Array._new", "numpy.diagonal"], "future.backports.xmlrpc.client.Binary.encode": ["future.backports.xmlrpc.client.Unmarshaller.end_base64", "base64", "base64.encodebytes"], "numpy.core.fromnumeric._argmax_dispatcher": ["numpy", "numpy._NoValue"], "torch.jit.__init__._disable_tracing.__exit__": [], "numpy.ma.core.log2": ["numpy.lib.scimath.log2", "numpy.ma.core.log2", "numpy.core.umath.log2", "numpy.array_api.__init__.log2"], "numpy.positive": ["torch.distributions.constraints.positive", "numpy.core.umath.positive", "numpy.array_api.__init__.positive"], "numpy.lib.function_base.vectorize.__call__.func": ["numpy.core.overrides.set_module", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.lib.function_base.vectorize.__init__"], "past.types.__init__.basestring": ["numpy.compat.py3k.basestring", "past.builtins.__init__.basestring", "past.types.basestring.basestring", "past.types.__init__.basestring"], "numpy.core.numeric._moveaxis_dispatcher": [], "tqdm.notebook.TqdmHBox._json_": ["IPython.html.widgets.HBox", "ipywidgets.HBox", "IPython.html.widgets.ContainerWidget", "tqdm.notebook.tqdm_notebook.display", "tqdm.notebook.tqdm_notebook.update", "tqdm.notebook.TqdmHBox._repr_pretty_"], "google.protobuf.internal.decoder.SkipField": [], "numpy.lib.npyio.tobytes_first": ["numpy.lib.npyio.WriteWrap.write_bytes", "numpy.lib.npyio.NpzFile.__exit__"], "future.types.newbytes.newbytes.rstrip": ["future.utils.with_metaclass", "future.types.newbytes.BaseNewBytes", "future.types.newbytes.newbytes", "future.types.no"], "numpy.polynomial._polybase.ABCPolyBase.roots": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase._roots", "numpy.polynomial._polybase.ABCPolyBase._fromroots", "numpy.polynomial._polybase.ABCPolyBase.roots", "numpy.polynomial._polybase.ABCPolyBase.fromroots", "numpy.polynomial._polybase.roots", "numpy.polynomial.polyutils", "numpy.polynomial.polyutils.mapdomain", "abc.ABC", "os.name"], "urllib3.response.HTTPResponse._init_decoder": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response._get_decoder", "urllib3.response.HTTPResponse._init_length", "urllib3.response.HTTPResponse.fileno", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.DeflateDecoder.__getattr__", "urllib3.response.DeflateDecoder.decompress", "urllib3.response.GzipDecoder.__getattr__", "urllib3.response.GzipDecoder.decompress", "urllib3.response.MultiDecoder.decompress", "urllib3.response.HTTPResponse.release_conn", "urllib3.response.HTTPResponse.isclosed", "urllib3.response.HTTPResponse.tell", "urllib3.response.HTTPResponse._init_decoder", "urllib3.response.HTTPResponse._decode", "urllib3.response.HTTPResponse._flush_decoder", "urllib3.response.HTTPResponse._error_catcher", "urllib3.response.HTTPResponse.read", "urllib3.response.HTTPResponse.stream", "urllib3.response.HTTPResponse.getheaders", "urllib3.response.HTTPResponse.getheader", "urllib3.response.HTTPResponse.close", "urllib3.response.HTTPResponse.closed", "urllib3.response.HTTPResponse.readable", "urllib3.response.HTTPResponse.readinto", "urllib3.response.HTTPResponse.supports_chunked_reads", "urllib3.response.HTTPResponse._handle_chunk", "urllib3.response.HTTPResponse.read_chunked", "urllib3.response.HTTPResponse.geturl", "urllib3.response.HTTPResponse.__iter__", "brotli.error", "io.IOBase", "zlib.error"], "numpy.lib.function_base._discret_interpolation_to_boundaries": ["numpy", "numpy.lib.function_base._get_gamma_mask", "numpy.floor", "numpy.intp"], "numpy.core.numerictypes.clongdouble": [], "future.utils.tobytes": [], "future.types.newint.newint": ["future.utils.with_metaclass", "future.types.newint.BaseNewInt"], "sentencepiece._sentencepiece.SentencePieceProcessor__EncodeAsIdsBatch": [], "tqdm.utils.CallbackIOWrapper.__init__.read": ["tqdm.utils.ObjectWrapper", "tqdm.utils.SimpleTextIOWrapper", "tqdm.utils.DisableOnWriteError", "tqdm.utils.CallbackIOWrapper", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr", "functools.wraps", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.CallbackIOWrapper.__init__.write", "tqdm.utils.CallbackIOWrapper.write", "tqdm.utils.__init__.write", "tqdm.utils.CallbackIOWrapper.__init__.read", "tqdm.utils.CallbackIOWrapper.read", "tqdm.utils.__init__.read"], "numpy.lib.arraysetops._unique_dispatcher": [], "numpy.linalg.linalg.svd": ["numpy.linalg.linalg._makearray", "numpy.linalg.linalg.eigh", "numpy.core.sign", "numpy.core.abs", "numpy.linalg.linalg.eigvalsh", "numpy.core.argsort", "numpy", "numpy.core.sort", "numpy.linalg.linalg.transpose", "numpy.linalg.linalg._assert_stacked_2d", "numpy.linalg.linalg._commonType", "numpy.linalg.linalg.get_linalg_error_extobj", "numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence", "numpy.linalg.linalg.isComplexType", "numpy.linalg.linalg._realType", "numpy.linalg._umath_linalg", "numpy.linalg.linalg._svd_dispatcher", "numpy.take_along_axis", "numpy.linalg._umath_linalg.svd_m", "numpy.linalg._umath_linalg.svd_n", "numpy.linalg._umath_linalg.svd_m_f", "numpy.linalg._umath_linalg.svd_n_f", "numpy.linalg._umath_linalg.svd_m_s", "numpy.linalg._umath_linalg.svd_n_s"], "future.backports.email.message.Message.get_all": ["future.backports.email.message.Message.values", "future.backports.email.message.values", "future.backports.email.message.Message.get_filename", "future.backports.email.message.Message.keys", "future.backports.email.message.Message._get_params_preserve"], "torch.jit.__init__.RecursiveScriptModule.__dir__": ["torch.jit.__init__.ScriptModule", "torch._six.get_function_from_type", "torch.jit.__init__.RecursiveScriptModule"], "numpy.array_api._array_object.Array.__floordiv__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "numpy.core.numeric.can_cast": ["numpy.core.numeric.can_cast", "numpy.core.multiarray.can_cast", "numpy.array_api.__init__.can_cast"], "future.types.newdict.newdict": ["future.utils.with_metaclass", "future.types.newdict.BaseNewDict"], "numpy.ma.extras.mr_class.__init__": ["numpy.ma.extras.MAxisConcatenator"], "numpy.core.fromnumeric._argpartition_dispatcher": [], "enum": [], "numpy.any": ["numpy.ma.core.any", "numpy.core.fromnumeric.any", "numpy.array_api.__init__.any"], "torch.utils.data.dataloader._InfiniteConstantSampler": ["torch.utils.data.Sampler"], "torch.utils.data._utils.collate": ["re", "re.compile"], "numpy.sqrt": ["numpy.lib.scimath.sqrt", "numpy.ma.core.sqrt", "numpy.core.umath.sqrt", "numpy.array_api.__init__.sqrt"], "numpy.ma.core.equal": ["numpy.ma.core.equal", "numpy.core.defchararray.equal", "numpy.core.umath.equal", "numpy.array_api.__init__.equal"], "numpy.array_api.__init__.reshape": ["numpy.ma.core.reshape", "numpy.core.fromnumeric.reshape", "numpy.array_api.__init__.reshape", "numpy.array_api._manipulation_functions.reshape"], "click._compat._is_jupyter_kernel_output": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._FixupStream", "click._compat._NonClosingTextIOWrapper", "typing.IO", "typing.Any"], "sentencepiece._sentencepiece.SentencePieceProcessor__CalculateEntropy": [], "errno.ECONNABORTED": [], "numpy.array_api._set_functions.UniqueInverseResult": ["typing.NamedTuple", "numpy.array_api._array_object.Array"], "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "future.backports.xmlrpc.client._datetime": ["future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "time.mktime": [], "future.backports.email._parseaddr.AddrlistClass.getrouteaddr": ["future.backports.email._parseaddr.AddressList.__len__"], "google.protobuf.internal.encoder.SpecificEncoder": ["google.protobuf.internal.encoder.EncodePackedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.BoolEncoder.EncodePackedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodePackedField", "google.protobuf.internal.encoder.TagBytes", "google.protobuf.internal.encoder.EncodeRepeatedField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BoolEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.StringEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.BytesEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.GroupEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.MessageEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeRepeatedField", "google.protobuf.internal.encoder.EncodeField", "google.protobuf.internal.encoder._SimpleEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._ModifiedEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._StructPackEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder._FloatingPointEncoder.SpecificEncoder.EncodeField", "google.protobuf.internal.encoder.BoolEncoder.EncodeField", "google.protobuf.internal.encoder.StringEncoder.EncodeField", "google.protobuf.internal.encoder.BytesEncoder.EncodeField", "google.protobuf.internal.encoder.GroupEncoder.EncodeField", "google.protobuf.internal.encoder.MessageEncoder.EncodeField", "google.protobuf.internal.encoder.MessageSetItemEncoder.EncodeField", "google.protobuf.internal.encoder.MapEncoder.EncodeField", "google.protobuf.internal.encoder.SpecificEncoder.EncodeField", "google.protobuf.internal.wire_format", "struct", "google.protobuf.internal.encoder.EncodeNonFiniteOrRaise", "google.protobuf.internal.encoder._FloatingPointEncoder.EncodeNonFiniteOrRaise", "struct.pack", "google.protobuf.internal.wire_format.WIRETYPE_LENGTH_DELIMITED"], "packaging.specifiers._coerce_version": ["packaging.specifiers.Specifier.version", "packaging.specifiers.version", "packaging.version.Version"], "packaging.version.Version.is_postrelease": ["packaging.version._BaseVersion", "packaging.version.Version.__repr__", "packaging.version.Version.release", "packaging.version.Version.pre", "packaging.version.Version.is_prerelease", "packaging.version.Version.is_postrelease", "packaging.version.Version.is_devrelease", "re", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "numpy.core.numeric.isclose": ["numpy.core.multiarray.asanyarray", "numpy.core.multiarray", "numpy.core.numeric.within_tol", "numpy.core.numeric.isclose.within_tol", "numpy.core.numeric.zeros_like", "numpy.core.numeric.ones_like", "numpy.core.numeric._isclose_dispatcher", "numpy.core.multiarray.result_type"], "numpy.array_api.__init__.full": ["numpy.core.numeric.full", "numpy.array_api.__init__.full", "numpy.array_api._creation_functions.full"], "numpy.core.defchararray._split_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "numpy.polynomial._polybase.ABCPolyBase.cast": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "numpy.polynomial._polybase.ABCPolyBase.domain", "numpy.polynomial._polybase.ABCPolyBase.has_samedomain", "numpy.polynomial._polybase.domain", "numpy.polynomial._polybase.ABCPolyBase.window", "numpy.polynomial._polybase.ABCPolyBase.has_samewindow", "numpy.polynomial._polybase.window", "abc.ABC", "os.name"], "future.backports.email._parseaddr._parsedate_tz": ["future.backports.email._parseaddr.AddrlistClass.__init__", "future.backports.email._parseaddr.AddrlistClass.getaddrlist", "future.backports.email._parseaddr.AddrlistClass.getdomain", "future.backports.email._parseaddr.AddrlistClass.getdelimited", "future.backports.email._parseaddr.AddrlistClass.getdomainliteral", "future.backports.email._parseaddr.AddrlistClass.getphraselist", "future.backports.email._parseaddr.AddressList.__init__", "future.backports.email._parseaddr.AddressList.__iadd__", "future.backports.email._parseaddr.AddressList.__isub__", "future.backports.email._parseaddr.AddressList.__getitem__", "future.backports.email._parseaddr.AddressList.__len__", "future.backports.email._parseaddr.AddrlistClass.getaddress", "future.backports.email._parseaddr.AddrlistClass.getaddrspec", "future.backports.email._parseaddr.AddressList.__sub__", "future.backports.email._parseaddr.AddrlistClass.getrouteaddr", "future.backports.email._parseaddr.AddressList.__add__", "future.backports.email._parseaddr.AddrlistClass.getcomment", "future.builtins.int"], "numpy.core.defchararray.chararray.zfill": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.zfill", "numpy.core.defchararray.zfill", "numpy.core.numeric.ndarray.argsort"], "future.backports.email._parseaddr.AddrlistClass.gotonext": ["future.backports.email._parseaddr.AddressList.__len__"], "numpy.f2py.symbolic._FromStringWorker.__init__": ["numpy.f2py.symbolic.Language"], "torch.jit.RecursiveScriptModule.__setattr__": ["torch.jit.ScriptModule", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule"], "future.backports.email._header_value_parser.get_parameter": ["future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.Parameter", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_attribute", "future.backports.email.errors", "future.backports.email._header_value_parser.get_section", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.get_cfws", "future.backports.email._header_value_parser.get_quoted_string", "future.backports.email._header_value_parser._Folded.__init__", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser._Folded.append_if_fits", "future.backports.email._header_value_parser.TokenList.__init__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.all_defects", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.comments", "future.backports.email._header_value_parser.TokenList.cte_encode", "future.backports.email._header_value_parser.TokenList.pprint", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments", "future.backports.email._header_value_parser.UnstructuredTokenList.cte_encode", "future.backports.email._header_value_parser.Phrase.cte_encode", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.QuotedString.content", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Comment.quote", "future.backports.email._header_value_parser.Comment.content", "future.backports.email._header_value_parser.Comment.comments", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.NameAddr.route", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.route", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.Mailbox.route", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts", "future.backports.email._header_value_parser.Terminal.all_defects", "future.backports.email._header_value_parser.Terminal.cte_encode", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.comments", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.Terminal.__getnewargs__", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.backports.email._header_value_parser.get_attrtext", "future.backports.email._header_value_parser.get_extended_attrtext", "future.backports.email._header_value_parser.get_value", "future.backports.email._header_value_parser.Value", "future.backports.email._header_value_parser.get_fws", "future.backports.email._header_value_parser.get_qcontent", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.HeaderParseError"], "numpy.lib.scimath._power_dispatcher": [], "dataclasses.fields": [], "IPython.html.widgets.HBox": [], "__builtin__.map": [], "ctypes.windll.kernel32": [], "numpy.core.defchararray.chararray.isnumeric": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.isnumeric", "numpy.core.defchararray.isnumeric", "numpy.core.numeric.ndarray.argsort"], "future.backports.email.errors.MissingHeaderBodySeparatorDefect": ["future.backports.email.errors.MessageDefect"], "numpy.ndindex": ["numpy.lib.index_tricks.ndindex"], "numpy.f2py.symbolic.unreplace_parenthesis": ["numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__pow__", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic._get_parenthesis_kind"], "numpy.array_api.__init__.uint16": ["numpy.array_api.__init__.uint16", "numpy.array_api._dtypes.uint16"], "click._compat.auto_wrap_for_ansi": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat.should_strip_ansi", "colorama", "click._compat._safe_write", "click._compat.auto_wrap_for_ansi._safe_write", "typing.TextIO", "typing.Optional", "typing.cast", "colorama.AnsiToWin32"], "numpy.lib.npyio.encode_unicode_cols": ["numpy.lib.npyio.BagObj.__init__", "numpy.lib.npyio.BagObj.__getattribute__", "numpy.lib.npyio.BagObj.__dir__", "numpy.lib.npyio.NpzFile.__init__", "numpy.lib.npyio.NpzFile.__exit__", "numpy.lib.npyio.NpzFile.__iter__", "numpy.lib.npyio.NpzFile.__getitem__", "numpy.lib.npyio.WriteWrap.__init__", "numpy.lib.npyio.WriteWrap.write", "numpy.lib.npyio.WriteWrap.write_bytes", "numpy.lib.npyio.WriteWrap.write_normal", "numpy.lib.npyio.WriteWrap.first_write"], "subprocess.run": [], "numpy.array_api._array_object.Array.__rfloordiv__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "google.protobuf.internal.decoder.DecodeVarint": [], "transformers.file_utils.wrapper": ["transformers.file_utils.is_torch_available", "functools.wraps", "transformers.file_utils.is_tf_available"], "numpy.lib.npyio.NpzFile": ["collections.abc.Mapping"], "transformers.modeling_auto.AutoModelWithLMHead.from_config": ["warnings", "transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings", "warnings.warn"], "numpy.lib.histograms.jhat": ["numpy", "numpy.histogram"], "future.backports.http.cookies._getdate": ["time.time", "future.backports.http.cookies.Morsel.isReservedKey", "time.gmtime"], "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__": ["future.backports.email._header_value_parser.WhiteSpaceTerminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "numpy.iinfo": ["numpy.core.getlimits.iinfo", "numpy.array_api.__init__.iinfo"], "numpy.remainder": ["numpy.ma.core.remainder", "numpy.core.umath.remainder", "numpy.array_api.__init__.remainder"], "click._compat._FixupStream": [], "numpy.core.fromnumeric._shape_dispatcher": [], "numpy.ma.core.logical_xor": ["numpy.ma.core.logical_xor", "numpy.core.umath.logical_xor", "numpy.array_api.__init__.logical_xor"], "numpy.core.arrayprint._array2string": ["numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.numeric.asarray", "numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.__call__", "numpy.core.arrayprint._leading_trailing", "numpy.core.arrayprint._get_format_function", "numpy.core.arrayprint._formatArray", "numpy.core.arrayprint._recursive_guard"], "tqdm.utils.__init__.read": ["tqdm.utils.SimpleTextIOWrapper", "tqdm.utils.DisableOnWriteError", "tqdm.utils.CallbackIOWrapper", "tqdm.utils.ObjectWrapper.__getattr__", "tqdm.utils.ObjectWrapper.wrapper_getattr", "functools.wraps", "tqdm.utils.SimpleTextIOWrapper.write", "tqdm.utils.CallbackIOWrapper.__init__.write", "tqdm.utils.CallbackIOWrapper.write", "tqdm.utils.__init__.write", "tqdm.utils.CallbackIOWrapper.__init__.read", "tqdm.utils.CallbackIOWrapper.read", "tqdm.utils.__init__.read"], "numpy._typing._dtype_like.DTypeLike": ["numpy.typing.__init__.DTypeLike"], "future.backports.email._parseaddr.AddrlistClass.getdomain": ["future.backports.email._parseaddr.AddressList.__len__"], "numpy.recarray.__new__": [], "numpy.array_api._array_object.Array.__invert__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "numpy.array_api._dtypes._integer_or_boolean_dtypes", "numpy.ndarray"], "typing.Set": [], "transformers.file_utils.tf_required.wrapper": ["transformers.file_utils.wrapper", "transformers.file_utils.torch_only_method.wrapper", "transformers.file_utils.torch_required.wrapper", "transformers.file_utils.tf_required.wrapper", "transformers.file_utils.is_tf_available", "functools.wraps"], "numpy.lib.npyio.BagObj.__getattribute__": [], "_sentencepiece.SentencePieceProcessor__NBestEncodeAsImmutableProto": [], "numpy.ma.core.choose.nmask": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core.nmask", "numpy.ma.core.choose.nmask", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.fmask", "numpy.ma.core.choose.fmask", "numpy", "numpy.ma.core.make_mask", "numpy.ma.core.mask_or", "numpy.ma.core.getmask", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.choose"], "urllib3.packages.six.metaclass": [], "torch.jit._parse_env": ["torch.jit.OrderedDictWrapper.values", "torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "os", "os.environ"], "numpy.lib.shape_base.take_along_axis": ["numpy.core.multiarray.normalize_axis_index", "numpy.lib.shape_base._make_along_axis_idx", "numpy.lib.shape_base._take_along_axis_dispatcher"], "numpy.logaddexp": ["numpy.core.umath.logaddexp", "numpy.array_api.__init__.logaddexp"], "numpy.lib.scimath.arcsin": ["numpy.lib.scimath._fix_real_abs_gt_1", "numpy.core.numeric", "numpy.core.overrides.array_function_dispatch", "numpy.lib.scimath._unary_dispatcher", "numpy.core.numeric.arcsin"], "numpy.core.defchararray.chararray.swapcase": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.swapcase", "numpy.core.numeric.ndarray.argsort"], "numpy.core._ufunc_config.seterr": ["numpy.core.umath", "numpy.core._ufunc_config.geterr", "numpy.core.umath.SHIFT_INVALID", "numpy.core.umath.SHIFT_UNDERFLOW", "numpy.core.umath.SHIFT_DIVIDEBYZERO", "numpy.core.umath.SHIFT_OVERFLOW", "numpy.core.overrides.set_module", "numpy.core.umath.geterrobj", "numpy.core.umath.seterrobj"], "fcntl.ioctl": [], "colorama": [], "transformers.data.processors.glue.MrpcProcessor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "future.backports.email._header_value_parser.TokenList.__str__": ["future.builtins.list", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "numpy.from_dlpack": ["numpy.core.numeric.from_dlpack", "numpy.core.multiarray.from_dlpack", "numpy.array_api.__init__.from_dlpack"], "transformers.modeling_auto.AutoModelForMaskedLM.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "future.types.newbytes.newbytes.strip": ["future.utils.with_metaclass", "future.types.newbytes.BaseNewBytes", "future.types.newbytes.newbytes", "future.types.no"], "torch.jit.RecursiveScriptModule": ["torch.jit.ScriptModule"], "numpy.f2py.symbolic.normalize": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.__init__", "numpy.f2py.symbolic.Expr.__lt__", "numpy.f2py.symbolic.Expr.__gt__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.__init__", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.__init__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic._pairs_add", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__eq__", "numpy.f2py.symbolic.Expr.__le__", "numpy.f2py.symbolic.Expr.__ge__", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__neg__", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic.as_term_coeff", "numpy.f2py.symbolic.as_apply", "numpy.f2py.symbolic.ArithOp", "math.gcd", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.as_factors", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.as_string"], "sentencepiece._sentencepiece.SentencePieceProcessor__CalculateEntropyBatch": [], "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config": ["transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "torch.serialization._get_restore_location": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization.default_restore_location", "torch._six.string_classes", "torch", "torch.device"], "google.protobuf.internal._api_implementation.api_version": [], "_sentencepiece.SentencePieceProcessor_IsUnused": [], "future.backports.email.generator.BytesGenerator": ["future.backports.email.generator.Generator", "future.backports.email.generator.Generator._handle_text", "future.backports.email.generator.BytesGenerator._handle_text", "future.backports.email.generator._handle_text"], "transformers.file_utils.is_remote_url": ["urllib.parse.urlparse"], "numpy.core.umath.UFUNC_BUFSIZE_DEFAULT": ["numpy.core.umath.UFUNC_BUFSIZE_DEFAULT"], "numpy.core.umath.isnan": ["numpy.core.umath.isnan", "numpy.array_api.__init__.isnan"], "torch._namedtensor_internals.check_serializing_named_tensor": [], "numpy.core.fromnumeric.round_": ["numpy.core.fromnumeric.around", "numpy.core.fromnumeric._around_dispatcher"], "numpy.core.divide": ["numpy.ma.core.divide", "numpy.core.umath.divide", "numpy.array_api.__init__.divide"], "numpy.f2py.symbolic.Expr.__gt__": [], "future.backports.urllib.parse.SplitResultBytes": ["future.backports.urllib.parse._NetlocResultMixinBytes"], "numpy.ma.core.cos": ["numpy.ma.core.cos", "numpy.core.umath.cos", "numpy.array_api.__init__.cos"], "numpy.linalg.linalg.get_linalg_error_extobj": [], "numpy.transpose": ["numpy.ma.core.transpose", "numpy.core.fromnumeric.transpose"], "numpy.array_api._array_object.Array.__rtruediv__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__float__", "numpy.ndarray"], "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config": ["warnings", "transformers.modeling_tf_auto.TFAutoModel.from_config", "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config", "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config", "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config", "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config", "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config", "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings", "warnings.warn"], "transformers.data.processors.glue.ColaProcessor.get_labels": ["transformers.data.processors.utils.DataProcessor"], "google.protobuf.internal.encoder._VarintBytes": [], "numpy.f2py.auxfuncs.isstring": ["numpy.f2py.auxfuncs.isstring_or_stringarray", "numpy.f2py.auxfuncs.isarray"], "numpy.lib.format.open_memmap": ["numpy.compat.py3k._isfileobj", "numpy.lib.format._check_version", "numpy", "numpy.lib.format._write_array_header", "numpy.lib.format.read_magic", "numpy.lib.format._read_array_header", "numpy.lib.format.dtype_to_descr", "numpy.compat.os_fspath", "numpy.dtype", "numpy.memmap"], "future.utils.lrange": [], "queue": [], "torch.multiprocessing._atfork._register.wrapper": ["torch.multiprocessing._atfork._register", "torch.multiprocessing._atfork.wrapper", "torch.multiprocessing._atfork._register.wrapper", "multiprocessing.util", "os", "os.register_at_fork", "multiprocessing.util.register_after_fork"], "numpy.ma.core.arctanh": ["numpy.lib.scimath.arctanh", "numpy.ma.core.arctanh", "numpy.core.umath.arctanh"], "numpy.core.overrides.ARRAY_FUNCTION_ENABLED": [], "calendar": [], "numpy.linalg._umath_linalg": [], "urllib3.response.HTTPResponse.stream": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse.data", "urllib3.response.data", "urllib3.util.response.is_fp_closed", "io.IOBase", "zlib.error", "brotli.error"], "torch.serialization._open_file": ["torch.serialization._opener"], "calendar.timegm": [], "numpy.array_api._array_object.Array.__ior__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.array_api._array_object.Array.__bool__", "numpy.ndarray"], "torch.jit.__init__.RecursiveScriptModule.__setattr__": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule"], "torch._namedtensor_internals.namer_api_name": [], "numpy.lib.function_base._parse_gufunc_signature": ["numpy.lib.function_base.vectorize._vectorize_call_with_signature", "re", "re.sub", "re.match", "re.findall"], "numpy.int": ["future.builtins.__init__.int"], "numpy.core.fromnumeric._choose_dispatcher": [], "numpy.core.numerictypes.floating": [], "numpy.core.array": ["numpy.ma.core.array", "numpy.core.numeric.array", "numpy.core.records.array", "numpy.core.multiarray.array", "numpy.core.defchararray.array"], "numpy.compat.os_fspath": ["numpy.compat.py3k.os_fspath"], "sentencepiece._sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsIds": [], "torch.jit.__init__.RecursiveScriptModule.original_name": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.RecursiveScriptModule._construct"], "numpy.core.defchararray.chararray.isdecimal": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.defchararray.isdecimal", "numpy.core.numeric.ndarray.argsort"], "numpy.lib.function_base.vectorize.__call__": ["numpy.core.overrides.set_module", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.lib.function_base.vectorize.__init__"], "numpy.array_api.__init__.e": ["numpy.core.umath.e", "numpy.array_api.__init__.e", "numpy.array_api._constants.e"], "numpy.array_api._array_object.Array._normalize_two_args": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Tuple", "numpy.ndarray"], "torch.autograd.grad_mode._DecoratorContextManager": [], "urllib3.exceptions.InvalidHeader": ["urllib3.exceptions.HTTPError"], "transformers.file_utils.get_from_cache": ["typing.Union", "typing.Dict", "pathlib.Path", "transformers.file_utils.ModelOutput.__post_init__", "os", "requests", "transformers.file_utils.url_to_filename", "fnmatch", "filelock.FileLock", "contextlib.contextmanager", "transformers.file_utils._resumable_file_manager", "transformers.file_utils.get_from_cache._resumable_file_manager", "functools.partial", "transformers.file_utils.http_get", "transformers.file_utils.ModelOutput.setdefault", "tempfile", "json", "typing.Optional", "tempfile.NamedTemporaryFile", "fnmatch.filter", "json.dump", "requests.head", "requests.exceptions", "os.makedirs", "os.path", "os.listdir", "os.replace", "os.stat"], "numpy.core.umath.e": ["numpy.core.umath.e", "numpy.array_api.__init__.e"], "numpy.lib.arraysetops._unpack_tuple": [], "numpy.core.defchararray.equal": ["numpy.core.numeric.compare_chararrays", "numpy.core.defchararray._binary_op_dispatcher"], "future.backports.email._header_value_parser.get_phrase": ["future.backports.email._header_value_parser.Phrase", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_word", "future.backports.email.errors", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.ObsoleteHeaderDefect"], "numpy.array_api.__init__.bitwise_or": ["numpy.ma.core.bitwise_or", "numpy.core.umath.bitwise_or", "numpy.array_api.__init__.bitwise_or", "numpy.array_api._elementwise_functions.bitwise_or"], "os.replace": [], "numpy.expm1": ["numpy.core.umath.expm1", "numpy.array_api.__init__.expm1"], "torch.jit.OrderedDictWrapper.items": [], "numpy.array_api._data_type_functions.iinfo_object": ["dataclasses.dataclass"], "numpy.lib.function_base.vectorize._vectorize_call": ["numpy.core.overrides.set_module", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.core.numeric.asanyarray", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base.vectorize.__init__"], "torch.serialization._load.persistent_load": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization._get_restore_location", "io", "torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "torch.serialization._maybe_decode_ascii", "torch.serialization.load_tensor", "torch.serialization._load.load_tensor", "io.BytesIO"], "numpy.core.umath.seterrobj": ["numpy.core.umath.seterrobj"], "numpy.f2py.symbolic.polynomial_atoms.visit": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.ArithOp"], "numpy.core.fromnumeric._nonzero_dispatcher": [], "numpy.sin": ["numpy.ma.core.sin", "numpy.core.umath.sin", "numpy.array_api.__init__.sin"], "numpy.full_like": ["numpy.core.numeric.full_like", "numpy.array_api.__init__.full_like"], "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "torch.per_channel_affine": [], "future.backports.email._header_value_parser.Terminal": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "numpy.core.multiarray.normalize_axis_index": ["numpy.core.multiarray.normalize_axis_index"], "numpy.core.multiarray._vec_string": ["numpy.core.multiarray._vec_string", "numpy.core._multiarray_umath._vec_string"], "future.backports.email.utils.encode_rfc2231": ["future.backports.urllib.parse.quote"], "future.backports.email._header_value_parser.DisplayName": ["future.backports.email._header_value_parser.Phrase"], "numpy.lib.npyio.WriteWrap.write_normal": ["numpy.compat.asunicode"], "numpy.ma.extras.mask_rows": ["numpy", "warnings", "numpy.ma.core.mask_rowcols", "numpy.ma.extras._fromnxfunction.__call__", "numpy.ma.extras._fromnxfunction_single.__call__", "numpy.ma.extras._fromnxfunction_seq.__call__", "numpy.ma.extras._fromnxfunction_args.__call__", "numpy.ma.extras._fromnxfunction_allargs.__call__", "numpy.ma.extras.MAxisConcatenator.makemat", "warnings.warn", "numpy._NoValue"], "numpy.linalg.linalg._makearray": ["numpy.core.asarray"], "torch.jit.__init__.ScriptMeta.__init__": ["torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta", "torch.jit.__init__.ScriptMeta.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.__init__.init_then_script"], "torch._namedtensor_internals.update_names_with_mapping": ["torch._namedtensor_internals.build_dim_map", "torch._namedtensor_internals.namer_api_name"], "numpy.core._multiarray_umath.unravel_index": [], "numpy.core.amax": ["numpy.ma.core.amax", "numpy.core.fromnumeric.amax"], "numpy.array_api.linalg.outer": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._numeric_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.outer"], "numpy.unicode_": [], "tarfile": [], "numpy.linalg.linalg._unary_dispatcher": [], "future.backports.email._header_value_parser.ParameterizedHeaderValue.params": ["future.backports.email._header_value_parser.TokenList"], "future.backports.email.message.Message.get_boundary": ["future.backports.email.message.Message.get_boundary", "future.backports.email.message.Message.set_boundary", "future.backports.email.utils", "future.backports.email.utils.collapse_rfc2231_value"], "transformers.modeling_auto.AutoModel.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "future.backports.email._parseaddr.AddrlistClass.getdelimited": ["future.backports.email._parseaddr.AddrlistClass.getquote", "future.backports.email._parseaddr.quote", "future.backports.email._parseaddr.AddressList.__len__"], "future.builtins.__init__.zip": ["future.builtins.iterators.zip", "future.builtins.__init__.zip", "past.builtins.noniterators.zip", "past.builtins.__init__.zip"], "numpy.core.defchararray.chararray.isupper": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.isupper", "numpy.core.defchararray.isupper", "numpy.core.numeric.ndarray.argsort"], "numpy.f2py.auxfuncs.isexternal": [], "numpy.core.shape_base._vhstack_dispatcher": ["numpy.core.shape_base._arrays_for_stack_dispatcher"], "torch.utils.data.RandomSampler": ["torch.utils.data.sampler.RandomSampler"], "past.types.basestring.basestring": ["past.utils.with_metaclass", "past.types.basestring.BaseBaseString"], "past.builtins.__init__.range": ["future.builtins.iterators.range", "future.builtins.__init__.range", "past.builtins.noniterators.range", "past.builtins.__init__.range"], "numpy.percentile": ["numpy.lib.function_base.percentile"], "numpy.array_api.__init__.remainder": ["numpy.ma.core.remainder", "numpy.core.umath.remainder", "numpy.array_api.__init__.remainder", "numpy.array_api._elementwise_functions.remainder"], "numpy.array_api.__init__.bool": ["numpy.array_api.__init__.bool", "numpy.array_api._dtypes.bool"], "numpy.core.arrayprint.FloatingFormat.__call__": ["numpy", "numpy.core.numeric.errstate", "numpy.core.multiarray.dragon4_scientific", "numpy.core.multiarray.dragon4_positional", "numpy.isfinite", "numpy.isnan"], "torch.jit._unwrap_optional": ["torch.jit.TracedModule.extra_repr", "torch.jit._disable_tracing.__exit__", "torch.jit.RecursiveScriptModule.extra_repr"], "torch.jit.RecursiveScriptModule.__getitem__": ["torch.jit.ScriptModule"], "numpy.lib._iotools.ConverterError": [], "numpy.compat.asbytes": ["numpy.compat.py3k.asbytes"], "numpy.core.arrayprint.FloatingFormat.fillFormat": ["numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.umath.isfinite", "numpy.core.umath.absolute", "numpy", "numpy.core.numeric.errstate", "numpy.core.arrayprint.FloatingFormat.__init__", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__init__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__init__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__init__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat.__init__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__init__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__init__", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.__init__", "numpy.core.arrayprint.StructuredVoidFormat.__call__", "numpy.core.multiarray.dragon4_scientific", "numpy.core.multiarray.dragon4_positional", "numpy.core.fromnumeric.any", "numpy.core.umath.isinf", "numpy.max", "numpy.min", "numpy.signbit"], "future.backports.email._header_value_parser.GroupList.mailboxes": ["future.backports.email._header_value_parser.TokenList"], "future.backports.email._header_value_parser.Group.all_mailboxes": ["future.backports.email._header_value_parser.TokenList"], "os.remove": [], "numpy.polynomial._polybase.ABCPolyBase._roots": ["abc", "numpy.polynomial._polybase.ABCPolyBase.__str__", "numpy.polynomial._polybase.ABCPolyBase._generate_string", "numpy.polynomial._polybase.ABCPolyBase._str_term_unicode", "numpy.polynomial._polybase.ABCPolyBase._str_term_ascii", "numpy.polynomial._polybase.ABCPolyBase.__pos__", "os", "os.name", "abc.ABC", "abc.abstractmethod"], "regex.regex._compile": ["locale.getpreferredencoding", "regex.regex.complain_unused_args", "regex.regex._compile.complain_unused_args", "regex.DEFAULT_VERSION", "regex._regex_core", "regex._regex_core._UnscopedFlagSet", "regex._regex_core.Source", "regex._regex_core.Info", "regex._regex_core._parse_pattern", "regex._regex_core._ALL_VERSIONS", "regex._regex_core._ALL_ENCODINGS", "regex._regex_core.Fuzzy", "regex._regex_core._get_required_string", "regex._regex_core._fold_case", "regex._regex_core._check_group_features", "regex._regex_core.OP", "regex._regex_core._flatten_code", "regex._regex_core._FirstSetError", "regex._regex_core._compile_firstset", "regex._regex", "regex._regex_core._shrink_cache", "regex._regex.compile", "regex._regex_core.DEFAULT_VERSION", "regex._regex_core.OP.END", "regex._regex_core.OP.CALL_REF", "regex._regex_core.OP.SUCCESS"], "regex.regex.sub": ["regex.regex._compile"], "numpy.log1p": ["numpy.core.umath.log1p", "numpy.array_api.__init__.log1p"], "torch.distributions.constraints.cat": ["torch.distributions.constraints.cat"], "numpy.core.defchararray.chararray.find": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.find", "numpy.core.defchararray.chararray.rfind", "numpy.core.defchararray.find", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.endswith", "numpy.core.numeric.ndarray.argsort"], "numpy.core.fromnumeric._prod_dispatcher": [], "numpy.array_api._array_object.Array.__dlpack_device__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Tuple", "enum.IntEnum", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict": ["transformers.data.processors.utils.DataProcessor", "transformers.data.processors.utils.InputExample", "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict", "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict", "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict"], "google.protobuf.internal.decoder._SignedVarintDecoder.DecodeVarint": ["google.protobuf.internal.decoder.DecodeVarint", "google.protobuf.internal.decoder._VarintDecoder.DecodeVarint", "google.protobuf.internal.decoder._SignedVarintDecoder.DecodeVarint"], "numpy.lib.npyio.NpzFile.__init__": ["collections.abc.Mapping", "numpy.lib.format", "numpy.lib.npyio.zipfile_factory", "numpy.lib.npyio.NpzFile.__exit__", "numpy.lib.npyio.BagObj", "numpy.lib.format._MAX_HEADER_SIZE"], "errno.ECONNRESET": [], "numpy.f2py.symbolic.contains.visit": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit"], "future.backports.email._header_value_parser.get_cfws": ["future.backports.email._header_value_parser.CFWSList", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_fws", "future.backports.email._header_value_parser.get_comment"], "torch.cuda.DeferredCudaCallError": [], "numpy.lib.npyio.NpzFile.__exit__": ["collections.abc.Mapping"], "numpy.ma.extras._fromnxfunction.__call__": [], "numpy.lib.arraysetops.reshape_uniq": ["numpy", "numpy.moveaxis"], "numpy.ma.core.bitwise_or": ["numpy.ma.core.bitwise_or", "numpy.core.umath.bitwise_or", "numpy.array_api.__init__.bitwise_or"], "numpy.invert": ["numpy.core.umath.invert"], "quopri.decodestring": [], "tqdm.autonotebook.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "numpy.f2py.symbolic.replace_parenthesis": ["numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__init__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic._Pair.__init__", "numpy.f2py.symbolic._FromStringWorker.__init__", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__pow__", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.replace_parenthesis"], "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode": ["google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.decoder.InnerDecode", "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode", "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode", "google.protobuf.internal.decoder._FloatDecoder.InnerDecode", "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode"], "numpy.ma.core.add": ["numpy.ma.core.add", "numpy.core.defchararray.add", "numpy.core.umath.add", "numpy.array_api.__init__.add"], "numpy.less": ["numpy.ma.core.less", "numpy.core.defchararray.less", "numpy.core.umath.less", "numpy.array_api.__init__.less"], "future.backports.email.errors.HeaderDefect": ["future.backports.email.errors.MessageDefect"], "numpy.f2py.symbolic.as_numer_denom": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.as_number", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.__init__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.__init__", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.__init__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic.as_numer_denom", "numpy.f2py.symbolic.Expr.__neg__", "numpy.f2py.symbolic.ArithOp", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__eq__", "numpy.f2py.symbolic.Expr.__le__", "numpy.f2py.symbolic.Expr.__ge__", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.OpError"], "__builtin__.zip": [], "packaging.version.Version.pre": ["packaging.version._BaseVersion", "packaging.version.Version.__repr__", "packaging.version.Version.release", "packaging.version.Version.pre", "packaging.version.Version.is_prerelease", "packaging.version.Version.is_postrelease", "packaging.version.Version.is_devrelease", "re", "typing.Optional", "typing.Tuple", "packaging.version.Version.__str__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "torch._six.queue.Queue": [], "numpy.lib.npyio.NpzFile.close": ["collections.abc.Mapping"], "numpy.f2py.symbolic.as_ternary": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op"], "google.protobuf.reflection": ["google.protobuf.message_factory", "google.protobuf.message_factory._GENERATED_PROTOCOL_MESSAGE_TYPE"], "numpy.ma.core.arcsinh": ["numpy.ma.core.arcsinh", "numpy.core.umath.arcsinh"], "_sentencepiece.SentencePieceProcessor__EncodeAsImmutableProtoBatch": [], "_sentencepiece.ImmutableNBestSentencePieceText__nbests": [], "numpy._typing._array_like.ArrayLike": ["numpy.typing.__init__.ArrayLike"], "numpy.core.numeric.all": ["numpy.ma.core.all", "numpy.core.fromnumeric.all", "numpy.array_api.__init__.all"], "future.builtins.str.endswith": [], "transformers.file_utils.ModelOutput.to_tuple": ["collections.OrderedDict", "transformers.file_utils.ModelOutput.to_tuple", "typing.Tuple", "typing.Any"], "google.protobuf.reflection.GeneratedProtocolMessageType": [], "numpy.logical_and": ["numpy.ma.core.logical_and", "numpy.core.umath.logical_and", "numpy.array_api.__init__.logical_and"], "numpy.round": ["future.builtins.misc.round", "future.builtins.__init__.round", "numpy.ma.core.round", "numpy.array_api.__init__.round", "numpy.core.round"], "future.backports.email._parseaddr.AddrlistClass.__init__": [], "types.resolve_bases": [], "torch._jit_internal.Any": ["torch.jit.annotations.Any", "typing.Any"], "numpy.lib._iotools.easy_dtype": ["numpy.lib._iotools.NameValidator.validate", "numpy.lib._iotools.validate", "numpy", "numpy.lib._iotools.NameValidator", "numpy.lib._iotools.LineSplitter.autostrip", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.LineSplitter.__init__", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.NameValidator.__init__", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.lib._iotools.StringConverter.__init__", "numpy.lib._iotools.StringConverter.iterupgrade", "numpy.dtype"], "tokenize": [], "numpy.core._methods._mean": ["numpy.core.multiarray.asanyarray", "numpy.core._methods._count_reduce_items", "warnings", "numpy.core.numerictypes", "numpy.core.multiarray", "numpy.core._ufunc_config._no_nep50_warning", "numpy.core.umath", "numpy.core.multiarray.dtype", "numpy.core.multiarray.ndarray", "numpy.core.numerictypes.float16", "numpy.core.numerictypes.integer", "numpy.core.numerictypes.bool_", "warnings.warn", "numpy.core.umath.true_divide"], "numpy.ma.core.tan": ["numpy.ma.core.tan", "numpy.core.umath.tan", "numpy.array_api.__init__.tan"], "torch.jit.Attribute": ["torch.jit.OrderedDictWrapper.values"], "numpy.typing.__init__.DTypeLike": ["numpy.typing.__init__.DTypeLike", "numpy._typing.DTypeLike"], "sentencepiece._sentencepiece.SentencePieceProcessor__SampleEncodeAndScoreAsImmutableProto": [], "ctypes.create_string_buffer": [], "future.backports.xmlrpc.client.Binary.decode": ["future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "base64", "base64.decodebytes"], "google.protobuf.internal._api_implementation": [], "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper": [], "numpy.f2py.symbolic.symbols.visit": ["numpy.f2py.symbolic.Expr.contains.visit", "numpy.f2py.symbolic.Expr.symbols.visit", "numpy.f2py.symbolic.Expr.polynomial_atoms.visit", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic.contains.visit", "numpy.f2py.symbolic.symbols.visit", "numpy.f2py.symbolic.polynomial_atoms.visit", "numpy.f2py.symbolic.Op"], "numpy.arange": ["numpy.ma.core.arange", "numpy.core.numeric.arange", "numpy.core.multiarray.arange", "numpy.array_api.__init__.arange"], "torch.serialization._open_zipfile_writer_file": ["torch.serialization._opener"], "numpy.tanh": ["numpy.ma.core.tanh", "numpy.core.umath.tanh", "numpy.array_api.__init__.tanh"], "click.globals.resolve_color_default": ["typing", "click.globals.get_current_context", "typing.Optional"], "numpy.array_api._array_object.Array.ndim": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "tqdm.__init__.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "numpy.signbit": ["numpy.core.umath.signbit"], "numpy.ma.mrecords.copy": [], "zipfile.ZipFile": [], "transformers.file_utils.is_tensor": ["transformers.file_utils.is_torch_available", "torch", "transformers.file_utils.is_tf_available", "tensorflow", "numpy", "tensorflow.Tensor", "torch.Tensor", "numpy.ndarray"], "numpy.linalg.linalg._assert_stacked_2d": ["numpy.linalg.linalg.LinAlgError"], "transformers.file_utils.torch_only_method.wrapper": ["transformers.file_utils.wrapper", "transformers.file_utils.torch_only_method.wrapper", "transformers.file_utils.torch_required.wrapper", "transformers.file_utils.tf_required.wrapper"], "numpy.negative": ["numpy.ma.core.negative", "numpy.core.umath.negative", "numpy.array_api.__init__.negative"], "torch.jit.__init__.TracingCheckError.__init__": ["torch.jit.__init__.indent", "torch.jit.__init__.TracingCheckError"], "numpy.core.arrayprint._guarded_repr_or_str": ["numpy.core.arrayprint._recursive_guard"], "numpy.lib._iotools.has_nested_fields": [], "future.backports.email._parseaddr.AddrlistClass.getatom": ["future.backports.email._parseaddr.AddressList.__len__"], "future.backports.xmlrpc.client._binary": ["future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Binary", "future.backports.xmlrpc.client.Unmarshaller.data", "future.backports.xmlrpc.client.data"], "numpy.core.defchararray.not_equal": ["numpy.core.numeric.compare_chararrays", "numpy.core.defchararray._binary_op_dispatcher"], "google.protobuf.internal.encoder._SignedVarintEncoder.EncodeSignedVarint": ["struct", "google.protobuf.internal.encoder.EncodeSignedVarint", "google.protobuf.internal.encoder._SignedVarintEncoder.EncodeSignedVarint", "struct.Struct"], "unicodedata.east_asian_width": [], "past.types.basestring": ["past.utils.PY2", "sys", "sys.version_info"], "torch._tensor_str": ["torch._tensor_str.__PrinterOptions"], "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence": ["numpy.linalg.linalg.LinAlgError"], "numpy.compat.pickle.UnpicklingError": [], "future.utils.lmap": [], "numpy.core.numeric.inf": ["numpy.core.numeric.inf", "numpy.array_api.__init__.inf"], "numpy.lib.twodim_base._trilu_dispatcher": [], "transformers.data.processors.glue.MnliProcessor": ["transformers.data.processors.utils.DataProcessor"], "regex._regex_core": ["regex._regex_core.Namespace", "regex._regex_core.RegexFlag", "regex._regex_core.lookup_property", "regex._regex_core.Boundary", "regex._regex_core.Keep", "regex._regex_core.StartOfWord", "regex._regex_core.EndOfWord", "regex._regex_core.EndOfString", "regex._regex_core.Failure", "regex._regex_core.Prune", "regex._regex_core.Skip", "regex._regex_core.DefaultBoundary", "regex._regex_core.DefaultStartOfWord", "regex._regex_core.DefaultEndOfWord", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width", "regex._regex_core.RegexBase.optimise", "regex._regex_core.Atomic.optimise", "regex._regex_core.Branch.optimise", "regex._regex_core.Character.optimise", "regex._regex_core.Conditional.optimise", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.Group.optimise", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.Property.optimise", "regex._regex_core.Range.optimise", "regex._regex_core.Sequence.optimise", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.Info.open_group", "regex._regex_core.Info.is_open_group", "regex._regex", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef.__init__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Prune._compile", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.Range._compile", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.__init__", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Scanner.__init__", "string", "regex._regex_core.StartOfString", "string.ascii_letters", "string.digits", "string.octdigits", "string.hexdigits", "regex._regex.get_code_size", "regex._regex.get_properties"], "numpy.arctan2": ["numpy.ma.core.arctan2", "numpy.core.umath.arctan2"], "future.backports.email._header_value_parser.Address": ["future.backports.email._header_value_parser.TokenList"], "numpy.log2": ["numpy.lib.scimath.log2", "numpy.ma.core.log2", "numpy.core.umath.log2", "numpy.array_api.__init__.log2"], "future.backports.email._header_value_parser.get_invalid_mailbox": ["future.backports.email._header_value_parser.InvalidMailbox", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_phrase", "future.backports.email._header_value_parser.ValueTerminal"], "numpy.f2py.symbolic.Expr.__eq__": ["numpy.f2py.symbolic.Expr"], "torch.serialization.legacy_load": ["torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "contextlib.closing", "torch.serialization.mkdtemp", "torch.serialization._opener.__init__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__init__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._open_zipfile_writer_file.__init__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__init__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "torch.serialization._opener.__enter__", "tarfile", "torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization.storage_to_tensor_type", "struct", "os", "struct.unpack", "tarfile.open", "tarfile.PAX_FORMAT", "os.path"], "torch.norm": ["torch.functional.norm", "numpy.dual.norm", "numpy.linalg.linalg.norm"], "numpy.add": ["numpy.ma.core.add", "numpy.core.defchararray.add", "numpy.core.umath.add", "numpy.array_api.__init__.add"], "numpy.array_api.__init__.bitwise_and": ["numpy.ma.core.bitwise_and", "numpy.core.umath.bitwise_and", "numpy.array_api.__init__.bitwise_and", "numpy.array_api._elementwise_functions.bitwise_and"], "tqdm.asyncio.tqdm": ["tqdm.asyncio.tqdm", "tqdm.notebook.tqdm", "tqdm.autonotebook.tqdm", "tqdm.std.tqdm", "tqdm.gui.tqdm", "tqdm.__init__.tqdm", "tqdm.rich.tqdm", "tqdm.auto.tqdm", "tqdm.tk.tqdm", "tqdm.contrib.discord.tqdm", "tqdm.contrib.bells.tqdm", "tqdm.contrib.telegram.tqdm", "tqdm.contrib.slack.tqdm"], "numpy.f2py.symbolic._FromStringWorker.process.restore": ["numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic.replace_parenthesis", "numpy.f2py.symbolic._FromStringWorker.process.restore", "numpy.f2py.symbolic.process.restore", "numpy.f2py.symbolic.as_complex", "numpy.f2py.symbolic.Expr.__mul__", "numpy.f2py.symbolic.Expr.__getitem__", "re", "numpy.f2py.symbolic.as_ternary", "numpy.f2py.symbolic.Language", "numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.RelOp", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic._Pair", "numpy.f2py.symbolic.Expr.__init__", "numpy.f2py.symbolic.Expr.__eq__", "numpy.f2py.symbolic.Expr.__lt__", "numpy.f2py.symbolic.Expr.__le__", "numpy.f2py.symbolic.Expr.__gt__", "numpy.f2py.symbolic.Expr.__ge__", "numpy.f2py.symbolic.Expr.__neg__", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__pow__", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic._Pair.__init__", "numpy.f2py.symbolic._FromStringWorker.__init__", "numpy.f2py.symbolic.as_integer", "numpy.f2py.symbolic.as_real", "numpy.f2py.symbolic.as_string", "numpy.f2py.symbolic._get_parenthesis_kind", "numpy.f2py.symbolic.as_array", "numpy.f2py.symbolic.as_apply", "numpy.f2py.symbolic.as_symbol", "numpy.f2py.symbolic.ewarn", "numpy.f2py.symbolic.unreplace_parenthesis", "re.match", "re.I", "re.split"], "numpy.arcsin": ["numpy.lib.scimath.arcsin", "numpy.ma.core.arcsin", "numpy.core.umath.arcsin"], "numpy.core.numerictypes.dtype": ["numpy.core.numeric.dtype", "numpy.core.multiarray.dtype"], "numpy.lib.npyio.WriteWrap.close": [], "torch.jit.__init__.RecursiveScriptModule.copy_instance": ["torch.jit.__init__.ScriptModule"], "numpy.lib.function_base._create_arrays": ["numpy.lib.function_base._calculate_shapes", "numpy", "numpy.empty", "numpy.empty_like"], "joblib.numpy_pickle.load": ["pathlib.Path", "joblib.numpy_pickle.NumpyArrayWrapper.safe_get_numpy_array_alignment_bytes", "joblib.numpy_pickle_utils._read_fileobject", "joblib.numpy_pickle._unpickle", "joblib.numpy_pickle_compat.load_compatibility"], "numpy.lib.polynomial._poly_dispatcher": [], "numpy.ma.extras._fromnxfunction_args.__call__": ["numpy.ma.extras._fromnxfunction", "numpy", "numpy.ma.extras.issequence", "numpy.ma.core.getmaskarray", "numpy.ma.core.masked_array", "numpy.asarray"], "sentencepiece._sentencepiece.SentencePieceProcessor_IsUnknown": [], "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.lib.shape_base.apply_over_axes": ["numpy.core.numeric.asarray", "numpy.core.numeric.array", "numpy.lib.shape_base.expand_dims", "numpy.lib.shape_base._apply_over_axes_dispatcher"], "urllib3.response.HTTPResponse.release_conn": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "urllib3._collections.HTTPHeaderDict": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "pickle5": [], "future.backports.xmlrpc.client.ExpatParser": [], "numpy.ma.core.sinh": ["numpy.ma.core.sinh", "numpy.core.umath.sinh", "numpy.array_api.__init__.sinh"], "numpy.lib._iotools.NameValidator.defaultdeletechars": [], "numpy.core.fromnumeric._ravel_dispatcher": [], "numpy.array_api.__init__.log10": ["numpy.lib.scimath.log10", "numpy.ma.core.log10", "numpy.core.umath.log10", "numpy.array_api.__init__.log10", "numpy.array_api._elementwise_functions.log10"], "future.backports.email._header_value_parser.quote": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "numpy.core.defchararray.chararray.isspace": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.isspace", "numpy.core.numeric.ndarray.argsort"], "torch.serialization._open_buffer_writer": ["torch.serialization._opener"], "future.backports.xmlrpc.client.Unmarshaller": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "numpy.pi": ["numpy.core.umath.pi", "numpy.array_api.__init__.pi"], "numpy.arccos": ["numpy.lib.scimath.arccos", "numpy.ma.core.arccos", "numpy.core.umath.arccos"], "numpy.lib.shape_base._split_dispatcher": [], "numpy.lib.npyio.BagObj.__init__": ["weakref", "weakref.proxy"], "numpy.core.arrayprint.SubArrayFormat.__call__": ["numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.StructuredVoidFormat.__call__"], "torch.jit.__init__.OrderedModuleDict.__contains__": ["torch.jit.__init__.OrderedDictWrapper", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique"], "numpy.array_api._dtypes._integer_or_boolean_dtypes": [], "torch.jit.OrderedDictWrapper.__delitem__": [], "numpy.f2py.symbolic.as_integer": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.OpError"], "numpy.ma.core.amin": ["numpy.ma.core.amin", "numpy.core.fromnumeric.amin", "numpy.amin"], "numpy.core.defchararray.chararray.isalpha": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.isalpha", "numpy.core.numeric.ndarray.argsort"], "numpy.f2py.symbolic._Pair": [], "future.backports.email._header_value_parser.Address.all_mailboxes": ["future.backports.email._header_value_parser.TokenList"], "past.builtins.noniterators.zip": ["future.builtins.iterators.zip", "future.builtins.__init__.zip", "past.builtins.noniterators.zip", "past.builtins.__init__.zip"], "future.types.newrange": ["future.utils.PY2", "future.types.newrange.newrange.count", "future.types.newrange.count", "future.backports.misc.count"], "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "numpy.linalg.linalg.isComplexType": ["numpy.core.complexfloating"], "tokenize.generate_tokens": [], "numpy.bitwise_or": ["numpy.ma.core.bitwise_or", "numpy.core.umath.bitwise_or", "numpy.array_api.__init__.bitwise_or"], "google.protobuf.message.EncodeError": ["google.protobuf.message.Error"], "numpy.array_api.__init__.cosh": ["numpy.ma.core.cosh", "numpy.core.umath.cosh", "numpy.array_api.__init__.cosh", "numpy.array_api._elementwise_functions.cosh"], "torch.utils.data.dataset.TensorDataset": ["torch.utils.data.dataset.Dataset"], "future.backports.urllib.parse.DefragResultBytes": ["future.backports.urllib.parse._ResultMixinBytes"], "numpy.ma.core.resize": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.toflex", "numpy", "numpy.ma.core.get_masked_subclass", "numpy.resize"], "numpy.unique": ["torch.functional.unique", "numpy.lib.arraysetops.unique", "numpy.ma.extras.unique"], "future.backports.email._header_value_parser.get_invalid_parameter": ["future.backports.email._header_value_parser.InvalidParameter", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_phrase", "future.backports.email._header_value_parser.ValueTerminal"], "google.protobuf.internal.encoder.EncodeVarint": [], "numpy.core.defchararray.add": ["numpy", "numpy.core.defchararray._get_num_chars", "numpy.core.defchararray._use_unicode", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._binary_op_dispatcher", "numpy.asarray"], "numpy.core.arrayprint.DatetimeFormat._format_non_nat": ["numpy.core.arrayprint._TimelikeFormat", "numpy.core.multiarray.datetime_as_string"], "numpy.f2py.symbolic.Expr.__lt__": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op"], "tokenize.NAME": [], "future.backports.email._header_value_parser.MimeParameters.params": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.params", "collections.OrderedDict", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts", "future.backports.email._header_value_parser.parts", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser._Folded.__init__", "future.backports.email._header_value_parser._Folded.newline", "future.backports.email._header_value_parser._Folded.finalize", "future.backports.email._header_value_parser._Folded.append_if_fits", "future.backports.email._header_value_parser.TokenList.__init__", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.pprint", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.DomainLiteral.ip", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser.section_number", "future.backports.urllib.parse.unquote_to_bytes", "future.backports.email.errors", "future.backports.urllib.parse.unquote", "future.backports.email.utils", "future.backports.email.utils._has_surrogates", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.UndecodableBytesDefect"], "numpy.lib._iotools.ConverterLockError": ["numpy.lib._iotools.ConverterError"], "numpy.ma.extras._fromnxfunction_allargs.__call__": ["numpy.ma.extras._fromnxfunction", "numpy", "numpy.ma.core.getmaskarray", "numpy.ma.core.masked_array", "numpy.asarray"], "os.dup": [], "numpy.f2py.symbolic.as_apply": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.as_expr", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit"], "numpy.core.defchararray.chararray.translate": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.translate", "numpy.core.numeric.ndarray.argsort"], "urllib3._collections.HTTPHeaderDict.from_httplib": ["collections.abc.MutableMapping", "collections.MutableMapping", "urllib3.packages.six", "urllib3.packages.six.iterkeys", "urllib3.packages.six.itervalues", "urllib3._collections.HTTPHeaderDict.getlist", "urllib3._collections.getlist", "urllib3._collections.RecentlyUsedContainer.keys", "urllib3.exceptions.InvalidHeader", "urllib3.packages.six.PY2", "collections.abc.MutableMapping.iterkeys", "collections.abc.MutableMapping.itervalues", "collections.MutableMapping.iterkeys", "collections.MutableMapping.itervalues"], "numpy.flip": ["numpy.lib.function_base.flip", "numpy.array_api.__init__.flip"], "numpy.min": ["future.builtins.misc.min", "future.builtins.__init__.min", "numpy.ma.core.min", "numpy.array_api.__init__.min", "numpy.core.min"], "torch.jit.is_scripting": [], "packaging.version.Version.release": ["packaging.version._BaseVersion", "packaging.version.Version.__repr__", "packaging.version.Version.release", "packaging.version.Version.pre", "packaging.version.Version.is_prerelease", "packaging.version.Version.is_postrelease", "packaging.version.Version.is_devrelease", "re", "typing.Tuple", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "future.backports.xmlrpc.client.request": ["future.backports.xmlrpc.client.ProtocolError.__init__", "future.backports.xmlrpc.client.Fault.__init__", "future.backports.xmlrpc.client.DateTime.__init__", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.Binary.__init__", "future.backports.xmlrpc.client.ExpatParser.__init__", "future.backports.xmlrpc.client.Marshaller.__init__", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.__init__", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client._MultiCallMethod.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__init__", "future.backports.xmlrpc.client.MultiCallIterator.__getitem__", "future.backports.xmlrpc.client.MultiCall.__init__", "future.backports.xmlrpc.client.GzipDecodedResponse.__init__", "future.backports.xmlrpc.client._Method.__init__", "future.backports.xmlrpc.client.Transport.__init__", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection", "future.backports.xmlrpc.client.ServerProxy.__init__", "socket", "future.backports.http.client", "future.backports.xmlrpc.client.ProtocolError.__repr__", "future.backports.xmlrpc.client.Fault.__repr__", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.DateTime.__le__", "future.backports.xmlrpc.client.DateTime.__ge__", "future.backports.xmlrpc.client.DateTime.__eq__", "future.backports.xmlrpc.client.DateTime.__ne__", "future.backports.xmlrpc.client.DateTime.__repr__", "future.backports.xmlrpc.client.DateTime.decode", "future.backports.xmlrpc.client.DateTime.encode", "future.backports.xmlrpc.client.Binary.__eq__", "future.backports.xmlrpc.client.Binary.__ne__", "future.backports.xmlrpc.client.Binary.decode", "future.backports.xmlrpc.client.Binary.encode", "future.backports.xmlrpc.client.ExpatParser.feed", "future.backports.xmlrpc.client.ExpatParser.close", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Unmarshaller.close", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Unmarshaller.end", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client._MultiCallMethod.__getattr__", "future.backports.xmlrpc.client.MultiCall.__repr__", "future.backports.xmlrpc.client.MultiCall.__getattr__", "future.backports.xmlrpc.client.GzipDecodedResponse.close", "future.backports.xmlrpc.client._Method.__getattr__", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.Transport.close", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.ServerProxy.__close", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.ServerProxy.__repr__", "future.backports.xmlrpc.client.ServerProxy.__getattr__", "errno", "socket.error", "future.backports.http.client.BadStatusLine", "errno.ECONNRESET", "errno.ECONNABORTED", "errno.EPIPE"], "torch.serialization.persistent_load": ["torch.serialization._maybe_decode_ascii", "torch.serialization._check_container_source", "torch.serialization._legacy_load._check_container_source", "torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization.load_tensor", "torch.serialization._load.load_tensor"], "os.register_at_fork": [], "numpy.lib._iotools.StringConverter": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_"], "numpy.core.numerictypes.intp": [], "os.sep": [], "numpy.left_shift": ["numpy.ma.core.left_shift", "numpy.core.umath.left_shift"], "google.protobuf.internal.enum_type_wrapper": [], "base64.b64decode": [], "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer": ["google.protobuf.internal.encoder.SpecificSizer", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer", "google.protobuf.internal.encoder._TagSize", "google.protobuf.internal.encoder._VarintSize", "google.protobuf.internal.encoder.PackedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.PackedFieldSize", "google.protobuf.internal.encoder.RepeatedFieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.StringSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.BytesSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.GroupSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.MessageSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.SpecificSizer.RepeatedFieldSize", "google.protobuf.internal.encoder.FieldSize", "google.protobuf.internal.encoder._SimpleSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._ModifiedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder._FixedSizer.SpecificSizer.FieldSize", "google.protobuf.internal.encoder.StringSizer.FieldSize", "google.protobuf.internal.encoder.BytesSizer.FieldSize", "google.protobuf.internal.encoder.GroupSizer.FieldSize", "google.protobuf.internal.encoder.MessageSizer.FieldSize", "google.protobuf.internal.encoder.MessageSetItemSizer.FieldSize", "google.protobuf.internal.encoder.MapSizer.FieldSize", "google.protobuf.internal.encoder.SpecificSizer.FieldSize"], "numpy.ma.core.arctan": ["numpy.ma.core.arctan", "numpy.core.umath.arctan"], "numpy.bitwise_xor": ["numpy.ma.core.bitwise_xor", "numpy.core.umath.bitwise_xor", "numpy.array_api.__init__.bitwise_xor"], "numpy.lib.polynomial.polyfit": ["numpy.lib.polynomial.poly1d.order", "numpy.lib.polynomial.order", "numpy.lib.polynomial.poly1d.integ", "numpy.core.numeric", "numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__len__", "numpy.core.finfo", "numpy.lib.twodim_base.vander", "numpy.lib.polynomial.poly1d.__pow__", "numpy.lib.polynomial.poly1d.coeffs", "numpy.lib.polynomial.poly1d._coeffs", "numpy.lib.polynomial.poly1d.__call__", "numpy.lib.polynomial.poly1d.roots", "numpy.lib.polynomial.poly1d.__str__", "numpy.lib.polynomial.poly1d.__pos__", "numpy.lib.polynomial.poly1d.__sub__", "numpy.lib.polynomial.poly1d.__rsub__", "numpy.lib.polynomial.poly1d.__setitem__", "numpy.linalg.lstsq", "numpy.lib.polynomial.RankWarning", "warnings", "numpy.linalg.inv", "numpy.core.dot", "numpy.lib.polynomial._polyfit_dispatcher", "numpy.core.numeric.asarray", "numpy.core.numeric.newaxis", "numpy.core.numeric.sqrt", "numpy.core.numeric.outer", "warnings.warn"], "numpy.linalg.linalg.transpose": ["numpy.core.swapaxes"], "_sentencepiece.SentencePieceProcessor__EncodeAsIdsBatch": [], "_sentencepiece.SentencePieceProcessor_IsControl": [], "torch.jit.__init__._get_interpreter_name_for_var": ["inspect", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.CompilationUnit.define", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.items", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.items", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.ScriptModule.define", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.RecursiveScriptModule.define", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "inspect.currentframe"], "torch.jit.__init__.RecursiveScriptModule.get_debug_state": ["torch.jit.__init__.ScriptModule"], "numpy.ma.core.choose.fmask": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.copy", "numpy.ma.core.MaskedConstant.__copy__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.mvoid.filled", "numpy.ma.core.filled", "numpy.ma.core.nmask", "numpy.ma.core.choose.nmask", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.fmask", "numpy.ma.core.choose.fmask", "numpy", "numpy.ma.core.make_mask", "numpy.ma.core.mask_or", "numpy.ma.core.getmask", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray", "numpy.ma.core._MaskedBinaryOperation.outer", "numpy.ma.core._extrema_operation.outer", "numpy.choose"], "sentencepiece._sentencepiece.ImmutableNBestSentencePieceText__nbests": [], "future.backports.email._header_value_parser.Token": ["future.backports.email._header_value_parser.TokenList"], "future.backports.xmlrpc.client.DateTime.__le__": ["future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.ExpatParser.close", "future.backports.xmlrpc.client.Marshaller.dumps", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.Unmarshaller.close", "future.backports.xmlrpc.client.Unmarshaller.start", "future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.GzipDecodedResponse.close", "future.backports.xmlrpc.client.Transport.request", "future.backports.xmlrpc.client.Transport.single_request", "future.backports.xmlrpc.client.Transport.getparser", "future.backports.xmlrpc.client.Transport.get_host_info", "future.backports.xmlrpc.client.Transport.close", "future.backports.xmlrpc.client.Transport.send_request", "future.backports.xmlrpc.client.Transport.send_headers", "future.backports.xmlrpc.client.Transport.send_content", "future.backports.xmlrpc.client.Transport.parse_response", "future.backports.xmlrpc.client.ServerProxy.__close", "future.backports.xmlrpc.client.ServerProxy.__request", "future.backports.xmlrpc.client.DateTime.make_comparable", "future.backports.xmlrpc.client.DateTime.decode", "future.backports.xmlrpc.client.DateTime.encode", "future.backports.xmlrpc.client.Binary.decode", "future.backports.xmlrpc.client.Binary.encode", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.Unmarshaller.getmethodname", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.Transport.make_connection", "future.backports.xmlrpc.client.SafeTransport.make_connection"], "future.backports.email._header_value_parser.MimeParameters.__str__": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.params", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.quote_string"], "torch.serialization.persistent_id": ["torch.nn", "torch.serialization._opener.__init__", "torch.serialization._opener.__enter__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__init__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._open_zipfile_writer_file.__init__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__init__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "torch._utils_internal.get_source_lines_and_file", "torch", "torch.serialization.normalize_storage_type", "torch.serialization.location_tag", "warnings", "warnings.warn", "torch.nn.Module", "torch.is_storage"], "numpy.ma.core.log10": ["numpy.lib.scimath.log10", "numpy.ma.core.log10", "numpy.core.umath.log10", "numpy.array_api.__init__.log10"], "contextlib.closing": [], "transformers.file_utils._convert_output_args_doc": ["transformers.file_utils._get_indent", "transformers.file_utils.ModelOutput.__post_init__", "transformers.file_utils.ModelOutput.__delitem__", "transformers.file_utils.ModelOutput.__getitem__", "transformers.file_utils.ModelOutput.__setitem__", "re", "re.sub"], "numpy.core.defchararray._multiply_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "regex.regex._pickle": ["regex._regex", "regex._regex.compile"], "future.builtins.str.startswith": [], "future.utils.surrogateescape.surrogateescape_handler": ["future.utils.surrogateescape.NotASurrogateError", "future.utils.surrogateescape.replace_surrogate_decode", "future.utils.surrogateescape.replace_surrogate_encode"], "numpy.array_api._array_object.Array.__rlshift__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "numpy.array_api.__init__.not_equal": ["numpy.ma.core.not_equal", "numpy.core.defchararray.not_equal", "numpy.core.umath.not_equal", "numpy.array_api.__init__.not_equal", "numpy.array_api._elementwise_functions.not_equal"], "numpy.core.numeric._allclose_dispatcher": [], "numpy.core.arrayprint._TimelikeFormat._format_non_nat": [], "future.backports.email.errors.ObsoleteHeaderDefect": ["future.backports.email.errors.HeaderDefect"], "numpy.ma.core.remainder": ["numpy.ma.core.remainder", "numpy.core.umath.remainder", "numpy.array_api.__init__.remainder"], "numpy.lib.twodim_base._min_int": ["numpy.core.numeric.int8", "numpy.core.numeric.int16", "numpy.core.numeric.int32", "numpy.core.numeric.int64"], "numpy.lib.scimath.log10": ["numpy.lib.scimath._fix_real_lt_zero", "numpy.core.numeric", "numpy.core.overrides.array_function_dispatch", "numpy.lib.scimath._unary_dispatcher", "numpy.core.numeric.log10"], "codecs.lookup": [], "future.backports.email._header_value_parser._Folded.__str__": [], "urllib3.response.HTTPResponse._error_catcher": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "socket.timeout", "urllib3.connection.BaseSSLError", "urllib3.connection.HTTPException", "socket.error", "urllib3.exceptions.ReadTimeoutError", "urllib3.exceptions.ProtocolError", "urllib3.response.DeflateDecoder.__getattr__", "urllib3.response.DeflateDecoder.decompress", "urllib3.response.GzipDecoder.__getattr__", "urllib3.response.GzipDecoder.decompress", "urllib3.response.MultiDecoder.decompress", "urllib3.response.HTTPResponse.release_conn", "urllib3.response.HTTPResponse.isclosed", "urllib3.response.HTTPResponse.tell", "urllib3.response.HTTPResponse._init_length", "urllib3.response.HTTPResponse._init_decoder", "urllib3.response.HTTPResponse._decode", "urllib3.response.HTTPResponse._flush_decoder", "urllib3.response.HTTPResponse._error_catcher", "urllib3.response.HTTPResponse.read", "urllib3.response.HTTPResponse.stream", "urllib3.response.HTTPResponse.getheaders", "urllib3.response.HTTPResponse.getheader", "urllib3.response.HTTPResponse.close", "urllib3.response.HTTPResponse.closed", "urllib3.response.HTTPResponse.fileno", "urllib3.response.HTTPResponse.readable", "urllib3.response.HTTPResponse.readinto", "urllib3.response.HTTPResponse.supports_chunked_reads", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.HTTPResponse._handle_chunk", "urllib3.response.HTTPResponse.read_chunked", "urllib3.response.HTTPResponse.geturl", "urllib3.response.HTTPResponse.__iter__", "urllib3.exceptions.SSLError", "contextlib.contextmanager", "io.IOBase", "zlib.error", "brotli.error"], "numpy.tensordot": ["torch.functional.tensordot", "numpy.core.numeric.tensordot", "numpy.array_api.linalg.tensordot", "numpy.array_api.__init__.tensordot"], "numpy.ma.mrecords._mrreconstruct": ["numpy.ma.mrecords.MaskedRecords._data", "numpy.ma.mrecords._data", "numpy.ndarray", "numpy.ma.mrecords.MaskedRecords.harden_mask", "numpy.ma.mrecords.MaskedRecords.soften_mask", "numpy.ndarray.__new__"], "codecs": [], "torch.jit.OrderedDictWrapper.__getitem__": ["torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique"], "future.utils.native": [], "transformers.modeling_auto.AutoModelForCausalLM.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "IPython.html.widgets.ContainerWidget": [], "numpy.lib.npyio.WriteWrap.first_write": [], "numpy.ma.core.hypot": ["numpy.ma.core.hypot", "numpy.core.umath.hypot"], "numpy.f2py.symbolic._pairs_add": ["numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit"], "torch.utils.data.IterableDataset": ["torch.utils.data.dataset.IterableDataset"], "numpy.lib.function_base._angle_dispatcher": ["numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature"], "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode": ["struct", "google.protobuf.internal.decoder._SimpleDecoder", "google.protobuf.internal.decoder.InnerDecode", "google.protobuf.internal.decoder._ModifiedDecoder.InnerDecode", "google.protobuf.internal.decoder._StructPackDecoder.InnerDecode", "google.protobuf.internal.decoder._FloatDecoder.InnerDecode", "google.protobuf.internal.decoder._DoubleDecoder.InnerDecode", "struct.calcsize", "struct.unpack"], "transformers.modeling_auto.AutoModelForMultipleChoice.from_config": ["transformers.modeling_auto.AutoModel.from_config", "transformers.modeling_auto.AutoModelForPreTraining.from_config", "transformers.modeling_auto.AutoModelWithLMHead.from_config", "transformers.modeling_auto.AutoModelForCausalLM.from_config", "transformers.modeling_auto.AutoModelForMaskedLM.from_config", "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config", "transformers.modeling_auto.AutoModelForSequenceClassification.from_config", "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config", "transformers.modeling_auto.AutoModelForTokenClassification.from_config", "transformers.modeling_auto.AutoModelForMultipleChoice.from_config", "transformers.configuration_auto.replace_list_option_in_docstrings"], "multiprocessing.util": [], "__builtin__.basestring": [], "numpy.array_api._array_object.Array.__irshift__": ["numpy.array_api._array_object.Array.__array__", "numpy.array_api._array_object.Array.__array_namespace__", "numpy", "numpy.array_api._array_object.Array", "typing.Union", "numpy.array_api._array_object.Array.__int__", "numpy.ndarray"], "numpy.core.fromnumeric._reshape_dispatcher": [], "click.types.Path.coerce_path_result": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "os.path", "os.fsdecode", "os.fsencode", "typing.ClassVar", "typing.cast"], "numpy.array_api.__init__.roll": ["numpy.core.numeric.roll", "numpy.array_api.__init__.roll", "numpy.array_api._manipulation_functions.roll"], "regex._regex_core.OP": [], "numpy.core.arrayprint._formatArray": ["numpy.core.arrayprint.recurser", "numpy.core.arrayprint._formatArray.recurser"], "numpy.lib._iotools.StringConverter._find_map_entry": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.lib._iotools.LineSplitter.autostrip", "numpy.lib._iotools.LineSplitter.__init__", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.NameValidator.__init__", "numpy.lib._iotools.NameValidator.validate", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.lib._iotools.StringConverter.__init__", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.StringConverter.iterupgrade", "numpy.lib._iotools.StringConverter._getdtype", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._dtypeortype", "numpy", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_", "numpy.issubdtype"], "regex._regex_core.StartOfString": ["regex._regex_core.ZeroWidthBase"], "numpy.lib.type_check.isreal": ["numpy.lib.type_check.imag", "numpy.lib.type_check._is_type_dispatcher"], "regex._regex_core.DefaultEndOfWord": ["regex._regex_core.ZeroWidthBase"], "regex._regex_core.Property._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags"], "torch.jit.__init__.ScriptMeta.__init__.init_then_script": ["torch.jit.__init__.ONNXTracedModule", "torch.jit.__init__.indent", "torch.jit.__init__.TracingCheckError", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.OrderedModuleDict", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta", "torch.jit.__init__.ScriptMeta.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.__init__.make_stubs", "torch.jit.__init__.ScriptMeta.init_then_script.make_stubs", "torch.jit.__init__.__init__.init_then_script.make_stubs", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__._CachedForward.__get__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__len__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.RecursiveScriptModule.__bool__", "functools", "torch.jit.__init__.TracedModule", "torch.jit.__init__.QualnameWrapper", "torch.jit.__init__.TracedModule.__init__.check_unique", "torch.jit.__init__.__init__.check_unique", "torch.jit.__init__.make_module", "torch.jit.__init__.ScriptModule", "torch.jit.__init__.RecursiveScriptModule", "functools.wraps"], "numpy.core.arrayprint._recursive_guard": ["numpy.core.arrayprint.decorating_function", "numpy.core.arrayprint._recursive_guard.decorating_function"], "future.backports.datetime.__mul__": ["future.builtins.int", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.timedelta.plural", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.today", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.replace", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.__add__", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__hash__", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.__format__", "future.backports.datetime.time.tzname", "future.backports.datetime.time.replace", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.date", "future.backports.datetime.datetime.replace", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__add__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__bool__", "future.backports.datetime.date.__sub__", "future.backports.datetime.time.__bool__", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.__sub__"], "numpy.core.finfo": ["numpy.core.getlimits.finfo", "numpy.array_api.__init__.finfo"], "numpy.core.numeric.multiply": ["numpy.ma.core.multiply", "numpy.core.defchararray.multiply", "numpy.core.umath.multiply", "numpy.array_api.__init__.multiply"], "urllib3.connection.BaseSSLError": [], "future.backports.email._header_value_parser.Terminal.pop_trailing_ws": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "regex._regex_core.LookAroundConditional.optimise": ["regex._regex_core.RegexBase", "regex._regex_core.LookAroundConditional"], "future.backports.email.quoprimime.quote": ["future.backports.email.quoprimime._body_accumulator.write_char"], "torch.jit.__init__.ScriptMeta.__init__.make_stubs": ["torch.jit.__init__.ONNXTracedModule", "torch.jit.__init__.indent", "torch.jit.__init__.TracingCheckError", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.OrderedModuleDict", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta", "torch.jit.__init__.ScriptMeta.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.__init__.init_then_script", "torch.jit.__init__.TracedModule", "torch.jit.__init__.QualnameWrapper", "torch.jit.__init__.TracedModule.__init__.check_unique", "torch.jit.__init__.__init__.check_unique", "torch.jit.__init__.make_module", "torch.jit.__init__.ScriptModule", "torch.jit.__init__.RecursiveScriptModule"], "future.backports.email._header_value_parser.QuotedString.content": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "regex._regex_core.Atomic.get_required_string": ["regex._regex_core.RegexBase"], "regex._regex_core.Branch._split_common_prefix": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild", "regex._regex_core.Sequence", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.max_width", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.Source.at_end", "regex._regex_core.Scanner.scan", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch", "regex._regex_core.make_sequence"], "regex._regex_core.Property.has_simple_start": ["regex._regex_core.RegexBase"], "regex._regex_core.Sequence.is_atomic": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "regex._regex_core.Branch.can_be_affix": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "numpy.core.defchararray.istitle": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.chararray.istitle", "numpy.core.defchararray.istitle"], "regex._regex_core.CallGroup.__init__": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group"], "future.backports.email._header_value_parser.NameAddr.domain": ["future.backports.email._header_value_parser.TokenList"], "os.PathLike": [], "numpy.diagonal": ["numpy.ma.core.diagonal", "numpy.core.fromnumeric.diagonal", "numpy.array_api.linalg.diagonal"], "regex._regex_core.Branch._is_folded": ["regex._regex_core.RegexBase", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef.__init__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.max_width", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.max_width", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.max_width", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__", "regex._regex_core.Character", "regex._regex", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "regex._regex.fold_case", "regex._regex.get_expand_on_folding"], "regex._regex_core.Conditional.contains_group": ["regex._regex_core.RegexBase"], "regex._regex_core.Source.get_while": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "string.index"], "torch.serialization.storage_to_tensor_type": ["torch._utils._import_dotted_name"], "numpy.iterable": ["numpy.lib.function_base.iterable"], "numpy.array_api.__init__.expm1": ["numpy.core.umath.expm1", "numpy.array_api.__init__.expm1", "numpy.array_api._elementwise_functions.expm1"], "future.backports.datetime._cmperror": ["future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday"], "google.protobuf.symbol_database.SymbolDatabase": ["google.protobuf.message_factory", "google.protobuf.message_factory.MessageFactory"], "future.backports.datetime.time.tzinfo": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "numpy.ma.extras._covhelper": ["numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.core", "numpy.ma.core.array", "numpy.ma.core.nomask", "numpy", "numpy.logical_not", "numpy.logical_or", "numpy.concatenate", "numpy.ma.core.getmaskarray", "numpy.ma.core.concatenate"], "numpy.f2py.symbolic.as_term_coeff": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.__init__", "numpy.f2py.symbolic.Expr.__lt__", "numpy.f2py.symbolic.Expr.__gt__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.__init__", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.__init__", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__call__", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic.as_term_coeff", "numpy.f2py.symbolic.as_integer", "numpy.f2py.symbolic.as_real", "numpy.f2py.symbolic.ArithOp", "numpy.f2py.symbolic.as_apply", "numpy.f2py.symbolic.OpError"], "future.backports.email.message.values": ["future.backports.email.message.Message.keys", "future.backports.email.message.Message.values", "future.backports.email.message.Message._get_params_preserve"], "regex._regex_core.String._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags"], "click.termui._format_default": ["typing", "click.utils.LazyFile", "io", "io.IOBase", "typing.Any"], "click._winconsole.get_buffer": ["click._winconsole.Py_buffer", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole.writable", "ctypes.py_object", "ctypes.byref", "ctypes.c_char"], "torch._six.get_function_from_type": [], "regex._regex_core.ZeroWidthBase.max_width": ["regex._regex_core.RegexBase"], "regex._regex_core.RefGroup.fix_groups": ["regex._regex_core.RegexBase", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.error"], "click._winconsole._WindowsConsoleRawIOBase.isatty": ["io", "io.RawIOBase"], "future.backports.datetime.timedelta._cmp": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date._cmp", "future.backports.datetime.time._cmp", "future.backports.datetime.datetime._cmp", "future.backports.datetime._cmp"], "torch._namedtensor_internals.build_dim_map": ["collections.OrderedDict"], "torch.jit._CachedForward": [], "regex._regex_core._compile_firstset": ["regex._regex_core._check_firstset"], "regex._regex_core.Atomic.__init__": ["regex._regex_core.RegexBase"], "regex._regex_core.Branch._merge_common_prefixes": ["regex._regex_core.RegexBase", "collections.defaultdict", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild", "regex._regex_core.Branch", "regex._regex_core.Sequence"], "future.backports.datetime.timedelta.__add__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta"], "future.builtins.misc.max": ["future.builtins.misc.max", "future.builtins.__init__.max", "numpy.ma.core.max", "numpy.array_api.__init__.max", "future.builtins.new_min_max.newmax"], "future.backports.email._parseaddr.AddressList.__sub__": ["future.backports.email._parseaddr.AddrlistClass", "future.backports.email._parseaddr.AddressList", "future.backports.email._parseaddr.AddrlistClass.gotonext"], "click._winconsole.ConsoleStream.__getattr__": ["click._winconsole.ConsoleStream.__getattr__", "click._winconsole.ConsoleStream.name", "click._winconsole.name", "click._winconsole._WindowsConsoleRawIOBase.__init__", "click._winconsole._WindowsConsoleRawIOBase.isatty", "click._winconsole._WindowsConsoleReader.readinto", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole._WindowsConsoleWriter._get_error_message", "click._winconsole._WindowsConsoleWriter.write", "click._winconsole.ConsoleStream.__init__", "click._winconsole.ConsoleStream.write", "click._winconsole.ConsoleStream.writelines", "click._winconsole.ConsoleStream.isatty", "typing", "typing.Any"], "regex._regex_core.Group.fix_groups": ["regex._regex_core.RegexBase"], "torch.serialization._is_compressed_file": [], "regex._regex_core.Branch.max_width": ["regex._regex_core.RegexBase", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "numpy.core.numeric.log2": ["numpy.lib.scimath.log2", "numpy.ma.core.log2", "numpy.core.umath.log2", "numpy.array_api.__init__.log2"], "numpy.ma.core.empty_like": ["numpy.ma.core.empty_like", "numpy.core.numeric.empty_like", "numpy.core.multiarray.empty_like", "numpy.array_api.__init__.empty_like"], "regex._regex_core.Property.__init__": ["regex._regex_core.RegexBase"], "numpy.core.numeric.full_like": ["numpy.core.multiarray.empty_like", "numpy.core.multiarray.dtype", "numpy.core.multiarray", "numpy.core.numeric._full_like_dispatcher", "numpy.core.multiarray.copyto"], "torch.jit.TracedModule.extra_repr": ["torch.jit.ScriptModule"], "future.backports.datetime.datetime.timestamp": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "time", "time.mktime"], "future.backports.email._header_value_parser.get_qcontent": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser._Folded.__init__", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser._Folded.append_if_fits", "future.backports.email._header_value_parser.TokenList.__init__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.__repr__", "future.backports.email._header_value_parser.TokenList.all_defects", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.as_encoded_word", "future.backports.email._header_value_parser.TokenList.cte_encode", "future.backports.email._header_value_parser.TokenList._fold", "future.backports.email._header_value_parser.TokenList._pp", "future.backports.email._header_value_parser.UnstructuredTokenList._fold", "future.backports.email._header_value_parser.UnstructuredTokenList.cte_encode", "future.backports.email._header_value_parser.Phrase._fold", "future.backports.email._header_value_parser.Phrase.cte_encode", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.NameAddr.addr_spec", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.addr_spec", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.Mailbox.addr_spec", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.AddrSpec.addr_spec", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.Header._fold", "future.backports.email._header_value_parser.Terminal.__new__", "future.backports.email._header_value_parser.Terminal.__repr__", "future.backports.email._header_value_parser.Terminal.all_defects", "future.backports.email._header_value_parser.Terminal._pp", "future.backports.email._header_value_parser.Terminal.cte_encode", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.Terminal.__getnewargs__", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.as_encoded_word", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.backports.email._header_value_parser._get_ptext_to_endchars", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser._validate_xtext"], "numpy.lib._iotools.LineSplitter._delimited_splitter": [], "torch.jit.TracedModule.__getattr__": ["torch.jit.ScriptModule", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.TracedModule"], "sacremoses.indic.VIRAMAS": [], "torch.jit.__init__.RecursiveScriptModule.define": ["torch.jit.__init__.ScriptModule", "torch._jit_internal", "torch._jit_internal.createResolutionCallbackFromFrame"], "click.types.Tuple.convert": ["click.types.CompositeParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "gettext.ngettext", "typing.Any", "typing.Optional"], "torch.jit.ONNXTracedModule.wrapper": ["torch.nn.Module", "torch.jit.OrderedDictWrapper.__len__", "torch.jit.RecursiveScriptModule.__len__", "torch.jit.TracedModule.extra_repr", "torch.jit._disable_tracing.__exit__", "torch.jit.RecursiveScriptModule.extra_repr", "torch.jit.ONNXTracedModule.__init__", "torch.jit.TracingCheckError.__init__", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__init__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.OrderedDictWrapper.__init__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.__init__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.ScriptMeta.__init__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.__init__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.TracedModule._get_name", "torch.jit.TracedModule.check_unique", "torch.jit._disable_tracing.__enter__", "torch.jit._CachedForward.__get__", "torch.jit.ScriptModule.__init__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__init__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.RecursiveScriptModule.get_debug_state", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.__getstate__", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.RecursiveScriptModule.__bool__"], "inspect.getsource": [], "click.types.Choice.to_info_dict": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.FuncParamType.to_info_dict", "click.types.Choice.to_info_dict", "click.types.DateTime.to_info_dict", "click.types._NumberRangeBase.to_info_dict", "click.types.File.to_info_dict", "click.types.Path.to_info_dict", "click.types.Tuple.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Dict", "typing.Any"], "numpy.linalg._umath_linalg.svd_m_f": [], "numpy.ma.core.ones_like": ["numpy.ma.core.ones_like", "numpy.core.numeric.ones_like", "numpy.array_api.__init__.ones_like"], "future.backports.email._header_value_parser.Terminal.comments": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "regex._regex_core.Info.is_open_group": ["regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Fuzzy._constraints_to_string"], "numpy.array_api.__init__.log1p": ["numpy.core.umath.log1p", "numpy.array_api.__init__.log1p", "numpy.array_api._elementwise_functions.log1p"], "regex.regex.complain_unused_args": [], "regex._regex_core.Group._compile": ["regex._regex_core.RegexBase", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Fuzzy._constraints_to_string"], "regex._regex_core.EndOfWord": ["regex._regex_core.ZeroWidthBase"], "click._winconsole._WindowsConsoleRawIOBase.__init__": ["io", "io.RawIOBase"], "numpy.linalg.linalg.eigvalsh": ["numpy.linalg.linalg.get_linalg_error_extobj", "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence", "numpy.linalg._umath_linalg", "numpy.linalg.linalg._makearray", "numpy.linalg.linalg._assert_stacked_2d", "numpy.linalg.linalg._assert_stacked_square", "numpy.linalg.linalg._commonType", "numpy.linalg.linalg.isComplexType", "numpy.linalg.linalg._realType", "numpy.linalg.linalg._eigvalsh_dispatcher", "numpy.linalg._umath_linalg.eigvalsh_lo", "numpy.linalg._umath_linalg.eigvalsh_up"], "numpy.ma.core.squeeze": ["numpy.ma.core.squeeze", "numpy.core.fromnumeric.squeeze", "numpy.array_api.__init__.squeeze"], "numpy.f2py.symbolic.as_factors": ["numpy.f2py.symbolic.Expr", "numpy.f2py.symbolic.normalize", "numpy.f2py.symbolic.Op", "numpy.f2py.symbolic.ArithOp", "numpy.f2py.symbolic.OpError"], "future.backports.email._header_value_parser.parts": ["future.builtins.list", "future.backports.email._header_value_parser.TokenList"], "torch.jit.RecursiveScriptModule.extra_repr": ["torch.jit.ScriptModule"], "torch.serialization.default_restore_location": ["torch.serialization._opener.__init__", "torch.serialization._opener.__enter__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__init__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._open_zipfile_writer_file.__init__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__init__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "torch", "torch.typename"], "future.backports.datetime._check_utc_offset": ["future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timedelta"], "regex._regex_core.GreedyRepeat.get_firstset": ["regex._regex_core.RegexBase"], "numpy.core.defchararray.isspace": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.isspace"], "numpy.lib.format.dtype_to_descr": ["numpy.lib.format._has_metadata", "warnings", "warnings.warn"], "future.backports.datetime.datetime.strptime": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.__format__", "future.backports.datetime.datetime.isoformat", "_strptime", "_strptime._strptime_datetime"], "future.backports.email._header_value_parser.Comment.comments": ["future.backports.email._header_value_parser.WhiteSpaceTokenList"], "regex._regex": [], "numpy.core.fromnumeric.std": ["numpy", "numpy.core.multiarray", "numpy.core.fromnumeric.std", "numpy.core._methods", "numpy.core.fromnumeric._std_dispatcher", "numpy.core.multiarray.ndarray", "numpy.core._methods._std", "numpy._NoValue"], "torch.jit.forward": ["torch.jit._unique_state_dict", "torch.jit.RecursiveScriptModule.graph", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.graph", "torch.jit.ONNXTracedModule.forward.wrapper", "torch.jit.ONNXTracedModule.wrapper", "torch.jit.forward.wrapper", "torch.jit._create_interpreter_name_lookup_fn"], "future.backports.datetime.date.timetuple": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "numpy.core.round": ["future.builtins.misc.round", "future.builtins.__init__.round", "numpy.ma.core.round", "numpy.array_api.__init__.round", "numpy.core.fromnumeric.round_"], "numpy.core.single": [], "torch.__init__.stack": ["torch.__init__.stack", "torch.distributions.constraints.stack", "numpy.ma.extras.stack", "numpy.core.shape_base.stack", "numpy.array_api.__init__.stack"], "torch.multiprocessing.reductions.init_reductions": ["torch.multiprocessing.reductions.reduce_event", "multiprocessing.reduction.ForkingPickler", "torch", "torch.multiprocessing.reductions.StorageWeakRef.__init__", "torch.multiprocessing.reductions.SharedCache.__init__", "torch.multiprocessing.reductions.SharedCache._after_fork", "torch.multiprocessing.reductions.SharedCache.__setitem__", "torch.multiprocessing.reductions.reduce_storage", "torch.multiprocessing.reductions.reduce_tensor", "torch.cuda", "torch._storage_classes", "torch._tensor_classes", "torch.Tensor", "torch.nn", "multiprocessing.reduction.ForkingPickler.register"], "click._winconsole._WindowsConsoleWriter.write": ["click._winconsole._WindowsConsoleRawIOBase", "click._winconsole._WindowsConsoleReader.readable", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole.get_buffer", "ctypes.c_ulong", "ctypes.wintypes.HANDLE", "ctypes.byref"], "future.backports.email._header_value_parser.Parameter": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.Branch.get_firstset": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "regex._regex_core.Property.optimise": ["regex._regex_core.RegexBase"], "numpy.atleast_2d": ["numpy.ma.extras.atleast_2d", "numpy.core.shape_base.atleast_2d"], "regex._regex_core.Atomic.fix_groups": ["regex._regex_core.RegexBase"], "regex._regex_core.Branch.fix_groups": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "numpy.core.defchararray.expandtabs": ["numpy.core.defchararray._to_string_or_unicode_array", "numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray._expandtabs_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.expandtabs"], "numpy.cumsum": ["numpy.ma.core.cumsum", "numpy.core.fromnumeric.cumsum"], "future.backports.email._parseaddr.AddressList.__add__": ["future.backports.email._parseaddr.AddrlistClass", "future.backports.email._parseaddr.AddressList", "future.backports.email._parseaddr.AddrlistClass.gotonext"], "future.backports.email._header_value_parser.AngleAddr.domain": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "torch.where": ["numpy.ma.core.where", "numpy.core.numeric.where", "numpy.core.multiarray.where", "numpy.array_api.__init__.where", "certifi.__init__.where"], "numpy.core.defchararray.rsplit": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray._split_dispatcher", "numpy.core.defchararray.chararray.rsplit", "numpy.core.defchararray.rsplit"], "future.backports.email._header_value_parser.get_fws": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser.WhiteSpaceTerminal"], "torch.utils.data.sampler.RandomSampler": ["torch.utils.data.sampler.Sampler"], "zlib.decompressobj": [], "regex._regex_core.GreedyRepeat.optimise": ["regex._regex_core.RegexBase"], "numpy.core.fromnumeric.product": ["numpy.core.fromnumeric.prod", "numpy.core.fromnumeric._prod_dispatcher"], "numpy.array_api.__init__.squeeze": ["numpy.ma.core.squeeze", "numpy.core.fromnumeric.squeeze", "numpy.array_api.__init__.squeeze", "numpy.array_api._manipulation_functions.squeeze"], "click.types.DateTime.get_metavar": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "regex._regex_core.Sequence.get_required_string": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "regex._regex_core.Character.optimise": ["regex._regex_core.RegexBase"], "transformers.file_utils.ModelOutput.setdefault": ["collections.OrderedDict"], "numpy.core.defchararray.count": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.int_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray._count_dispatcher", "numpy.core.defchararray.chararray.count", "numpy.core.defchararray.count"], "regex._regex_core.RegexBase.get_firstset": ["regex._regex_core._FirstSetError"], "numpy.lib.npyio.BagObj": [], "numpy.core.isfinite": ["numpy.core.umath.isfinite", "numpy.array_api.__init__.isfinite"], "numpy.core.umath.SHIFT_UNDERFLOW": ["numpy.core.umath.SHIFT_UNDERFLOW"], "numpy.linalg.linalg.cholesky": ["numpy.linalg.linalg.get_linalg_error_extobj", "numpy.linalg.linalg._raise_linalgerror_nonposdef", "numpy.linalg._umath_linalg", "numpy.linalg.linalg._makearray", "numpy.linalg.linalg._assert_stacked_2d", "numpy.linalg.linalg._assert_stacked_square", "numpy.linalg.linalg._commonType", "numpy.linalg.linalg.isComplexType", "numpy.linalg.linalg._unary_dispatcher", "numpy.linalg._umath_linalg.cholesky_lo"], "future.backports.email._header_value_parser.AddrSpec.domain": ["future.backports.email._header_value_parser.TokenList"], "numpy.core.numeric.bool_": ["numpy.ma.core.bool_", "numpy.core.numerictypes.bool_"], "click._compat._is_binary_writer": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.IO", "typing.Any"], "transformers.file_utils.url_to_filename": ["hashlib.sha256"], "string.ascii_letters": [], "future.backports.datetime._check_date_fields": ["future.backports.datetime.date.year", "future.backports.datetime.year", "future.builtins.int", "future.backports.datetime.date.month", "future.backports.datetime.month", "future.backports.datetime._days_in_month", "future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.day"], "torch.serialization._opener.__enter__": [], "regex._regex_core.Info": [], "click.types.ParamType.to_info_dict": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "typing.ClassVar", "typing.Optional", "typing.Dict", "typing.Any"], "numpy.f2py.auxfuncs.isstring_or_stringarray": ["numpy.f2py.auxfuncs._ischaracter"], "numpy.core.defchararray.find": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.int_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray._count_dispatcher", "numpy.core.defchararray.chararray.find", "numpy.core.defchararray.chararray.rfind", "numpy.core.defchararray.find"], "regex._regex_core.Group.is_atomic": ["regex._regex_core.RegexBase"], "regex._regex_core.Prune": ["regex._regex_core.ZeroWidthBase"], "numpy.ma.extras.issequence": ["numpy.ndarray"], "regex._regex_core.GreedyRepeat.__init__": ["regex._regex_core.RegexBase"], "torch.serialization._load.load_tensor": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization._get_restore_location", "io", "torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "struct", "struct.pack", "io.BytesIO"], "regex._regex_core.Group.get_required_string": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser.NameAddr.display_name": ["future.backports.email._header_value_parser.TokenList"], "torch.serialization._open_zipfile_writer_file.__exit__": ["torch.serialization._opener"], "numpy.array_api.__init__.flip": ["numpy.lib.function_base.flip", "numpy.array_api.__init__.flip", "numpy.array_api._manipulation_functions.flip"], "click.types.Choice.shell_complete": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.__call__", "click.types.ParamType.convert", "click.types.ParamType.shell_complete", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.to_info_dict", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.to_info_dict", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types._NumberRangeBase._clamp", "click.types._NumberRangeBase._describe_range", "click.types.IntRange._clamp", "click.types.FloatRange._clamp", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.to_info_dict", "click.types.Tuple.convert", "click.shell_completion.CompletionItem", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.split_envvar_value", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.Choice.__init__", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.DateTime.__init__", "click.types.DateTime.get_metavar", "click.types._NumberRangeBase.__init__", "click.types.FloatRange.__init__", "click.types.File.__init__", "click.types.Path.__init__", "click.types.Tuple.__init__", "click.types.Tuple.arity", "typing", "typing.List"], "click.types._NumberRangeBase.convert": ["click.types._NumberParamTypeBase", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "operator", "click.types.ParamType.__call__", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase._clamp", "click.types._NumberRangeBase._describe_range", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.IntRange._clamp", "click.types.FloatParamType.__repr__", "click.types.FloatRange._clamp", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "click.types.File.resolve_lazy_flag", "gettext.gettext", "typing.Any", "typing.Optional", "operator.le", "operator.lt", "operator.ge", "operator.gt"], "future.backports.email._header_value_parser.TokenList.startswith_fws": ["future.builtins.list"], "regex._regex_core.Keep": ["regex._regex_core.ZeroWidthBase"], "future.backports.email._header_value_parser.DomainLiteral.ip": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "regex._regex_core.Any.max_width": ["regex._regex_core.RegexBase"], "urllib3.exceptions.SSLError": ["urllib3.exceptions.HTTPError"], "regex._regex_core.Range.max_width": ["regex._regex_core.RegexBase"], "regex._regex_core.Fuzzy._constraints_to_string": ["regex._regex_core.RegexBase", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.contains_group", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.Sequence.contains_group", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width"], "regex._regex_core.Range.rebuild": ["regex._regex_core.RegexBase", "regex._regex_core.Range"], "torch.serialization.normalize_storage_type": ["torch"], "future.backports.email._header_value_parser._validate_xtext": ["future.backports.email.errors", "future.backports.email.utils", "future.backports.email.utils._has_surrogates", "future.backports.email.errors.NonPrintableDefect", "future.backports.email.errors.UndecodableBytesDefect"], "torch._linalg_utils.transpose": [], "numpy.core.inexact": [], "regex._regex_core.Sequence.get_firstset": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "regex._regex_core.Info.__init__": ["regex._regex_core.RegexBase.with_flags"], "numpy.core.defchararray.translate": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.numerictypes.unicode_", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._clean_args", "numpy.core.defchararray._translate_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.translate", "numpy.asarray"], "transformers.file_utils.http_get": ["typing.Union", "typing.Dict", "transformers.__version__", "sys", "transformers.file_utils.is_torch_available", "torch", "transformers.file_utils.is_tf_available", "tensorflow", "requests", "tqdm.auto.tqdm", "transformers.utils.logging", "transformers.utils.logging.get_verbosity", "transformers.utils.logging.NOTSET", "torch.__version__", "sys.version", "requests.get", "tensorflow.__version__"], "click.types.BoolParamType.convert": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.ParamType.__call__", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase._clamp", "click.types._NumberRangeBase._describe_range", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.IntRange._clamp", "click.types.FloatParamType.__repr__", "click.types.FloatRange._clamp", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "click.types.File.resolve_lazy_flag", "gettext.gettext", "typing.Any", "typing.Optional"], "regex._regex_core.LookAroundConditional.is_atomic": ["regex._regex_core.RegexBase"], "torch.jit.RecursiveScriptModule._save_for_lite_interpreter": ["torch.jit.ScriptModule"], "click._textwrap.TextWrapper": ["textwrap", "textwrap.TextWrapper"], "numpy.core.fromnumeric.swapaxes": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._swapaxes_dispatcher"], "regex._regex_core.GreedyRepeat.can_be_affix": ["regex._regex_core.RegexBase"], "google.protobuf.pyext._message.FileDescriptor": [], "numpy.core.fromnumeric._around_dispatcher": [], "regex._regex_core.Branch.contains_group": ["regex._regex_core.RegexBase", "regex._regex_core.Source.get_many", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "numpy.core.numeric.swapaxes": ["numpy.ma.core.swapaxes", "numpy.core.fromnumeric.swapaxes"], "click.types.CompositeParamType.arity": ["click.types.ParamType"], "google.protobuf.descriptor._ToCamelCase": ["google.protobuf.descriptor.Descriptor.fields_by_camelcase_name", "google.protobuf.descriptor.FieldDescriptor.camelcase_name", "google.protobuf.descriptor.FieldDescriptor.has_presence", "google.protobuf.descriptor.DescriptorMetaclass.__instancecheck__"], "numpy.lib.shape_base._array_split_dispatcher": [], "urllib3.response._get_decoder": ["urllib3.response.MultiDecoder", "urllib3.response.GzipDecoder", "brotli", "urllib3.response.BrotliDecoder", "urllib3.response.DeflateDecoder"], "torch.jit.__init__.TracerWarning": [], "regex._regex_core.Atomic.max_width": ["regex._regex_core.RegexBase"], "numpy.array_api.__init__.square": ["numpy.core.umath.square", "numpy.array_api.__init__.square", "numpy.array_api._elementwise_functions.square"], "regex._regex_core.LookAroundConditional.is_empty": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser.TokenList.pop_leading_fws": ["future.builtins.list"], "regex._regex_core.Atomic.can_be_affix": ["regex._regex_core.RegexBase"], "click.types.Tuple.name": ["click.types.CompositeParamType", "click.types.CompositeParamType.arity", "click.types.Tuple.arity"], "numpy.core.numeric.arccos": ["numpy.lib.scimath.arccos", "numpy.ma.core.arccos", "numpy.core.umath.arccos"], "future.backports.email._header_value_parser.NameAddr.route": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.Fuzzy.fix_groups": ["regex._regex_core.RegexBase"], "torch.flip": ["numpy.lib.function_base.flip", "numpy.array_api.__init__.flip"], "numpy.lib.shape_base._make_along_axis_idx": ["numpy.core.numeric", "numpy.core.numeric.issubdtype", "numpy.core.numeric.integer", "numpy.core.numeric.arange"], "numpy.compat._inspect.ismethod": ["types", "types.MethodType"], "future.types.no": ["numbers.Integral", "future.types.disallow_types"], "ipywidgets.FloatProgress": [], "click.types.ParamType.get_metavar": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "typing.ClassVar", "typing.Optional"], "torch.jit.RecursiveScriptModule.graph": ["torch.jit.ScriptModule"], "future.backports.datetime._isoweek1monday": ["future.backports.datetime._ymd2ord", "future.backports.datetime.date.year", "future.backports.datetime.year"], "transformers.configuration_auto.AutoConfig.__init__": [], "numpy.linalg.linalg.eigh": ["numpy.linalg.linalg._makearray", "numpy.linalg.linalg._assert_stacked_2d", "numpy.linalg.linalg._assert_stacked_square", "numpy.linalg.linalg._commonType", "numpy.linalg.linalg.get_linalg_error_extobj", "numpy.linalg.linalg._raise_linalgerror_eigenvalues_nonconvergence", "numpy.linalg._umath_linalg", "numpy.linalg.linalg.isComplexType", "numpy.linalg.linalg._realType", "numpy.linalg.linalg._eigvalsh_dispatcher", "numpy.linalg._umath_linalg.eigh_lo", "numpy.linalg._umath_linalg.eigh_up"], "numpy.polynomial.polyutils._fit": ["numpy", "numpy.polynomial.polyutils.RankWarning", "warnings", "numpy.asarray", "numpy.sort", "numpy.finfo", "numpy.complexfloating", "numpy.sqrt", "numpy.square", "numpy.linalg", "numpy.zeros", "warnings.warn"], "io.UnsupportedOperation": [], "click.types.DateTime._try_to_convert_date": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "datetime.datetime", "typing.Any", "typing.Optional", "datetime.datetime.strptime"], "click._compat._safe_write": ["click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.seekable", "click._compat._AtomicFile.close"], "numpy.linalg.linalg.norm": ["numpy.core.asarray", "numpy.core.inexact", "numpy.core.object_", "numpy.linalg.linalg.isComplexType", "numpy.core.sqrt", "numpy.core.Inf", "numpy.core.multiarray.normalize_axis_index", "numpy.linalg.linalg._multi_svd_norm", "numpy.core.amax", "numpy.core.abs", "numpy.core.amin", "numpy.core.add", "numpy.core.reciprocal", "numpy.core.sum", "numpy.linalg.linalg._norm_dispatcher", "numpy.core.add.reduce"], "click._winconsole._WindowsConsoleReader.readinto": ["click._winconsole._WindowsConsoleRawIOBase", "click._winconsole._WindowsConsoleReader.readable", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole.get_buffer", "ctypes.c_ulong", "ctypes.wintypes.HANDLE", "ctypes.byref", "time", "time.sleep"], "torch.serialization.raise_err_msg": ["torch.serialization._opener.__enter__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__exit__"], "torch.serialization.mkdtemp": ["tempfile", "shutil", "contextlib.contextmanager", "shutil.rmtree", "tempfile.mkdtemp"], "regex._regex_core.Sequence.has_simple_start": ["regex._regex_core.RegexBase"], "regex._regex.compile": [], "future.backports.datetime.time.strftime": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "regex._regex_core.RefGroup.max_width": ["regex._regex_core.RegexBase"], "regex._regex_core.SetBase._handle_case_folding": ["regex._regex_core.RegexBase", "regex._regex", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Branch._is_folded", "regex._regex_core.String", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetUnion._compile", "regex._regex_core.String._compile", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "regex._regex_core.Branch", "regex._regex.get_expand_on_folding", "regex._regex.fold_case"], "torch._lobpcg.LOBPCG.update": ["torch", "torch._linalg_utils", "torch.norm", "torch._linalg_utils.matmul"], "future.backports.datetime.datetime.timetz": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "tensorflow.Tensor": [], "numpy.core.defchararray._strip_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "future.backports.email._header_value_parser.WhiteSpaceTokenList": ["future.backports.email._header_value_parser.TokenList"], "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts": ["future.backports.email._header_value_parser.TokenList"], "numpy.core.defchararray.join": ["numpy.core.defchararray._to_string_or_unicode_array", "numpy.core.multiarray._vec_string", "numpy.core.numerictypes.object_", "numpy.core.defchararray._join_dispatcher", "numpy.core.defchararray.chararray.join", "numpy.core.defchararray.join"], "regex._regex_core.RegexFlag": ["enum", "enum.IntFlag"], "regex._regex_core.EndOfString": ["regex._regex_core.ZeroWidthBase"], "regex._regex_core.Info.open_group": ["regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group"], "numpy.core.function_base._needs_add_docstring": ["types", "types.FunctionType", "types.MethodType"], "numpy.core.cdouble": [], "click.types.Path.convert": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "stat", "click.types.ParamType.__call__", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase._clamp", "click.types._NumberRangeBase._describe_range", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.IntRange._clamp", "click.types.FloatParamType.__repr__", "click.types.FloatRange._clamp", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "click.types.File.resolve_lazy_flag", "gettext.gettext", "click.utils.format_filename", "pathlib", "typing.ClassVar", "typing.Optional", "stat.S_ISREG", "stat.S_ISDIR", "pathlib.Path", "os.path", "os.fsdecode", "os.stat", "os.access", "os.R_OK", "os.W_OK", "os.X_OK"], "future.builtins.misc.min": ["future.builtins.misc.min", "future.builtins.__init__.min", "numpy.ma.core.min", "numpy.array_api.__init__.min", "future.builtins.new_min_max.newmin"], "numpy.compat._inspect.joinseq": [], "regex._regex_core.Namespace": [], "numpy.compat.pickle.dump": [], "numpy.polynomial.polynomial.polyvander": ["numpy.polynomial.polyutils", "numpy.polynomial.polynomial.Polynomial._repr_latex_term", "numpy", "numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy.polynomial.polyutils._deprecate_as_int", "numpy.array", "numpy.empty", "numpy.moveaxis"], "torch.jit.RecursiveScriptModule.graph_for": ["torch.jit.ScriptModule"], "numpy.core.numeric.string_": [], "numpy.core.argsort": ["numpy.ma.core.argsort", "numpy.core.fromnumeric.argsort", "numpy.array_api.__init__.argsort"], "regex._regex_core.Group.__init__": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group"], "future.backports.datetime.datetime.date": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "regex._regex_core.Group.get_firstset": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser.TokenList.comments": ["future.builtins.list", "future.backports.email._header_value_parser.TokenList.comments", "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments", "future.backports.email._header_value_parser.Comment.comments", "future.backports.email._header_value_parser.Terminal.comments", "future.backports.email._header_value_parser.comments"], "regex._regex_core.Conditional.can_be_affix": ["regex._regex_core.RegexBase"], "regex._regex_core.Character.rebuild": ["regex._regex_core.RegexBase", "regex._regex_core.Character"], "numpy.lib._iotools.validate": ["numpy.lib._iotools.LineSplitter.autostrip", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.LineSplitter.__call__", "numpy.lib._iotools.NameValidator.__call__", "numpy.lib._iotools.StringConverter._loose_call", "numpy.lib._iotools.StringConverter.__call__"], "numpy.array_api.__init__.positive": ["torch.distributions.constraints.positive", "numpy.core.umath.positive", "numpy.array_api.__init__.positive", "numpy.array_api._elementwise_functions.positive"], "numpy.core.defchararray.capitalize": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.capitalize", "numpy.asarray"], "numpy.array_api.__init__.zeros_like": ["numpy.ma.core.zeros_like", "numpy.core.numeric.zeros_like", "numpy.array_api.__init__.zeros_like", "numpy.array_api._creation_functions.zeros_like"], "future.backports.datetime._build_struct_time": ["future.backports.datetime._ymd2ord", "future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__mod__", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.month", "future.backports.datetime.date.timetuple", "future.backports.datetime.date._cmp", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.minute", "future.backports.datetime.time.microsecond", "future.backports.datetime.time._cmp", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime._cmp", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__reduce__", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__add__", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date.__reduce__", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.tzinfo.__reduce__", "future.backports.datetime.time.second", "future.backports.datetime.time.dst", "future.backports.datetime.time.__reduce__", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.date", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__add__", "future.backports.datetime.datetime.__reduce__", "future.backports.datetime.timezone.dst", "future.backports.datetime._days_before_month", "time", "time.struct_time"], "future.backports.email._header_value_parser.TokenList.pprint": ["future.builtins.list", "future.backports.email._header_value_parser.TokenList.pprint"], "regex._regex_core.Group.max_width": ["regex._regex_core.RegexBase"], "numpy.dual.norm": ["torch.functional.norm", "numpy.dual.norm", "numpy.linalg.linalg.norm"], "torch.nn": [], "numpy.compat.py3k.os_fspath": ["numpy.compat.py3k.os_fspath"], "click.types.Path.__init__": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "click.types.ParamType.__call__", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase._clamp", "click.types._NumberRangeBase._describe_range", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.IntRange._clamp", "click.types.FloatParamType.__repr__", "click.types.FloatRange._clamp", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "click.types.File.resolve_lazy_flag", "gettext.gettext", "os.path", "typing.ClassVar", "typing.Optional", "typing.Type", "typing.Any"], "numpy.lib.npyio._check_nonneg_int": ["operator", "operator.index"], "torch.serialization._legacy_load._check_container_source": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "torch.serialization._get_restore_location", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization.legacy_load", "torch.serialization._legacy_load.legacy_load", "tarfile", "torch.serialization._is_zipfile", "sys", "torch.serialization.persistent_load", "torch.serialization._legacy_load.legacy_load.persistent_load", "torch.serialization._load.persistent_load", "torch.serialization.legacy_load.persistent_load", "torch._utils_internal.get_source_lines_and_file", "warnings", "torch.serialization.SourceChangeWarning", "difflib", "torch", "torch.typename", "sys.version_info", "tarfile.TarError", "warnings.warn", "difflib.unified_diff"], "torch.jit.RecursiveScriptModule.save_to_buffer": ["torch.jit.ScriptModule"], "numpy.lib.function_base.flip": ["numpy.core.numeric.asarray", "numpy.core.numeric", "numpy", "numpy.lib.function_base._flip_dispatcher", "numpy.core.numeric.normalize_axis_tuple", "numpy.s_"], "torch.serialization._open_file.__exit__": ["torch.serialization._opener"], "numpy.core.arrayprint._leading_trailing": ["numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.StructuredVoidFormat.__call__", "numpy.core.numeric.concatenate", "numpy.core.arrayprint._leading_trailing", "numpy", "numpy.index_exp"], "regex._regex_core.Fuzzy.__init__": ["regex._regex_core.RegexBase", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.RegexFlag.__repr__", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__eq__", "regex._regex_core.RegexBase.__ne__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.__eq__", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.__eq__", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.__eq__", "regex._regex_core.CallGroup.__del__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.__eq__", "regex._regex_core.Conditional.__del__", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.__eq__", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.__eq__", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.__eq__", "regex._regex_core.Group.get_required_string", "regex._regex_core.Group.__del__", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.__eq__", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.__eq__", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.__del__", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.__eq__", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.__del__", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__del__", "regex._regex_core.Source.get", "regex._regex_core.Source.get_many", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Source.expect", "regex._regex_core.Source.at_end", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group"], "future.builtins.__init__.min": ["future.builtins.misc.min", "future.builtins.__init__.min", "numpy.ma.core.min", "numpy.array_api.__init__.min"], "future.utils.surrogateescape.NotASurrogateError": [], "numpy.ma.core.correlate": ["numpy.ma.core._convolve_or_correlate", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.view", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray._recursive_or", "numpy", "numpy.correlate"], "regex._regex_core.Fuzzy._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexFlag.__repr__", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__eq__", "regex._regex_core.RegexBase.__ne__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.__eq__", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.__eq__", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.__eq__", "regex._regex_core.CallGroup.__del__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.__eq__", "regex._regex_core.Conditional.__del__", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.__eq__", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.__eq__", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.__eq__", "regex._regex_core.Group.get_required_string", "regex._regex_core.Group.__del__", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.__eq__", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.__eq__", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.__del__", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.__eq__", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.__del__", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__del__", "regex._regex_core.Source.get", "regex._regex_core.Source.get_many", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Source.expect", "regex._regex_core.Source.at_end", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.RegexBase.with_flags"], "regex._regex_core.Sequence._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "regex._regex_core.Conditional._compile": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser._Folded.newline": [], "click._compat._NonClosingTextIOWrapper": ["io", "io.TextIOWrapper"], "regex._regex_core.String.get_required_string": ["regex._regex_core.RegexBase"], "future.backports.datetime.datetime._cmp": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.datetime", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date._cmp", "future.backports.datetime.time._cmp", "future.backports.datetime.datetime._cmp", "future.backports.datetime._cmp"], "future.backports.email._header_value_parser.Address.display_name": ["future.backports.email._header_value_parser.TokenList"], "numpy.core.defchararray.chararray.count": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.count", "numpy.core.defchararray.count", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.endswith", "numpy.core.numeric.ndarray.argsort"], "pickle.PickleError": [], "numpy.core.defchararray.isalnum": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.isalnum"], "torch.jit._builtins._get_builtin_table": ["torch.jit._builtins.register_all", "torch.jit._builtins._get_builtin_table.register_all", "torch._six.PY2", "math", "torch._six.PY37", "torch.distributed.autograd", "math.gcd", "math.isfinite", "math.remainder", "torch.distributed.autograd.is_available", "torch.distributed.autograd.get_gradients"], "numpy.core._ufunc_config.geterr": ["numpy.core.umath", "numpy.core.umath.SHIFT_DIVIDEBYZERO", "numpy.core.umath.SHIFT_OVERFLOW", "numpy.core.umath.SHIFT_UNDERFLOW", "numpy.core.umath.SHIFT_INVALID", "numpy.core.overrides.set_module", "numpy.core.umath.geterrobj"], "regex._regex_core.DefaultBoundary": ["regex._regex_core.ZeroWidthBase"], "future.backports.datetime._ord2ymd": ["future.backports.datetime.timedelta.__new__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__neg__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__ne__", "future.backports.datetime.date.__new__", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.month", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__ne__", "future.backports.datetime.date.isocalendar", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__new__", "future.backports.datetime.time.minute", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.__ne__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.__new__", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.now", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__ne__", "future.backports.datetime.timezone.__new__", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.date.year", "future.backports.datetime.year", "future.backports.datetime._is_leap", "future.backports.datetime.month", "future.backports.datetime._days_in_month"], "regex._regex_core._ALL_ENCODINGS": [], "google.protobuf.pyext._message.EnumValueDescriptor": [], "regex._regex_core.Prune._compile": ["regex._regex_core.ZeroWidthBase"], "click._winconsole._WindowsConsoleWriter.writable": ["click._winconsole._WindowsConsoleRawIOBase"], "numpy.core.umath.isnat": ["numpy.core.umath.isnat"], "requests.head": ["requests.api.head"], "click.types.FuncParamType": ["click.types.ParamType"], "numpy.lib.scimath._fix_real_abs_gt_1": ["numpy.core.numeric.asarray", "numpy.core.numeric.any", "numpy.lib.scimath._tocomplex", "numpy.lib.type_check.isreal"], "google.protobuf.internal.decoder.ReadTag": [], "regex._regex_core.Property.get_firstset": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset"], "torch.jit.RecursiveScriptModule._construct": ["torch.jit.ScriptModule", "torch.jit.RecursiveScriptModule", "torch.jit.OrderedDictWrapper", "torch.jit.OrderedModuleDict"], "future.backports.datetime._check_time_fields": ["future.backports.datetime.time.hour", "future.backports.datetime.datetime.hour", "future.backports.datetime.hour", "future.builtins.int", "future.backports.datetime.time.minute", "future.backports.datetime.datetime.minute", "future.backports.datetime.minute", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.second", "future.backports.datetime.microsecond"], "torch.jit.__init__.OrderedModuleDict.items": ["torch.jit.__init__.OrderedDictWrapper", "torch.jit.__init__.ONNXTracedModule.forward", "torch.jit.__init__.ONNXTracedModule.wrapper", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.TracedModule.forward", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.graph", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__dir__"], "future.backports.email._header_value_parser.InvalidParameter": ["future.backports.email._header_value_parser.Parameter"], "numpy.lib.polynomial._polyfit_dispatcher": ["numpy.lib.polynomial.poly1d.__array__", "numpy.lib.polynomial.poly1d.__pow__"], "future.backports.email._header_value_parser.LocalPart.local_part": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.addresses"], "numpy.core.shape_base.atleast_2d": ["numpy.core.multiarray.asanyarray", "numpy.core.numeric", "numpy.core.shape_base._atleast_2d_dispatcher", "numpy.core.numeric.newaxis"], "future.backports.datetime.tzinfo": [], "numpy.core.defchararray.index": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.int_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray._count_dispatcher", "numpy.core.defchararray.chararray.index", "numpy.core.defchararray.chararray.rindex", "numpy.core.defchararray.index"], "transformers.configuration_auto.AutoConfig.for_model": [], "regex._regex_core.Branch._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "numpy.ma.core.left_shift": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.core.umath", "numpy.ma.core.filled", "numpy.core.umath.left_shift"], "regex._regex_core._get_required_string": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "regex._regex_core.RegexBase.with_flags"], "numpy.core.complexfloating": [], "regex._regex_core.Sequence.fix_groups": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "torch.jit.RecursiveScriptModule.__dir__": ["torch.jit.ScriptModule", "torch._six.get_function_from_type", "torch.jit.RecursiveScriptModule"], "torch._linalg_utils.bform": ["torch._linalg_utils.matmul", "torch._linalg_utils.transpose"], "numpy.linalg._umath_linalg.svd_m_s": [], "numpy.core.numeric.isclose.within_tol": ["numpy.core.multiarray.asanyarray", "numpy.core.multiarray", "numpy.core.numeric.within_tol", "numpy.core.numeric.isclose.within_tol", "numpy.core.numeric.zeros_like", "numpy.core.numeric.ones_like", "numpy.core.numeric._isclose_dispatcher", "numpy.core._ufunc_config.errstate", "numpy.core._ufunc_config._no_nep50_warning", "numpy.core.multiarray.result_type"], "torch.jit.TracedModule._get_name": ["torch.jit.ScriptModule"], "future.backports.email._header_value_parser.Mailbox.route": ["future.backports.email._header_value_parser.TokenList"], "torch.distributions.constraints.stack": ["torch.__init__.stack", "torch.distributions.constraints.stack", "numpy.ma.extras.stack", "numpy.core.shape_base.stack", "numpy.array_api.__init__.stack"], "numpy.atleast_1d": ["numpy.ma.extras.atleast_1d", "numpy.core.shape_base.atleast_1d"], "torch._lobpcg.LOBPCG._update_ortho": ["torch", "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform", "torch._lobpcg.LOBPCG.__init__", "torch._lobpcg.LOBPCG.update_converged_count", "torch._lobpcg.LOBPCG.stop_iteration", "torch._lobpcg.LOBPCG.run", "torch._linalg_utils", "torch.matmul", "torch._linalg_utils.qform", "torch._linalg_utils.symeig", "torch._linalg_utils.basis", "torch._linalg_utils.transpose"], "torch.serialization._open_zipfile_reader.__init__": ["torch.serialization._opener", "torch.serialization._open_zipfile_reader", "torch", "torch._C"], "numpy.core.umath.SHIFT_DIVIDEBYZERO": ["numpy.core.umath.SHIFT_DIVIDEBYZERO"], "regex._regex_core.Source.skip_while": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "string.index"], "transformers.configuration_utils.PretrainedConfig.to_json_string": ["transformers.configuration_utils.PretrainedConfig.to_json_string", "transformers.configuration_utils.PretrainedConfig.get_config_dict", "transformers.configuration_utils.PretrainedConfig.from_json_file", "transformers.configuration_utils.PretrainedConfig._dict_from_json_file", "transformers.configuration_utils.PretrainedConfig.to_json_file", "json", "json.dumps"], "numpy.array_api.__init__.tensordot": ["torch.functional.tensordot", "numpy.core.numeric.tensordot", "numpy.array_api.linalg.tensordot", "numpy.array_api.__init__.tensordot"], "future.backports.email._header_value_parser.ContentDisposition": ["future.backports.email._header_value_parser.ParameterizedHeaderValue"], "regex._regex_core.Boundary": ["regex._regex_core.ZeroWidthBase"], "regex._regex_core.LookAround.can_be_affix": ["regex._regex_core.RegexBase"], "IPython.html.widgets.FloatProgress": [], "numpy.lib.format._write_array_header": ["numpy.lib.format._wrap_header_guess_version", "numpy.lib.format._wrap_header"], "regex._regex_core.RegexBase.is_empty": [], "future.backports.datetime._ymd2ord": ["future.backports.datetime.date.month", "future.backports.datetime.month", "future.backports.datetime._days_in_month", "future.backports.datetime.date.year", "future.backports.datetime.year", "future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.day", "future.backports.datetime._days_before_year", "future.backports.datetime._days_before_month"], "numpy.memmap": ["numpy.core.memmap.memmap", "numpy.core.__init__.memmap"], "regex._regex_core.Character.__init__": ["regex._regex_core.RegexBase", "regex._regex", "regex._regex.fold_case"], "future.backports.email._header_value_parser.InvalidMailbox.display_name": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.local_part", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.domain", "future.backports.email._header_value_parser.NameAddr.route", "future.backports.email._header_value_parser.AngleAddr.route", "future.backports.email._header_value_parser.Mailbox.route", "future.backports.email._header_value_parser.route", "future.backports.email._header_value_parser.NameAddr.addr_spec", "future.backports.email._header_value_parser.AngleAddr.addr_spec", "future.backports.email._header_value_parser.Mailbox.addr_spec", "future.backports.email._header_value_parser.AddrSpec.addr_spec", "future.backports.email._header_value_parser.addr_spec", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.display_name"], "numpy.array_api.__init__.full_like": ["numpy.core.numeric.full_like", "numpy.array_api.__init__.full_like", "numpy.array_api._creation_functions.full_like"], "regex._regex_core.LookAround.get_firstset": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset"], "click.types.Choice.convert": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.FloatParamType.__repr__", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "gettext.ngettext", "typing.Any", "typing.Optional"], "regex._regex_core.SetBase.__init__": ["regex._regex_core.RegexBase"], "regex._regex_core.Character.max_width": ["regex._regex_core.RegexBase"], "torch.serialization._open_buffer_reader.__init__": ["torch.serialization._opener", "torch.serialization._open_buffer_reader", "torch.serialization._check_seekable"], "torch.serialization.location_tag": ["torch.serialization._opener.__init__", "torch.serialization._opener.__enter__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__init__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_reader.__init__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._open_zipfile_writer_file.__init__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__init__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "torch", "torch.typename"], "future.backports.email._header_value_parser.UnstructuredTokenList.cte_encode": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.get_unstructured"], "numpy.core.numeric.roll": ["numpy.core.multiarray.asanyarray", "numpy.core.numeric.indices", "numpy.core.numeric.normalize_axis_tuple", "numpy.core.multiarray.broadcast", "numpy.core.multiarray.empty_like", "itertools", "numpy.core.numeric.roll", "numpy.core.numeric._roll_dispatcher", "itertools.product"], "numpy.core.numeric.unicode_": [], "torch.utils.data.sampler.SequentialSampler": ["torch.utils.data.sampler.Sampler"], "numpy.ma.core.right_shift": ["numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core.MaskedIterator.__getitem__", "numpy.ma.core.MaskedIterator.__setitem__", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__getitem__", "numpy.ma.core.MaskedArray.__setitem__", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.compressed", "numpy.ma.core.MaskedArray.compress", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__mul__", "numpy.ma.core.MaskedArray.__rmul__", "numpy.ma.core.MaskedArray.__imul__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.sum", "numpy.ma.core.MaskedArray.cumsum", "numpy.ma.core.MaskedArray.cumprod", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.min", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.mvoid.__getitem__", "numpy.ma.core.mvoid.__setitem__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getmask", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core._MaskedBinaryOperation.reduce", "numpy.ma.core.MaskedArray.dtype", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray.ids", "numpy.ma.core.MaskedArray.dot", "numpy.ma.core.MaskedArray.prod", "numpy.ma.core.MaskedArray.std", "numpy.ma.core.MaskedArray.round", "numpy.ma.core.MaskedArray.__reduce__", "numpy.ma.core.MaskedArray.__deepcopy__", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__reduce__", "numpy.ma.core.MaskedConstant.__deepcopy__", "numpy.ma.core._extrema_operation.reduce", "numpy.ma.core._frommethod.getdoc", "numpy.ma.core._convert2ma.getdoc", "numpy.ma.core._DomainCheckInterval.__init__", "numpy.ma.core._DomainTan.__init__", "numpy.ma.core._DomainSafeDivide.__init__", "numpy.ma.core._DomainGreater.__init__", "numpy.ma.core._DomainGreaterEqual.__init__", "numpy.ma.core._MaskedUFunc.__init__", "numpy.ma.core._MaskedUnaryOperation.__init__", "numpy.ma.core._MaskedBinaryOperation.__init__", "numpy.ma.core._DomainedBinaryOperation.__init__", "numpy.ma.core._MaskedPrintOption.__init__", "numpy.ma.core.MaskedIterator.__init__", "numpy.ma.core.MaskedIterator.__next__", "numpy.ma.core.MaskedArray.__new__", "numpy.ma.core.MaskedArray.__ne__", "numpy.ma.core.MaskedArray.__int__", "numpy.ma.core.MaskedArray.count", "numpy.ma.core.MaskedArray.iscontiguous", "numpy.ma.core.MaskedArray.nonzero", "numpy.ma.core.MaskedArray.tostring", "numpy.ma.core.mvoid.__new__", "numpy.ma.core.mvoid.__len__", "numpy.ma.core.MaskedConstant.__new__", "numpy.ma.core._extrema_operation.__init__", "numpy.ma.core._frommethod.__init__", "numpy.ma.core._convert2ma.__init__", "numpy.core.umath", "numpy.ma.core.filled", "numpy.core.umath.right_shift"], "string.digits": [], "numpy.core.fromnumeric.squeeze": ["numpy.core.fromnumeric.squeeze", "numpy.core.fromnumeric._wrapit", "numpy.core.fromnumeric._squeeze_dispatcher"], "torch.jit.__init__.Attribute": ["torch.jit.__init__.OrderedDictWrapper.values"], "torch.jit._disable_tracing.__enter__": [], "click.types.ParamType.split_envvar_value": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "typing.ClassVar", "typing.Optional", "typing.Sequence"], "regex._regex_core.LookAroundConditional.max_width": ["regex._regex_core.RegexBase", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width"], "numpy.lib._iotools.LineSplitter.autostrip": ["numpy.lib._iotools.LineSplitter.__init__", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.LineSplitter.__call__", "numpy.lib._iotools.NameValidator.__init__", "numpy.lib._iotools.NameValidator.__call__", "numpy.lib._iotools.StringConverter._getdtype", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._dtypeortype", "numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.lib._iotools.StringConverter.__init__", "numpy.lib._iotools.StringConverter._loose_call", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.StringConverter.__call__", "numpy.lib._iotools.StringConverter._do_upgrade"], "future.backports.datetime.date.strftime": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "regex._regex_core._UnscopedFlagSet": [], "sacremoses.tokenize.MosesTokenizer.restore_multidots": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile", "re.sub"], "numpy.core.arrayprint.FloatingFormat.__init__": ["numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint._none_or_positive_arg"], "urllib3.response.HTTPResponse.close": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "numpy.lib.twodim_base._vander_dispatcher": [], "click.types.FuncParamType.convert": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Any", "typing.Optional"], "future.backports.datetime.time._cmp": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "transformers.configuration_auto.replace_list_option_in_docstrings.docstring_decorator": ["transformers.configuration_auto.docstring_decorator", "transformers.configuration_auto.replace_list_option_in_docstrings.docstring_decorator", "transformers.configuration_auto.AutoConfig.__init__", "transformers.configuration_auto.AutoConfig.from_pretrained", "re", "transformers.configuration_auto._list_model_options", "re.search"], "numpy.lib._iotools.LineSplitter.__init__": ["numpy.lib._iotools._decode_line", "numpy.lib._iotools.LineSplitter.autostrip", "numpy.lib._iotools.StringConverter._strict_call", "numpy", "numpy.lib._iotools.LineSplitter.__init__", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.NameValidator.__init__", "numpy.lib._iotools.NameValidator.validate", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.lib._iotools.StringConverter.__init__", "numpy.lib._iotools.StringConverter.iterupgrade", "numpy.lib._iotools.autostrip", "numpy.cumsum"], "torch._linalg_utils.is_sparse": ["torch", "torch.Tensor", "torch.sparse_coo"], "string.digits.encode": [], "regex._regex_core.Fuzzy.is_empty": ["regex._regex_core.RegexBase"], "regex._regex_core.GreedyRepeat.max_width": ["regex._regex_core.RegexBase"], "torch._lobpcg.LOBPCG._get_ortho": ["torch", "torch._linalg_utils", "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform", "torch._lobpcg.LOBPCG.__init__", "torch._lobpcg.LOBPCG.update_residual", "torch._lobpcg.LOBPCG.stop_iteration", "torch._lobpcg.LOBPCG._update_basic", "torch.matmul", "torch.norm", "torch.numel", "torch.eye", "torch._linalg_utils.matmul", "torch._linalg_utils.transpose"], "numpy.core.numeric.int_": ["numpy.core.numerictypes.int_"], "google.protobuf.descriptor._NestedDescriptorBase": ["google.protobuf.descriptor.DescriptorBase"], "numpy.core.defchararray._mod_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "torch.jit._disable_tracing.__exit__": [], "regex._regex_core.OP.SUCCESS": [], "urllib3.exceptions.IncompleteRead": ["urllib3.exceptions.HTTPError", "urllib3.packages.six.moves.http_client.IncompleteRead"], "regex._regex_core.Property.rebuild": ["regex._regex_core.RegexBase", "regex._regex_core.Property"], "numpy.core.swapaxes": ["numpy.ma.core.swapaxes", "numpy.core.fromnumeric.swapaxes"], "numpy.compat.py3k.asbytes": [], "regex._regex_core.DefaultStartOfWord": ["regex._regex_core.ZeroWidthBase"], "numpy.f2py.symbolic._FromStringWorker": [], "numpy.core.defchararray.replace": ["numpy.core.defchararray._to_string_or_unicode_array", "numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray.chararray.__new__", "numpy.core.defchararray._clean_args", "numpy.core.defchararray.chararray.count", "numpy.core.defchararray.count", "numpy.core.defchararray._replace_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.replace"], "torch.jit.ScriptMeta.init_then_script": ["torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.ScriptMeta.__init__.make_stubs", "torch.jit.ScriptMeta.init_then_script.make_stubs", "torch.jit.ScriptMeta.make_stubs", "torch.jit.__init__.init_then_script.make_stubs", "torch.jit.ONNXTracedModule.__init__", "torch.jit.TracingCheckError.__init__", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__init__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.OrderedDictWrapper.__init__", "torch.jit.OrderedDictWrapper.__len__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.__init__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.ScriptMeta.__init__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.TracedModule.__init__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.TracedModule.extra_repr", "torch.jit.TracedModule.check_unique", "torch.jit._disable_tracing.__enter__", "torch.jit._disable_tracing.__exit__", "torch.jit._CachedForward.__get__", "torch.jit.ScriptModule.__init__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__init__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.RecursiveScriptModule.get_debug_state", "torch.jit.RecursiveScriptModule.extra_repr", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.__getstate__", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.RecursiveScriptModule.__len__", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.RecursiveScriptModule.__bool__", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.OrderedDictWrapper.keys", "functools", "functools.wraps"], "torch.jit.TracedModule": ["torch.jit.ScriptModule"], "numpy.linalg.linalg._svd_dispatcher": [], "future.backports.datetime.datetime.fromtimestamp": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime._check_tzinfo_arg", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname", "time", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__lt__", "future.backports.datetime.timedelta.__gt__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.today", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.month", "future.backports.datetime.date.timetuple", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__lt__", "future.backports.datetime.date.__gt__", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.minute", "future.backports.datetime.time.__lt__", "future.backports.datetime.time.__gt__", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__lt__", "future.backports.datetime.datetime.__gt__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__divmod__", "future.builtins.int", "future.backports.datetime.timedelta.days", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.timedelta.__mod__", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date._cmp", "future.backports.datetime.time.microsecond", "future.backports.datetime.time._cmp", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime._cmp", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__reduce__", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date.__reduce__", "future.backports.datetime.tzinfo.__reduce__", "future.backports.datetime.time.second", "future.backports.datetime.time.__reduce__", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.__reduce__", "future.backports.datetime.weekday", "future.backports.datetime.dst", "time.localtime", "time.gmtime"], "click.types.FuncParamType.to_info_dict": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.FuncParamType.to_info_dict", "click.types.Choice.to_info_dict", "click.types.DateTime.to_info_dict", "click.types._NumberRangeBase.to_info_dict", "click.types.File.to_info_dict", "click.types.Path.to_info_dict", "click.types.Tuple.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Dict", "typing.Any"], "torch.jit.__init__.QualnameWrapper": [], "transformers.file_utils._resumable_file_manager": ["transformers.file_utils.ModelOutput.setdefault", "contextlib.contextmanager"], "future.builtins.__init__.max": ["future.builtins.misc.max", "future.builtins.__init__.max", "numpy.ma.core.max", "numpy.array_api.__init__.max"], "regex._regex_core.Fuzzy": ["regex._regex_core.RegexBase"], "numpy.lib._iotools.StringConverter.iterupgrade": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools._strict_call", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_"], "packaging.version.Version.__str__": ["packaging.version._BaseVersion", "packaging.version.Version.__repr__", "packaging.version.Version.release", "packaging.version.Version.pre", "packaging.version.Version.is_prerelease", "packaging.version.Version.is_postrelease", "packaging.version.Version.is_devrelease", "re", "packaging.version.Version.__str__", "re.compile", "re.VERBOSE", "re.IGNORECASE"], "regex._regex_core.GreedyRepeat.fix_groups": ["regex._regex_core.RegexBase"], "numpy.array_api._array_object.device": ["numpy.array_api._typing.Device"], "regex._regex_core.LookAroundConditional.get_required_string": ["regex._regex_core.RegexBase"], "future.backports.datetime.datetime.__add__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta", "future.backports.datetime.time.hour", "future.backports.datetime.datetime.hour", "future.backports.datetime.hour", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.time.minute", "future.backports.datetime.datetime.minute", "future.backports.datetime.minute", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.second", "future.backports.datetime.datetime", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "future.backports.datetime._days_before_month": ["future.backports.datetime.date.month", "future.backports.datetime.month", "future.backports.datetime._is_leap", "future.backports.datetime.date.year", "future.backports.datetime.year"], "numpy.core.defchararray._to_string_or_unicode_array": ["numpy", "numpy.asarray"], "future.backports.email._parseaddr.AddressList.__iadd__": ["future.backports.email._parseaddr.AddrlistClass", "future.backports.email._parseaddr.AddrlistClass.gotonext"], "future.backports.datetime.date.fromtimestamp": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "time.localtime"], "future.backports.email.errors.UndecodableBytesDefect": ["future.backports.email.errors.MessageDefect"], "regex._regex_core.Branch._can_split": ["regex._regex_core.RegexBase", "regex._regex_core.Branch"], "numpy.core.defchararray.title": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.istitle", "numpy.core.defchararray.chararray.title", "numpy.core.defchararray.title", "numpy.asarray"], "torch.jit.RecursiveScriptModule.__getattr__": ["torch.jit.ScriptModule", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule", "torch.jit.script_method"], "future.backports.email._header_value_parser.Mailbox.local_part": ["future.backports.email._header_value_parser.TokenList"], "future.types.newdict.BaseNewDict": [], "numpy.ma.extras.stack": ["torch.__init__.stack", "torch.distributions.constraints.stack", "numpy.ma.extras.stack", "numpy.core.shape_base.stack", "numpy.array_api.__init__.stack"], "tempfile.NamedTemporaryFile": [], "numpy.lib._iotools.StringConverter._getdtype": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.lib._iotools.NameValidator.validate", "numpy", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_", "numpy.array"], "numpy.lib._iotools.StringConverter._dtypeortype": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.lib._iotools.StringConverter._getdtype", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._dtypeortype", "numpy", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_", "numpy.datetime64"], "future.backports.email._header_value_parser.Parameter.section_number": ["future.backports.email._header_value_parser.TokenList"], "torch.distributions.constraints.positive": ["torch.distributions.constraints.positive", "numpy.core.umath.positive", "numpy.array_api.__init__.positive"], "regex._regex_core.Any.has_simple_start": ["regex._regex_core.RegexBase"], "torch.jit.TracedModule.check_unique": ["torch.jit.ScriptModule"], "numpy.core.defchararray.isnumeric": ["numpy.core.numerictypes.unicode_", "numpy.core.defchararray._use_unicode", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.multiarray._vec_string", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.chararray.isnumeric", "numpy.core.defchararray.isnumeric"], "torch.jit.__init__.CompilationUnit.define": ["torch._jit_internal", "torch._jit_internal.createResolutionCallbackFromFrame"], "regex._regex_core.Branch.optimise": ["regex._regex_core.RegexBase", "regex._regex_core.Sequence", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.make_sequence"], "future.utils.surrogateescape.replace_surrogate_decode": ["future.utils.surrogateescape.NotASurrogateError"], "torch.jit.frontend.get_jit_def": ["torch._utils_internal.get_source_lines_and_file", "torch", "textwrap.dedent", "ast", "torch._jit_internal.SourceContext", "torch.jit.frontend._uses_true_division", "torch.jit.frontend.build_def", "torch._C", "torch.jit", "ast.parse", "ast.FunctionDef"], "numpy.core.umath.geterrobj": ["numpy.core.umath.geterrobj"], "torch.multiprocessing.spawn._supports_context": [], "regex._regex_core.Character.get_firstset": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset"], "numpy.lib.stride_tricks.DummyArray.__init__": [], "click.globals.get_current_context": ["typing", "typing.overload", "typing.Optional", "typing.cast"], "numpy.core.defchararray.isalpha": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.isalpha"], "regex._regex_core.Branch.is_empty": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "regex._regex.get_properties": [], "future.backports.email._header_value_parser.Terminal.pop_leading_fws": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "numpy.core.fromnumeric._resize_dispatcher": [], "regex._regex_core.Character._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.PrecompiledCode", "regex._regex_core.Branch", "regex._regex_core.String", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan"], "numpy.lib._iotools.NameValidator.validate": ["numpy.lib._iotools.LineSplitter.autostrip", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.LineSplitter.__call__", "numpy.lib._iotools.NameValidator.__call__", "numpy.lib._iotools.StringConverter._loose_call", "numpy.lib._iotools.StringConverter.__call__"], "regex._regex_core.CallRef.__init__": ["regex._regex_core.RegexBase", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._flush_char_prefix"], "numpy.array_api.__init__.std": ["numpy.ma.core.std", "numpy.core.fromnumeric.std", "numpy.array_api.__init__.std", "numpy.array_api._statistical_functions.std"], "regex._regex_core.Any._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags"], "click.types.Tuple": ["click.types.CompositeParamType"], "numpy.array_api.__init__.round": ["future.builtins.misc.round", "future.builtins.__init__.round", "numpy.ma.core.round", "numpy.array_api.__init__.round", "numpy.array_api._elementwise_functions.round"], "torch.is_storage": [], "regex._regex_core.String.max_width": ["regex._regex_core.RegexBase"], "numpy.core._multiarray_umath._load_from_filelike": [], "numpy.lib.format.header_data_from_array_1_0": ["numpy.lib.format.dtype_to_descr"], "future.backports.email._header_value_parser.Terminal.cte_encode": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._encoded_words", "future.backports.email._encoded_words.encode"], "numpy.linalg._umath_linalg.svd_n_f": [], "numpy.linalg.linalg.LinAlgError": ["numpy.core.overrides.set_module"], "torch.jit.OrderedDictWrapper.values": ["torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique"], "regex._regex_core.LookAroundConditional.can_be_affix": ["regex._regex_core.RegexBase"], "torch.jit.__init__.__init__.init_then_script.make_stubs": ["torch.jit.__init__.ONNXTracedModule", "torch.jit.__init__.indent", "torch.jit.__init__.TracingCheckError", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.OrderedModuleDict", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta", "torch.jit.__init__.ScriptMeta.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.__init__.make_stubs", "torch.jit.__init__.ScriptMeta.init_then_script.make_stubs", "torch.jit.__init__.__init__.init_then_script.make_stubs", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__._CachedForward.__get__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__len__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.RecursiveScriptModule.__bool__", "functools", "torch.jit.__init__.TracedModule", "torch.jit.__init__.QualnameWrapper", "torch.jit.__init__.TracedModule.__init__.check_unique", "torch.jit.__init__.__init__.check_unique", "torch.jit.__init__.make_module", "torch.jit.__init__.ScriptModule", "torch.jit.__init__.RecursiveScriptModule", "functools.wraps"], "numpy.core.umath.sign": ["numpy.core.umath.sign", "numpy.array_api.__init__.sign"], "regex._regex_core.LookAround.__init__": ["regex._regex_core.RegexBase"], "multiprocessing.__all__": [], "future.backports.email._header_value_parser.section_number": [], "future.backports.datetime.datetime.ctime": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.weekday"], "regex._regex_core.CallGroup.fix_groups": ["regex._regex_core.RegexBase", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.error"], "future.backports.email._header_value_parser.InvalidMailbox": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.local_part", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.domain", "future.backports.email._header_value_parser.NameAddr.route", "future.backports.email._header_value_parser.AngleAddr.route", "future.backports.email._header_value_parser.Mailbox.route", "future.backports.email._header_value_parser.route", "future.backports.email._header_value_parser.NameAddr.addr_spec", "future.backports.email._header_value_parser.AngleAddr.addr_spec", "future.backports.email._header_value_parser.Mailbox.addr_spec", "future.backports.email._header_value_parser.AddrSpec.addr_spec", "future.backports.email._header_value_parser.addr_spec", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.display_name"], "future.backports.email._header_value_parser.ObsRoute.domains": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "click.types.Path.to_info_dict": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "os.path", "typing.ClassVar", "typing.Dict", "typing.Any"], "torch.jit.__init__.__init__.init_then_script": ["torch.jit.__init__.ONNXTracedModule", "torch.jit.__init__.indent", "torch.jit.__init__.TracingCheckError", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.OrderedModuleDict", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta", "torch.jit.__init__.ScriptMeta.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.__init__.make_stubs", "torch.jit.__init__.ScriptMeta.init_then_script.make_stubs", "torch.jit.__init__.__init__.init_then_script.make_stubs", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__._CachedForward.__get__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__len__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.RecursiveScriptModule.__bool__", "functools", "torch.jit.__init__.TracedModule", "torch.jit.__init__.QualnameWrapper", "torch.jit.__init__.TracedModule.__init__.check_unique", "torch.jit.__init__.__init__.check_unique", "torch.jit.__init__.make_module", "torch.jit.__init__.ScriptModule", "torch.jit.__init__.RecursiveScriptModule", "functools.wraps"], "torch.jit.OrderedDictWrapper": [], "numpy.compat.py3k.os_PathLike": ["numpy.compat.py3k.os_PathLike"], "regex._regex_core.SetDiff.optimise": ["regex._regex_core.SetBase", "regex._regex_core.SetUnion", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match"], "urllib3.connection.HTTPException": ["future.backports.http.client.HTTPException", "urllib3.packages.six.moves.http_client.HTTPException"], "future.backports.email._header_value_parser.Phrase.cte_encode": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser._Folded.__init__", "future.backports.email._header_value_parser._Folded.newline", "future.backports.email._header_value_parser._Folded.finalize", "future.backports.email._header_value_parser._Folded.append_if_fits", "future.backports.email._header_value_parser.TokenList.__init__", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.pprint", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.DomainLiteral.ip", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser.get_unstructured", "future.backports.email._header_value_parser.UnstructuredTokenList"], "numpy.array_api.__init__.trunc": ["numpy.core.umath.trunc", "numpy.array_api.__init__.trunc", "numpy.array_api._elementwise_functions.trunc"], "regex._regex_core.LookAround.contains_group": ["regex._regex_core.RegexBase"], "torch.jit.__init__.make_module": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.make_stubs_from_exported_methods", "torch.jit.__init__.make_module.make_stubs_from_exported_methods", "torch.jit.__init__.TopLevelTracedModule", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.items", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.items", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch._jit_internal", "torch._jit_internal.FunctionModifiers"], "regex._regex_core.RefGroup.__init__": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group"], "future.builtins.misc.round": ["future.builtins.misc.round", "future.builtins.__init__.round", "numpy.ma.core.round", "numpy.array_api.__init__.round", "future.builtins.newround.newround"], "fnmatch.filter": [], "numpy.core.numeric._outer_dispatcher": [], "numpy.compat._inspect.strseq": ["numpy.compat._inspect.joinseq", "numpy.compat._inspect.convert", "numpy.compat._inspect.formatargvalues.convert", "numpy.compat._inspect.strseq"], "future.backports.datetime.datetime.tzinfo": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "regex._regex_core.error.__init__": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string"], "regex._regex_core.RegexBase.contains_group": [], "numpy.core.dot": ["numpy.ma.extras.dot", "numpy.core.numeric.dot", "numpy.core.multiarray.dot"], "click._termui_impl.raw_terminal": ["contextlib", "click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "click._termui_impl.ProgressBar.render_finish", "click._termui_impl.ProgressBar.finish", "click._compat.isatty", "sys", "termios", "tty", "typing.Iterator", "typing.Optional", "typing.TextIO", "tty.setraw", "sys.stdin", "sys.stdout", "contextlib.contextmanager", "termios.tcgetattr", "termios.error", "termios.tcsetattr", "termios.TCSADRAIN"], "click.types.name": ["click.types.CompositeParamType.arity", "click.types.Tuple.arity"], "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "sacremoses.tokenize.MosesTokenizer.__init__", "sacremoses.tokenize.MosesTokenizer.islower", "sacremoses.tokenize.MosesTokenizer.isanyalpha", "sacremoses.tokenize.MosesTokenizer.has_numeric_only", "sacremoses.tokenize.MosesTokenizer.penn_tokenize", "sacremoses.tokenize.MosesTokenizer.tokenize", "sacremoses.tokenize.MosesDetokenizer.__init__", "sacremoses.tokenize.MosesDetokenizer.tokenize", "sacremoses.tokenize.MosesDetokenizer.detokenize", "re.compile", "re.search"], "google.protobuf.descriptor_pool": ["google.protobuf.descriptor_pool.DescriptorPool", "google.protobuf.descriptor", "google.protobuf.descriptor._USE_C_DESCRIPTORS"], "regex._regex_core.GraphemeBoundary.compile": [], "regex._regex_core.String.has_simple_start": ["regex._regex_core.RegexBase"], "numpy.core.numeric.multiply.accumulate": [], "click._winconsole.ConsoleStream.__init__": ["click._winconsole._WindowsConsoleRawIOBase.__init__", "click._winconsole._WindowsConsoleRawIOBase.isatty", "click._winconsole._WindowsConsoleReader.readinto", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole._WindowsConsoleWriter._get_error_message", "click._winconsole._WindowsConsoleWriter.write", "click._winconsole.ConsoleStream.__init__", "click._winconsole.ConsoleStream.write", "click._winconsole.ConsoleStream.writelines", "click._winconsole.ConsoleStream.__getattr__", "click._winconsole.ConsoleStream.isatty", "typing", "typing.TextIO", "typing.BinaryIO"], "click._winconsole.ConsoleStream.writelines": ["click._winconsole._WindowsConsoleRawIOBase.__init__", "click._winconsole._WindowsConsoleRawIOBase.isatty", "click._winconsole._WindowsConsoleReader.readinto", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole._WindowsConsoleWriter._get_error_message", "click._winconsole._WindowsConsoleWriter.write", "click._winconsole.ConsoleStream.__init__", "click._winconsole.ConsoleStream.write", "click._winconsole.ConsoleStream.writelines", "click._winconsole.ConsoleStream.__getattr__", "click._winconsole.ConsoleStream.isatty", "typing", "typing.Iterable", "typing.AnyStr"], "future.backports.email._header_value_parser.ValueTerminal.startswith_fws": ["future.backports.email._header_value_parser.Terminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "regex._regex_core.Branch.__init__": ["regex._regex_core.RegexBase", "regex._regex_core.Branch._flatten_branches"], "regex._regex_core.RegexBase.get_required_string": [], "regex._regex_core.Fuzzy.is_atomic": ["regex._regex_core.RegexBase"], "numpy.core.numeric.ones_like": ["numpy.core.multiarray.empty_like", "numpy.core.multiarray.dtype", "numpy.core.multiarray", "numpy.core.numeric._ones_like_dispatcher", "numpy.core.multiarray.copyto"], "numpy.lib.function_base.meshgrid": ["numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy", "numpy.lib.function_base.copy", "numpy.lib.function_base._meshgrid_dispatcher", "numpy.asanyarray", "numpy.broadcast_arrays"], "numpy.array_api.__init__.argmin": ["numpy.ma.core.argmin", "numpy.core.fromnumeric.argmin", "numpy.array_api.__init__.argmin", "numpy.array_api._searching_functions.argmin"], "future.builtins.newsuper.find_owner": ["types.FunctionType"], "future.backports.email._header_value_parser.get_mailbox": ["future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Mailbox", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_name_addr", "future.backports.email.errors", "future.backports.email._header_value_parser.get_addr_spec", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "regex._regex_core.Branch._is_simple_character": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "regex._regex_core.Character"], "numpy.core.numeric.float64": ["numpy.array_api.__init__.float64"], "future.backports.email._header_value_parser.TokenList.has_leading_comment": ["future.builtins.list"], "future.backports.datetime._days_in_month": ["future.backports.datetime.date.month", "future.backports.datetime.month", "future.backports.datetime._is_leap", "future.backports.datetime.date.year", "future.backports.datetime.year"], "numpy.core.fromnumeric._amin_dispatcher": [], "numpy.linalg._umath_linalg.svd_n_s": [], "numpy.core.umath.logaddexp": ["numpy.core.umath.logaddexp", "numpy.array_api.__init__.logaddexp"], "numpy.ma.core.swapaxes": ["numpy.ma.core.swapaxes", "numpy.core.fromnumeric.swapaxes"], "numpy.array_api.__init__.max": ["future.builtins.misc.max", "future.builtins.__init__.max", "numpy.ma.core.max", "numpy.array_api.__init__.max", "numpy.array_api._statistical_functions.max"], "numpy.core.fromnumeric._amax_dispatcher": [], "torch.jit.__init__.OrderedModuleDict": ["torch.jit.__init__.OrderedDictWrapper"], "colorama.AnsiToWin32": [], "numpy.compat.asunicode": ["numpy.compat.py3k.asunicode"], "future.backports.datetime.datetime.astimezone": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.datetime", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.timedelta", "time", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.dst", "future.backports.datetime.datetime.dst", "future.backports.datetime.timezone.dst", "future.backports.datetime.dst", "future.backports.datetime.timezone", "future.backports.datetime.tzinfo", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.fromutc", "time.localtime", "time.daylight", "time.altzone", "time.timezone", "time.tzname", "time.gmtime"], "regex._regex_core.Character.has_simple_start": ["regex._regex_core.RegexBase"], "numpy.core.double": [], "numpy.nditer": ["numpy.core.numeric.nditer", "numpy.core.multiarray.nditer"], "future.backports.email._header_value_parser.DisplayName.display_name": ["future.backports.email._header_value_parser.Phrase", "future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.TokenList"], "regex._regex_core.Atomic.contains_group": ["regex._regex_core.RegexBase"], "regex._regex_core.Branch._flush_char_prefix": ["regex._regex_core.RegexBase", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild", "regex._regex_core.Sequence", "regex._regex_core.make_sequence", "regex._regex_core.Character", "regex._regex_core.Branch"], "future.backports.email.errors.MessageDefect": [], "click._compat.auto_wrap_for_ansi._safe_write": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat.should_strip_ansi", "colorama", "click._compat._safe_write", "click._compat.auto_wrap_for_ansi._safe_write", "click._compat._FixupStream.seekable", "click._compat._AtomicFile.close", "typing.TextIO", "typing.Optional", "typing.cast", "colorama.AnsiToWin32"], "regex._regex_core.Branch._can_split_rev": ["regex._regex_core.RegexBase", "regex._regex_core.Source.at_end", "regex._regex_core.Branch"], "numpy.core.numeric.tensordot": ["numpy.core.multiarray.asarray", "numpy.core.umath.multiply", "numpy.core.multiarray.dot", "numpy.core.numeric._tensordot_dispatcher", "numpy.core.umath.multiply.reduce"], "regex._regex_core.GreedyRepeat.is_atomic": ["regex._regex_core.RegexBase"], "regex._regex_core._shrink_cache": ["random", "regex._regex_core.RegexBase.with_flags", "random.sample"], "future.backports.datetime.date._cmp": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "numpy.array_api.__init__.stack": ["torch.__init__.stack", "torch.distributions.constraints.stack", "numpy.ma.extras.stack", "numpy.core.shape_base.stack", "numpy.array_api.__init__.stack", "numpy.array_api._manipulation_functions.stack"], "click._compat._force_correct_text_stream": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._is_compatible_text_stream", "click._compat._stream_is_misconfigured", "click._compat._make_text_stream", "typing.IO", "typing.Optional", "typing.Callable", "typing.Any", "typing.BinaryIO", "typing.cast", "typing.TextIO"], "future.backports.datetime.date.ctime": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "torch.jit.RecursiveScriptModule.forward_magic_method": ["torch.jit.ScriptModule", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule"], "numpy.core.shape_base.stack": ["numpy.core.overrides", "numpy.core.shape_base._arrays_for_stack_dispatcher", "numpy.core.multiarray.asanyarray", "numpy.core.multiarray.normalize_axis_index", "numpy.core.numeric", "numpy.core.shape_base._stack_dispatcher", "numpy.core.numeric.newaxis", "numpy.core.numeric.concatenate", "numpy.core.overrides.ARRAY_FUNCTION_ENABLED"], "numpy.array_api.__init__.sign": ["numpy.core.umath.sign", "numpy.array_api.__init__.sign", "numpy.array_api._elementwise_functions.sign"], "numpy.core.arrayprint.DatetimeFormat.__init__": ["numpy.core.arrayprint._TimelikeFormat", "numpy.core.multiarray.datetime_data"], "torch.jit._make_fail.fail": ["torch.jit.fail", "torch.jit._make_fail.fail", "torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name"], "numpy.core.arrayprint.SubArrayFormat.__init__": [], "regex._regex_core.Source": [], "numpy.array_api.__init__.any": ["numpy.ma.core.any", "numpy.core.fromnumeric.any", "numpy.array_api.__init__.any", "numpy.array_api._utility_functions.any"], "numpy.lib.shape_base._take_along_axis_dispatcher": [], "numpy.core.defchararray.startswith": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray._startswith_dispatcher", "numpy.core.defchararray.startswith"], "regex._regex_core.Failure": ["regex._regex_core.ZeroWidthBase"], "future.backports.xmlrpc.client.Unmarshaller.xml": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Unmarshaller.end_nil", "future.backports.xmlrpc.client.end_nil", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.end_boolean", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.backports.xmlrpc.client.end_int", "future.backports.xmlrpc.client.Unmarshaller.end_double", "future.backports.xmlrpc.client.end_double", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_array", "future.backports.xmlrpc.client.end_array", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.backports.xmlrpc.client.end_struct", "future.backports.xmlrpc.client.Unmarshaller.end_base64", "future.backports.xmlrpc.client.end_base64", "future.backports.xmlrpc.client.Unmarshaller.end_dateTime", "future.backports.xmlrpc.client.end_dateTime", "future.backports.xmlrpc.client.Unmarshaller.end_value", "future.backports.xmlrpc.client.end_value", "future.backports.xmlrpc.client.Unmarshaller.end_params", "future.backports.xmlrpc.client.end_params", "future.backports.xmlrpc.client.Unmarshaller.end_fault", "future.backports.xmlrpc.client.end_fault", "future.backports.xmlrpc.client.Unmarshaller.end_methodName", "future.backports.xmlrpc.client.end_methodName"], "regex._regex_core._FirstSetError": [], "regex._regex_core.Conditional.max_width": ["regex._regex_core.RegexBase", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width"], "importlib.resources.as_file": [], "regex._regex_core.Conditional.get_firstset": ["regex._regex_core.RegexBase"], "numpy.lib._iotools.str2bool": [], "numpy.lib.npyio.zipfile_factory": ["numpy.compat.os_fspath", "zipfile", "zipfile.ZipFile"], "numpy.core.umath.SHIFT_INVALID": ["numpy.core.umath.SHIFT_INVALID"], "click.exceptions.Abort": [], "click.types.arity": [], "numpy.core.umath.signbit": ["numpy.core.umath.signbit"], "regex._regex_core.OP.CALL_REF": [], "torch.jit.__init__.indent": ["torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.OrderedDictWrapper.items", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedModuleDict.items", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.__contains__"], "regex._regex_core.Group.has_simple_start": ["regex._regex_core.RegexBase"], "inspect.currentframe": [], "regex._regex_core.StringSet.__init__": ["regex._regex_core.Branch", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "regex._regex_core.Character", "regex._regex_core.Sequence"], "torch.jit.ScriptMeta.make_stubs": ["torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique"], "numpy.lib.shape_base._apply_over_axes_dispatcher": [], "click.types.DateTime.__init__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Optional", "typing.Sequence"], "regex._regex_core.Sequence.__init__": ["regex._regex_core.RegexBase"], "regex._regex_core.LookAround.fix_groups": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser.get_attribute": ["future.backports.email._header_value_parser.Attribute", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.get_attrtext", "future.backports.email.errors.HeaderParseError"], "numpy.core.umath.positive": ["torch.distributions.constraints.positive", "numpy.core.umath.positive", "numpy.array_api.__init__.positive"], "click.types.File.shell_complete": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "click.shell_completion.CompletionItem", "os.path", "typing.ClassVar", "typing.List"], "regex._regex_core.LookAround.is_empty": ["regex._regex_core.RegexBase"], "future.backports.datetime.timedelta.__mul__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.builtins.int", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.timedelta.plural", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.today", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.replace", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__hash__", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.__format__", "future.backports.datetime.time.tzname", "future.backports.datetime.time.replace", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.date", "future.backports.datetime.datetime.replace", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__bool__", "future.backports.datetime.date.__sub__", "future.backports.datetime.time.__bool__", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.__sub__"], "regex._regex_core.RegexBase.fix_groups": [], "numpy.core.umath.SHIFT_OVERFLOW": ["numpy.core.umath.SHIFT_OVERFLOW"], "future.backports.xmlrpc.client._MultiCallMethod": [], "torch.serialization._opener.__exit__": [], "torch.jit.fail": ["torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name"], "numpy.core.fromnumeric._take_dispatcher": [], "torch.jit.__init__.__init__.check_unique": ["torch.jit.__init__.ONNXTracedModule", "torch.jit.__init__.indent", "torch.jit.__init__.TracingCheckError", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.OrderedModuleDict", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta", "torch.jit.__init__.ScriptMeta.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.__init__.init_then_script", "torch.jit.__init__.TracedModule", "torch.jit.__init__.QualnameWrapper", "torch.jit.__init__.TracedModule.__init__.check_unique", "torch.jit.__init__.__init__.check_unique", "torch.jit.__init__.make_module", "torch.jit.__init__.ScriptModule", "torch.jit.__init__.RecursiveScriptModule"], "locale.getpreferredencoding": [], "sacremoses.tokenize.MosesTokenizer.replace_multidots": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile", "re.sub"], "torch.nn.functional.pad": ["numpy.lib.arraypad.pad"], "numpy.lib._iotools.NameValidator.__init__": ["numpy.lib._iotools.LineSplitter._fixedwidth_splitter"], "torch.functional.meshgrid": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.functional.meshgrid", "torch", "torch._VF", "torch.jit", "torch._VF.meshgrid"], "future.backports.email._header_value_parser._Folded.append_if_fits": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser._Folded.newline", "future.backports.email._header_value_parser._Folded.finalize", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.TokenList.all_defects", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.fold", "future.backports.email._header_value_parser.TokenList._fold", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.UnstructuredTokenList._fold", "future.backports.email._header_value_parser.Phrase._fold", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Header._fold", "future.backports.email._header_value_parser.Terminal.all_defects", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws"], "re.findall": [], "math.gcd": [], "future.backports.email._header_value_parser.Group.display_name": ["future.backports.email._header_value_parser.TokenList"], "numpy.lib.scimath._tocomplex": ["numpy.core.numerictypes", "numpy.core.numerictypes.csingle", "numpy.core.numerictypes.cdouble", "numpy.core.numerictypes.single", "numpy.core.numerictypes.byte", "numpy.core.numerictypes.short", "numpy.core.numerictypes.ubyte", "numpy.core.numerictypes.ushort"], "torch.serialization._open_zipfile_writer_file.__init__": ["torch.serialization._opener", "torch.serialization._open_zipfile_writer_file", "torch", "torch._C"], "requests.exceptions": [], "numpy.core.fromnumeric.sort": ["numpy.core.multiarray.asanyarray", "numpy.core.fromnumeric._sort_dispatcher"], "numpy.ma.core.masked_array": ["numpy.ma.core.masked_array"], "future.backports.email._header_value_parser.Comment.content": ["future.backports.email._header_value_parser.WhiteSpaceTokenList", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "string": [], "click.formatting._flush_par": ["click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.indentation", "click.formatting.indent"], "numpy.core.numeric.correlate": ["numpy.core.multiarray", "numpy.core.numeric._correlate_dispatcher", "numpy.core.multiarray.correlate2"], "regex._regex_core.LookAround.max_width": ["regex._regex_core.RegexBase"], "torch._VF.VFModule": ["types", "types.ModuleType"], "click.types.Tuple.__init__": ["click.types.CompositeParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.ParamType", "click.types.convert_type", "typing.Sequence", "typing.Union", "typing.Type", "typing.Any"], "regex._regex_core.Atomic.is_empty": ["regex._regex_core.RegexBase"], "future.backports.datetime.datetime.timetuple": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.dst", "future.backports.datetime.datetime.dst", "future.backports.datetime.timezone.dst", "future.backports.datetime.dst", "future.backports.datetime._build_struct_time"], "numpy.core.defchararray.zfill": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._zfill_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.chararray.zfill", "numpy.core.defchararray.zfill", "numpy.asarray", "numpy.max"], "click.types.Tuple.to_info_dict": ["click.types.CompositeParamType", "click.types.ParamType.to_info_dict", "click.types.FuncParamType.to_info_dict", "click.types.Choice.to_info_dict", "click.types.DateTime.to_info_dict", "click.types._NumberRangeBase.to_info_dict", "click.types.File.to_info_dict", "click.types.Path.to_info_dict", "click.types.Tuple.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.to_info_dict", "typing.Dict", "typing.Any"], "torch.jit.__init__.TracingCheckError": [], "regex._regex_core.ZeroWidthBase.__init__": ["regex._regex_core.RegexBase"], "regex._regex_core.Sequence.contains_group": ["regex._regex_core.RegexBase", "regex._regex_core.Source.get_many", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "torch.jit.__init__.ScriptModule.define": ["torch._six.with_metaclass", "torch.jit.__init__.ScriptMeta", "torch.nn.Module", "torch.jit.__init__.ONNXTracedModule.forward", "torch.jit.__init__.TracedModule.forward", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.forward", "torch.jit.__init__._CachedForward", "torch._jit_internal", "torch.jit._recursive.ScriptMethodStub"], "torch.jit.RecursiveScriptModule.inlined_graph": ["torch.jit.ScriptModule"], "regex.regex.DEFAULT_VERSION": ["regex.regex.DEFAULT_VERSION", "regex.DEFAULT_VERSION"], "future.backports.datetime._call_tzinfo_method": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo"], "numpy.core.numeric.errstate": ["numpy.core._ufunc_config.errstate"], "joblib.numpy_pickle._unpickle": ["joblib.numpy_pickle.NumpyUnpickler", "warnings", "warnings.warn"], "regex._regex_core._flatten_code": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan"], "regex._regex_core.CallGroup._compile": ["regex._regex_core.RegexBase"], "regex._regex_core.PrecompiledCode.__init__": ["regex._regex_core.RegexBase"], "future.backports.datetime._cmp": ["future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date._cmp", "future.backports.datetime.time._cmp", "future.backports.datetime.datetime._cmp", "future.backports.datetime._cmp", "future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__mod__", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.month", "future.backports.datetime.date.timetuple", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.minute", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__reduce__", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__add__", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date.__reduce__", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.tzinfo.__reduce__", "future.backports.datetime.time.second", "future.backports.datetime.time.dst", "future.backports.datetime.time.__reduce__", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__add__", "future.backports.datetime.datetime.__reduce__", "future.backports.datetime.timezone.dst", "future.backports.datetime.time", "future.backports.datetime.datetime"], "numpy.core.numeric.arctanh": ["numpy.lib.scimath.arctanh", "numpy.ma.core.arctanh", "numpy.core.umath.arctanh"], "sys.getfilesystemencoding": [], "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "numpy.core.defchararray.rfind": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.int_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray._count_dispatcher", "numpy.core.defchararray.chararray.rfind", "numpy.core.defchararray.rfind"], "torch.serialization._check_container_source": ["torch._utils_internal.get_source_lines_and_file", "warnings", "torch.serialization.SourceChangeWarning", "difflib", "torch", "torch.typename", "warnings.warn", "difflib.unified_diff"], "regex._regex_core._check_group_features": ["regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Fuzzy", "regex._regex_core.CallRef"], "numpy.core.arrayprint._get_format_function": ["numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint._get_formatdict", "numpy.core.numerictypes", "numpy.core.arrayprint.StructuredVoidFormat", "numpy.core.numerictypes.bool_", "numpy.core.numerictypes.integer", "numpy.core.numerictypes.timedelta64", "numpy.core.numerictypes.floating", "numpy.core.numerictypes.longfloat", "numpy.core.numerictypes.complexfloating", "numpy.core.numerictypes.clongfloat", "numpy.core.numerictypes.datetime64", "numpy.core.numerictypes.unicode_", "numpy.core.numerictypes.string_", "numpy.core.numerictypes.object_", "numpy.core.numerictypes.void"], "future.backports.email._header_value_parser.TokenList.pop_trailing_ws": ["future.builtins.list"], "ipywidgets.HTML": [], "regex._regex_core.LookAround._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.Fuzzy._constraints_to_string"], "numpy.core.arrayprint.BoolFormat.__init__": ["numpy.core.arrayprint.StructuredVoidFormat.from_data"], "regex._regex_core.RegexBase.can_be_affix": [], "IPython.html.widgets.FloatProgressWidget": [], "torch._tensor_str.__PrinterOptions": [], "regex._regex_core.Branch._is_full_case": ["regex._regex_core.RegexBase", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef.__init__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.max_width", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.max_width", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.max_width", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__", "regex._regex_core.Character"], "click.types.File.to_info_dict": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "os.path", "typing.ClassVar", "typing.Dict", "typing.Any"], "numpy.f2py.symbolic.eliminate_quotes.repl": ["numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__", "numpy.f2py.symbolic.repl", "numpy.f2py.symbolic.eliminate_quotes.repl", "numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.RelOp.tostring", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__hash__", "numpy.f2py.symbolic.Expr.__str__", "numpy.f2py.symbolic.Expr.tostring", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__sub__", "numpy.f2py.symbolic.Expr.__rsub__", "numpy.f2py.symbolic.Expr.substitute", "numpy.f2py.symbolic.Expr.traverse", "numpy.f2py.symbolic.Expr.contains", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.linear_solve", "numpy.f2py.symbolic.Expr.visit", "numpy.f2py.symbolic._Pair.substitute", "numpy.f2py.symbolic._FromStringWorker.finalize_string", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic._FromStringWorker.restore", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic._Pair.__repr__", "re", "numpy.f2py.symbolic.Expr.__mul__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic.Expr.__pow__", "re.sub"], "numpy.core.fromnumeric.any": ["numpy", "numpy.core.fromnumeric._wrapreduction", "numpy.core.fromnumeric._any_dispatcher", "numpy._NoValue", "numpy.logical_or"], "click._winconsole._WindowsConsoleReader.readable": ["click._winconsole._WindowsConsoleRawIOBase"], "numpy.core.defchararray.rindex": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.int_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray._count_dispatcher", "numpy.core.defchararray.chararray.rindex", "numpy.core.defchararray.rindex"], "numpy.core.numeric.intp": [], "regex._regex_core._fold_case": ["regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "regex._regex", "regex._regex.fold_case"], "regex._regex_core.StartOfWord": ["regex._regex_core.ZeroWidthBase"], "numpy.ma.core.zeros_like": ["numpy.ma.core.zeros_like", "numpy.core.numeric.zeros_like", "numpy.array_api.__init__.zeros_like"], "urllib3.response.HTTPResponse.isclosed": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.util.response.is_fp_closed", "io.IOBase", "zlib.error", "brotli.error"], "requests": ["urllib3.exceptions.DependencyWarning", "requests.exceptions.FileModeWarning", "requests.check_compatibility", "chardet.__version__", "charset_normalizer.__version__", "logging.NullHandler", "warnings", "urllib3", "requests.exceptions.RequestsDependencyWarning", "ssl", "requests._check_cryptography", "urllib3.contrib.pyopenssl", "logging", "cryptography.__version__", "warnings.simplefilter", "warnings.warn", "urllib3.__version__", "urllib3.contrib.pyopenssl.inject_into_urllib3", "logging.getLogger"], "regex._regex_core.LookAroundConditional._compile": ["regex._regex_core.RegexBase", "regex._regex_core.Fuzzy._constraints_to_string"], "future.backports.xmlrpc.client._Method": [], "future.backports.xmlrpc.client.Marshaller": ["future.backports.xmlrpc.client.Unmarshaller.end_dispatch", "future.backports.xmlrpc.client.Marshaller.dump_nil", "future.backports.xmlrpc.client.dump_nil", "future.backports.xmlrpc.client.Marshaller.dump_bool", "future.backports.xmlrpc.client.dump_bool", "future.backports.xmlrpc.client.Unmarshaller.end_boolean", "future.backports.xmlrpc.client.Marshaller.dump_long", "future.backports.xmlrpc.client.dump_long", "future.backports.xmlrpc.client.Unmarshaller.end_int", "future.builtins.int", "future.backports.xmlrpc.client.Marshaller.dump_double", "future.backports.xmlrpc.client.dump_double", "future.backports.xmlrpc.client.Marshaller.dump_unicode", "future.backports.xmlrpc.client.dump_unicode", "future.backports.xmlrpc.client.Error.__str__", "future.backports.xmlrpc.client.DateTime.__str__", "future.backports.xmlrpc.client.Binary.__str__", "future.backports.xmlrpc.client.Marshaller.dump_struct", "future.backports.xmlrpc.client.Unmarshaller.end_string", "future.backports.xmlrpc.client.Unmarshaller.end_struct", "future.builtins.str", "future.backports.xmlrpc.client.Marshaller.dump_bytes", "future.backports.xmlrpc.client.dump_bytes", "future.builtins.bytes", "future.backports.xmlrpc.client.Marshaller.dump_array", "future.backports.xmlrpc.client.dump_array", "future.backports.xmlrpc.client.DateTime.timetuple", "future.backports.xmlrpc.client.dump_struct", "future.builtins.dict", "future.backports.xmlrpc.client.Marshaller.dump_datetime", "future.backports.xmlrpc.client.dump_datetime", "datetime.datetime", "future.backports.xmlrpc.client.Marshaller.dump_instance", "future.backports.xmlrpc.client.dump_instance", "future.backports.xmlrpc.client.DateTime", "future.backports.xmlrpc.client.Binary"], "numpy.ma.core.product": ["tqdm.contrib.itertools.product", "numpy.ma.core.product", "numpy.core.fromnumeric.product"], "regex._regex_core.LookAroundConditional.__init__": ["regex._regex_core.RegexBase"], "future.backports.datetime._check_tzinfo_arg": ["future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname", "future.backports.datetime.tzinfo"], "torch.serialization._open_zipfile_writer_buffer.__init__": ["torch.serialization._opener", "torch.serialization._open_zipfile_writer_buffer", "torch", "torch._C"], "string.ascii_letters.encode": [], "numpy.compat._inspect.isfunction": ["types", "types.FunctionType"], "click.types.FuncParamType.__init__": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Callable", "typing.Any"], "regex._regex_core.PossessiveRepeat._compile": ["regex._regex_core.GreedyRepeat"], "numpy.f2py.symbolic.repl": ["numpy.f2py.symbolic.RelOp.fromstring", "numpy.f2py.symbolic.Expr.__mul__", "numpy.f2py.symbolic.Expr.__rmul__", "numpy.f2py.symbolic.Expr.__getitem__", "numpy.f2py.symbolic.Expr.symbols", "numpy.f2py.symbolic.Expr.polynomial_atoms", "numpy.f2py.symbolic.Expr.parse", "numpy.f2py.symbolic.Expr.__repr__", "numpy.f2py.symbolic.Expr.__pos__", "numpy.f2py.symbolic.Expr.__pow__", "numpy.f2py.symbolic._Pair.__repr__", "numpy.f2py.symbolic._FromStringWorker.parse", "numpy.f2py.symbolic._FromStringWorker.process", "numpy.f2py.symbolic.Expr.__add__", "numpy.f2py.symbolic.Expr.__radd__", "numpy.f2py.symbolic.Expr.__truediv__", "numpy.f2py.symbolic.Expr.__rtruediv__", "numpy.f2py.symbolic.Expr.__floordiv__", "numpy.f2py.symbolic.Expr.__rfloordiv__"], "regex._regex_core.Conditional.fix_groups": ["regex._regex_core.RegexBase", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.error"], "future.backports.datetime._wrap_strftime": ["future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.timetuple", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.time.minute", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.strptime", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timedelta.__new__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.__neg__", "future.backports.datetime.timedelta.__ne__", "future.backports.datetime.date.__new__", "future.backports.datetime.date.month", "future.backports.datetime.date.__ne__", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__new__", "future.backports.datetime.time.second", "future.backports.datetime.time.__ne__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.__new__", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.now", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__ne__", "future.backports.datetime.timezone.__new__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.date.__format__", "future.backports.datetime.time.__format__", "future.builtins.object", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.timedelta.__mod__", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date._cmp", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time._cmp", "future.backports.datetime.datetime._cmp", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__pos__", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.__sub__", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.__hash__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__sub__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.dst", "future.backports.datetime.time.hour", "future.backports.datetime.datetime.hour", "future.backports.datetime.timedelta", "future.backports.datetime.timetuple", "time", "time.strftime", "future.builtins.object.utcoffset", "future.builtins.object.tzname"], "click.types.File.__init__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "click.types.File.resolve_lazy_flag", "os.path", "typing.ClassVar", "typing.Optional"], "numpy.core.defchararray.rpartition": ["numpy.core.defchararray._to_string_or_unicode_array", "numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray._partition_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.rpartition"], "numpy.core.numeric._isclose_dispatcher": [], "torch._jit_internal": ["torch._jit_internal.BroadcastingListCls", "weakref", "torch._jit_internal.BroadcastingListCls.__getitem__", "torch._jit_internal.SourceContext.__init__", "torch._jit_internal.RRef.__init__", "torch._jit_internal.TupleCls.__getitem__", "torch._jit_internal.TupleInstance.__init__", "torch._jit_internal.ListInstance.__init__", "torch._jit_internal.ListCls.__getitem__", "torch._jit_internal.DictInstance.__init__", "torch._jit_internal.DictCls.__getitem__", "torch._jit_internal.OptionalInstance.__init__", "torch._jit_internal.OptionalCls.__getitem__", "torch._jit_internal.FinalInstance.__init__", "torch._jit_internal.FinalCls.__getitem__", "torch._jit_internal.RRefInstance.__init__", "torch._jit_internal.RRefCls.__getitem__", "typing.Tuple", "typing.List", "typing.Dict", "typing.Optional", "typing.Any", "typing_extensions.Final", "typing.TypeVar", "torch._jit_internal.TupleCls", "torch._jit_internal.ListCls", "torch._jit_internal.DictCls", "torch._jit_internal.AnyCls", "torch._jit_internal.FinalCls", "torch._jit_internal.RRef", "torch._jit_internal.RRefCls", "weakref.WeakKeyDictionary"], "numpy.array_api.__init__.meshgrid": ["torch.functional.meshgrid", "numpy.lib.function_base.meshgrid", "numpy.array_api.__init__.meshgrid", "numpy.array_api._creation_functions.meshgrid"], "future.backports.email._header_value_parser.NameAddr.local_part": ["future.backports.email._header_value_parser.TokenList"], "torch.jit.RecursiveScriptModule.original_name": ["torch.jit.ScriptModule", "torch.jit.RecursiveScriptModule._construct"], "torch.functional.tensordot": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.functional.tensordot", "torch", "torch._VF", "torch.jit", "torch.Tensor", "torch._VF.tensordot"], "regex._regex_core.Branch._split_common_suffix": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild", "regex._regex_core.Sequence", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.max_width", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.Source.at_end", "regex._regex_core.Scanner.scan", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch", "regex._regex_core.make_sequence"], "regex._regex_core.LookAround.is_atomic": ["regex._regex_core.RegexBase"], "numpy.core.arrayprint.IntegerFormat.__init__": ["numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy", "numpy.max", "numpy.min"], "regex._regex_core.PossessiveRepeat.is_atomic": ["regex._regex_core.GreedyRepeat"], "future.backports.email._header_value_parser.get_value": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.Value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.get_cfws", "future.backports.email._header_value_parser.get_quoted_string", "future.backports.email._header_value_parser.get_extended_attribute", "future.backports.email.errors.HeaderParseError"], "future.builtins.__init__.round": ["future.builtins.misc.round", "future.builtins.__init__.round", "numpy.ma.core.round", "numpy.array_api.__init__.round"], "numpy.lib._iotools.StringConverter.upgrade_mapper": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.lib._iotools.LineSplitter.__init__", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.LineSplitter.__call__", "numpy.lib._iotools.NameValidator.__init__", "numpy.lib._iotools.NameValidator.__call__", "numpy.lib._iotools.StringConverter._getdtype", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._dtypeortype", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.lib._iotools.StringConverter.__init__", "numpy.lib._iotools.StringConverter._loose_call", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.StringConverter.__call__", "numpy.lib._iotools.StringConverter._do_upgrade", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_"], "numpy.core.defchararray.chararray.__new__": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.numerictypes.unicode_", "numpy.core.numerictypes.string_", "numpy.core.defchararray.chararray.lstrip", "numpy.core.defchararray.chararray.rstrip", "numpy.core.defchararray.chararray.strip", "numpy.core.numeric.ndarray.argsort", "numpy.core.numeric.ndarray.__new__"], "torch.serialization._open_file.__init__": ["torch.serialization._opener", "torch.serialization._open_file"], "future.backports.email._header_value_parser.get_section": ["future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Section", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.TokenList.pprint", "future.builtins.int", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderError"], "torch.jit.TracedModule.forward": ["torch.jit.ScriptModule"], "torch.jit.OrderedDictWrapper.keys": ["torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer"], "urllib3.response.GzipDecoderState": [], "zlib.MAX_WBITS": [], "torch._lobpcg.LOBPCG.__str__": ["torch._lobpcg.LOBPCG.__str__", "torch._lobpcg.LOBPCG.update_residual", "torch._lobpcg.LOBPCG.update_converged_count", "torch._lobpcg.LOBPCG.stop_iteration", "torch._lobpcg.LOBPCG.run", "torch._lobpcg.LOBPCG.call_tracker", "torch._lobpcg.LOBPCG._update_ortho", "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform", "torch._lobpcg.LOBPCG._get_ortho"], "numpy.core.fromnumeric._diagonal_dispatcher": [], "numpy.core.defchararray.splitlines": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray._splitlines_dispatcher", "numpy.core.defchararray.chararray.splitlines", "numpy.core.defchararray.splitlines"], "numpy.linalg.linalg": ["numpy.core.intc", "numpy.linalg.linalg._determine_error_states", "numpy.core.csingle", "numpy.core.single", "numpy.core.cdouble", "functools", "numpy.core.overrides", "numpy.core.double", "functools.partial", "numpy.core.overrides.array_function_dispatch"], "regex._regex_core.Sequence.can_be_affix": ["regex._regex_core.RegexBase"], "regex._regex_core.Character.get_required_string": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan"], "numpy.core.fromnumeric._wrapit": ["numpy.core.multiarray.asarray", "numpy.core.multiarray", "numpy.core.multiarray.ndarray"], "regex._regex_core.Property.max_width": ["regex._regex_core.RegexBase"], "torch.jit.__init__.TracedModule.__init__.check_unique": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.ONNXTracedModule", "torch.jit.__init__.indent", "torch.jit.__init__.TracingCheckError", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.OrderedModuleDict", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.OrderedDictWrapper.keys", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta", "torch.jit.__init__.ScriptMeta.__init__.init_then_script", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.__init__.init_then_script", "torch.jit.__init__.TracedModule", "torch.jit.__init__.QualnameWrapper", "torch.jit.__init__.TracedModule.__init__.check_unique", "torch.jit.__init__.__init__.check_unique", "torch.jit.__init__.make_module", "torch.jit.__init__.RecursiveScriptModule"], "numpy.core.umath.log1p": ["numpy.core.umath.log1p", "numpy.array_api.__init__.log1p"], "numpy.maximum": ["numpy.ma.core.maximum", "numpy.core.umath.maximum"], "joblib.numpy_pickle_compat.load_compatibility": ["joblib.numpy_pickle_compat.ZipNumpyUnpickler._open_pickle", "joblib.numpy_pickle_compat.ZipNumpyUnpickler"], "regex._regex_core.SetBase.rebuild": ["regex._regex_core.RegexBase"], "regex._regex_core.Group.optimise": ["regex._regex_core.RegexBase", "regex._regex_core.Group"], "regex._regex_core.SetSymDiff.optimise": ["regex._regex_core.SetBase", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.SetSymDiff"], "click.types.ParamType.get_missing_message": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "typing.ClassVar", "typing.Optional"], "numpy.array_api.__init__.logaddexp": ["numpy.core.umath.logaddexp", "numpy.array_api.__init__.logaddexp", "numpy.array_api._elementwise_functions.logaddexp"], "regex._regex_core.Fuzzy.max_width": ["regex._regex_core.RegexBase"], "regex._regex_core.lookup_property": ["regex._regex_core.standardise_name", "regex._regex_core.Property", "regex._regex_core.error", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._flush_char_prefix"], "torch.jit.RecursiveScriptModule.save": ["torch.jit.ScriptModule"], "torch.jit.__init__.ONNXTracedModule": ["torch.nn.Module"], "future.backports.email._header_value_parser.get_extended_attrtext": ["future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.comments", "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.Comment.comments", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.Terminal.comments", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser._validate_xtext", "future.backports.email.errors.HeaderParseError"], "regex._regex_core.GreedyRepeat.get_required_string": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string"], "future.backports.email._header_value_parser.Domain.domain": ["future.backports.email._header_value_parser.TokenList", "future.builtins.super", "future.backports.email._header_value_parser.Domain"], "click.types.Choice.get_metavar": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "numpy.__init__.VisibleDeprecationWarning": ["numpy.__init__.VisibleDeprecationWarning", "numpy._globals.VisibleDeprecationWarning"], "numpy.histogram": ["numpy.lib.histograms.histogram"], "future.backports.email._header_value_parser.AngleAddr.local_part": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "urllib3.response.HTTPResponse.data": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "numpy.core.defchararray.isdigit": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.chararray.isdigit", "numpy.core.defchararray.isdigit"], "regex._regex_core.RegexBase.has_simple_start": [], "numpy.compat._inspect.getargs": ["numpy.compat._inspect.iscode"], "regex._regex_core.Range.optimise": ["regex._regex_core.RegexBase", "regex._regex", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Branch._is_folded", "regex._regex_core.String", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetUnion._compile", "regex._regex_core.String._compile", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "regex._regex_core.Branch", "regex._regex.get_expand_on_folding", "regex._regex.fold_case"], "future.backports.email._header_value_parser.get_comment": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.comments", "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.Comment.comments", "future.backports.email._header_value_parser.Terminal.comments", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.Comment", "future.backports.email._header_value_parser.get_fws", "future.backports.email._header_value_parser.get_comment", "future.backports.email._header_value_parser.get_qp_ctext", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "click.types.File.convert": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "click.types._is_file_like", "click.types.File.resolve_lazy_flag", "click.types.ParamType.fail", "click._compat.open_stream", "click.utils.LazyFile", "click.utils.safecall", "click.utils.format_filename", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase._describe_range", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.FloatParamType.__repr__", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "typing.ClassVar", "typing.Union", "typing.Optional", "typing.IO", "typing.Any", "typing.cast", "os.path"], "click.types.Choice": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "torch.sparse": [], "regex._regex_core.Conditional.__init__": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group"], "click.types.Choice.get_missing_message": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.__call__", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.__repr__", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.__repr__", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase._clamp", "click.types._NumberRangeBase._describe_range", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.IntRange._clamp", "click.types.FloatParamType.__repr__", "click.types.FloatRange.__init__", "click.types.FloatRange._clamp", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.resolve_lazy_flag", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "gettext.gettext"], "regex._regex_core.Group.contains_group": ["regex._regex_core.RegexBase"], "future.backports.email._parseaddr.AddressList.__isub__": ["future.backports.email._parseaddr.AddrlistClass", "future.backports.email._parseaddr.AddrlistClass.gotonext"], "regex._regex_core.Source.__init__": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "string.decode"], "numpy.dual.cholesky": ["numpy.dual.cholesky", "numpy.linalg.linalg.cholesky", "numpy.array_api.linalg.cholesky"], "numpy.core.numeric.any": ["numpy.ma.core.any", "numpy.core.fromnumeric.any", "numpy.array_api.__init__.any"], "inspect.isfunction": [], "numpy.core.defchararray.swapcase": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy", "numpy.core.multiarray._vec_string", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.swapcase", "numpy.asarray"], "numpy.linalg.lstsq": ["numpy.dual.lstsq", "numpy.linalg.linalg.lstsq"], "regex._regex_core.PrecompiledCode._compile": ["regex._regex_core.RegexBase"], "numpy.lib._iotools.StringConverter.__init__": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.lib._iotools.StringConverter._getdtype", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._dtypeortype", "numpy", "numpy.lib._iotools.LineSplitter.__init__", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.LineSplitter.__call__", "numpy.lib._iotools.NameValidator.__init__", "numpy.lib._iotools.NameValidator.__call__", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.lib._iotools.StringConverter.__init__", "numpy.lib._iotools.StringConverter._loose_call", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.StringConverter.__call__", "numpy.lib._iotools.StringConverter._do_upgrade", "numpy.lib._iotools.LineSplitter.autostrip", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_", "numpy.dtype", "numpy.uint64", "numpy.int64"], "regex._regex_core.Scanner.__init__": ["regex._regex_core.Source", "regex._regex_core.Info", "regex._regex_core.RegexBase.with_flags", "regex._regex_core._parse_pattern", "regex._regex_core.error", "regex._regex_core.Group", "regex._regex_core.RegexFlag.__repr__", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence.is_empty", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.skip_while", "regex._regex_core.Source.expect", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.String.get_firstset", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.get", "regex._regex_core.Source.get_many", "regex._regex_core.Source.get_while", "regex._regex_core.Branch", "regex._regex_core._get_required_string", "regex._regex_core._check_group_features", "regex._regex_core._flatten_code", "regex._regex_core._FirstSetError", "regex._regex_core._compile_firstset", "regex._regex", "regex._regex.compile"], "numpy.lib.npyio._preprocess_comments": ["numpy.lib.npyio.NpzFile.close", "numpy.lib.npyio.WriteWrap.close", "numpy.lib.npyio.WriteWrap.write_bytes"], "future.backports.datetime._check_tzname": ["future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.date.strftime", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.timezone.__str__", "future.builtins.str"], "urllib3.exceptions.ReadTimeoutError": ["urllib3.exceptions.TimeoutError", "urllib3.exceptions.RequestError"], "regex._regex_core.RegexBase.__init__": [], "click._termui_impl.getchar": ["click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "click.utils.echo", "msvcrt", "click._termui_impl._translate_ch_to_exc", "click._termui_impl.raw_terminal", "click._compat.get_best_encoding", "click._compat.isatty", "sys", "os", "os.read", "sys.stdin", "sys.stdout", "typing.Callable", "msvcrt.getwche", "msvcrt.getwch"], "numpy.array_api.linalg.cholesky": ["numpy.array_api._array_object.Array", "numpy.array_api._dtypes._floating_dtypes", "numpy", "numpy.array_api._array_object.Array._new", "numpy.linalg"], "regex._regex_core.SetUnion._compile": ["regex._regex_core.SetBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "collections.defaultdict", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.Character"], "numpy.core.defchararray.islower": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.chararray.islower", "numpy.core.defchararray.islower"], "click.types._NumberRangeBase.to_info_dict": ["click.types._NumberParamTypeBase", "click.types.ParamType.to_info_dict", "click.types.FuncParamType.to_info_dict", "click.types.Choice.to_info_dict", "click.types.DateTime.to_info_dict", "click.types._NumberRangeBase.to_info_dict", "click.types.File.to_info_dict", "click.types.Path.to_info_dict", "click.types.Tuple.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Dict", "typing.Any"], "regex._regex_core.String.get_firstset": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.Character"], "future.backports.email.errors.MessageError": [], "future.backports.email._header_value_parser.get_attrtext": ["future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.comments", "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.Comment.comments", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.Terminal.comments", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser._validate_xtext", "future.backports.email.errors.HeaderParseError"], "joblib.numpy_pickle_utils._read_fileobject": ["joblib.numpy_pickle_utils._detect_compressor", "joblib.compressor._COMPRESSORS", "warnings", "joblib.numpy_pickle_utils._buffered_read_file", "io", "joblib.numpy_pickle_utils._is_raw_file", "contextlib", "warnings.warn", "io.BytesIO", "contextlib.contextmanager"], "click.types.StringParamType.convert": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click._compat._get_argv_encoding", "sys", "sys.getfilesystemencoding", "typing.Any", "typing.Optional"], "future.utils.surrogateescape.replace_surrogate_encode": ["future.utils.surrogateescape.NotASurrogateError"], "regex._regex_core._ALL_VERSIONS": [], "numpy.core.fromnumeric.transpose": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._transpose_dispatcher"], "regex._regex_core.LookAroundConditional.fix_groups": ["regex._regex_core.RegexBase"], "numpy.core.numeric.sqrt": ["numpy.lib.scimath.sqrt", "numpy.ma.core.sqrt", "numpy.core.umath.sqrt", "numpy.array_api.__init__.sqrt"], "numpy.searchsorted": ["numpy.core.fromnumeric.searchsorted"], "regex._regex_core.Conditional.is_atomic": ["regex._regex_core.RegexBase"], "regex._regex_core.GreedyRepeat.is_empty": ["regex._regex_core.RegexBase"], "future.backports.email.policy.compat32": ["future.backports.email.policy.compat32", "future.backports.email._policybase.compat32", "future.standard_library.email._policybase.compat32"], "numpy.lib.histograms._unsigned_subtract": ["numpy", "numpy.byte", "numpy.short", "numpy.intc", "numpy.int_", "numpy.longlong", "numpy.ubyte", "numpy.ushort", "numpy.uintc", "numpy.uint", "numpy.ulonglong", "numpy.result_type", "numpy.subtract"], "numpy.lib.stride_tricks._maybe_view_as_subclass": [], "torch.serialization.load_tensor": ["torch.serialization.restore_location", "torch.serialization._get_restore_location.restore_location", "struct", "io", "io.BytesIO", "struct.pack"], "numpy.minimum": ["numpy.ma.core.minimum", "numpy.core.umath.minimum"], "torch.jit.ScriptModule.__getattr__": ["torch._six.with_metaclass", "torch.jit.ScriptMeta", "torch.nn.Module", "torch.jit.ONNXTracedModule.forward", "torch.jit.TracedModule.forward", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.forward", "torch.jit._CachedForward", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.ScriptModule"], "future.backports.email._header_value_parser._Folded.finalize": [], "numpy.core.min": ["future.builtins.misc.min", "future.builtins.__init__.min", "numpy.ma.core.min", "numpy.array_api.__init__.min", "numpy.core.fromnumeric.amin"], "torch.serialization._opener.__init__": [], "string.hexdigits": [], "torch.jit.RecursiveScriptModule.__iter__": ["torch.jit.ScriptModule"], "numpy.core.arrayprint._TimelikeFormat": [], "future.backports.email._header_value_parser.Terminal.all_defects": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.builtins.list"], "regex._regex_core.Grapheme.max_width": ["regex._regex_core.RegexBase"], "numpy.linalg._umath_linalg.svd_m": [], "future.backports.datetime.date.__add__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "numpy.array_api.__init__.broadcast_arrays": ["numpy.lib.stride_tricks.broadcast_arrays", "numpy.array_api.__init__.broadcast_arrays", "numpy.array_api._data_type_functions.broadcast_arrays"], "numpy.lib.index_tricks.ndindex": ["numpy.core.overrides.set_module"], "torch.serialization._maybe_decode_ascii": [], "numpy.array_api.__init__.min": ["future.builtins.misc.min", "future.builtins.__init__.min", "numpy.ma.core.min", "numpy.array_api.__init__.min", "numpy.array_api._statistical_functions.min"], "click._winconsole.ConsoleStream.isatty": [], "regex._regex_core.LookAround.optimise": ["regex._regex_core.RegexBase", "regex._regex_core.LookAround"], "future.backports.email._header_value_parser.Terminal.has_leading_comment": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "numpy.ma.core.sort": ["numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy", "numpy.ma.core.MaskedArray", "numpy.ma.core.fill_value", "numpy.ndarray", "numpy.ndarray.sort", "numpy.array", "numpy.take_along_axis"], "tarfile.PAX_FORMAT": [], "numpy.core.arrayprint.ComplexFloatingFormat.__init__": ["numpy.core.arrayprint.FloatingFormat"], "torch.nn.functional": ["torch._C._add_docstr", "torch._jit_internal.boolean_dispatch", "torch.nn.functional._fractional_max_pool2d", "torch.nn.functional._fractional_max_pool3d", "torch.nn.functional._max_pool1d", "torch.nn.functional._max_pool2d", "torch.nn.functional._max_pool3d", "torch.nn.functional._adaptive_max_pool1d", "torch.nn.functional._adaptive_max_pool2d", "torch.nn.functional._adaptive_max_pool3d", "torch.nn.functional.fractional_max_pool2d_with_indices", "torch.nn.functional.fractional_max_pool3d_with_indices", "torch.nn.functional.max_pool1d_with_indices", "torch.nn.functional.max_pool2d_with_indices", "torch.nn.functional.max_pool3d_with_indices", "torch.nn.functional.adaptive_max_pool1d_with_indices", "torch.nn.functional.adaptive_max_pool2d_with_indices", "torch.nn.functional.adaptive_max_pool3d_with_indices", "torch.nn.functional._pad", "torch._VF", "torch", "torch.Tensor", "torch.conv1d", "torch.conv2d", "torch.conv3d", "torch.conv_transpose1d", "torch.conv_transpose2d", "torch.conv_transpose3d", "torch.conv_tbc", "torch.avg_pool1d", "torch.adaptive_avg_pool1d", "torch.pixel_shuffle", "torch.pdist", "torch.cosine_similarity", "torch.relu_", "torch.selu_", "torch.celu_", "torch.rrelu_", "torch._C", "torch._VF.threshold_"], "numpy.lib._iotools.StringConverter._getsubdtype": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.lib._iotools.NameValidator.validate", "numpy", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_", "numpy.array"], "numpy.array_api.__init__.ones_like": ["numpy.ma.core.ones_like", "numpy.core.numeric.ones_like", "numpy.array_api.__init__.ones_like", "numpy.array_api._creation_functions.ones_like"], "future.backports.email._header_value_parser.Mailbox.display_name": ["future.backports.email._header_value_parser.TokenList"], "future.backports.datetime.datetime.time": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "click.types.Choice.__init__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Sequence"], "future.backports.email._header_value_parser.Mailbox.domain": ["future.backports.email._header_value_parser.TokenList"], "numpy.linalg.linalg._raise_linalgerror_svd_nonconvergence": ["numpy.linalg.linalg.LinAlgError"], "regex._regex_core.Range.__init__": ["regex._regex_core.RegexBase"], "future.backports.datetime.datetime.utcfromtimestamp": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__lt__", "future.backports.datetime.timedelta.__gt__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.today", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.month", "future.backports.datetime.date.timetuple", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__lt__", "future.backports.datetime.date.__gt__", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.minute", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.__lt__", "future.backports.datetime.time.__gt__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.tzname", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__lt__", "future.backports.datetime.datetime.__gt__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__divmod__", "future.builtins.int", "future.backports.datetime.timedelta.days", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.timedelta.__mod__", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date._cmp", "future.backports.datetime.time.microsecond", "future.backports.datetime.time._cmp", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime._cmp", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__reduce__", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date.__reduce__", "future.backports.datetime.tzinfo.__reduce__", "future.backports.datetime.time.second", "future.backports.datetime.time.__reduce__", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.__reduce__", "future.backports.datetime.weekday", "future.backports.datetime.dst", "time", "time.gmtime"], "past.types.basestring.BaseBaseString": [], "regex._regex_core.SetUnion.optimise": ["regex._regex_core.SetBase", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.SetUnion", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallRef.__init__", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.get_firstset", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__"], "torch.utils.data.sampler.BatchSampler": ["torch.utils.data.sampler.Sampler"], "numpy.core.numeric.within_tol": ["numpy.core._ufunc_config.errstate", "numpy.core._ufunc_config._no_nep50_warning"], "future.backports.email._header_value_parser.Terminal.__getnewargs__": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "regex._regex_core.SetBase._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match"], "regex._regex_core.RegexBase.with_flags": [], "future.backports.email._header_value_parser.CFWSList.has_leading_comment": ["future.backports.email._header_value_parser.WhiteSpaceTokenList"], "numpy.core.fromnumeric.argmin": ["numpy", "numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._argmin_dispatcher", "numpy._NoValue"], "urllib3.util.response.is_fp_closed": [], "IPython.html.widgets.HTML": [], "sacremoses.indic.NUKTAS": [], "numpy.array_api.__init__.empty_like": ["numpy.ma.core.empty_like", "numpy.core.numeric.empty_like", "numpy.core.multiarray.empty_like", "numpy.array_api.__init__.empty_like", "numpy.array_api._creation_functions.empty_like"], "importlib.resources.path": [], "torch._jit_internal.createResolutionCallbackFromFrame": ["inspect", "torch._jit_internal.BroadcastingListCls.__getitem__", "torch._jit_internal.SourceContext.__init__", "torch._jit_internal.RRef.__init__", "torch._jit_internal.TupleCls.__getitem__", "torch._jit_internal.TupleInstance.__init__", "torch._jit_internal.ListInstance.__init__", "torch._jit_internal.ListCls.__getitem__", "torch._jit_internal.DictInstance.__init__", "torch._jit_internal.DictCls.__getitem__", "torch._jit_internal.OptionalInstance.__init__", "torch._jit_internal.OptionalCls.__getitem__", "torch._jit_internal.FinalInstance.__init__", "torch._jit_internal.FinalCls.__getitem__", "torch._jit_internal.RRefInstance.__init__", "torch._jit_internal.RRefCls.__getitem__", "torch._jit_internal.createResolutionCallbackFromEnv", "torch._jit_internal.env", "torch._jit_internal.createResolutionCallbackFromEnv.env", "inspect.currentframe"], "regex._regex_core.Branch._flush_set_members": ["regex._regex_core.RegexBase", "regex._regex_core.SetUnion"], "regex._regex_core.Grapheme._compile": ["regex._regex_core.RegexBase", "regex._regex_core.Atomic", "regex._regex_core.Sequence", "regex._regex_core.LazyRepeat", "regex._regex_core.GraphemeBoundary", "regex._regex_core.AnyAll"], "numpy.core.umath.expm1": ["numpy.core.umath.expm1", "numpy.array_api.__init__.expm1"], "google.protobuf.pyext._message.Descriptor": [], "torch.serialization._open_buffer_writer.__exit__": ["torch.serialization._opener"], "future.backports.datetime._is_leap": ["future.backports.datetime.date.year", "future.backports.datetime.year"], "regex._regex_core.Sequence.optimise": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan", "regex._regex_core.Sequence", "regex._regex_core.make_sequence"], "torch._utils_internal.get_source_lines_and_file": ["inspect", "inspect.getsourcefile", "inspect.getsourcelines"], "torch.jit.CompilationUnit.__getattr__": ["torch.jit.ONNXTracedModule.forward", "torch.jit.ONNXTracedModule.wrapper", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__getattr__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.TracedModule.forward", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.TracedModule.extra_repr", "torch.jit._disable_tracing.__enter__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.graph", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.RecursiveScriptModule.extra_repr", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__dir__"], "torch.jit.ScriptMeta": [], "regex._regex_core.RegexBase.compile": [], "numpy.core.arrayprint.SubArrayFormat": [], "inspect.getmembers": [], "numpy.core.defchararray.partition": ["numpy.core.defchararray._to_string_or_unicode_array", "numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray._partition_dispatcher", "numpy.core.defchararray.asarray", "numpy.core.defchararray.partition"], "google.protobuf.descriptor_pool.Default": [], "torch.jit.__init__.OrderedDictWrapper.items": [], "regex._regex_core.Branch.is_atomic": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "click.types._NumberParamTypeBase.convert": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.ParamType.__call__", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase._clamp", "click.types._NumberRangeBase._describe_range", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.IntRange._clamp", "click.types.FloatParamType.__repr__", "click.types.FloatRange._clamp", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "click.types.File.resolve_lazy_flag", "gettext.gettext", "typing.ClassVar", "typing.Type", "typing.Any", "typing.Optional"], "numpy.lib.stride_tricks.broadcast_arrays": ["numpy", "numpy.lib.stride_tricks._broadcast_shape", "numpy.lib.stride_tricks._broadcast_to", "numpy.core.overrides.array_function_dispatch", "numpy.lib.stride_tricks._broadcast_arrays_dispatcher", "numpy.array"], "urllib3.response.HTTPResponse.closed": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "future.backports.datetime.__add__": ["future.backports.datetime.timedelta", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__pos__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__mod__", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.timedelta.__bool__", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.today", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.month", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.hour", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.__format__", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.__bool__", "future.backports.datetime.datetime.hour", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.now", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.hour", "future.backports.datetime.time.minute", "future.backports.datetime.datetime.minute", "future.backports.datetime.minute", "future.backports.datetime.second", "future.backports.datetime.datetime", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "pathlib": [], "future.backports.email._header_value_parser.AngleAddr.route": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "regex._regex_core.ZeroWidthBase.get_firstset": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset"], "regex._regex_core.Conditional.optimise": ["regex._regex_core.RegexBase", "regex._regex_core.Conditional"], "future.backports.email._header_value_parser.CFWSList": ["future.backports.email._header_value_parser.WhiteSpaceTokenList"], "google.protobuf.pyext._message.EnumDescriptor": [], "regex._regex_core.Sequence.max_width": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "tqdm.contrib.itertools.product": ["tqdm.auto.tqdm", "itertools", "itertools.product"], "torch.serialization._check_seekable.raise_err_msg": ["io", "torch.serialization.raise_err_msg", "torch.serialization._check_seekable.raise_err_msg", "torch.serialization._opener.__enter__", "torch.serialization._opener.__exit__", "torch.serialization._open_file.__exit__", "torch.serialization._open_buffer_writer.__exit__", "torch.serialization._open_zipfile_writer_file.__exit__", "torch.serialization._open_zipfile_writer_buffer.__exit__", "io.UnsupportedOperation"], "click.types.UUIDParameterType.convert": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "uuid", "click.types.ParamType.__call__", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase._clamp", "click.types._NumberRangeBase._describe_range", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.IntRange._clamp", "click.types.FloatParamType.__repr__", "click.types.FloatRange._clamp", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "click.types.File.resolve_lazy_flag", "gettext.gettext", "typing.Any", "typing.Optional", "uuid.UUID"], "future.backports.datetime.datetime.utctimetuple": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__mod__", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.timedelta._cmp", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.month", "future.backports.datetime.date.timetuple", "future.backports.datetime.date._cmp", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.minute", "future.backports.datetime.time.microsecond", "future.backports.datetime.time._cmp", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime._cmp", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__reduce__", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date.__reduce__", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.tzinfo.__reduce__", "future.backports.datetime.time.second", "future.backports.datetime.time.dst", "future.backports.datetime.time.__reduce__", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__reduce__", "future.backports.datetime.timezone.dst", "future.backports.datetime._build_struct_time"], "regex._regex_core.SetBase.get_firstset": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset"], "regex._regex_core.Range._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags"], "torch.jit.ONNXTracedModule.forward": ["torch.nn.Module", "torch.jit._unique_state_dict", "torch.jit.RecursiveScriptModule.graph", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.graph", "torch.jit.ONNXTracedModule.forward.wrapper", "torch.jit.ONNXTracedModule.wrapper", "torch.jit.forward.wrapper", "torch.jit._create_interpreter_name_lookup_fn"], "torch.functional.norm": ["torch._jit_internal._overload", "torch._six.PY2", "torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.functional.norm", "torch", "torch._VF", "torch.jit", "torch._VF.norm", "torch._VF.frobenius_norm", "torch._VF.nuclear_norm"], "numpy.core.arrayprint._TimelikeFormat.__init__": ["numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.umath.isnat", "numpy", "numpy.max", "numpy.min"], "torch.jit.TracerWarning.ignore_lib_warnings": ["torch.jit.TracerWarning.ignore_lib_warnings", "warnings", "torch.jit.TracerWarning", "warnings.filterwarnings"], "numpy.core.max": ["future.builtins.misc.max", "future.builtins.__init__.max", "numpy.ma.core.max", "numpy.array_api.__init__.max", "numpy.core.fromnumeric.amax"], "importlib.resources.files": [], "numpy.lib._iotools.LineSplitter._variablewidth_splitter": ["numpy.lib._iotools.LineSplitter.autostrip", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._loose_call", "numpy.lib._iotools.StringConverter._strict_call"], "numpy.core.defchararray.endswith": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray.chararray.endswith", "numpy.core.defchararray._endswith_dispatcher", "numpy.core.defchararray.endswith"], "torch.serialization._open_zipfile_writer_buffer.__exit__": ["torch.serialization._opener"], "google.protobuf.message_factory._GENERATED_PROTOCOL_MESSAGE_TYPE": [], "regex._regex_core.RefGroup._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags"], "click.types.Path.shell_complete": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "click.shell_completion.CompletionItem", "os.path", "typing.ClassVar", "typing.List"], "urllib3.response.data": [], "future.backports.email._header_value_parser.AddrSpec.local_part": ["future.backports.email._header_value_parser.TokenList"], "future.backports.email._header_value_parser.get_group": ["future.backports.email._header_value_parser.Group", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_display_name", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.get_group_list", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "urllib3.response.HTTPResponse.tell": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "io.IOBase", "zlib.error", "brotli.error"], "numpy.linalg.linalg.__all__": [], "regex._regex_core.GreedyRepeat.contains_group": ["regex._regex_core.RegexBase"], "numpy.lib.shape_base._apply_along_axis_dispatcher": [], "future.backports.email._header_value_parser.get_quoted_string": ["future.backports.email._header_value_parser.QuotedString", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email._header_value_parser.get_bare_quoted_string"], "regex._regex_core.Fuzzy.contains_group": ["regex._regex_core.RegexBase"], "click._winconsole._is_console": ["click._winconsole._WindowsConsoleRawIOBase.__init__", "click._winconsole._WindowsConsoleRawIOBase.isatty", "click._winconsole._WindowsConsoleReader.readinto", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole._WindowsConsoleWriter._get_error_message", "click._winconsole._WindowsConsoleWriter.write", "click._winconsole.ConsoleStream.__init__", "click._winconsole.ConsoleStream.write", "click._winconsole.ConsoleStream.writelines", "click._winconsole.ConsoleStream.__getattr__", "click._winconsole.ConsoleStream.isatty", "typing", "io", "msvcrt", "ctypes.byref", "ctypes.wintypes.DWORD", "io.UnsupportedOperation", "typing.TextIO", "msvcrt.get_osfhandle"], "regex._regex_core.Group.can_be_affix": ["regex._regex_core.RegexBase"], "numpy.lib.type_check.common_type": ["numpy.lib.type_check.iscomplexobj", "numpy.core.numeric", "numpy.lib.type_check._common_type_dispatcher", "numpy.core.numeric.integer"], "numpy.linalg._umath_linalg.svd_n": [], "regex._regex_core.SetBase.max_width": ["regex._regex_core.RegexBase", "regex._regex", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Branch._is_folded", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width", "regex._regex.get_expand_on_folding", "regex._regex.fold_case"], "numpy.core.numeric.complex128": [], "numpy.core.numeric.empty_like": ["numpy.ma.core.empty_like", "numpy.core.numeric.empty_like", "numpy.core.multiarray.empty_like", "numpy.array_api.__init__.empty_like"], "future.backports.email._header_value_parser._Folded.__init__": ["future.builtins.list"], "regex._regex_core.Branch._reduce_to_set": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild", "regex._regex_core.Character", "regex._regex_core.Property", "regex._regex_core.SetBase", "regex._regex_core.Branch"], "click._winconsole.ConsoleStream.write": ["click._winconsole._WindowsConsoleRawIOBase.__init__", "click._winconsole._WindowsConsoleRawIOBase.isatty", "click._winconsole._WindowsConsoleReader.readinto", "click._winconsole._WindowsConsoleWriter.writable", "click._winconsole._WindowsConsoleWriter._get_error_message", "click._winconsole._WindowsConsoleWriter.write", "click._winconsole.ConsoleStream.__init__", "click._winconsole.ConsoleStream.write", "click._winconsole.ConsoleStream.writelines", "click._winconsole.ConsoleStream.__getattr__", "click._winconsole.ConsoleStream.isatty", "typing", "typing.AnyStr"], "numpy.lib._iotools.StringConverter._strict_call": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_", "numpy.array"], "regex._regex_core.Atomic.has_simple_start": ["regex._regex_core.RegexBase"], "regex.regex._compile.complain_unused_args": ["locale.getpreferredencoding", "regex.regex.complain_unused_args", "regex.regex._compile.complain_unused_args", "regex.DEFAULT_VERSION", "regex._regex_core", "regex._regex_core._UnscopedFlagSet", "regex._regex_core.Source", "regex._regex_core.Info", "regex._regex_core._parse_pattern", "regex._regex_core._ALL_VERSIONS", "regex._regex_core._ALL_ENCODINGS", "regex._regex_core.Fuzzy", "regex._regex_core._get_required_string", "regex._regex_core._fold_case", "regex._regex_core._check_group_features", "regex._regex_core.OP", "regex._regex_core._flatten_code", "regex._regex_core._FirstSetError", "regex._regex_core._compile_firstset", "regex._regex", "regex._regex_core._shrink_cache", "regex._regex.compile", "regex._regex_core.DEFAULT_VERSION", "regex._regex_core.OP.END", "regex._regex_core.OP.CALL_REF", "regex._regex_core.OP.SUCCESS"], "numpy.lib._iotools.LineSplitter._fixedwidth_splitter": ["numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter.autostrip", "numpy.lib._iotools.LineSplitter.__init__", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.NameValidator.__init__", "numpy.lib._iotools.NameValidator.validate", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.lib._iotools.StringConverter.__init__", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.StringConverter.iterupgrade", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._loose_call"], "fnmatch": [], "regex._regex_core.CallGroup.max_width": ["regex._regex_core.RegexBase"], "regex._regex_core.GreedyRepeat._compile": ["regex._regex_core.RegexBase"], "transformers.configuration_auto.docstring_decorator": ["transformers.configuration_auto.AutoConfig.__init__", "transformers.configuration_auto.AutoConfig.from_pretrained", "re", "transformers.configuration_auto._list_model_options", "re.search"], "click.types._NumberRangeBase.__init__": ["click.types._NumberParamTypeBase", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types._NumberRangeBase._clamp", "click.types.IntRange._clamp", "click.types.FloatRange._clamp", "typing.Optional"], "regex._regex_core.Atomic.get_firstset": ["regex._regex_core.RegexBase"], "click.types.DateTime.to_info_dict": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.FuncParamType.to_info_dict", "click.types.Choice.to_info_dict", "click.types.DateTime.to_info_dict", "click.types._NumberRangeBase.to_info_dict", "click.types.File.to_info_dict", "click.types.Path.to_info_dict", "click.types.Tuple.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Dict", "typing.Any"], "urllib3.response.HTTPResponse._decode": ["urllib3.response.HTTPResponse.get_redirect_location", "urllib3.response.HTTPResponse.connection", "io", "brotli", "zlib", "urllib3.response.HTTPResponse.data", "urllib3.response.data", "urllib3.exceptions.DecodeError", "urllib3.response.DeflateDecoder.__getattr__", "urllib3.response.DeflateDecoder.decompress", "urllib3.response.GzipDecoder.__getattr__", "urllib3.response.GzipDecoder.decompress", "urllib3.response.MultiDecoder.decompress", "urllib3.response.HTTPResponse.release_conn", "urllib3.response.HTTPResponse.isclosed", "urllib3.response.HTTPResponse.tell", "urllib3.response.HTTPResponse._init_length", "urllib3.response.HTTPResponse._init_decoder", "urllib3.response.HTTPResponse._decode", "urllib3.response.HTTPResponse._flush_decoder", "urllib3.response.HTTPResponse._error_catcher", "urllib3.response.HTTPResponse.read", "urllib3.response.HTTPResponse.stream", "urllib3.response.HTTPResponse.getheaders", "urllib3.response.HTTPResponse.getheader", "urllib3.response.HTTPResponse.close", "urllib3.response.HTTPResponse.closed", "urllib3.response.HTTPResponse.fileno", "urllib3.response.HTTPResponse.readable", "urllib3.response.HTTPResponse.readinto", "urllib3.response.HTTPResponse.supports_chunked_reads", "urllib3.response.HTTPResponse._update_chunk_length", "urllib3.response.HTTPResponse._handle_chunk", "urllib3.response.HTTPResponse.read_chunked", "urllib3.response.HTTPResponse.geturl", "urllib3.response.HTTPResponse.__iter__", "io.IOBase", "zlib.error", "brotli.error"], "torch._VF.stft": ["torch.functional.stft"], "google.protobuf.message_factory": ["google.protobuf.pyext.cpp_message", "google.protobuf.internal.python_message", "google.protobuf.message_factory.MessageFactory", "google.protobuf.internal.api_implementation", "google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType", "google.protobuf.internal.python_message.GeneratedProtocolMessageType", "google.protobuf.internal.api_implementation.Type"], "socket.timeout": [], "numpy.core.numeric.int64": ["numpy.array_api.__init__.int64"], "future.backports.email._header_value_parser.TokenList.__init__": ["future.builtins.list", "future.backports.email._header_value_parser.Terminal.__getnewargs__", "future.builtins.super", "future.backports.email._header_value_parser.TokenList"], "click.types.Tuple.arity": ["click.types.CompositeParamType"], "inspect.getsourcefile": [], "numpy.core.defchararray._binary_op_dispatcher": [], "numpy.core.umath.right_shift": ["numpy.ma.core.right_shift", "numpy.core.umath.right_shift"], "future.backports.email._header_value_parser.get_word": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email._header_value_parser.get_quoted_string", "future.backports.email._header_value_parser.get_atom", "future.backports.email.errors", "future.backports.email.errors.HeaderParseError"], "inspect.ismethod": [], "regex._regex_core.Atomic._compile": ["regex._regex_core.RegexBase"], "numpy.core.product": ["tqdm.contrib.itertools.product", "numpy.ma.core.product", "numpy.core.fromnumeric.product"], "regex._regex.get_code_size": [], "click.types.ParamType.shell_complete": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "typing.ClassVar", "typing.Optional", "typing.List"], "regex._regex_core.Skip": ["regex._regex_core.ZeroWidthBase"], "numpy.diff": ["numpy.lib.function_base.diff", "numpy.ma.core.diff"], "transformers.configuration_utils.PretrainedConfig.get_config_dict": ["transformers.configuration_utils.PretrainedConfig.to_json_string", "transformers.file_utils.CONFIG_NAME", "os", "transformers.file_utils.is_remote_url", "transformers.file_utils.hf_bucket_url", "transformers.configuration_utils.PretrainedConfig.get_config_dict", "transformers.file_utils.cached_path", "transformers.configuration_utils.PretrainedConfig.from_json_file", "transformers.configuration_utils.PretrainedConfig._dict_from_json_file", "transformers.configuration_utils.PretrainedConfig.to_json_file", "json", "typing.Tuple", "typing.Dict", "typing.Any", "json.JSONDecodeError", "os.path"], "regex._regex_core.RegexBase.is_atomic": [], "numpy.core.umath.trunc": ["numpy.core.umath.trunc", "numpy.array_api.__init__.trunc"], "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws": ["future.backports.email._header_value_parser.Terminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "typing.NamedTuple": [], "regex._regex_core.Atomic.optimise": ["regex._regex_core.RegexBase"], "click.formatting.wrap_text._flush_par": ["click.formatting.HelpFormatter.write_text", "click._textwrap.TextWrapper", "click.formatting.HelpFormatter.write_paragraph", "click.formatting.HelpFormatter.__init__", "click.formatting.HelpFormatter.write", "click.formatting.HelpFormatter.indent", "click.formatting.HelpFormatter.dedent", "click.formatting.HelpFormatter.write_usage", "click.formatting.HelpFormatter.write_heading", "click.formatting.HelpFormatter.write_dl", "click.formatting.HelpFormatter.section", "click.formatting.HelpFormatter.indentation", "click.formatting.HelpFormatter.getvalue", "typing", "click.formatting.indent", "click.formatting._flush_par", "click.formatting.wrap_text._flush_par", "click._compat.term_len", "typing.List", "typing.Tuple"], "torch.jit._recursive.ScriptMethodStub": [], "numpy.core.defchararray.isupper": ["numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.chararray.isupper", "numpy.core.defchararray.isupper"], "click.types.FloatRange.__init__": ["click.types._NumberRangeBase", "click.types.FloatParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types._NumberRangeBase._clamp", "click.types.IntRange._clamp", "click.types.FloatRange._clamp", "typing.Optional"], "future.backports.email._header_value_parser.params": ["future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.params", "collections.OrderedDict", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts", "future.backports.email._header_value_parser.parts", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser._Folded.__init__", "future.backports.email._header_value_parser._Folded.newline", "future.backports.email._header_value_parser._Folded.finalize", "future.backports.email._header_value_parser._Folded.append_if_fits", "future.backports.email._header_value_parser.TokenList.__init__", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.pprint", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.DomainLiteral.ip", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser.section_number", "future.backports.urllib.parse.unquote_to_bytes", "future.backports.email.errors", "future.backports.urllib.parse.unquote", "future.backports.email.utils", "future.backports.email.utils._has_surrogates", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.UndecodableBytesDefect"], "future.backports.email._header_value_parser.TokenList.cte_encode": ["future.builtins.list", "future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts"], "numpy.core.arrayprint.StructuredVoidFormat.__init__": [], "torch.numel": [], "numpy.core.numeric.arcsin": ["numpy.lib.scimath.arcsin", "numpy.ma.core.arcsin", "numpy.core.umath.arcsin"], "numpy.core.sort": ["numpy.ma.core.sort", "numpy.core.fromnumeric.sort", "numpy.array_api.__init__.sort"], "numpy.core.defchararray.isdecimal": ["numpy.core.numerictypes.unicode_", "numpy.core.defchararray._use_unicode", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.multiarray._vec_string", "numpy.core.numerictypes.bool_", "numpy.core.defchararray._unary_op_dispatcher", "numpy.core.defchararray.isdecimal"], "regex._regex_core.OP.END": [], "regex._regex_core._parse_pattern": ["regex._regex_core.Branch._flatten_branches", "regex._regex_core.parse_sequence", "regex._regex_core.Branch"], "click.types.ParamType.convert": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "typing.ClassVar", "typing.Optional", "typing.Any"], "joblib.numpy_pickle.NumpyArrayWrapper.safe_get_numpy_array_alignment_bytes": [], "dataclasses": [], "future.backports.datetime.time": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "enum.IntEnum": [], "numpy.array_api.__init__.sort": ["numpy.ma.core.sort", "numpy.core.fromnumeric.sort", "numpy.array_api.__init__.sort", "numpy.array_api._sorting_functions.sort"], "numpy.polynomial.polynomial.Polynomial._repr_latex_term": ["numpy.polynomial._polybase.ABCPolyBase", "numpy.polynomial.polynomial.polyadd", "numpy.polynomial.polynomial.polysub", "numpy.polynomial.polynomial.polymul", "numpy.polynomial.polynomial.polydiv", "numpy.polynomial.polynomial.polypow", "numpy.polynomial.polynomial.polyval", "numpy.polynomial.polynomial.polyint", "numpy.polynomial.polynomial.polyder", "numpy.polynomial.polynomial.polyfit", "numpy.polynomial.polynomial.polyline", "numpy.polynomial.polynomial.polyroots", "numpy.polynomial.polynomial.polyfromroots", "numpy", "numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy.array"], "future.backports.email._header_value_parser.TokenList.parts": ["future.builtins.list"], "future.backports.datetime._days_before_year": ["future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.year"], "regex._regex_core.Sequence.is_empty": ["regex._regex_core.RegexBase", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef.__init__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.max_width", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.max_width", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.max_width", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__"], "numpy.core.umath.square": ["numpy.core.umath.square", "numpy.array_api.__init__.square"], "future.backports.email._header_value_parser.TokenList.all_defects": ["future.builtins.list", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "regex._regex_core.LookAroundConditional.contains_group": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser.Value": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.String.__init__": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_folded", "regex._regex", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "regex._regex.fold_case"], "transformers.file_utils.get_from_cache._resumable_file_manager": ["typing.Union", "typing.Dict", "pathlib.Path", "transformers.file_utils.ModelOutput.__post_init__", "os", "requests", "transformers.file_utils.url_to_filename", "fnmatch", "filelock.FileLock", "contextlib.contextmanager", "transformers.file_utils._resumable_file_manager", "transformers.file_utils.get_from_cache._resumable_file_manager", "functools.partial", "transformers.file_utils.http_get", "transformers.file_utils.ModelOutput.setdefault", "tempfile", "json", "typing.Optional", "tempfile.NamedTemporaryFile", "fnmatch.filter", "json.dump", "requests.head", "requests.exceptions", "os.makedirs", "os.path", "os.listdir", "os.replace", "os.stat"], "numpy.core.umath.left_shift": ["numpy.ma.core.left_shift", "numpy.core.umath.left_shift"], "click.types.DateTime.convert": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "datetime.datetime", "click.types.UnprocessedParamType.__repr__", "click.types.StringParamType.__repr__", "click.types.Choice.__repr__", "click.types.DateTime.__repr__", "click.types._NumberRangeBase.__repr__", "click.types.IntParamType.__repr__", "click.types.FloatParamType.__repr__", "click.types.BoolParamType.__repr__", "click.types.UUIDParameterType.__repr__", "gettext.ngettext", "typing.Any", "typing.Optional"], "click.types.UnprocessedParamType.convert": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Any", "typing.Optional"], "regex._regex_core.CallRef._compile": ["regex._regex_core.RegexBase"], "string.octdigits": [], "future.backports.email._header_value_parser.DomainLiteral.domain": ["future.backports.email._header_value_parser.TokenList", "future.builtins.super", "future.backports.email._header_value_parser.DomainLiteral"], "numpy.core.numeric.log10": ["numpy.lib.scimath.log10", "numpy.ma.core.log10", "numpy.core.umath.log10", "numpy.array_api.__init__.log10"], "regex._regex_core.Conditional.is_empty": ["regex._regex_core.RegexBase"], "numpy.core.defchararray._use_unicode": ["numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.index", "numpy.core.defchararray.chararray.rindex", "numpy.core.defchararray.chararray.argsort", "numpy.core.numerictypes.unicode_", "numpy.core.defchararray.chararray.lstrip", "numpy.core.defchararray.chararray.rstrip", "numpy.core.defchararray.chararray.strip", "numpy", "numpy.core.numerictypes.string_", "numpy.asarray"], "regex._regex_core.SetInter.optimise": ["regex._regex_core.SetBase", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.SetInter"], "regex._regex_core.RegexBase.optimise": [], "regex._regex_core.Failure._compile": ["regex._regex_core.ZeroWidthBase"], "transformers.file_utils._get_indent": ["transformers.file_utils.cached_property.__get__", "transformers.file_utils.ModelOutput.__post_init__", "transformers.file_utils.ModelOutput.__delitem__", "transformers.file_utils.ModelOutput.setdefault", "transformers.file_utils.ModelOutput.update", "transformers.file_utils.ModelOutput.__getitem__", "transformers.file_utils.ModelOutput.__setattr__", "transformers.file_utils.ModelOutput.__setitem__", "transformers.file_utils.ModelOutput.to_tuple", "re", "re.search"], "regex._regex_core.SetBase.has_simple_start": ["regex._regex_core.RegexBase"], "dataclasses.asdict": [], "numpy.lib.function_base.percentile": ["numpy.lib.function_base._check_interpolation_as_method", "numpy", "numpy.core.numeric.asanyarray", "numpy.lib.function_base._quantile_is_valid", "numpy.lib.function_base._quantile_unchecked", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base._percentile_dispatcher", "numpy.true_divide"], "future.backports.datetime._format_time": [], "regex._regex_core.Sequence._fix_full_casefold": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "regex._regex", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "regex._regex_core.RegexFlag.__repr__", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__eq__", "regex._regex_core.RegexBase.__ne__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.__eq__", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.__eq__", "regex._regex_core.CallGroup.__eq__", "regex._regex_core.CallGroup.__del__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.__eq__", "regex._regex_core.Conditional.__del__", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.__eq__", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.__eq__", "regex._regex_core.Group.optimise", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.__eq__", "regex._regex_core.Group.__del__", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.__eq__", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.__eq__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.RefGroup.__del__", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.__eq__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase.__del__", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.StringSet.__del__", "regex._regex_core.Source.get", "regex._regex_core.Source.get_many", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Source.at_end", "regex._regex_core.Info.open_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Sequence", "regex._regex_core.Literal", "regex._regex.fold_case", "regex._regex.get_expand_on_folding", "string.find"], "torch.jit.__init__.ScriptMeta.init_then_script.make_stubs": ["torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta.__init__.make_stubs", "torch.jit.__init__.ScriptMeta.init_then_script.make_stubs", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.__init__.init_then_script.make_stubs", "torch.jit.__init__.ONNXTracedModule.__init__", "torch.jit.__init__.TracingCheckError.__init__", "torch.jit.__init__.TracerWarning.ignore_lib_warnings", "torch.jit.__init__.CompilationUnit.__init__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.OrderedDictWrapper.__init__", "torch.jit.__init__.OrderedDictWrapper.__len__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__contains__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.__init__", "torch.jit.__init__.OrderedModuleDict.__contains__", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.ScriptMeta.__init__", "torch.jit.__init__.ScriptMeta.init_then_script", "torch.jit.__init__.TracedModule.__init__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.TracedModule.__setattr__", "torch.jit.__init__.TracedModule.extra_repr", "torch.jit.__init__.TracedModule.check_unique", "torch.jit.__init__._disable_tracing.__enter__", "torch.jit.__init__._disable_tracing.__exit__", "torch.jit.__init__._CachedForward.__get__", "torch.jit.__init__.ScriptModule.__init__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.ScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.__init__", "torch.jit.__init__.RecursiveScriptModule._construct", "torch.jit.__init__.RecursiveScriptModule.inlined_graph", "torch.jit.__init__.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.__init__.RecursiveScriptModule.save_to_buffer", "torch.jit.__init__.RecursiveScriptModule.get_debug_state", "torch.jit.__init__.RecursiveScriptModule.extra_repr", "torch.jit.__init__.RecursiveScriptModule.graph_for", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__setattr__", "torch.jit.__init__.RecursiveScriptModule.copy_instance", "torch.jit.__init__.RecursiveScriptModule.__getstate__", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.RecursiveScriptModule.__iter__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__len__", "torch.jit.__init__.RecursiveScriptModule.__contains__", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.RecursiveScriptModule.__bool__", "torch.jit.__init__.OrderedDictWrapper.values", "torch.jit.__init__.RecursiveScriptModule.save", "torch.jit.__init__.OrderedDictWrapper.keys", "functools", "functools.wraps"], "click._winconsole._WindowsConsoleWriter._get_error_message": ["click._winconsole._WindowsConsoleRawIOBase"], "numpy.core.sign": ["numpy.core.umath.sign", "numpy.array_api.__init__.sign"], "joblib.externals.loky.backend.__init__.get_context": ["joblib.externals.loky.backend.__init__.get_context", "joblib.externals.loky.backend.context.get_context"], "torch.symeig": [], "future.backports.datetime.date": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "regex._regex_core.ZeroWidthBase._compile": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags"], "regex._regex_core.Sequence.pack_characters": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan", "regex._regex_core.Character", "regex._regex_core.String", "regex._regex_core.Literal", "regex._regex_core.is_cased_i", "regex._regex_core.Sequence", "regex._regex_core.Source.get_many", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._compile", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence._compile", "regex._regex_core.SetBase._compile", "regex._regex_core.SetUnion._compile", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.make_sequence"], "regex._regex_core.Character.dump": ["regex._regex_core.RegexBase"], "regex._regex_core.CallRef": ["regex._regex_core.RegexBase"], "click.types._NumberParamTypeBase": ["click.types.ParamType", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.ClassVar", "typing.Type", "typing.Any"], "torch.conv_transpose1d": [], "click._compat.get_best_encoding": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "sys", "click._compat.is_ascii_encoding", "sys.getdefaultencoding", "typing.IO", "typing.Any"], "future.backports.datetime.timedelta.__abs__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "future.backports.datetime.time.__lt__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "future.backports.datetime.timedelta.__sub__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta"], "termios.TCSADRAIN": [], "regex._regex_core.Fuzzy.pack_characters": ["regex._regex_core.RegexBase"], "torch.jit.RecursiveScriptModule.__getstate__": ["torch.jit.ScriptModule", "pickle", "pickle.PickleError"], "numpy.lib._iotools.StringConverter.__call__": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_"], "numpy.core.arrayprint.FloatingFormat": [], "math.isfinite": [], "numpy.core.defchararray._endswith_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "future.backports.email._header_value_parser.get_bare_quoted_string": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.BareQuotedString", "future.backports.email._header_value_parser.get_fws", "future.backports.email._header_value_parser.get_qcontent", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "zipfile": [], "difflib.unified_diff": [], "future.backports.email._header_value_parser.comments": ["future.backports.email._header_value_parser.TokenList.comments", "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments", "future.backports.email._header_value_parser.Comment.comments", "future.backports.email._header_value_parser.Terminal.comments", "future.backports.email._header_value_parser.comments", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "regex._regex_core.Info.close_group": [], "future.backports.email._header_value_parser.get_group_list": ["future.backports.email._header_value_parser.GroupList", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.get_cfws", "future.backports.email._header_value_parser.get_mailbox_list", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.ObsoleteHeaderDefect"], "numpy.polynomial.polynomial.polyfromroots": ["numpy.polynomial.polynomial.polyline", "numpy.polynomial.polynomial.polymul", "numpy.polynomial.polyutils", "numpy.polynomial.polyutils._fromroots"], "random.sample": [], "numpy.lib._iotools.NameValidator.__call__": [], "tty.setraw": [], "torch.multiprocessing.reductions.SharedCache.__init__": ["multiprocessing.util.register_after_fork", "torch.multiprocessing.reductions.SharedCache"], "regex._regex_core.RegexBase.__eq__": [], "future.backports.datetime.month": [], "future.backports.datetime.tzinfo.__reduce__": [], "future.backports.email._header_value_parser.get_name_addr": ["future.backports.email._header_value_parser.NameAddr", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.get_display_name", "future.backports.email._header_value_parser.get_angle_addr", "future.backports.email.errors.HeaderParseError"], "future.backports.datetime.timezone.tzname": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.datetime"], "stat": [], "future.backports.datetime.timedelta.__ne__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta"], "stat.S_ISREG": [], "regex._regex_core.Sequence.__eq__": ["regex._regex_core.RegexBase"], "numpy.lib.function_base.diff": ["numpy", "numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.core.numeric.asanyarray", "numpy.core.multiarray.normalize_axis_index", "numpy.lib.function_base.append", "numpy.core.umath.not_equal", "numpy.core.umath.subtract", "numpy.lib.function_base._diff_dispatcher", "numpy._NoValue", "numpy.asanyarray", "numpy.broadcast_to", "numpy.concatenate", "numpy.bool_"], "torch.multiprocessing.reductions.reduce_event": ["torch.multiprocessing.reductions.rebuild_event"], "torch.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__", "torch.version.__version__"], "regex._regex_core.Sequence._merge_chunks": ["regex._regex_core.RegexBase", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.String.has_simple_start", "regex._regex_core.Source.at_end", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan", "regex._regex_core.RegexFlag.__repr__", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.__eq__", "regex._regex_core.RegexBase.__ne__", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.__eq__", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.__eq__", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.__eq__", "regex._regex_core.CallGroup.__del__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.rebuild", "regex._regex_core.Character._compile", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.__eq__", "regex._regex_core.Conditional.__del__", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.__eq__", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.__eq__", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group._compile", "regex._regex_core.Group.__eq__", "regex._regex_core.Group.__del__", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.__eq__", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.__eq__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.rebuild", "regex._regex_core.Property._compile", "regex._regex_core.Prune._compile", "regex._regex_core.Range.rebuild", "regex._regex_core.Range._compile", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.__del__", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.__eq__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.__del__", "regex._regex_core.SetUnion._compile", "regex._regex_core.String._compile", "regex._regex_core.StringSet.__del__", "regex._regex_core.Source.get", "regex._regex_core.Source.get_many", "regex._regex_core.Source.get_while", "regex._regex_core.Source.expect", "regex._regex_core.Info.open_group", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width"], "regex._regex_core.SetUnion.matches": ["regex._regex_core.SetBase", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallRef.__init__", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.get_firstset", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__"], "requests.api.head": ["requests.api.request"], "regex._regex_core.GreedyRepeat.remove_captures": ["regex._regex_core.RegexBase"], "numpy.lib.function_base._quantile_is_valid": ["numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy", "numpy.all"], "urllib3.contrib.pyopenssl.inject_into_urllib3": ["urllib3.contrib.pyopenssl._validate_dependencies_met", "urllib3.contrib.pyopenssl.PyOpenSSLContext", "urllib3.util", "urllib3.util.SSLContext", "urllib3.util.ssl_", "urllib3.util.HAS_SNI", "urllib3.util.IS_PYOPENSSL"], "torch.jit.frontend.build_def": ["torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_param_list", "torch", "torch.jit.frontend.build_stmts", "torch._C"], "urllib3.response.BrotliDecoder": [], "future.backports.email._header_value_parser.get_atom": ["future.backports.email._header_value_parser.Atom", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.get_atext", "future.backports.email.errors.HeaderParseError"], "torch._jit_internal.DictInstance.__init__": [], "click.types.IntParamType.__repr__": ["click.types._NumberParamTypeBase", "click.types.Tuple.name", "click.types.name"], "future.backports.datetime.timedelta.__divmod__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta.__eq__", "future.backports.datetime.date.__eq__", "future.backports.datetime.time.__eq__", "future.backports.datetime.datetime.__eq__", "future.backports.datetime.timezone.__eq__", "future.backports.datetime.timedelta.__repr__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__reduce__", "future.backports.datetime.timedelta.plural", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.__repr__", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.year", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.replace", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date.__reduce__", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.tzinfo.__reduce__", "future.backports.datetime.time.hour", "future.backports.datetime.time.microsecond", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.__repr__", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.replace", "future.backports.datetime.time.__reduce__", "future.backports.datetime.datetime.hour", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.replace", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__repr__", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.__reduce__", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__repr__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__divmod__"], "torch._jit_internal.FinalCls": [], "numpy.core.defchararray._zfill_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "joblib.numpy_pickle_compat.ZipNumpyUnpickler._open_pickle": ["joblib.numpy_pickle_utils.Unpickler", "joblib.numpy_pickle_compat.ZipNumpyUnpickler.load_build", "joblib.numpy_pickle_compat.load_build", "joblib.numpy_pickle_compat.ZipNumpyUnpickler._open_pickle", "pickle", "io.BytesIO", "joblib.numpy_pickle_compat.read_zfile", "joblib.numpy_pickle_utils.Unpickler.dispatch", "pickle.BUILD"], "click.types.UUIDParameterType.__repr__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "numpy.core.fromnumeric._transpose_dispatcher": [], "regex._regex_core.SetDiff.matches": ["regex._regex_core.SetBase", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters"], "numpy.core.amin": ["numpy.ma.core.amin", "numpy.core.fromnumeric.amin"], "urllib3.response.MultiDecoder": [], "numpy.linalg.linalg._raise_linalgerror_nonposdef": ["numpy.linalg.linalg.LinAlgError"], "torch.conv3d": [], "regex._regex_core.Group.__del__": ["regex._regex_core.RegexBase"], "numpy.core.defchararray._count_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "regex._regex_core.Source.at_end": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "string.index"], "torch.jit.CompilationUnit.__init__": [], "torch.distributed.autograd": ["torch.distributed.autograd.is_available", "torch", "torch._C"], "future.backports.datetime.date.isocalendar": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "future.backports.datetime.timezone.utcoffset": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.datetime"], "regex._regex_core.Branch._flatten_branches": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild", "regex._regex_core.Branch"], "numpy.index_exp": ["numpy.lib.index_tricks.index_exp"], "msvcrt": [], "future.backports.email._header_value_parser.domain": ["future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.builtins.super", "future.backports.email._header_value_parser.Domain", "future.backports.email._header_value_parser.DomainLiteral"], "numpy.linalg.linalg._norm_dispatcher": [], "termios": [], "future.backports.datetime.timezone.__hash__": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.date.__hash__", "future.backports.datetime.time.__hash__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.timezone.__hash__"], "regex._regex_core.Grapheme.dump": ["regex._regex_core.RegexBase"], "regex._regex_core.Property.matches": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex", "regex._regex.has_property_value"], "torch.jit.RecursiveScriptModule.get_debug_state": ["torch.jit.ScriptModule"], "numpy.complexfloating": [], "future.backports.email._header_value_parser.UnstructuredTokenList": ["future.backports.email._header_value_parser.TokenList"], "future.backports.datetime.timezone._create": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname"], "regex._regex_core.Branch.dump": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "future.backports.datetime.time._tzstr": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "chardet.__version__": [], "future.backports.datetime.datetime.isoformat": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__pos__", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.strftime", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.__sub__", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.__hash__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__sub__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime._format_time", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.timedelta"], "click.types._NumberRangeBase._describe_range": ["click.types._NumberParamTypeBase"], "numpy.polynomial.polynomial.polydiv": ["numpy.polynomial.polyutils", "numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy.polynomial.polyutils.as_series", "numpy.polynomial.polyutils.trimseq"], "joblib.numpy_pickle_compat.ZipNumpyUnpickler": ["joblib.numpy_pickle_utils.Unpickler", "joblib.numpy_pickle_compat.ZipNumpyUnpickler.load_build", "joblib.numpy_pickle_compat.load_build", "joblib.numpy_pickle_compat.ZipNumpyUnpickler._open_pickle", "pickle", "joblib.numpy_pickle_utils.Unpickler.dispatch", "pickle.BUILD"], "click.types.FloatRange._clamp": ["click.types._NumberRangeBase", "click.types.FloatParamType", "click.types.Tuple.name", "click.types.name"], "numpy.compat._inspect.convert": [], "future.backports.datetime.date.__new__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.builtins.object.__new__"], "regex._regex_core.RegexBase": [], "multiprocessing.reduction.ForkingPickler": [], "torch._jit_internal._overload": ["torch._jit_internal._qualified_name"], "click._winconsole.ConsoleStream.name": [], "numpy.core.fromnumeric.cumsum": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._cumsum_dispatcher"], "numpy.compat._inspect.formatargvalues.convert": ["numpy.compat._inspect.joinseq", "numpy.compat._inspect.strseq", "numpy.compat._inspect.convert", "numpy.compat._inspect.formatargvalues.convert"], "numpy.lib.type_check._common_type_dispatcher": [], "click.shell_completion.CompletionItem": [], "sacremoses.tokenize.MosesTokenizer.tokenize": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "sacremoses.tokenize.MosesTokenizer.__init__", "sacremoses.tokenize.MosesTokenizer.islower", "sacremoses.tokenize.MosesTokenizer.isanyalpha", "sacremoses.tokenize.MosesTokenizer.has_numeric_only", "sacremoses.tokenize.MosesTokenizer.penn_tokenize", "sacremoses.tokenize.MosesTokenizer.tokenize", "sacremoses.tokenize.MosesDetokenizer.__init__", "sacremoses.tokenize.MosesDetokenizer.tokenize", "sacremoses.tokenize.MosesDetokenizer.detokenize", "sacremoses.tokenize.MosesTokenizer.escape_xml", "sacremoses.tokenize.MosesDetokenizer.unescape_xml", "re.compile", "re.IGNORECASE"], "transformers.configuration_utils.PretrainedConfig._dict_from_json_file": ["transformers.configuration_utils.PretrainedConfig.to_json_string", "transformers.configuration_utils.PretrainedConfig.from_json_file", "transformers.configuration_utils.PretrainedConfig._dict_from_json_file", "transformers.configuration_utils.PretrainedConfig.to_json_file", "json", "json.loads"], "torch.nn.functional._max_pool3d": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch", "torch._jit_internal.List", "torch.jit", "torch.max_pool3d"], "numpy.linalg.linalg._determine_error_states": ["numpy.core.geterrobj", "numpy.core.errstate"], "torch.jit._CachedForward.__get__": [], "numpy.compat._inspect.iscode": ["types", "types.CodeType"], "regex._regex_core.GraphemeBoundary": [], "string.index": [], "numpy.core.defchararray._replace_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "future.backports.datetime.time._getstate": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "regex._regex_core.CallGroup.__del__": ["regex._regex_core.RegexBase"], "click._compat._get_argv_encoding": ["locale", "click._compat._FixupStream.__getattr__", "click._compat._AtomicFile.__getattr__", "sys", "sys.stdin", "sys.getfilesystemencoding", "locale.getpreferredencoding"], "torch.nn.functional._adaptive_max_pool2d": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch", "torch.nn.functional.adaptive_max_pool2d_with_indices", "torch.jit"], "regex._regex_core.SetUnion": ["regex._regex_core.SetBase"], "multiprocessing.reduction.ForkingPickler.register": [], "torch.conv_tbc": [], "future.backports.datetime.datetime.utcnow": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__lt__", "future.backports.datetime.timedelta.__gt__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.today", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.month", "future.backports.datetime.date.timetuple", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__lt__", "future.backports.datetime.date.__gt__", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.minute", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.__lt__", "future.backports.datetime.time.__gt__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.tzname", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__lt__", "future.backports.datetime.datetime.__gt__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset", "time", "time.time"], "future.backports.email._header_value_parser.Phrase._fold": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser._Folded.__init__", "future.backports.email._header_value_parser._Folded.newline", "future.backports.email._header_value_parser._Folded.finalize", "future.backports.email._header_value_parser._Folded.append_if_fits", "future.backports.email._header_value_parser.TokenList.__init__", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.pprint", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.DomainLiteral.ip", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email.errors", "future.backports.email._header_value_parser.UnstructuredTokenList", "future.backports.email._header_value_parser.get_unstructured", "future.backports.email.errors.UndecodableBytesDefect"], "torch._VF.frobenius_norm": [], "torch.jit.script_method": ["torch._jit_internal", "torch.jit.frontend.get_jit_def", "torch.jit._recursive.ScriptMethodStub", "torch._jit_internal.createResolutionCallbackFromFrame"], "tty": [], "torch.nn.functional.fractional_max_pool3d_with_indices": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional.fractional_max_pool3d_with_indices", "torch", "torch.nn.modules.utils._triple", "torch.jit", "torch.rand", "torch._C"], "ctypes.py_object": [], "sacremoses.tokenize.MosesTokenizer.__init__": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "sacremoses.tokenize.MosesTokenizer", "sacremoses.tokenize.MosesTokenizer.islower", "re.compile"], "future.backports.email._parseaddr.AddressList": ["future.backports.email._parseaddr.AddrlistClass"], "click.types._NumberRangeBase.__repr__": ["click.types._NumberParamTypeBase", "click.types._NumberRangeBase._clamp", "click.types.IntRange._clamp", "click.types.FloatRange._clamp"], "numpy.core.numeric.ndarray.__new__": [], "torch.jit.RecursiveScriptModule.copy_instance": ["torch.jit.ScriptModule"], "torch.jit.RecursiveScriptModule.__len__": ["torch.jit.ScriptModule"], "sacremoses.tokenize.MosesTokenizer.has_numeric_only": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile", "re.search"], "regex._regex_core.Atomic": ["regex._regex_core.RegexBase"], "torch.jit._builtins.register_all": ["torch.jit._builtins._is_special_functional_bound_op"], "future.backports.email._header_value_parser.display_name": ["future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.TokenList"], "regex._regex_core.GreedyRepeat.pack_characters": ["regex._regex_core.RegexBase"], "regex._regex_core.Property.dump": ["regex._regex_core.RegexBase"], "sacremoses.tokenize.MosesDetokenizer.__init__": ["sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "sacremoses.tokenize.MosesDetokenizer", "re.compile"], "torch.nn.functional._pad": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional._pad", "torch", "torch._VF", "torch.nn.functional._pad_circular", "torch.jit", "torch._C", "torch._VF.constant_pad_nd"], "urllib3.response.DeflateDecoder": [], "sacremoses.tokenize.MosesDetokenizer.detokenize": ["sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "sacremoses.tokenize.MosesDetokenizer.unescape_xml", "re.compile"], "torch.jit.frontend._uses_true_division": ["torch._six.PY2", "inspect", "torch.jit.frontend._uses_true_division", "__future__", "inspect.ismethod", "inspect.isfunction", "__future__.division"], "numpy.linalg._umath_linalg.eigvalsh_up": [], "future.backports.datetime.date.__reduce__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "regex._regex_core.Fuzzy.remove_captures": ["regex._regex_core.RegexBase"], "torch.pixel_shuffle": [], "regex._regex_core.make_sequence": ["regex._regex_core.Sequence"], "future.backports.datetime.timedelta.days": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "transformers.file_utils.ModelOutput.update": ["collections.OrderedDict"], "logging.NullHandler": [], "future.backports.datetime.time.minute": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "sacremoses.tokenize.MosesTokenizer.penn_tokenize": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile"], "numpy.core.defchararray._partition_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "future.backports.datetime.timezone.__str__": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta"], "torch.jit.OrderedModuleDict.__contains__": ["torch.jit.OrderedDictWrapper", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique"], "future.backports.datetime.datetime.now": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__lt__", "future.backports.datetime.timedelta.__gt__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.today", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.month", "future.backports.datetime.date.timetuple", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__lt__", "future.backports.datetime.date.__gt__", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.time.minute", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.__lt__", "future.backports.datetime.time.__gt__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.tzname", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__lt__", "future.backports.datetime.datetime.__gt__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset", "time", "time.time"], "click.types.UnprocessedParamType.__repr__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "torch._linalg_utils.basis": ["torch", "torch.qr", "torch.orgqr", "torch.geqrf"], "regex._regex_core.Character.matches": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match"], "google.protobuf.pyext.cpp_message.GeneratedProtocolMessageType": ["google.protobuf.pyext._message", "google.protobuf.pyext._message.MessageMeta"], "regex._regex_core.SetInter.matches": ["regex._regex_core.SetBase", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallRef.__init__", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.get_firstset", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__"], "future.backports.datetime.datetime._getstate": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__divmod__", "future.builtins.bytes"], "torch.jit.graph": [], "ssl": [], "regex._regex_core.Conditional.remove_captures": ["regex._regex_core.RegexBase"], "future.builtins.new_min_max.newmax": ["future.builtins.new_min_max.new_min_max", "__builtin__.max", "builtins.max"], "regex._regex_core.LookAroundConditional.dump": ["regex._regex_core.RegexBase"], "google.protobuf.descriptor.DescriptorMetaclass.__instancecheck__": ["google.protobuf.descriptor.DescriptorMetaclass"], "future.backports.datetime.datetime.microsecond": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "ctypes.c_char": [], "future.backports.datetime.date.isoformat": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "torch.multiprocessing.reductions.reduce_tensor": ["torch._namedtensor_internals.check_serializing_named_tensor", "torch", "torch.multiprocessing.reductions.StorageWeakRef", "torch.multiprocessing.reductions.rebuild_cuda_tensor", "torch.multiprocessing.reductions.rebuild_tensor", "torch.utils"], "torch.jit.OrderedDictWrapper.__contains__": ["torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique"], "future.backports.email._encoded_words.encode": ["future.builtins.str"], "numpy.core.arrayprint._get_formatdict": ["numpy.core.arrayprint._object_format", "numpy.core.arrayprint.str_format", "numpy.core.arrayprint.repr_format", "numpy.core.arrayprint.BoolFormat", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.IntegerFormat", "numpy.core.arrayprint.FloatingFormat", "numpy.core.arrayprint.ComplexFloatingFormat", "numpy.core.arrayprint.DatetimeFormat", "numpy.core.arrayprint.TimedeltaFormat", "numpy.core.arrayprint.indirect", "numpy.core.arrayprint._get_formatdict.indirect"], "future.backports.email._header_value_parser.DomainLiteral": ["future.backports.email._header_value_parser.TokenList"], "numpy.polynomial.polynomial.Polynomial._str_term_unicode": ["numpy.polynomial._polybase.ABCPolyBase", "numpy.polynomial.polynomial.polyadd", "numpy.polynomial.polynomial.polysub", "numpy.polynomial.polynomial.polymul", "numpy.polynomial.polynomial.polydiv", "numpy.polynomial.polynomial.polypow", "numpy.polynomial.polynomial.polyval", "numpy.polynomial.polynomial.polyint", "numpy.polynomial.polynomial.polyder", "numpy.polynomial.polynomial.polyfit", "numpy.polynomial.polynomial.polyline", "numpy.polynomial.polynomial.polyroots", "numpy.polynomial.polynomial.polyfromroots", "numpy", "numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy.array"], "regex._regex_core.RegexBase.__ne__": [], "future.backports.datetime.date.__hash__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "regex._regex_core.Source.get_many": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "string.index"], "termios.tcgetattr": [], "future.backports.email._header_value_parser.Terminal._pp": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.builtins.super", "future.backports.email._header_value_parser.Terminal"], "torch.nn.functional.adaptive_max_pool2d_with_indices": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional.adaptive_max_pool2d_with_indices", "torch", "torch.nn.modules.utils._list_with_default", "torch.jit", "torch._C"], "regex._regex_core.SetSymDiff": ["regex._regex_core.SetBase"], "enum.IntFlag": [], "numpy.core.defchararray._unary_op_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "numpy.core.sqrt": ["numpy.lib.scimath.sqrt", "numpy.ma.core.sqrt", "numpy.core.umath.sqrt", "numpy.array_api.__init__.sqrt"], "numpy.core.fromnumeric._argmin_dispatcher": ["numpy", "numpy._NoValue"], "urllib3.packages.six.moves.http_client.HTTPException": [], "future.backports.datetime.time.__reduce__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "numpy.core.add.reduce": [], "ast.FunctionDef": [], "transformers.utils.logging.NOTSET": ["logging.NOTSET"], "future.backports.datetime.datetime.__sub__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.datetime", "future.backports.datetime.timedelta"], "torch.jit.TracerWarning": [], "numpy.lib._iotools.LineSplitter.__call__": ["numpy.lib._iotools._decode_line"], "urllib3.exceptions.DecodeError": ["urllib3.exceptions.HTTPError"], "transformers.file_utils.cached_property.__get__": ["transformers.file_utils.ModelOutput.__setattr__"], "numpy.byte": [], "numpy.correlate": ["numpy.ma.core.correlate", "numpy.core.numeric.correlate", "numpy.core.multiarray.correlate"], "transformers.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__"], "torch.multiprocessing.reductions.SharedCache._after_fork": ["threading", "threading.Lock"], "numpy.core._methods._std": ["numpy.core._methods._var", "numpy.core.multiarray", "numpy.core.umath", "numpy.core.multiarray.ndarray", "numpy.core.umath.sqrt"], "numpy.lib.function_base._check_interpolation_as_method": ["warnings", "warnings.warn"], "future.backports.email.errors.NonPrintableDefect": ["future.backports.email.errors.HeaderDefect"], "regex._regex_core.Branch.remove_captures": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "click.types.StringParamType.__repr__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "future.backports.datetime.timezone.__new__": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.date.strftime", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.timezone.__str__", "future.builtins.str", "future.utils.PY2", "future.utils.native_str"], "regex._regex_core.GreedyRepeat": ["regex._regex_core.RegexBase"], "torch._jit_internal.RRefCls": [], "regex._regex_core.standardise_name": ["regex._regex_core.numeric_to_rational", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match"], "numpy.lib.format._wrap_header_guess_version": ["numpy.lib.format._wrap_header", "warnings", "warnings.warn"], "future.backports.datetime.datetime.hour": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "numpy.core.numerictypes.timedelta64": [], "future.backports.datetime.datetime.__reduce__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "future.backports.email._header_value_parser.UnstructuredTokenList._fold": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email.errors", "future.backports.email._header_value_parser.get_unstructured", "future.backports.email.errors.UndecodableBytesDefect"], "click.types.BoolParamType.__repr__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "torch._VF.nuclear_norm": [], "click.types._is_file_like": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "typing.Any"], "torch.jit.__init__.TopLevelTracedModule": ["torch.jit.__init__.TracedModule", "torch.jit.__init__.ONNXTracedModule.forward", "torch.jit.__init__.TracedModule.forward", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.forward", "torch.jit.__init__._CachedForward"], "joblib.compressor._COMPRESSORS": [], "future.backports.datetime.datetime.replace": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.date.year", "future.backports.datetime.year", "future.backports.datetime.date.month", "future.backports.datetime.month", "future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.day", "future.backports.datetime.time.hour", "future.backports.datetime.datetime.hour", "future.backports.datetime.hour", "future.backports.datetime.time.minute", "future.backports.datetime.datetime.minute", "future.backports.datetime.minute", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.second", "future.backports.datetime.microsecond", "future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime._check_date_fields", "future.backports.datetime._check_time_fields", "future.backports.datetime._check_tzinfo_arg", "future.backports.datetime.datetime"], "numpy.uint": [], "regex._regex_core.RegexFlag.__repr__": ["enum", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "enum.IntFlag"], "torch.conv_transpose3d": [], "future.backports.datetime.datetime.dst": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime._check_utc_offset"], "transformers.configuration_utils.PretrainedConfig.to_json_file": ["transformers.configuration_utils.PretrainedConfig.to_json_string"], "future.backports.email._header_value_parser.addr_spec": ["future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.quote_string"], "future.backports.email._header_value_parser.TokenList.fold": ["future.builtins.list", "future.backports.email._header_value_parser._Folded", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "numpy.core.numeric._correlate_dispatcher": [], "regex._regex_core.Any.dump": ["regex._regex_core.RegexBase"], "torch.jit.OrderedModuleDict.__init__": ["torch.jit.OrderedDictWrapper", "torch.jit.OrderedModuleDict"], "numpy.s_": ["numpy.lib.index_tricks.s_"], "joblib.numpy_pickle_utils._buffered_read_file": ["io", "io.BufferedReader"], "future.builtins.newround.newround": ["decimal.Decimal", "future.utils.PY26", "future.builtins.newround.from_float_26", "future.builtins.newround.newround", "decimal.ROUND_HALF_EVEN", "decimal.Decimal.from_float"], "tensorflow.__version__": [], "numpy.linalg.linalg._eigvalsh_dispatcher": [], "torch.jit.ScriptModule.__init__": ["torch._six.with_metaclass", "torch.jit.ScriptMeta", "torch.nn.Module", "torch.jit.ONNXTracedModule.forward", "torch.jit.TracedModule.forward", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.forward", "torch.jit._CachedForward", "torch.jit.ScriptModule"], "regex._regex_core.Source.get": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "string.index"], "future.backports.datetime.time.__hash__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "regex._regex_core.Group.pack_characters": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser.Comment": ["future.backports.email._header_value_parser.WhiteSpaceTokenList"], "future.backports.datetime.date.toordinal": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "numpy.polynomial.polynomial.polyint": ["numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy", "numpy.polynomial.polynomial.Polynomial._repr_latex_term", "numpy.polynomial.polyutils", "numpy.core.multiarray.normalize_axis_index", "numpy.polynomial.polynomial.polyval", "numpy.polynomial.polyutils._deprecate_as_int", "numpy.array", "numpy.iterable", "numpy.ndim", "numpy.moveaxis", "numpy.all", "numpy.empty"], "regex._regex_core.Atomic.__eq__": ["regex._regex_core.RegexBase"], "click._winconsole.writable": [], "future.backports.datetime.datetime.tzname": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.tzname", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime._call_tzinfo_method", "future.backports.datetime._check_tzname"], "regex._regex_core.Group.remove_captures": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser.AddrSpec.addr_spec": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.quote_string"], "numpy.core.fromnumeric._std_dispatcher": [], "future.backports.datetime.time.second": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "regex._regex_core.Literal.dump": ["regex._regex_core.String", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan"], "future.backports.datetime.date.fromordinal": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "numpy.core.numerictypes.short": [], "click.utils.safecall": ["functools.update_wrapper", "click.utils.wrapper", "click.utils.safecall.wrapper"], "numpy.intc": [], "numpy.lib.function_base._percentile_dispatcher": ["numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature"], "urllib3.exceptions.TimeoutError": ["urllib3.exceptions.HTTPError"], "numpy.core.intc": [], "click.types.IntRange._clamp": ["click.types._NumberRangeBase", "click.types.IntParamType", "click.types.Tuple.name", "click.types.name"], "future.backports.datetime.date.__setstate": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "regex._regex_core.Branch.pack_characters": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.rebuild", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.Group.can_be_affix", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.Property.rebuild", "regex._regex_core.Range.rebuild", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.SetBase.rebuild"], "click.types.CompositeParamType": ["click.types.ParamType"], "numpy.core.shape_base._stack_dispatcher": ["numpy.core.shape_base._arrays_for_stack_dispatcher"], "torch._jit_internal.ListCls": [], "os.read": [], "numpy.core.numerictypes.complexfloating": [], "future.backports.datetime.time.__ne__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "numpy.core.numerictypes.ubyte": [], "future.builtins.object.utcoffset": [], "ast.parse": [], "torch._jit_internal.DictCls": [], "torch.jit.RecursiveScriptModule.__init__": ["torch.jit.ScriptModule", "torch.jit.RecursiveScriptModule"], "future.backports.email._header_value_parser.TokenList._pp": ["future.builtins.list", "future.backports.email._header_value_parser._Folded.newline"], "future.backports.datetime.date.today": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "time.time"], "future.backports.email.quoprimime._body_accumulator.write_char": ["io", "future.backports.email.quoprimime._body_accumulator.write_char", "future.backports.email.quoprimime.quote", "io.StringIO"], "numpy.f2py.auxfuncs._ischaracter": ["numpy.f2py.auxfuncs.isexternal"], "numpy.core.fromnumeric._swapaxes_dispatcher": [], "numpy.core.object_": [], "numpy.result_type": ["numpy.core.numeric.result_type", "numpy.core.multiarray.result_type", "numpy.array_api.__init__.result_type"], "torch.jit.OrderedDictWrapper.__len__": ["torch.jit.OrderedDictWrapper.__len__", "torch.jit.RecursiveScriptModule.__len__"], "future.backports.email._header_value_parser.get_display_name": ["future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.display_name", "future.backports.email._header_value_parser.DisplayName", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_phrase"], "torch.serialization.SourceChangeWarning": [], "ctypes.byref": [], "torch.conv_transpose2d": [], "numpy.lib.stride_tricks._broadcast_arrays_dispatcher": [], "click._termui_impl._translate_ch_to_exc": ["click._compat.WIN", "click._termui_impl.ProgressBar.__init__", "click._termui_impl.ProgressBar.__enter__", "click._termui_impl.ProgressBar.__exit__", "click._termui_impl.ProgressBar.__iter__", "click._termui_impl.ProgressBar.__next__", "click._termui_impl.ProgressBar.pct", "click._termui_impl.ProgressBar.time_per_iteration", "click._termui_impl.ProgressBar.eta", "click._termui_impl.ProgressBar.format_eta", "click._termui_impl.ProgressBar.format_pos", "click._termui_impl.ProgressBar.format_pct", "click._termui_impl.ProgressBar.format_bar", "click._termui_impl.ProgressBar.format_progress_line", "click._termui_impl.ProgressBar.make_step", "click._termui_impl.ProgressBar.update", "click._termui_impl.ProgressBar.generator", "click._termui_impl.Editor.__init__", "click._termui_impl.Editor.get_editor", "click._termui_impl.Editor.edit_file", "click._termui_impl.Editor.edit", "typing", "typing.Optional"], "msvcrt.getwch": [], "torch._jit_internal.createResolutionCallbackFromEnv.env": ["torch._jit_internal.env", "torch._jit_internal.createResolutionCallbackFromEnv.env", "torch._jit_internal.env.__getattr__", "torch._jit_internal.closure_lookup.__getattr__"], "torch.selu_": [], "os.X_OK": [], "regex._regex_core.RegexBase.remove_captures": [], "future.backports.datetime.tzinfo.fromutc": [], "future.backports.datetime.timedelta.seconds": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "future.backports.datetime.timedelta.total_seconds": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "numpy.lib.format._wrap_header": ["struct", "numpy.lib.format.magic", "struct.calcsize", "struct.error", "struct.pack"], "torch._jit_internal.SourceContext": ["torch", "torch._C"], "regex._regex_core.SetBase": ["regex._regex_core.RegexBase"], "torch.jit.TracingCheckError.__init__": ["torch.jit.indent", "torch.jit.TracingCheckError"], "numpy.core.sum": ["torch.sparse.__init__.sum", "numpy.ma.core.sum", "numpy.core.fromnumeric.sum", "numpy.array_api.__init__.sum"], "regex._regex_core._check_firstset": ["regex._regex_core.Branch._flush_set_members", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef.__init__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.max_width", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.max_width", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.__init__", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.max_width", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__", "regex._regex_core.Character", "regex._regex_core.SetUnion"], "regex._regex_core.ZeroWidthBase.dump": ["regex._regex_core.RegexBase"], "google.protobuf.descriptor_pool.DescriptorPool": ["google.protobuf.descriptor", "google.protobuf.descriptor._message"], "numpy.core.numerictypes.byte": [], "string.find": [], "regex._regex_core.SetBase.__del__": ["regex._regex_core.RegexBase"], "numpy.core.numerictypes.datetime64": [], "future.backports.email._header_value_parser.get_extended_attribute": ["future.backports.email._header_value_parser.Attribute", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.get_extended_attrtext", "future.backports.email.errors.HeaderParseError"], "click.types.File.resolve_lazy_flag": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name", "click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "os", "os.path", "os.fspath", "typing.ClassVar"], "torch.jit._unique_state_dict": ["torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer"], "future.standard_library.email._policybase.compat32": [], "regex._regex_core.LookAroundConditional.pack_characters": ["regex._regex_core.RegexBase"], "numpy.core.defchararray._translate_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "future.backports.email._encoded_words": ["future.backports.email._encoded_words._QByteMap", "future.backports.email._encoded_words.decode_q", "future.backports.email._encoded_words.decode_b", "future.backports.email._encoded_words.encode_q", "future.backports.email._encoded_words.encode_b", "future.backports.email._encoded_words.len_q", "future.backports.email._encoded_words.len_b", "functools", "future.builtins.int", "re", "future.builtins.bytes", "future.backports.email._encoded_words._QByteMap.__missing__", "functools.partial", "re.compile"], "regex._regex_core.Conditional.__del__": ["regex._regex_core.RegexBase"], "regex._regex_core.StringSet.dump": ["regex._regex_core.Branch"], "numpy.lib.function_base._meshgrid_dispatcher": [], "regex._regex_core.AnyAll": ["regex._regex_core.Any"], "future.backports.datetime.timedelta.__bool__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "click.utils.LazyFile": [], "future.backports.datetime.time.utcoffset": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "future.backports.email._header_value_parser._get_ptext_to_endchars": ["future.builtins.list", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.builtins.range"], "torch.nn.functional.adaptive_max_pool1d_with_indices": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional.adaptive_max_pool1d_with_indices", "torch", "torch.jit", "torch.adaptive_max_pool1d"], "future.backports.datetime.timedelta.microseconds": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "regex._regex_core.Group.dump": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group"], "future.backports.datetime.timedelta.__str__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__pos__", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.strftime", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.__sub__", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.__hash__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__sub__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__new__", "future.backports.datetime.timedelta.__neg__", "future.backports.datetime.timedelta.__ne__", "future.backports.datetime.date.__new__", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.month", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__ne__", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__new__", "future.backports.datetime.time.minute", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.__ne__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.__new__", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.now", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__ne__", "future.backports.datetime.timezone.__new__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timedelta.__str__.plural", "future.backports.datetime.timedelta.plural", "future.backports.datetime.__str__.plural"], "future.backports.datetime.time.replace": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "torch._VF.tensordot": ["torch.functional.tensordot", "numpy.core.numeric.tensordot", "numpy.array_api.linalg.tensordot", "numpy.array_api.__init__.tensordot"], "click.types.ParamType.__call__": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "typing.ClassVar", "typing.Optional", "typing.Any"], "future.backports.datetime.date.day": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "torch.conv2d": [], "future.backports.email.errors.InvalidHeaderError": [], "future.backports.datetime.minute": [], "torch.jit.OrderedDictWrapper.__init__": ["torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.__contains__"], "regex._regex_core.LookAround.pack_characters": ["regex._regex_core.RegexBase"], "click.types._NumberRangeBase": ["click.types._NumberParamTypeBase"], "torch.jit.RecursiveScriptModule.__bool__": ["torch.jit.ScriptModule", "torch._six.get_function_from_type", "torch.jit.RecursiveScriptModule"], "future.backports.datetime.timedelta.__rsub__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta"], "future.backports.datetime.datetime.__ne__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.datetime"], "typing_extensions.Final": [], "transformers.configuration_auto._list_model_options": [], "requests.exceptions.FileModeWarning": ["requests.exceptions.RequestsWarning"], "regex._regex_core.CallGroup.__eq__": ["regex._regex_core.RegexBase"], "regex._regex_core.Character": ["regex._regex_core.RegexBase"], "_strptime": [], "click.types.FloatParamType": ["click.types._NumberParamTypeBase", "click.types.Tuple.name", "click.types.name"], "regex._regex_core.Atomic.dump": ["regex._regex_core.RegexBase"], "torch._jit_internal.TupleCls": [], "regex._regex_core.GreedyRepeat.__eq__": ["regex._regex_core.RegexBase"], "torch.jit._create_interpreter_name_lookup_fn": ["torch.jit._get_interpreter_name_for_var", "torch.jit._create_interpreter_name_lookup_fn._get_interpreter_name_for_var"], "torch._tensor_classes": [], "regex._regex_core.String.dump": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan"], "torch.celu_": [], "torch.nn.functional._max_pool1d": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch", "torch._jit_internal.List", "torch.jit", "torch.max_pool1d"], "future.backports.datetime.datetime.second": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "msvcrt.get_osfhandle": [], "regex._regex_core.PossessiveRepeat.dump": ["regex._regex_core.GreedyRepeat"], "types.FunctionType": [], "msvcrt.getwche": [], "future.backports.datetime.tzinfo.utcoffset": [], "numpy.ulonglong": [], "torch.nn.functional.fractional_max_pool2d_with_indices": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional.fractional_max_pool2d_with_indices", "torch", "torch.nn.modules.utils._pair", "torch.jit", "torch.rand", "torch._C"], "numpy.short": [], "future.backports.datetime.timedelta.__neg__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta"], "numpy.core.numerictypes.ushort": [], "ctypes.c_ulong": [], "future.backports.email._header_value_parser.Terminal.__new__": ["future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.builtins.super", "future.backports.email._header_value_parser.Terminal"], "torch.jit.ScriptMeta.init_then_script.make_stubs": ["torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.ScriptMeta.__init__.make_stubs", "torch.jit.ScriptMeta.init_then_script.make_stubs", "torch.jit.ScriptMeta.make_stubs", "torch.jit.__init__.init_then_script.make_stubs", "torch.jit.ONNXTracedModule.__init__", "torch.jit.TracingCheckError.__init__", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__init__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.OrderedDictWrapper.__init__", "torch.jit.OrderedDictWrapper.__len__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.__init__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.ScriptMeta.__init__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.TracedModule.__init__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.TracedModule.extra_repr", "torch.jit.TracedModule.check_unique", "torch.jit._disable_tracing.__enter__", "torch.jit._disable_tracing.__exit__", "torch.jit._CachedForward.__get__", "torch.jit.ScriptModule.__init__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__init__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.RecursiveScriptModule.get_debug_state", "torch.jit.RecursiveScriptModule.extra_repr", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.__getstate__", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.RecursiveScriptModule.__len__", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.RecursiveScriptModule.__bool__", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.OrderedDictWrapper.keys", "functools", "functools.wraps"], "regex._regex_core.RefGroup.dump": ["regex._regex_core.RegexBase"], "future.backports.datetime.time.__gt__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "regex._regex_core.StringSet.__del__": ["regex._regex_core.Branch"], "regex._regex_core.Atomic.pack_characters": ["regex._regex_core.RegexBase"], "torch.distributed.autograd.is_available": ["sys", "torch", "sys.version_info", "torch._C"], "torch.jit.forward.wrapper": ["torch.jit._unique_state_dict", "torch.jit.RecursiveScriptModule.graph", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.graph", "torch.jit.ONNXTracedModule.forward.wrapper", "torch.jit.ONNXTracedModule.wrapper", "torch.jit.forward.wrapper", "torch.jit._create_interpreter_name_lookup_fn", "torch.jit.OrderedDictWrapper.__len__", "torch.jit.RecursiveScriptModule.__len__", "torch.jit.TracedModule.extra_repr", "torch.jit._disable_tracing.__exit__", "torch.jit.RecursiveScriptModule.extra_repr", "torch.jit.ONNXTracedModule.__init__", "torch.jit.TracingCheckError.__init__", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__init__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.OrderedDictWrapper.__init__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.__init__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.ScriptMeta.__init__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.__init__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.TracedModule._get_name", "torch.jit.TracedModule.check_unique", "torch.jit._disable_tracing.__enter__", "torch.jit._CachedForward.__get__", "torch.jit.ScriptModule.__init__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__init__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.RecursiveScriptModule.get_debug_state", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.__getstate__", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.RecursiveScriptModule.__bool__"], "numpy.lib.arraypad.pad": ["numpy", "numpy.lib.arraypad._as_pairs", "numpy.lib.arraypad._pad_simple", "numpy.lib.index_tricks.ndindex", "numpy.lib.arraypad._view_roi", "numpy.lib.arraypad._set_pad_area", "numpy.lib.arraypad._get_edges", "numpy.lib.arraypad._get_linear_ramps", "numpy.lib.arraypad._get_stats", "numpy.lib.arraypad._set_reflect_both", "numpy.lib.arraypad._set_wrap_both", "numpy.core.overrides.array_function_dispatch", "numpy.lib.arraypad._pad_dispatcher", "numpy.asarray", "numpy.moveaxis", "numpy.amax", "numpy.amin", "numpy.mean", "numpy.median"], "torch.nn.functional._fractional_max_pool2d": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch", "torch.nn.functional.fractional_max_pool2d_with_indices", "torch.jit"], "google.protobuf.message_factory.MessageFactory": [], "numpy.uint64": ["numpy.array_api.__init__.uint64"], "transformers.utils.logging.get_verbosity": ["transformers.utils.logging._configure_library_root_logger", "transformers.utils.logging._get_library_root_logger"], "regex._regex_core.Range.matches": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match"], "textwrap.TextWrapper": [], "numpy.core.fromnumeric._squeeze_dispatcher": [], "requests._check_cryptography": ["cryptography.__version__", "requests.exceptions.RequestsDependencyWarning", "warnings", "warnings.warn", "cryptography.__version__.split"], "future.backports.email._header_value_parser.get_qp_ctext": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser._Folded.__init__", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser._Folded.append_if_fits", "future.backports.email._header_value_parser.TokenList.__init__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.__repr__", "future.backports.email._header_value_parser.TokenList.all_defects", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.as_encoded_word", "future.backports.email._header_value_parser.TokenList.cte_encode", "future.backports.email._header_value_parser.TokenList._fold", "future.backports.email._header_value_parser.TokenList._pp", "future.backports.email._header_value_parser.UnstructuredTokenList._fold", "future.backports.email._header_value_parser.UnstructuredTokenList.cte_encode", "future.backports.email._header_value_parser.Phrase._fold", "future.backports.email._header_value_parser.Phrase.cte_encode", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.NameAddr.addr_spec", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.addr_spec", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.Mailbox.addr_spec", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.AddrSpec.addr_spec", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.Header._fold", "future.backports.email._header_value_parser.Terminal.__new__", "future.backports.email._header_value_parser.Terminal.__repr__", "future.backports.email._header_value_parser.Terminal.all_defects", "future.backports.email._header_value_parser.Terminal._pp", "future.backports.email._header_value_parser.Terminal.cte_encode", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.Terminal.__getnewargs__", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.as_encoded_word", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.backports.email._header_value_parser._get_ptext_to_endchars", "future.backports.email._header_value_parser.WhiteSpaceTerminal", "future.backports.email._header_value_parser._validate_xtext"], "numpy.compat.py3k.asunicode": [], "future.backports.email._header_value_parser.Header._fold": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str"], "numpy.core.defchararray._splitlines_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "torch.jit.ONNXTracedModule.__init__": ["torch.nn.Module", "torch.jit.ONNXTracedModule"], "numpy.polynomial.polynomial.polyval": ["numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy", "numpy.polynomial.polynomial.Polynomial._repr_latex_term", "numpy.array", "numpy.asarray", "numpy.ndarray"], "ctypes.wintypes.HANDLE": [], "future.backports.datetime.time.microsecond": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "future.backports.datetime.timedelta.__reduce__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "stat.S_ISDIR": [], "numpy.core.numeric._ones_like_dispatcher": [], "future.backports.datetime.timedelta.__floordiv__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.builtins.int", "future.backports.datetime.timedelta"], "numpy.lib.function_base.copy": ["numpy.core.numeric.array", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base._copy_dispatcher"], "numpy.core.fromnumeric.searchsorted": ["numpy.core.fromnumeric._wrapfunc", "numpy.core.fromnumeric._searchsorted_dispatcher"], "future.backports.datetime.date.__lt__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "regex._regex_core.RefGroup.__del__": ["regex._regex_core.RegexBase"], "numpy.polynomial.polyutils.RankWarning": [], "numpy.linalg._umath_linalg.eigh_lo": [], "torch.jit.__init__.init_then_script.make_stubs": [], "future.backports.email._header_value_parser.Group": ["future.backports.email._header_value_parser.TokenList"], "numpy.lib._iotools.autostrip": ["numpy.lib._iotools.LineSplitter.__init__", "numpy.lib._iotools.LineSplitter._delimited_splitter", "numpy.lib._iotools.LineSplitter._fixedwidth_splitter", "numpy.lib._iotools.LineSplitter._variablewidth_splitter", "numpy.lib._iotools.LineSplitter.__call__", "numpy.lib._iotools.NameValidator.__init__", "numpy.lib._iotools.NameValidator.__call__", "numpy.lib._iotools.StringConverter._getdtype", "numpy.lib._iotools.StringConverter._getsubdtype", "numpy.lib._iotools.StringConverter._dtypeortype", "numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.StringConverter._find_map_entry", "numpy.lib._iotools.StringConverter.__init__", "numpy.lib._iotools.StringConverter._loose_call", "numpy.lib._iotools.StringConverter._strict_call", "numpy.lib._iotools.StringConverter.__call__", "numpy.lib._iotools.StringConverter._do_upgrade"], "regex._regex_core.Group": ["regex._regex_core.RegexBase"], "future.backports.datetime.second": [], "difflib": [], "torch.nn.functional._max_pool2d": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch", "torch._jit_internal.List", "torch.jit", "torch.max_pool2d"], "numpy.core.csingle": [], "joblib.externals.loky.backend.context.get_context": ["warnings", "multiprocessing.get_context", "warnings.warn"], "future.builtins.object.tzname": [], "torch.nn.functional._adaptive_max_pool3d": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch", "torch.nn.functional.adaptive_max_pool3d_with_indices", "torch.jit"], "numpy.polynomial.polynomial.polyroots": ["numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy.polynomial.polyutils", "numpy", "numpy.polynomial.polynomial.Polynomial._repr_latex_term", "numpy.polynomial.polynomial.polycompanion", "numpy.linalg", "numpy.polynomial.polyutils.as_series", "numpy.linalg.eigvals", "numpy.array"], "torch._jit_internal.ListInstance.__init__": [], "transformers.file_utils.CONFIG_NAME": [], "future.backports.datetime.date.__gt__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "numpy.polynomial.polynomial.polysub": ["numpy.polynomial.polyutils", "numpy.polynomial.polyutils._sub"], "future.backports.email._header_value_parser.Domain": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.SetInter": ["regex._regex_core.SetBase"], "regex._regex_core.String": ["regex._regex_core.RegexBase"], "torch._jit_internal.env": ["torch._jit_internal.env.__getattr__", "torch._jit_internal.closure_lookup.__getattr__", "torch._jit_internal.env", "torch._jit_internal.createResolutionCallbackFromEnv.env"], "numpy.ma.core.diff": ["numpy.lib.function_base.diff", "numpy.ma.core.diff"], "numpy.polynomial.polynomial.polyadd": ["numpy.polynomial.polyutils", "numpy.polynomial.polyutils._add"], "regex._regex_core.parse_sequence": ["regex._regex_core.make_case_flags", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Character", "regex._regex_core.parse_escape", "regex._regex_core.parse_paren", "regex._regex_core.AnyAll", "regex._regex_core.parse_set", "regex._regex_core.AnyU", "regex._regex_core.Any", "regex._regex_core.StartOfString", "regex._regex_core.parse_quantifier", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.StartOfLineU", "regex._regex_core.StartOfLine", "regex._regex_core.apply_quantifier", "regex._regex_core.parse_fuzzy", "regex._regex_core.EndOfLineU", "regex._regex_core.EndOfLine", "regex._regex_core.EndOfStringLineU", "regex._regex_core.EndOfStringLine", "regex._regex_core.apply_constraint", "regex._regex_core.Sequence"], "urllib3": ["urllib3._version.__version__", "logging.NullHandler", "warnings", "urllib3.exceptions", "logging", "warnings.simplefilter", "urllib3.exceptions.SecurityWarning", "urllib3.exceptions.SubjectAltNameWarning", "urllib3.exceptions.InsecurePlatformWarning", "urllib3.exceptions.SNIMissingWarning", "logging.getLogger"], "numpy.int_": [], "regex._regex_core.Sequence.dump": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "numpy.ma.extras.atleast_2d": ["numpy.ma.extras.atleast_2d", "numpy.core.shape_base.atleast_2d"], "regex._regex_core.Property": ["regex._regex_core.RegexBase"], "numpy.lib.format._has_metadata": ["numpy.lib.format._has_metadata"], "regex._regex_core.RefGroup.remove_captures": ["regex._regex_core.RegexBase", "regex._regex_core.error"], "joblib.numpy_pickle_utils._detect_compressor": ["joblib.numpy_pickle_utils._get_prefixes_max_len", "joblib.compressor._ZFILE_PREFIX", "joblib.compressor._COMPRESSORS", "joblib.compressor._COMPRESSORS.items"], "torch.typename": [], "future.backports.datetime.timezone.dst": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.datetime"], "future.backports.email._header_value_parser.local_part": ["future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.TokenList"], "numpy.lib.function_base._quantile_unchecked": ["numpy.lib.function_base._ureduce", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base._quantile_ureduce_func"], "regex._regex_core.GreedyRepeat.dump": ["regex._regex_core.RegexBase"], "torch.cosine_similarity": [], "numpy.core.numeric._roll_dispatcher": [], "regex._regex_core.Fuzzy.__eq__": ["regex._regex_core.RegexBase"], "future.backports.datetime.datetime.combine": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "torch.jit.OrderedModuleDict": ["torch.jit.OrderedDictWrapper"], "urllib3.exceptions.RequestError": ["urllib3.exceptions.PoolError"], "click._compat._make_text_stream": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat.get_best_encoding", "click._compat._NonClosingTextIOWrapper", "typing.BinaryIO", "typing.Optional", "typing.TextIO"], "future.backports.datetime.date.__format__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "sacremoses.tokenize.MosesDetokenizer.tokenize": ["sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "sacremoses.tokenize.MosesDetokenizer.unescape_xml", "sacremoses.tokenize.MosesTokenizer.__init__", "sacremoses.tokenize.MosesTokenizer.islower", "sacremoses.tokenize.MosesTokenizer.isanyalpha", "sacremoses.tokenize.MosesTokenizer.has_numeric_only", "sacremoses.tokenize.MosesTokenizer.penn_tokenize", "sacremoses.tokenize.MosesTokenizer.tokenize", "sacremoses.tokenize.MosesDetokenizer.__init__", "sacremoses.tokenize.MosesDetokenizer.tokenize", "sacremoses.tokenize.MosesDetokenizer.detokenize", "sacremoses.util.is_cjk", "re.compile", "re.search", "re.IGNORECASE"], "numpy.core.fromnumeric._sort_dispatcher": [], "typing.to_info_dict": [], "regex._regex.fold_case": [], "torch.jit.ScriptMeta.__init__": ["torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.ScriptMeta", "torch.jit.ScriptMeta.__init__.init_then_script", "torch.jit.ScriptMeta.init_then_script", "torch.jit.__init__.init_then_script"], "future.backports.email._header_value_parser.Mailbox": ["future.backports.email._header_value_parser.TokenList"], "numpy.core.arrayprint.StructuredVoidFormat": [], "regex._regex_core.LookAround": ["regex._regex_core.RegexBase"], "google.protobuf.internal.python_message": ["google.protobuf.descriptor.FieldDescriptor", "google.protobuf.internal.extension_dict._ExtensionDict"], "future.backports.datetime.hour": [], "urllib3.contrib.pyopenssl": ["urllib3.contrib.pyopenssl.makefile", "urllib3.util.ssl_.PROTOCOL_TLS_CLIENT", "urllib3.packages.backports.makefile.backport_makefile", "socket._fileobject", "ssl", "logging", "urllib3.contrib.pyopenssl.WrappedSocket.recv", "urllib3.contrib.pyopenssl.WrappedSocket.recv_into", "urllib3.contrib.pyopenssl.WrappedSocket.version", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations", "urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios", "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket", "urllib3.contrib.pyopenssl.WrappedSocket", "urllib3.util", "urllib3.util.PROTOCOL_TLS", "urllib3.util.HAS_SNI", "urllib3.util.ssl_", "logging.getLogger", "ssl.PROTOCOL_TLSv1", "ssl.CERT_NONE", "ssl.CERT_OPTIONAL", "ssl.CERT_REQUIRED", "ssl.PROTOCOL_SSLv3", "ssl.PROTOCOL_TLSv1_1", "ssl.PROTOCOL_TLSv1_2"], "urllib3.response.GzipDecoder": [], "regex._regex_core.CallGroup.remove_captures": ["regex._regex_core.RegexBase", "regex._regex_core.error"], "future.backports.datetime.timedelta.__pos__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "numpy.lib._iotools.StringConverter._loose_call": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_"], "future.backports.datetime.datetime.__str__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "torch.multiprocessing.reductions.reduce_storage": ["torch.multiprocessing.reductions.rebuild_storage_filename", "torch.multiprocessing.get_sharing_strategy", "torch.multiprocessing.reductions.rebuild_storage_fd", "torch.multiprocessing.reductions.rebuild_storage_empty", "torch.multiprocessing.reductions.fd_id", "sys", "multiprocessing", "torch.multiprocessing.reductions.StorageWeakRef", "sys.version_info", "multiprocessing.reduction"], "google.protobuf.descriptor._USE_C_DESCRIPTORS": [], "future.backports.datetime.day": [], "torch.jit._builtins._get_builtin_table.register_all": ["torch.jit._builtins.register_all", "torch.jit._builtins._get_builtin_table.register_all", "torch._six.PY2", "math", "torch._six.PY37", "torch.distributed.autograd", "torch.jit._builtins._is_special_functional_bound_op", "math.gcd", "math.isfinite", "math.remainder", "torch.distributed.autograd.is_available", "torch.distributed.autograd.get_gradients"], "regex._regex_core.LookAroundConditional": ["regex._regex_core.RegexBase"], "itertools.product": [], "numpy.core.shape_base._atleast_2d_dispatcher": [], "requests.get": ["requests.api.get"], "future.backports.email._header_value_parser.TokenList._fold": ["future.builtins.list", "future.backports.email._header_value_parser.TokenList.parts", "future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.ParameterizedHeaderValue.parts", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email.errors", "future.backports.email.errors.UndecodableBytesDefect"], "regex._regex_core.CallGroup.dump": ["regex._regex_core.RegexBase"], "future.backports.datetime.date.year": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "click.types._NumberRangeBase._clamp": ["click.types._NumberParamTypeBase"], "future.backports.datetime.date.__ne__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "future.backports.datetime.datetime.__lt__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.datetime", "future.backports.datetime._cmperror"], "regex._regex_core.SetBase.dump": ["regex._regex_core.RegexBase", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef.__init__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.max_width", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.max_width", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.max_width", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__"], "numpy.core.arrayprint._recursive_guard.decorating_function": ["numpy.core.arrayprint.decorating_function", "numpy.core.arrayprint._recursive_guard.decorating_function", "numpy.core.arrayprint.wrapper", "numpy.core.arrayprint._recursive_guard.decorating_function.wrapper", "numpy.core.arrayprint.decorating_function.wrapper"], "joblib.numpy_pickle_utils._is_raw_file": ["io", "io.FileIO"], "click._winconsole.name": [], "termios.error": [], "numpy.core.arrayprint._formatArray.recurser": ["numpy.core.arrayprint.recurser", "numpy.core.arrayprint._formatArray.recurser", "numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.StructuredVoidFormat.__call__", "numpy.core.arrayprint.FloatingFormat.__init__", "numpy.core.arrayprint.IntegerFormat.__init__", "numpy.core.arrayprint.BoolFormat.__init__", "numpy.core.arrayprint.ComplexFloatingFormat.__init__", "numpy.core.arrayprint._TimelikeFormat.__init__", "numpy.core.arrayprint.DatetimeFormat.__init__", "numpy.core.arrayprint.SubArrayFormat.__init__", "numpy.core.arrayprint.StructuredVoidFormat.__init__", "numpy.core.arrayprint._extendLine_pretty", "numpy.core.arrayprint._extendLine"], "torch._VF.threshold_": [], "regex._regex_core.Branch._add_precheck": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Literal", "regex._regex_core._check_firstset", "regex._regex_core.Character", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan"], "torch.jit.ONNXTracedModule.forward.wrapper": ["torch.nn.Module", "torch.jit._unique_state_dict", "torch.jit.RecursiveScriptModule.graph", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.graph", "torch.jit.ONNXTracedModule.forward.wrapper", "torch.jit.ONNXTracedModule.wrapper", "torch.jit.forward.wrapper", "torch.jit._create_interpreter_name_lookup_fn", "torch.jit.OrderedDictWrapper.__len__", "torch.jit.RecursiveScriptModule.__len__", "torch.jit.TracedModule.extra_repr", "torch.jit._disable_tracing.__exit__", "torch.jit.RecursiveScriptModule.extra_repr", "torch.jit.ONNXTracedModule.__init__", "torch.jit.TracingCheckError.__init__", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__init__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.OrderedDictWrapper.__init__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.__init__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.ScriptMeta.__init__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.__init__", "torch.jit.TracedModule.__getattr__", "torch.jit.TracedModule.__setattr__", "torch.jit.TracedModule._get_name", "torch.jit.TracedModule.check_unique", "torch.jit._disable_tracing.__enter__", "torch.jit._CachedForward.__get__", "torch.jit.ScriptModule.__init__", "torch.jit.ScriptModule.__getattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__init__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.RecursiveScriptModule.get_debug_state", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.__getstate__", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.RecursiveScriptModule.__bool__"], "numpy.core.reciprocal": ["numpy.core.umath.reciprocal"], "torch.relu_": [], "torch.rrelu_": [], "numpy.lib.stride_tricks._broadcast_shape": ["numpy", "numpy.lib.stride_tricks.broadcast_to", "numpy.broadcast"], "torch.avg_pool1d": [], "numpy.linalg._umath_linalg.eigh_up": [], "regex._regex_core.Group.__eq__": ["regex._regex_core.RegexBase"], "torch._jit_internal.TupleInstance.__init__": [], "torch.conv1d": [], "regex._regex_core.SetSymDiff.matches": ["regex._regex_core.SetBase", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.dump", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.dump", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch._compile", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.dump", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.optimise", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.dump", "regex._regex_core.Character.matches", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.dump", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.dump", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.optimise", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.dump", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.optimise", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.dump", "regex._regex_core.Property.matches", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.dump", "regex._regex_core.Range.matches", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.dump", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase.dump", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.dump", "regex._regex_core.String.max_width", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many", "regex._regex_core.Source.match", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallRef.__init__", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.get_firstset", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters"], "future.backports.datetime.microsecond": [], "termios.tcsetattr": [], "torch.jit.RecursiveScriptModule.__contains__": ["torch.jit.ScriptModule", "torch.jit.OrderedDictWrapper.keys"], "numpy.dual.lstsq": ["numpy.dual.lstsq", "numpy.linalg.linalg.lstsq"], "future.backports.datetime.timedelta.plural": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta.__new__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__neg__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__ne__", "future.backports.datetime.date.__new__", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.month", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__ne__", "future.backports.datetime.date.isocalendar", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__new__", "future.backports.datetime.time.minute", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.__ne__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.__new__", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.now", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__ne__", "future.backports.datetime.timezone.__new__", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__abs__"], "numpy.core.add": ["numpy.ma.core.add", "numpy.core.defchararray.add", "numpy.core.umath.add", "numpy.array_api.__init__.add"], "future.backports.email._header_value_parser.get_addr_spec": ["future.backports.email._header_value_parser.NameAddr.addr_spec", "future.backports.email._header_value_parser.AngleAddr.addr_spec", "future.backports.email._header_value_parser.Mailbox.addr_spec", "future.backports.email._header_value_parser.AddrSpec.addr_spec", "future.backports.email._header_value_parser.addr_spec", "future.backports.email._header_value_parser.AddrSpec", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_local_part", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.get_domain", "future.backports.email.errors.InvalidHeaderDefect"], "future.backports.datetime.timedelta.__hash__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.date.__hash__", "future.backports.datetime.time.__hash__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.timezone.__hash__"], "torch.jit.__init__.make_stubs_from_exported_methods": ["torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.items", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.items", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch._jit_internal", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch._jit_internal.FunctionModifiers"], "regex._regex_core.RegexBase.pack_characters": [], "future.backports.datetime.time.tzname": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "torch._jit_internal.createResolutionCallbackFromEnv": ["torch._jit_internal.env", "torch._jit_internal.createResolutionCallbackFromEnv.env"], "torch._jit_internal.SourceContext.__init__": ["torch", "torch._jit_internal.SourceContext", "torch._C"], "regex._regex_core.Sequence._flush_characters": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Source.get_many", "regex._regex_core.is_cased_i", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "regex._regex_core.Sequence", "regex._regex_core.Character", "regex._regex_core.String"], "numpy.polynomial.polynomial.polypow": ["numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy.polynomial.polyutils", "numpy", "numpy.polynomial.polyutils._pow", "numpy.convolve"], "regex._regex_core.Conditional.pack_characters": ["regex._regex_core.RegexBase"], "torch.jit.ScriptMeta.__init__.make_stubs": ["torch.jit.ONNXTracedModule", "torch.jit.indent", "torch.jit.TracingCheckError", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.OrderedModuleDict", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.ScriptMeta", "torch.jit.ScriptMeta.__init__.init_then_script", "torch.jit.ScriptMeta.init_then_script", "torch.jit.__init__.init_then_script", "torch.jit.TracedModule", "torch.jit.QualnameWrapper", "torch.jit.TracedModule.__init__.check_unique", "torch.jit.__init__.check_unique", "torch.jit.make_module", "torch.jit.ScriptModule", "torch.jit.RecursiveScriptModule"], "google.protobuf.descriptor.FieldDescriptor.has_presence": ["google.protobuf.descriptor.DescriptorBase", "google.protobuf.pyext._message", "google.protobuf.descriptor.FieldDescriptor", "google.protobuf.pyext._message.FieldDescriptor", "google.protobuf.pyext._message.Message", "google.protobuf.pyext._message.default_pool"], "inspect.getsourcelines": [], "gettext.ngettext": [], "transformers.utils.logging": ["threading", "logging", "typing.Optional", "threading.Lock", "logging.WARNING", "logging.DEBUG", "logging.INFO", "logging.ERROR", "logging.CRITICAL", "logging.Handler"], "regex._regex_core.RegexBase.__hash__": ["regex._regex_core.RegexBase.__hash__"], "future.backports.datetime.timedelta.__mod__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta.__repr__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__reduce__", "future.backports.datetime.timedelta.plural", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.__repr__", "future.backports.datetime.date.strftime", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.year", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.replace", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date.__reduce__", "future.backports.datetime.tzinfo.fromutc", "future.backports.datetime.tzinfo.__reduce__", "future.backports.datetime.time.hour", "future.backports.datetime.time.microsecond", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.__repr__", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.__format__", "future.backports.datetime.time.replace", "future.backports.datetime.time.__reduce__", "future.backports.datetime.datetime.hour", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.replace", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__repr__", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.__reduce__", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__repr__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.fromutc", "future.backports.datetime.timezone._name_from_offset"], "regex._regex_core.LookAround.dump": ["regex._regex_core.RegexBase"], "future.backports.datetime.datetime.__hash__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.date.__hash__", "future.backports.datetime.time.__hash__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timedelta.days", "future.backports.datetime.days", "future.backports.datetime._ymd2ord", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.seconds", "future.backports.datetime.timedelta"], "torch.distributed.autograd.get_gradients": [], "torch._jit_internal.boolean_dispatch": ["torch._jit_internal.fn", "torch._jit_internal.boolean_dispatch.fn"], "future.backports.datetime.timedelta.__truediv__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.builtins.int", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.timedelta.plural", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.today", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.__format__", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.year", "future.backports.datetime.date.day", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.replace", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__hash__", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.__format__", "future.backports.datetime.time.tzname", "future.backports.datetime.time.replace", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.date", "future.backports.datetime.datetime.replace", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone._create", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__bool__", "future.backports.datetime.date.__sub__", "future.backports.datetime.time.__bool__", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.__sub__"], "future.backports.datetime.date.replace": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "requests.exceptions.RequestsDependencyWarning": ["requests.exceptions.RequestsWarning"], "numpy.core.numeric._full_like_dispatcher": [], "click.types.FloatParamType.__repr__": ["click.types._NumberParamTypeBase", "click.types.Tuple.name", "click.types.name"], "future.backports.email._header_value_parser.TokenList.as_encoded_word": ["future.builtins.list", "future.backports.email._header_value_parser.AddressList.addresses", "future.backports.email._header_value_parser.TokenList.startswith_fws", "future.backports.email._header_value_parser.TokenList.pop_leading_fws", "future.backports.email._header_value_parser.TokenList.pop_trailing_ws", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.Terminal.pop_trailing_ws", "future.backports.email._header_value_parser.Terminal.pop_leading_fws", "future.backports.email._header_value_parser.WhiteSpaceTerminal.startswith_fws", "future.backports.email._header_value_parser.ValueTerminal.startswith_fws", "future.backports.email._encoded_words", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._encoded_words.encode"], "future.backports.email._header_value_parser.NameAddr.addr_spec": ["future.backports.email._header_value_parser.TokenList"], "future.backports.datetime.time.__setstate": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "regex._regex_core.LookAround.remove_captures": ["regex._regex_core.RegexBase"], "regex._regex_core.Sequence.remove_captures": ["regex._regex_core.RegexBase", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.__hash__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character.matches", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property.matches", "regex._regex_core.Range.optimise", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion.matches", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String.get_required_string", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.scan"], "transformers.configuration_utils.PretrainedConfig.from_json_file": ["transformers.configuration_utils.PretrainedConfig.to_json_string", "transformers.configuration_utils.PretrainedConfig.get_config_dict", "transformers.configuration_utils.PretrainedConfig.from_json_file", "transformers.configuration_utils.PretrainedConfig._dict_from_json_file", "transformers.configuration_utils.PretrainedConfig.to_json_file"], "torch.nn.functional.max_pool2d_with_indices": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional.max_pool2d_with_indices", "torch", "torch._jit_internal.List", "torch.jit", "torch._C"], "regex._regex_core.LookAroundConditional.remove_captures": ["regex._regex_core.RegexBase"], "future.backports.datetime.time.__format__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "future.backports.datetime.date.month": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "future.backports.email._header_value_parser.ValueTerminal.as_encoded_word": ["future.backports.email._header_value_parser.Terminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws", "future.backports.email._encoded_words", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email._encoded_words.encode"], "numpy.polynomial.polynomial.polymul": ["numpy.polynomial.polyutils", "numpy", "numpy.polynomial.polyutils.as_series", "numpy.polynomial.polyutils.trimseq", "numpy.convolve"], "regex._regex_core.Sequence": ["regex._regex_core.RegexBase"], "numpy.core.defchararray._startswith_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "numpy.core.defchararray._expandtabs_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "future.backports.email._header_value_parser.route": ["future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "future.backports.datetime.date.isoweekday": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "numpy.ubyte": [], "sacremoses.tokenize.MosesTokenizer.islower": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile"], "future.backports.datetime.timetuple": ["future.backports.datetime._build_struct_time", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.dst", "future.backports.datetime.datetime.dst", "future.backports.datetime.timezone.dst", "future.backports.datetime.dst"], "click.types.Choice.__repr__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "torch._utils._import_dotted_name": [], "click._winconsole.Py_buffer": ["ctypes.Structure", "ctypes.c_void_p", "ctypes.py_object", "ctypes.c_ssize_t", "ctypes.c_int", "ctypes.c_char_p"], "numpy.core.umath.multiply.reduce": [], "future.types.disallow_types": ["future.types.decorator", "future.types.disallow_types.decorator"], "future.backports.email._header_value_parser.Attribute": ["future.backports.email._header_value_parser.TokenList"], "torch.nn.functional.max_pool1d_with_indices": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional.max_pool1d_with_indices", "torch", "torch._jit_internal.List", "torch.jit", "torch.max_pool1d_with_indices"], "numpy.polynomial.polyutils._deprecate_as_int": ["operator", "warnings", "warnings.warn", "operator.index"], "torch._jit_internal.OptionalInstance.__init__": [], "future.backports.datetime.year": [], "torch.pdist": [], "google.protobuf.pyext.cpp_message": [], "torch.nn.functional._adaptive_max_pool1d": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch", "torch.nn.functional.adaptive_max_pool1d_with_indices", "torch.jit"], "future.backports.datetime.dst": ["future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime._check_utc_offset", "future.backports.datetime.datetime"], "torch._VF.norm": ["torch.functional.norm", "numpy.dual.norm", "numpy.linalg.linalg.norm"], "regex._regex_core.Source.match": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "string.startswith", "string.index"], "torch._jit_internal.FinalInstance.__init__": [], "requests.check_compatibility": ["requests.api.patch", "chardet.__version__", "charset_normalizer.__version__", "chardet.__version__.split", "charset_normalizer.__version__.split"], "numpy.polynomial.polynomial.polyder": ["numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy", "numpy.polynomial.polynomial.Polynomial._repr_latex_term", "numpy.polynomial.polyutils", "numpy.core.multiarray.normalize_axis_index", "numpy.polynomial.polyutils._deprecate_as_int", "numpy.array", "numpy.moveaxis", "numpy.empty"], "torch._VF.meshgrid": ["torch.functional.meshgrid", "numpy.lib.function_base.meshgrid", "numpy.array_api.__init__.meshgrid"], "future.backports.datetime.timezone._name_from_offset": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.timedelta.__divmod__"], "regex._regex_core.Source.expect": ["regex._regex_core.error"], "future.backports.datetime.timezone.fromutc": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.datetime"], "cryptography.__version__": [], "future.backports.datetime.datetime.__setstate": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo"], "regex._regex_core.LookAroundConditional.__eq__": ["regex._regex_core.RegexBase"], "future.backports.datetime.datetime.__new__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.date.year", "future.backports.datetime.year", "future.builtins.bytes", "future.backports.datetime.date.month", "future.backports.datetime.month", "future.backports.datetime.date.isocalendar", "future.backports.datetime._check_tzinfo_arg", "future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime._check_time_fields", "future.backports.datetime.time.hour", "future.backports.datetime.datetime.hour", "future.backports.datetime.hour", "future.backports.datetime.time.minute", "future.backports.datetime.datetime.minute", "future.backports.datetime.minute", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.second", "future.backports.datetime.microsecond", "future.backports.datetime.timedelta.days", "future.backports.datetime.date.today", "future.backports.datetime.date.day", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.day"], "json.JSONDecodeError": [], "os.fsencode": [], "os.R_OK": [], "numpy.core.fromnumeric._any_dispatcher": ["numpy", "numpy._NoValue"], "future.backports.datetime.datetime.utcoffset": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.utcoffset", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime._check_utc_offset"], "numpy.linalg.linalg._multi_svd_norm": ["numpy.core.moveaxis", "numpy.linalg.linalg.svd"], "regex._regex_core.Conditional.__eq__": ["regex._regex_core.RegexBase"], "regex._regex_core.Atomic.remove_captures": ["regex._regex_core.RegexBase"], "numpy.lib.histograms.histogram": ["numpy.lib.histograms._ravel_and_check_weights", "numpy.lib.histograms._get_bin_edges", "numpy", "numpy.lib.histograms._unsigned_subtract", "numpy.lib.histograms._search_sorted_inclusive", "numpy.lib.histograms._histogram_dispatcher", "numpy.dtype", "numpy.intp", "numpy.can_cast", "numpy.double", "numpy.zeros", "numpy.diff", "numpy.bincount", "numpy.sort", "numpy.argsort", "numpy.concatenate", "numpy.logical_and", "numpy.array"], "numpy.core.arrayprint.recurser": ["numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint.FloatingFormat.__call__", "numpy.core.arrayprint.IntegerFormat.__call__", "numpy.core.arrayprint.BoolFormat.__call__", "numpy.core.arrayprint.ComplexFloatingFormat.__call__", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint._TimelikeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat.__call__", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.SubArrayFormat.__call__", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.StructuredVoidFormat.__call__", "numpy.core.arrayprint.FloatingFormat.__init__", "numpy.core.arrayprint.IntegerFormat.__init__", "numpy.core.arrayprint.BoolFormat.__init__", "numpy.core.arrayprint.ComplexFloatingFormat.__init__", "numpy.core.arrayprint._TimelikeFormat.__init__", "numpy.core.arrayprint.DatetimeFormat.__init__", "numpy.core.arrayprint.SubArrayFormat.__init__", "numpy.core.arrayprint.StructuredVoidFormat.__init__", "numpy.core.arrayprint.recurser", "numpy.core.arrayprint._formatArray.recurser", "numpy.core.arrayprint._extendLine_pretty", "numpy.core.arrayprint._extendLine"], "future.backports.datetime.time.dst": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "numpy.core.numeric._tensordot_dispatcher": [], "numpy.ushort": [], "future.backports.datetime.time.__bool__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "numpy.polynomial.polynomial.Polynomial._str_term_ascii": ["numpy.polynomial._polybase.ABCPolyBase", "numpy.polynomial.polynomial.polyadd", "numpy.polynomial.polynomial.polysub", "numpy.polynomial.polynomial.polymul", "numpy.polynomial.polynomial.polydiv", "numpy.polynomial.polynomial.polypow", "numpy.polynomial.polynomial.polyval", "numpy.polynomial.polynomial.polyint", "numpy.polynomial.polynomial.polyder", "numpy.polynomial.polynomial.polyfit", "numpy.polynomial.polynomial.polyline", "numpy.polynomial.polynomial.polyroots", "numpy.polynomial.polynomial.polyfromroots", "numpy", "numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy.array"], "numpy.core.Inf": ["numpy.core.numeric.Inf"], "regex._regex_core.Conditional.dump": ["regex._regex_core.RegexBase"], "torch.adaptive_avg_pool1d": [], "future.backports.datetime.datetime.__gt__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.datetime", "future.backports.datetime._cmperror"], "future.backports.datetime.weekday": [], "numpy.lib.function_base._flip_dispatcher": [], "math.remainder": [], "google.protobuf.internal.python_message.GeneratedProtocolMessageType": [], "future.backports.datetime.date.__sub__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "click.types.DateTime.__repr__": ["click.types.ParamType", "click.types.Tuple.name", "click.types.name"], "future.backports.email._header_value_parser.get_unstructured": ["future.backports.email._header_value_parser.UnstructuredTokenList", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.builtins.list", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser._validate_xtext", "future.backports.email._header_value_parser.get_fws", "future.backports.email._header_value_parser.get_encoded_word", "future.backports.email.errors", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "numpy.polynomial.polynomial.polyline": ["numpy", "numpy.array"], "numpy.core.arrayprint.decorating_function": ["numpy.core.arrayprint.wrapper", "numpy.core.arrayprint._recursive_guard.decorating_function.wrapper", "numpy.core.arrayprint.decorating_function.wrapper"], "torch._six.PY37": [], "future.backports.datetime.timedelta.__gt__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta", "future.backports.datetime._cmperror"], "numpy.linalg.linalg.lstsq": ["numpy.linalg.linalg._makearray", "numpy.core.newaxis", "numpy.linalg.linalg._assert_2d", "numpy.linalg.linalg.LinAlgError", "numpy.linalg.linalg._commonType", "numpy.linalg.linalg._realType", "warnings", "numpy.core.finfo", "numpy.linalg._umath_linalg", "numpy.linalg.linalg.isComplexType", "numpy.linalg.linalg.get_linalg_error_extobj", "numpy.linalg.linalg._raise_linalgerror_lstsq", "numpy.core.zeros", "numpy.core.array", "numpy.linalg.linalg._lstsq_dispatcher", "numpy.linalg._umath_linalg.lstsq_m", "numpy.linalg._umath_linalg.lstsq_n", "warnings.warn"], "torch.jit.TracedModule.__init__": ["torch.jit.ScriptModule", "torch.jit.TracedModule", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.QualnameWrapper", "torch.jit.TracedModule._get_name", "torch.jit.TracedModule.__init__.check_unique", "torch.jit.TracedModule.check_unique", "torch.jit.__init__.check_unique", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule._construct", "torch.jit.make_module"], "future.backports.datetime.timedelta.__lt__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta", "future.backports.datetime._cmperror"], "torch.nn.functional._fractional_max_pool3d": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch", "torch.nn.functional.fractional_max_pool3d_with_indices", "torch.jit"], "charset_normalizer.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__", "charset_normalizer.version.__version__"], "regex._regex_core.Conditional": ["regex._regex_core.RegexBase"], "transformers.file_utils.hf_bucket_url": [], "future.backports.datetime.date.weekday": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "torch._jit_internal.AnyCls": [], "future.backports.datetime.time.isoformat": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "torch._jit_internal.BroadcastingListCls": [], "string.decode": [], "future.backports.datetime.date._getstate": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "future.backports.email._header_value_parser.Mailbox.addr_spec": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.Branch": ["regex._regex_core.RegexBase"], "numpy.core.defchararray._join_dispatcher": [], "regex._regex_core.Literal": ["regex._regex_core.String"], "torch.multiprocessing.reductions.StorageWeakRef.__init__": ["torch", "torch.Storage"], "regex._regex_core.LazyRepeat": ["regex._regex_core.GreedyRepeat"], "future.backports.datetime.datetime.minute": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__"], "numpy.ma.core._convolve_or_correlate": ["numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.mask", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray.filled", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.tofile", "numpy.ma.core.MaskedArray.toflex", "numpy.ma.core.mvoid.filled", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.getdata", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.view", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray._recursive_or", "numpy.ma.core.filled", "numpy.ma.core.getmaskarray", "numpy", "numpy.ones", "numpy.shape"], "joblib.numpy_pickle.NumpyUnpickler": ["joblib.numpy_pickle_utils.Unpickler", "joblib.numpy_pickle.NumpyUnpickler.load_build", "joblib.numpy_pickle.load_build", "pickle", "joblib.numpy_pickle_utils.Unpickler.dispatch", "pickle.BUILD"], "_strptime._strptime_datetime": [], "future.backports.datetime.timedelta._getstate": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "ctypes.wintypes.DWORD": [], "regex._regex.get_expand_on_folding": [], "future.backports.email._header_value_parser.AngleAddr.addr_spec": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes"], "urllib3.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__", "urllib3._version.__version__"], "future.backports.datetime.timedelta._to_microseconds": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "future.backports.datetime.tzinfo.dst": [], "torch.eye": ["numpy.lib.twodim_base.eye", "numpy.array_api.__init__.eye"], "torch.jit.__init__.make_module.make_stubs_from_exported_methods": ["torch.jit.__init__.ScriptModule", "torch.jit.__init__.TracedModule._get_name", "torch.jit.__init__.RecursiveScriptModule.original_name", "torch.jit.__init__.ScriptMeta.make_stubs", "torch.jit.__init__.RecursiveScriptModule.forward_magic_method", "torch.jit.__init__.make_stubs_from_exported_methods", "torch.jit.__init__.make_module.make_stubs_from_exported_methods", "torch.jit.__init__.TopLevelTracedModule", "torch.jit.__init__.RecursiveScriptModule.__dir__", "torch.jit.__init__.OrderedDictWrapper.__delitem__", "torch.jit.__init__.OrderedDictWrapper.items", "torch.jit.__init__.OrderedDictWrapper.__setitem__", "torch.jit.__init__.OrderedDictWrapper.__getitem__", "torch.jit.__init__.OrderedModuleDict.items", "torch.jit.__init__.OrderedModuleDict.__setitem__", "torch.jit.__init__.OrderedModuleDict.__getitem__", "torch.jit.__init__.RecursiveScriptModule.__getitem__", "torch.jit.__init__.CompilationUnit.__getattr__", "torch.jit.__init__.TracedModule.__getattr__", "torch.jit.__init__.ScriptModule.__getattr__", "torch.jit.__init__.RecursiveScriptModule.__getattr__", "torch._jit_internal", "torch._jit_internal.FunctionModifiers"], "click._winconsole._WindowsConsoleRawIOBase": ["io", "io.RawIOBase"], "future.backports.datetime.timedelta.__new__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__floordiv__", "future.backports.datetime.timedelta.__truediv__", "future.backports.datetime.timedelta.__mod__", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.timedelta.__reduce__", "future.backports.datetime.date.today", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.day", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.weekday", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date.__reduce__", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.tzinfo.__reduce__", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.dst", "future.backports.datetime.time.__reduce__", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.date", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__reduce__", "future.backports.datetime.timezone.dst", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__pos__", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.strftime", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.__sub__", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.time.__hash__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.__sub__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.days", "future.backports.datetime.seconds", "future.backports.datetime.microseconds", "future.builtins.int", "math", "future.builtins.round", "future.builtins.object.__new__", "math.modf"], "numpy.linalg._umath_linalg.eigvalsh_lo": [], "future.backports.datetime.time.hour": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "click.types.ParamType.fail": ["click.types.ParamType.to_info_dict", "click.types.ParamType.get_metavar", "click.types.ParamType.get_missing_message", "click.types.ParamType.convert", "click.types.ParamType.split_envvar_value", "click.types.ParamType.shell_complete", "click.types.CompositeParamType.arity", "click.types.FuncParamType.__init__", "click.types.FuncParamType.to_info_dict", "click.types.FuncParamType.convert", "click.types.UnprocessedParamType.convert", "click.types.StringParamType.convert", "click.types.Choice.__init__", "click.types.Choice.to_info_dict", "click.types.Choice.get_metavar", "click.types.Choice.get_missing_message", "click.types.Choice.convert", "click.types.Choice.shell_complete", "click.types.DateTime.__init__", "click.types.DateTime.to_info_dict", "click.types.DateTime.get_metavar", "click.types.DateTime._try_to_convert_date", "click.types.DateTime.convert", "click.types._NumberParamTypeBase.convert", "click.types._NumberRangeBase.__init__", "click.types._NumberRangeBase.to_info_dict", "click.types._NumberRangeBase.convert", "click.types.FloatRange.__init__", "click.types.BoolParamType.convert", "click.types.UUIDParameterType.convert", "click.types.File.__init__", "click.types.File.to_info_dict", "click.types.File.convert", "click.types.File.shell_complete", "click.types.Path.__init__", "click.types.Path.to_info_dict", "click.types.Path.coerce_path_result", "click.types.Path.convert", "click.types.Path.shell_complete", "click.types.Tuple.__init__", "click.types.Tuple.to_info_dict", "click.types.Tuple.arity", "click.types.Tuple.convert", "typing", "click.types.arity", "click.types.Tuple.name", "click.types.name", "click.exceptions.BadParameter", "typing.ClassVar", "typing.Optional"], "regex._regex_core.Scanner.scan": ["regex._regex_core.Character.matches", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.match", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef.__init__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.max_width", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.ZeroWidthBase.dump", "regex._regex_core.Any.dump", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.dump", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.dump", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup.dump", "regex._regex_core.Character.dump", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.dump", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.dump", "regex._regex_core.Grapheme.dump", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.dump", "regex._regex_core.PossessiveRepeat.dump", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.dump", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.dump", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.dump", "regex._regex_core.Property.dump", "regex._regex_core.Range.dump", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup.dump", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.dump", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase.dump", "regex._regex_core.String.dump", "regex._regex_core.Literal.dump", "regex._regex_core.StringSet.dump", "regex._regex_core.Source.get_many"], "torch.nn.functional.max_pool3d_with_indices": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional.max_pool3d_with_indices", "torch", "torch._jit_internal.List", "torch.jit", "torch._C"], "numpy.lib._iotools.StringConverter._do_upgrade": ["numpy.lib._iotools.StringConverter.upgrade_mapper", "numpy.lib._iotools.str2bool", "numpy.core.numeric", "numpy.compat.asunicode", "numpy.compat.asbytes", "numpy.lib._iotools.ConverterLockError", "numpy.lib._iotools.ConverterError", "numpy.core.numeric.bool_", "numpy.core.numeric.int_", "numpy.core.numeric.dtype", "numpy.core.numeric.int64", "numpy.core.numeric.float64", "numpy.core.numeric.nan", "numpy.core.numeric.complex128", "numpy.core.numeric.longdouble", "numpy.core.numeric.integer", "numpy.core.numeric.floating", "numpy.core.numeric.complexfloating", "numpy.core.numeric.unicode_", "numpy.core.numeric.string_"], "regex._regex_core.PrecompiledCode": ["regex._regex_core.RegexBase"], "numpy.linalg._umath_linalg.cholesky_lo": [], "future.builtins.new_min_max.newmin": ["future.builtins.new_min_max.new_min_max", "__builtin__.min", "builtins.min"], "future.backports.datetime.time.__new__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime", "future.builtins.object.__new__"], "future.backports.datetime.tzinfo.tzname": [], "numpy.lib._iotools._strict_call": ["numpy", "numpy.array"], "urllib3.exceptions.DependencyWarning": ["urllib3.exceptions.HTTPWarning"], "torch._jit_internal.RRefInstance.__init__": [], "regex._regex_core.ZeroWidthBase": ["regex._regex_core.RegexBase"], "regex._regex_core.Fuzzy.dump": ["regex._regex_core.RegexBase", "regex._regex_core.Fuzzy._constraints_to_string"], "regex._regex_core.LookAround.__eq__": ["regex._regex_core.RegexBase"], "future.backports.email._header_value_parser.Section": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.Parameter.section_number"], "numpy.longlong": [], "torch._jit_internal.RRef.__init__": ["typing.Generic"], "future.backports.datetime.timezone.__getinitargs__": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta"], "click._compat._is_compatible_text_stream": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat._is_compat_stream_attr", "typing.TextIO", "typing.Optional"], "numpy.uintc": [], "numpy.core.multiarray.correlate2": ["numpy.core.multiarray.correlate2"], "click._compat._stream_is_misconfigured": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "click._compat.is_ascii_encoding", "typing.TextIO"], "numpy.core.__init__.memmap": ["numpy.core.memmap.memmap", "numpy.core.__init__.memmap", "numpy.core.memmap"], "torch.nn.functional.adaptive_max_pool3d_with_indices": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "torch.nn.functional.adaptive_max_pool3d_with_indices", "torch", "torch.nn.modules.utils._list_with_default", "torch.jit", "torch._C"], "sacremoses.tokenize.MosesTokenizer.isanyalpha": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "sacremoses.tokenize.MosesTokenizer.isanyalpha", "re.compile"], "regex._regex_core.Range": ["regex._regex_core.RegexBase"], "regex._regex_core.Range.dump": ["regex._regex_core.RegexBase"], "regex._regex_core.error": [], "regex._regex_core.Branch.__eq__": ["regex._regex_core.RegexBase"], "numpy.core.arrayprint._none_or_positive_arg": [], "torch.jit.frontend.ExprBuilder.build_Starred": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "numpy.core.arrayprint.DatetimeFormat": ["numpy.core.arrayprint._TimelikeFormat"], "joblib.numpy_pickle.load_build": ["joblib.numpy_pickle_utils.Unpickler", "joblib.numpy_pickle.NumpyPickler._create_array_wrapper", "joblib.numpy_pickle_compat.NDArrayWrapper", "joblib.numpy_pickle.NumpyArrayWrapper", "joblib.numpy_pickle_utils.Unpickler.load_build"], "numpy.lib.function_base.append": ["numpy.core.numeric.asanyarray", "numpy.core.fromnumeric.ravel", "numpy.core.numeric.concatenate", "numpy.lib.function_base._append_dispatcher"], "future.backports.email._header_value_parser.get_angle_addr": ["future.backports.email._header_value_parser.AngleAddr", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.get_addr_spec", "future.backports.email._header_value_parser.get_obs_route", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.ObsoleteHeaderDefect"], "numpy.core.arrayprint.ComplexFloatingFormat": [], "numpy.lib.histograms._histogram_dispatcher": [], "multiprocessing.get_context": [], "torch.jit.__init__.check_unique": [], "numpy.linalg.linalg._lstsq_dispatcher": [], "regex._regex_core.match": ["regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan", "string.startswith", "string.index"], "numpy.lib.index_tricks.index_exp": ["numpy.lib.index_tricks.index_exp"], "torch.jit._builtins._is_special_functional_bound_op": [], "transformers.utils.logging._configure_library_root_logger": ["transformers.utils.logging._get_library_root_logger", "logging", "transformers.utils.logging._get_default_logging_level", "logging.StreamHandler"], "joblib.numpy_pickle_utils._get_prefixes_max_len": ["joblib.compressor._COMPRESSORS", "joblib.compressor._ZFILE_PREFIX", "joblib.compressor._COMPRESSORS.values"], "struct.error": [], "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket": ["urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios", "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket", "urllib3.packages.six", "urllib3.contrib.pyopenssl.WrappedSocket.settimeout", "socket.timeout", "ssl", "urllib3.contrib.pyopenssl.WrappedSocket.fileno", "urllib3.contrib.pyopenssl.WrappedSocket.recv", "urllib3.contrib.pyopenssl.WrappedSocket.recv_into", "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done", "urllib3.contrib.pyopenssl.WrappedSocket.sendall", "urllib3.contrib.pyopenssl.WrappedSocket.close", "urllib3.contrib.pyopenssl.WrappedSocket.getpeercert", "urllib3.contrib.pyopenssl.WrappedSocket.version", "urllib3.contrib.pyopenssl.WrappedSocket._reuse", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols", "urllib3.util", "urllib3.contrib.pyopenssl.WrappedSocket", "urllib3.packages.six.text_type", "ssl.SSLError", "urllib3.util.wait_for_read"], "urllib3.exceptions.SecurityWarning": ["urllib3.exceptions.HTTPWarning"], "ssl.PROTOCOL_TLSv1_1": [], "tqdm.__init__.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__", "tqdm.version.__version__"], "torch.multiprocessing.reductions.rebuild_storage_filename": ["torch.multiprocessing.reductions.storage_from_cache", "torch.multiprocessing.reductions.StorageWeakRef"], "future.backports.email._header_value_parser.get_encoded_word": ["future.backports.email._header_value_parser._Folded.newline", "future.backports.email._header_value_parser.Terminal.__new__", "future.backports.email._header_value_parser.Terminal.__getnewargs__", "future.backports.email._header_value_parser.EncodedWord", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.builtins.list", "future.backports.email._header_value_parser.TokenList.all_defects", "future.backports.email._header_value_parser.Terminal.all_defects", "future.backports.email._encoded_words", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser._validate_xtext", "future.backports.email._header_value_parser.get_fws", "future.backports.email._encoded_words.decode", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "numpy.core.arrayprint.decorating_function.wrapper": ["numpy.core.arrayprint.wrapper", "numpy.core.arrayprint._recursive_guard.decorating_function.wrapper", "numpy.core.arrayprint.decorating_function.wrapper", "_thread.get_ident", "_dummy_thread.get_ident", "numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "functools", "functools.wraps"], "regex._regex.has_property_value": [], "numpy.core.arrayprint.TimedeltaFormat": ["numpy.core.arrayprint._TimelikeFormat"], "future.types.disallow_types.decorator": ["future.types.decorator", "future.types.disallow_types.decorator", "future.types.wrapper", "future.types.disallow_types.decorator.wrapper", "future.types.decorator.wrapper"], "future.backports.datetime.datetime.__repr__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__pos__", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.strftime", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.__sub__", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.__hash__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__sub__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone._name_from_offset", "future.builtins.map", "future.builtins.str"], "regex._regex_core.parse_fuzzy": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.ParseError", "regex._regex_core.parse_fuzzy_item", "regex._regex_core.parse_fuzzy_test", "regex._regex_core.error"], "regex._regex_core.apply_constraint": ["regex._regex_core.error", "regex._regex_core.Group", "regex._regex_core.Fuzzy", "regex._regex_core.Fuzzy._constraints_to_string"], "future.backports.email._encoded_words.encode_b": ["base64", "base64.b64encode"], "joblib.numpy_pickle_utils.Unpickler": [], "numpy.lib.arraypad._get_stats": ["numpy", "numpy.lib.arraypad._slice_at_axis", "numpy.lib.arraypad._round_if_needed", "numpy.amax", "numpy.amin"], "regex._regex_core.AnyU": ["regex._regex_core.Any"], "future.backports.email._encoded_words.decode_q": ["future.builtins.bytes"], "sacremoses.tokenize.MosesTokenizer.escape_xml": ["sacremoses.indic.NUKTAS", "sacremoses.indic.VIRAMAS", "sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile"], "torch.jit.frontend.StmtBuilder.build_Assert": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "requests.exceptions.RequestsWarning": [], "ssl.CERT_REQUIRED": [], "ctypes.c_ssize_t": [], "numpy.core.fromnumeric._cumsum_dispatcher": [], "joblib.numpy_pickle_compat.ZipNumpyUnpickler.load_build": ["joblib.numpy_pickle_utils.Unpickler", "joblib.numpy_pickle_compat.ZipNumpyUnpickler.load_build", "joblib.numpy_pickle_compat.load_build", "joblib.numpy_pickle_compat.ZipNumpyUnpickler._open_pickle", "pickle", "joblib.numpy_pickle_compat.NDArrayWrapper", "joblib.numpy_pickle_utils.Unpickler.dispatch", "joblib.numpy_pickle_utils.Unpickler.load_build", "pickle.BUILD"], "numpy.core.arrayprint.BoolFormat": [], "torch.multiprocessing.reductions.StorageWeakRef": [], "numpy.lib.arraypad._set_reflect_both": ["numpy.lib.arraypad._slice_at_axis"], "joblib.numpy_pickle_compat.read_zfile": ["joblib.numpy_pickle_utils._ZFILE_PREFIX", "zlib", "zlib.decompress"], "numpy.median": ["numpy.lib.function_base.median", "numpy.ma.extras.median"], "numpy.bincount": ["numpy.lib.function_base.bincount", "numpy.core.multiarray.bincount"], "future.backports.datetime.__str__.plural": ["future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__pos__", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.strftime", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.__sub__", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.__hash__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__sub__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__new__", "future.backports.datetime.timedelta.__neg__", "future.backports.datetime.timedelta.__ne__", "future.backports.datetime.date.__new__", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.month", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__ne__", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__new__", "future.backports.datetime.time.minute", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.__ne__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.__new__", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.now", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__ne__", "future.backports.datetime.timezone.__new__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timedelta.__str__.plural", "future.backports.datetime.timedelta.plural", "future.backports.datetime.__str__.plural"], "torch.nn.modules.utils._pair": [], "numpy.core.arrayprint._get_formatdict.indirect": ["numpy.core.arrayprint._object_format", "numpy.core.arrayprint.str_format", "numpy.core.arrayprint.repr_format", "numpy.core.arrayprint.BoolFormat", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "numpy.core.arrayprint.IntegerFormat", "numpy.core.arrayprint.FloatingFormat", "numpy.core.arrayprint.ComplexFloatingFormat", "numpy.core.arrayprint.DatetimeFormat", "numpy.core.arrayprint.TimedeltaFormat", "numpy.core.arrayprint.indirect", "numpy.core.arrayprint._get_formatdict.indirect"], "torch.max_pool2d": [], "torch.nn.modules.utils._triple": [], "numpy.core.numeric.Inf": ["numpy.core.numeric.Inf"], "future.backports.email._header_value_parser._Folded": [], "future.builtins.newround.from_float_26": ["decimal.Decimal", "math", "future.builtins.newround.bit_length", "future.builtins.newround.from_float_26.bit_length", "decimal._dec_from_triple", "math.isinf", "math.isnan", "math.copysign"], "numpy.core.arrayprint.indirect": [], "regex._regex_core.parse_quantifier": ["regex._regex_core.RegexBase.__eq__", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.__eq__", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__eq__", "regex._regex_core.CallGroup.__eq__", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__eq__", "regex._regex_core.Fuzzy.__eq__", "regex._regex_core.GreedyRepeat.__eq__", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.__eq__", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__eq__", "regex._regex_core.LookAroundConditional.__eq__", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.__eq__", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.parse_limited_quantifier"], "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode": ["urllib3.contrib.pyopenssl._verify_callback", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.verify_mode"], "torch.jit.__init__.init_then_script": [], "urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios": [], "ssl.PROTOCOL_SSLv3": [], "numpy.lib.arraypad._get_edges": ["numpy.lib.arraypad._slice_at_axis"], "numpy.lib.histograms._get_bin_edges": ["numpy.lib.histograms._get_outer_edges", "numpy", "operator", "numpy.lib.histograms._unsigned_subtract", "operator.index", "numpy.ndim", "numpy.asarray", "numpy.any", "numpy.ceil", "numpy.logical_and", "numpy.result_type", "numpy.issubdtype", "numpy.integer", "numpy.linspace"], "locale": [], "requests.api.request": ["requests.sessions", "requests.sessions.Session"], "future.backports.email._encoded_words.len_q": ["future.builtins.bytes"], "torch.jit.frontend.ExprBuilder.build_JoinedStr": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Assign", "torch.jit.frontend.StmtBuilder.build_AnnAssign", "torch.jit.frontend.StmtBuilder.build_Raise", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_AugAssign", "torch.jit.frontend.StmtBuilder.build_Pass", "torch.jit.frontend.ExprBuilder.build_Ellipsis", "torch.jit.frontend.ExprBuilder.build_NameConstant", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_List", "torch.jit.frontend.ExprBuilder.build_Constant", "torch.jit.frontend.ExprBuilder.build_ListComp", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.NotSupportedError", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn", "ast.FormattedValue", "ast.Str"], "future.backports.email._header_value_parser.GroupList": ["future.backports.email._header_value_parser.TokenList"], "future.backports.email._header_value_parser.NameAddr": ["future.backports.email._header_value_parser.TokenList"], "torch.jit.frontend.StmtBuilder.build_Return": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "urllib3._version.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__"], "torch.version.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__"], "sacremoses.tokenize.MosesDetokenizer.unescape_xml": ["sacremoses.tokenize.MosesTokenizer.replace_multidots", "sacremoses.tokenize.MosesTokenizer.restore_multidots", "sacremoses.tokenize.MosesTokenizer.handles_nonbreaking_prefixes", "re", "re.compile"], "cryptography.__version__.split": [], "builtins.min": [], "regex._regex_core.numeric_to_rational": ["regex._regex_core.float_to_rational"], "urllib3.contrib.pyopenssl._validate_dependencies_met": ["cryptography.x509.extensions.Extensions", "cryptography.x509", "OpenSSL.crypto.X509"], "numpy.linalg.linalg._raise_linalgerror_lstsq": ["numpy.linalg.linalg.LinAlgError"], "click.utils.wrapper": ["click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "typing.Optional"], "regex._regex_core.parse_set": ["regex._regex_core.parse_set_imp_union", "regex._regex_core.parse_set_union", "regex._regex_core.error", "regex._regex_core.make_case_flags"], "numpy.polynomial.polyutils._fromroots": ["numpy.polynomial.polyutils.as_series", "numpy", "numpy.ones"], "string.startswith": [], "regex._regex_core.EndOfLineU": ["regex._regex_core.EndOfLine"], "future.backports.email._header_value_parser.get_domain": ["future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.domain", "future.backports.email._header_value_parser.Domain", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.get_domain_literal", "future.backports.email._header_value_parser.get_dot_atom", "future.backports.email._header_value_parser.get_atom", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.ObsoleteHeaderDefect"], "urllib3.util.HAS_SNI": ["urllib3.util.ssl_.HAS_SNI"], "future.backports.email._header_value_parser.get_atext": ["future.backports.email._header_value_parser.TokenList.has_leading_comment", "future.backports.email._header_value_parser.TokenList.comments", "future.backports.email._header_value_parser.WhiteSpaceTokenList.comments", "future.backports.email._header_value_parser.CFWSList.has_leading_comment", "future.backports.email._header_value_parser.Comment.comments", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.display_name", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.Group.display_name", "future.backports.email._header_value_parser.NameAddr.display_name", "future.backports.email._header_value_parser.NameAddr.domain", "future.backports.email._header_value_parser.AngleAddr.domain", "future.backports.email._header_value_parser.ObsRoute.domains", "future.backports.email._header_value_parser.Mailbox.display_name", "future.backports.email._header_value_parser.Mailbox.domain", "future.backports.email._header_value_parser.InvalidMailbox.display_name", "future.backports.email._header_value_parser.Domain.domain", "future.backports.email._header_value_parser.AddrSpec.domain", "future.backports.email._header_value_parser.DisplayName.display_name", "future.backports.email._header_value_parser.DomainLiteral.domain", "future.backports.email._header_value_parser.Parameter.section_number", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.MimeParameters.params", "future.backports.email._header_value_parser.ParameterizedHeaderValue.params", "future.backports.email._header_value_parser.Terminal.comments", "future.backports.email._header_value_parser.Terminal.has_leading_comment", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser._validate_xtext", "future.backports.email.errors.HeaderParseError"], "ctypes.Structure": [], "torch.multiprocessing.reductions.rebuild_event": ["torch", "torch.cuda"], "logging.CRITICAL": [], "future.utils.PY26": ["future.utils.__init__.PY26"], "chardet.__version__.split": [], "torch.max_pool1d": [], "future.backports.email._header_value_parser.AddrSpec": ["future.backports.email._header_value_parser.TokenList"], "torch.jit.make_module": ["torch.jit.ScriptModule", "torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.ScriptMeta.make_stubs", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.make_stubs_from_exported_methods", "torch.jit.make_module.make_stubs_from_exported_methods", "torch.jit.TopLevelTracedModule", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.items", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.items", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch._jit_internal", "torch._jit_internal.FunctionModifiers"], "torch.jit.frontend.ExprBuilder.build_UnaryOp": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.NotSupportedError", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "urllib3.exceptions.InsecurePlatformWarning": ["urllib3.exceptions.SecurityWarning"], "click._compat._is_compat_stream_attr": ["click._compat._NonClosingTextIOWrapper.__init__", "click._compat._NonClosingTextIOWrapper.isatty", "click._compat._FixupStream.__init__", "click._compat._FixupStream.__getattr__", "click._compat._FixupStream.writable", "click._compat._AtomicFile.__init__", "click._compat._AtomicFile.__getattr__", "click._compat._AtomicFile.__enter__", "click._compat._AtomicFile.__exit__", "typing", "typing.TextIO", "typing.Optional"], "numpy.version.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__"], "torch.jit.frontend.StmtBuilder.build_Break": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "joblib.numpy_pickle_compat.load_build": ["joblib.numpy_pickle_utils.Unpickler", "joblib.numpy_pickle_compat.NDArrayWrapper", "joblib.numpy_pickle_utils.Unpickler.load_build"], "torch.jit.frontend.StmtBuilder.build_Expr": ["torch.jit.frontend.Builder", "ast", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "future.backports.email._header_value_parser.BareQuotedString": ["future.backports.email._header_value_parser.QuotedString"], "torch.orgqr": [], "torch.jit.indent": ["torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.OrderedDictWrapper.keys", "torch.jit.OrderedDictWrapper.values", "torch.jit.OrderedDictWrapper.items", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedModuleDict.items", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit.RecursiveScriptModule.get_debug_state", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.__getstate__", "torch.jit.RecursiveScriptModule.__contains__"], "urllib3.exceptions": ["urllib3.exceptions.ProtocolError"], "math.modf": [], "urllib3.exceptions.SubjectAltNameWarning": ["urllib3.exceptions.SecurityWarning"], "numpy.core.arrayprint.str_format": [], "torch.jit.frontend.ExprBuilder.build_SliceExpr": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "numpy.polynomial.polyutils._sub": ["numpy.polynomial.polyutils.as_series", "numpy.polynomial.polyutils.trimseq"], "ctypes.c_void_p": [], "urllib3.util.SSLContext": ["urllib3.util.ssl_.SSLContext"], "future.builtins.new_min_max.new_min_max": ["itertools", "itertools.chain"], "urllib3.util": [], "sys.getdefaultencoding": [], "urllib3.util.ssl_": ["hashlib.md5", "hashlib.sha1", "hashlib.sha256", "hmac", "urllib3.util.ssl_._const_compare_digest_backport", "ssl.PROTOCOL_TLS", "ssl.PROTOCOL_SSLv23", "ssl.PROTOCOL_TLS_CLIENT", "urllib3.util.ssl_.SSLContext", "ssl.SSLContext", "ssl.OP_NO_COMPRESSION", "ssl.OP_NO_TICKET", "ssl.OP_NO_SSLv2", "ssl.OP_NO_SSLv3", "ssl.HAS_SNI", "urllib3.util.ssltransport.SSLTransport"], "future.backports.datetime.date.__eq__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "torch.jit.TracingCheckError": [], "ssl.CERT_OPTIONAL": [], "torch.geqrf": [], "numpy.linalg._umath_linalg.lstsq_m": [], "future.types.decorator": ["future.types.wrapper", "future.types.disallow_types.decorator.wrapper", "future.types.decorator.wrapper"], "numpy.core.geterrobj": ["numpy.core.umath.geterrobj"], "torch.max_pool1d_with_indices": [], "pickle.BUILD": [], "regex._regex_core.apply_quantifier": ["regex._regex_core.error", "regex._regex_core.GreedyRepeat", "regex._regex_core.LazyRepeat", "regex._regex_core.PossessiveRepeat", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match"], "torch.jit.ScriptMeta.__init__.init_then_script": ["torch.jit.ONNXTracedModule", "torch.jit.indent", "torch.jit.TracingCheckError", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.OrderedModuleDict", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.ScriptMeta", "torch.jit.ScriptMeta.__init__.init_then_script", "torch.jit.ScriptMeta.init_then_script", "torch.jit.__init__.init_then_script", "torch.jit.ScriptMeta.__init__.make_stubs", "torch.jit.ScriptMeta.init_then_script.make_stubs", "torch.jit.__init__.init_then_script.make_stubs", "torch.jit.ONNXTracedModule.__init__", "torch.jit.TracingCheckError.__init__", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__init__", "torch.jit.OrderedDictWrapper.__init__", "torch.jit.OrderedDictWrapper.__len__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.__init__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.ScriptMeta.__init__", "torch.jit.TracedModule.__init__", "torch.jit.TracedModule.extra_repr", "torch.jit._disable_tracing.__enter__", "torch.jit._disable_tracing.__exit__", "torch.jit._CachedForward.__get__", "torch.jit.ScriptModule.__init__", "torch.jit.RecursiveScriptModule.__init__", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule.get_debug_state", "torch.jit.RecursiveScriptModule.extra_repr", "torch.jit.RecursiveScriptModule.graph_for", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.__getstate__", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.RecursiveScriptModule.__len__", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.RecursiveScriptModule.__bool__", "functools", "torch.jit.TracedModule", "torch.jit.QualnameWrapper", "torch.jit.TracedModule.__init__.check_unique", "torch.jit.__init__.check_unique", "torch.jit.make_module", "torch.jit.ScriptModule", "torch.jit.RecursiveScriptModule", "functools.wraps"], "torch.multiprocessing.reductions.fd_id": ["os", "os.fstat"], "torch.max_pool3d": [], "logging.INFO": [], "torch.Storage": [], "urllib3.exceptions.HTTPWarning": [], "future.builtins.object.__new__": [], "urllib3.contrib.pyopenssl.makefile": ["socket._fileobject", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode"], "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths": [], "__future__": [], "urllib3.exceptions.PoolError": ["urllib3.exceptions.HTTPError"], "torch.jit.QualnameWrapper": [], "regex._regex_core.Any": ["regex._regex_core.RegexBase"], "future.backports.datetime.timedelta.__eq__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta"], "future.backports.datetime.time.__eq__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "future.backports.datetime.time.__repr__": ["future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.ctime", "future.backports.datetime.date.strftime", "future.backports.datetime.date.timetuple", "future.backports.datetime.time", "future.backports.datetime.time.strftime", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timetuple", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.utctimetuple", "future.backports.datetime.datetime.time", "future.backports.datetime.datetime.timetz", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.ctime", "future.backports.datetime.datetime.strptime"], "decimal.Decimal.from_float": [], "numpy.lib.arraypad._set_pad_area": ["numpy.lib.arraypad._slice_at_axis"], "numpy.core.errstate": ["numpy.core._ufunc_config.errstate"], "joblib.compressor._COMPRESSORS.items": [], "future.backports.datetime.datetime.__eq__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.datetime"], "charset_normalizer.version.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__"], "torch.jit.frontend.ExprBuilder.get_char": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "torch._VF.constant_pad_nd": [], "click.exceptions.BadParameter": ["click.exceptions.UsageError"], "torch.rand": ["torch.__init__.rand", "numpy.matlib.rand", "numpy.random.__init__.rand"], "future.backports.datetime.timezone.__repr__": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta"], "click.types.IntParamType": ["click.types._NumberParamTypeBase", "click.types.Tuple.name", "click.types.name"], "numpy.polynomial.polyutils._add": ["numpy.polynomial.polyutils.as_series", "numpy.polynomial.polyutils.trimseq"], "logging.NOTSET": [], "future.backports.email._encoded_words.len_b": [], "numpy.lib.function_base._copy_dispatcher": ["numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature"], "numpy.lib.format.magic": [], "torch.multiprocessing.reductions.rebuild_storage_empty": [], "numpy.core.arrayprint.wrapper": ["_thread.get_ident", "_dummy_thread.get_ident", "numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.StructuredVoidFormat.from_data", "functools", "functools.wraps"], "urllib3.contrib.pyopenssl.WrappedSocket.recv": ["socket.error", "urllib3.contrib.pyopenssl.WrappedSocket.settimeout", "socket.timeout", "ssl", "urllib3.contrib.pyopenssl.WrappedSocket.fileno", "urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios", "urllib3.contrib.pyopenssl.WrappedSocket.recv", "urllib3.contrib.pyopenssl.WrappedSocket.recv_into", "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done", "urllib3.contrib.pyopenssl.WrappedSocket.sendall", "urllib3.contrib.pyopenssl.WrappedSocket.close", "urllib3.contrib.pyopenssl.WrappedSocket.getpeercert", "urllib3.contrib.pyopenssl.WrappedSocket.version", "urllib3.contrib.pyopenssl.WrappedSocket._reuse", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols", "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket", "urllib3.util", "ssl.SSLError", "urllib3.util.wait_for_read"], "torch.multiprocessing.reductions.rebuild_storage_fd": ["sys", "multiprocessing", "torch.multiprocessing.reductions.StorageWeakRef.expired", "torch.multiprocessing.reductions.StorageWeakRef.__del__", "torch.multiprocessing.reductions.SharedCache._after_fork", "torch.multiprocessing.reductions.SharedCache.__setitem__", "torch.multiprocessing.reductions.SharedCache.free_dead_references", "errno", "torch.multiprocessing.reductions.storage_from_cache", "torch.multiprocessing.reductions.StorageWeakRef", "torch.multiprocessing.reductions.fd_id", "os", "sys.version_info", "os.close", "multiprocessing.reduction"], "torch._jit_internal.env.__getattr__": ["torch._jit_internal.env.__getattr__", "torch._jit_internal.closure_lookup.__getattr__", "torch._jit_internal.env", "torch._jit_internal.createResolutionCallbackFromEnv.env"], "numpy.lib.arraypad._as_pairs": ["numpy", "numpy.array", "numpy.intp", "numpy.round", "numpy.broadcast_to"], "logging.WARNING": [], "torch.jit.frontend.ExprBuilder.build_Attribute": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder.build_Attribute.get_char", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.build_Attribute.get_char", "string", "string.whitespace", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "future.builtins.round": ["future.builtins.misc.round", "future.builtins.__init__.round", "numpy.ma.core.round", "numpy.array_api.__init__.round"], "logging.Handler": [], "transformers.utils.logging._get_library_root_logger": ["logging", "transformers.utils.logging._get_library_name", "logging.getLogger", "logging.Logger"], "decimal.ROUND_HALF_EVEN": [], "torch.multiprocessing.reductions.rebuild_tensor": ["torch.multiprocessing.reductions.StorageWeakRef.__init__", "torch.multiprocessing.reductions.SharedCache.__init__", "torch.multiprocessing.reductions.SharedCache._after_fork", "torch.multiprocessing.reductions.SharedCache.__setitem__", "torch", "torch._utils", "torch.nn"], "google.protobuf.pyext._message.MessageMeta": [], "google.protobuf.descriptor._message": ["google.protobuf.pyext._message"], "numpy.convolve": ["numpy.ma.core.convolve", "numpy.core.numeric.convolve"], "joblib.numpy_pickle.NumpyUnpickler.load_build": ["joblib.numpy_pickle_utils.Unpickler", "joblib.numpy_pickle.NumpyUnpickler.load_build", "joblib.numpy_pickle.load_build", "pickle", "joblib.numpy_pickle.NumpyPickler._create_array_wrapper", "joblib.numpy_pickle_compat.NDArrayWrapper", "joblib.numpy_pickle.NumpyArrayWrapper", "pickle.BUILD", "joblib.numpy_pickle_utils.Unpickler.dispatch", "joblib.numpy_pickle_utils.Unpickler.load_build"], "torch.multiprocessing.reductions.rebuild_cuda_tensor": ["torch.multiprocessing.reductions.storage_from_cache", "torch.multiprocessing.reductions.StorageWeakRef", "torch", "torch.multiprocessing.reductions.StorageWeakRef.__init__", "torch.multiprocessing.reductions.SharedCache.__init__", "torch.multiprocessing.reductions.SharedCache._after_fork", "torch.multiprocessing.reductions.SharedCache.__setitem__", "torch.cuda", "torch._utils", "torch.nn"], "future.backports.datetime.timedelta.__repr__": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__"], "numpy.lib.arraypad._pad_simple": ["numpy", "numpy.empty"], "numpy.core.arrayprint._recursive_guard.decorating_function.wrapper": ["numpy.core.arrayprint.decorating_function", "numpy.core.arrayprint._recursive_guard.decorating_function", "numpy.core.arrayprint.wrapper", "numpy.core.arrayprint._recursive_guard.decorating_function.wrapper", "numpy.core.arrayprint.decorating_function.wrapper"], "charset_normalizer.__version__.split": [], "regex.regex.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__"], "torch.adaptive_max_pool1d": [], "logging.ERROR": [], "regex._regex_core.StartOfLineU": ["regex._regex_core.StartOfLine"], "future.backports.email._header_value_parser.EWWhiteSpaceTerminal": ["future.backports.email._header_value_parser.WhiteSpaceTerminal", "future.backports.email._header_value_parser.TokenList.has_fws", "future.backports.email._header_value_parser.has_fws"], "numpy.lib.arraypad._get_linear_ramps": ["numpy.lib.arraypad._get_edges", "numpy", "numpy.lib.arraypad._slice_at_axis", "numpy.linspace"], "regex._regex_core.EndOfLine": ["regex._regex_core.ZeroWidthBase"], "future.backports.email._header_value_parser.get_local_part": ["future.backports.email._header_value_parser.NameAddr.local_part", "future.backports.email._header_value_parser.AngleAddr.local_part", "future.backports.email._header_value_parser.Mailbox.local_part", "future.backports.email._header_value_parser.AddrSpec.local_part", "future.backports.email._header_value_parser.LocalPart.local_part", "future.backports.email._header_value_parser.local_part", "future.backports.email._header_value_parser.LocalPart", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.get_dot_atom", "future.backports.email._header_value_parser.get_word", "future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.get_obs_local_part", "future.backports.email._header_value_parser._Folded.__str__", "future.backports.email._header_value_parser.TokenList.__str__", "future.backports.email._header_value_parser.TokenList.ppstr", "future.backports.email._header_value_parser.BareQuotedString.__str__", "future.backports.email._header_value_parser.Comment.__str__", "future.backports.email._header_value_parser.MimeParameters.__str__", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.__str__", "future.builtins.str", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.ObsoleteHeaderDefect", "future.backports.email.errors.NonASCIILocalPartDefect"], "numpy.core.umath.reciprocal": ["numpy.core.umath.reciprocal"], "torch.jit.frontend.build_param_list": ["torch.jit.frontend.NotSupportedError", "torch._six.PY2", "torch.jit.frontend.build_param"], "regex._regex_core.parse_paren": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.parse_flags_subpattern", "regex._regex_core.parse_name", "regex._regex_core.Group", "regex._regex_core.parse_lookaround", "regex._regex_core.parse_extension", "regex._regex_core.parse_comment", "regex._regex_core.parse_conditional", "regex._regex_core.parse_atomic", "regex._regex_core.parse_common", "regex._regex_core.parse_call_group", "regex._regex_core.parse_call_named_group", "regex._regex_core._parse_pattern", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.error"], "urllib3.util.PROTOCOL_TLS": ["urllib3.util.ssl_.PROTOCOL_TLS"], "urllib3.exceptions.SNIMissingWarning": ["urllib3.exceptions.HTTPWarning"], "future.backports.email._header_value_parser.Atom": ["future.backports.email._header_value_parser.TokenList"], "joblib.numpy_pickle_utils.Unpickler.dispatch": [], "future.backports.datetime.date.__repr__": ["future.backports.datetime.date", "future.backports.datetime.datetime.date"], "numpy.polynomial.polyutils._pow": ["numpy.polynomial.polyutils.as_series", "numpy", "numpy.array"], "ctypes.c_int": [], "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations": ["io.BytesIO", "ssl", "urllib3.contrib.pyopenssl.WrappedSocket.fileno", "urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios", "urllib3.contrib.pyopenssl.WrappedSocket.recv", "urllib3.contrib.pyopenssl.WrappedSocket.recv_into", "urllib3.contrib.pyopenssl.WrappedSocket.settimeout", "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done", "urllib3.contrib.pyopenssl.WrappedSocket.sendall", "urllib3.contrib.pyopenssl.WrappedSocket.close", "urllib3.contrib.pyopenssl.WrappedSocket.getpeercert", "urllib3.contrib.pyopenssl.WrappedSocket.version", "urllib3.contrib.pyopenssl.WrappedSocket._reuse", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols", "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket", "ssl.SSLError"], "regex._regex_core.is_cased_i": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex", "regex._regex.get_all_cases"], "future.utils.native_str": ["future.utils.__init__.native_str"], "numpy.lib.arraypad._set_wrap_both": ["numpy.lib.arraypad._slice_at_axis"], "joblib.compressor._ZFILE_PREFIX": [], "numpy.core.arrayprint._extendLine_pretty": ["numpy.core.arrayprint._extendLine"], "torch.jit.TracedModule.__init__.check_unique": ["torch.jit.ScriptModule", "torch.jit.ONNXTracedModule", "torch.jit.indent", "torch.jit.TracingCheckError", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.RecursiveScriptModule._construct", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.OrderedModuleDict", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.TracedModule.__setattr__", "torch.jit.ScriptModule.__setattr__", "torch.jit.RecursiveScriptModule.__setattr__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.TracedModule.check_unique", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.save_to_buffer", "torch.jit._recursive.ScriptMethodStub", "torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.ScriptMeta", "torch.jit.ScriptMeta.__init__.init_then_script", "torch.jit.ScriptMeta.init_then_script", "torch.jit.__init__.init_then_script", "torch.jit.TracedModule", "torch.jit.QualnameWrapper", "torch.jit.TracedModule.__init__.check_unique", "torch.jit.__init__.check_unique", "torch.jit.make_module", "torch.jit.RecursiveScriptModule"], "numpy.core.moveaxis": ["numpy.core.numeric.moveaxis"], "numpy.lib.function_base._ureduce": ["numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy", "numpy.core.numeric", "numpy.lib.function_base.vectorize.__init__", "numpy.lib.function_base.vectorize.__call__.func", "numpy.lib.function_base.vectorize.func", "numpy.lib.function_base.vectorize._func", "numpy.lib.function_base.__call__.func", "numpy.core.numeric.normalize_axis_tuple", "numpy.asanyarray", "numpy._NoValue", "numpy.newaxis"], "numpy.lib.histograms._ravel_and_check_weights": ["numpy", "warnings", "numpy.asarray", "numpy.bool_", "numpy.uint8", "warnings.warn"], "future.backports.datetime.timezone.__eq__": ["future.backports.datetime.tzinfo", "future.backports.datetime.time.tzinfo", "future.backports.datetime.datetime.tzinfo", "future.builtins.object", "future.backports.datetime.timedelta", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.timezone"], "urllib3.contrib.pyopenssl.WrappedSocket.version": [], "filelock.__init__.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__"], "numpy.linalg._umath_linalg.lstsq_n": [], "urllib3.util.IS_PYOPENSSL": ["urllib3.util.ssl_.IS_PYOPENSSL"], "urllib3.packages.backports.makefile.backport_makefile": ["socket.SocketIO", "io", "io.DEFAULT_BUFFER_SIZE", "io.BufferedRWPair", "io.BufferedReader", "io.BufferedWriter", "io.TextIOWrapper"], "future.backports.email._encoded_words.encode_q": ["future.builtins.str", "future.builtins.bytes"], "torch.jit.frontend.ExprBuilder.build_Str": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "urllib3.contrib.pyopenssl.WrappedSocket": [], "torch.nn.modules.utils._list_with_default": [], "torch._jit_internal.closure_lookup.__getattr__": ["torch._six.builtins", "torch._jit_internal.env.__getattr__", "torch._jit_internal.closure_lookup.__getattr__"], "numpy.core.arrayprint.repr_format": [], "numpy.lib.index_tricks.s_": ["numpy.lib.index_tricks.s_"], "numpy.linalg.linalg._assert_2d": ["numpy.linalg.linalg.LinAlgError"], "regex._regex_core.EndOfStringLine": ["regex._regex_core.ZeroWidthBase"], "torch.jit.frontend.StmtBuilder.build_Print": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.NotSupportedError", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "decimal.Decimal": [], "sacremoses.util.is_cjk": [], "google.protobuf.internal.extension_dict._ExtensionDict": [], "ssl.CERT_NONE": [], "torch.qr": ["numpy.linalg.linalg.qr", "numpy.array_api.linalg.qr"], "future.backports.datetime.microseconds": [], "ctypes.c_char_p": [], "ssl.PROTOCOL_TLSv1": [], "logging.DEBUG": [], "__builtin__.min": [], "click.utils.safecall.wrapper": ["functools.update_wrapper", "click.utils.wrapper", "click.utils.safecall.wrapper", "click.utils.LazyFile.__init__", "click.utils.LazyFile.__getattr__", "click.utils.LazyFile.close_intelligently", "click.utils.LazyFile.__enter__", "click.utils.LazyFile.__exit__", "click.utils.LazyFile.__iter__", "click.utils.KeepOpenFile.__init__", "click.utils.KeepOpenFile.__getattr__", "click.utils.KeepOpenFile.__enter__", "click.utils.KeepOpenFile.__exit__", "click.utils.KeepOpenFile.__iter__", "click.utils.PacifyFlushWrapper.__init__", "click.utils.PacifyFlushWrapper.__getattr__", "typing", "typing.Optional"], "torch.jit._create_interpreter_name_lookup_fn._get_interpreter_name_for_var": ["torch.jit._get_interpreter_name_for_var", "torch.jit._create_interpreter_name_lookup_fn._get_interpreter_name_for_var", "inspect", "torch.jit.ONNXTracedModule.__init__", "torch.jit.TracingCheckError.__init__", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__init__", "torch.jit.CompilationUnit.define", "torch.jit.OrderedDictWrapper.__init__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.items", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.__init__", "torch.jit.OrderedModuleDict.items", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.ScriptMeta.__init__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.TracedModule.__init__", "torch.jit.TracedModule.check_unique", "torch.jit._disable_tracing.__exit__", "torch.jit.ScriptModule.__init__", "torch.jit.ScriptModule.define", "torch.jit.RecursiveScriptModule.__init__", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.RecursiveScriptModule.define", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule.save_to_buffer", "inspect.currentframe"], "regex._regex_core.parse_escape": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.error", "regex._regex_core.parse_hex_escape", "regex._regex_core.make_character", "regex._regex_core.parse_group_ref", "regex._regex_core.SearchAnchor", "regex._regex_core.parse_string_set", "regex._regex_core.parse_named_char", "regex._regex_core.parse_property", "regex._regex_core.Grapheme", "regex._regex_core.Character", "regex._regex_core.parse_numeric_escape"], "numpy.core.arrayprint._object_format": ["numpy.core.arrayprint.FloatingFormat.fillFormat", "numpy.core.arrayprint._TimelikeFormat._format_non_nat", "numpy.core.arrayprint.DatetimeFormat._format_non_nat", "numpy.core.arrayprint.TimedeltaFormat._format_non_nat", "numpy.core.arrayprint.StructuredVoidFormat.from_data"], "regex._regex_core.make_case_flags": ["regex._regex_core.RegexBase.with_flags"], "future.backports.email._header_value_parser.get_mailbox_list": ["future.backports.email._header_value_parser.MailboxList", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.AddressList.mailboxes", "future.backports.email._header_value_parser.AddressList.all_mailboxes", "future.backports.email._header_value_parser.Address.mailboxes", "future.backports.email._header_value_parser.Address.all_mailboxes", "future.backports.email._header_value_parser.MailboxList.mailboxes", "future.backports.email._header_value_parser.MailboxList.all_mailboxes", "future.backports.email._header_value_parser.GroupList.mailboxes", "future.backports.email._header_value_parser.GroupList.all_mailboxes", "future.backports.email._header_value_parser.Group.mailboxes", "future.backports.email._header_value_parser.Group.all_mailboxes", "future.backports.email._header_value_parser.get_mailbox", "future.backports.email.errors", "future.backports.email._header_value_parser.get_invalid_mailbox", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect", "future.backports.email.errors.ObsoleteHeaderDefect"], "numpy.core.arrayprint._extendLine": [], "numpy.lib.function_base._quantile_ureduce_func": ["numpy", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base._quantile", "numpy.array"], "numpy.lib.function_base._diff_dispatcher": ["numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base.append"], "torch.jit.frontend.FrontendError.__str__": [], "regex._regex_core.EndOfStringLineU": ["regex._regex_core.EndOfStringLine"], "requests.api.get": ["requests.api.request"], "torch._jit_internal._qualified_name": ["torch", "torch._C"], "socket._fileobject": [], "urllib3.util.ssl_.PROTOCOL_TLS_CLIENT": ["ssl.PROTOCOL_TLS_CLIENT"], "torch.jit.frontend.build_stmts": ["torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Assign", "torch.jit.frontend.StmtBuilder.build_AnnAssign", "torch.jit.frontend.StmtBuilder.build_Raise", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_AugAssign", "torch.jit.frontend.StmtBuilder.build_Pass", "torch.jit.frontend.ExprBuilder.build_Ellipsis", "torch.jit.frontend.ExprBuilder.build_NameConstant", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_List", "torch.jit.frontend.ExprBuilder.build_Constant", "torch.jit.frontend.ExprBuilder.build_ListComp"], "numpy.lib.arraypad._pad_dispatcher": [], "future.backports.email._encoded_words._QByteMap": ["future.builtins.bytes", "string.digits", "string.ascii_letters", "string.ascii_letters.encode", "string.digits.encode"], "types.CodeType": [], "torch.jit.ONNXTracedModule": ["torch.nn.Module"], "multiprocessing.reduction": [], "torch.jit.frontend.StmtBuilder.build_For": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_stmts", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "torch.multiprocessing.reductions.SharedCache": [], "click._compat.is_ascii_encoding": ["codecs", "codecs.lookup"], "torch.jit.frontend.ExprBuilder.build_Compare": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.StmtBuilder.build_Delete", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Raise", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_While", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.StmtBuilder.build_Continue", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_Name", "torch.jit.frontend.ExprBuilder.build_NameConstant", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Tuple", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Index", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_BinOp", "torch.jit.frontend.ExprBuilder", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "future.backports.datetime.seconds": [], "torch.multiprocessing.get_sharing_strategy": [], "numpy.lib.histograms._search_sorted_inclusive": ["numpy", "numpy.concatenate"], "urllib3.contrib.pyopenssl.WrappedSocket.recv_into": ["socket.error", "urllib3.contrib.pyopenssl.WrappedSocket.settimeout", "socket.timeout", "ssl", "urllib3.contrib.pyopenssl.WrappedSocket.fileno", "urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios", "urllib3.contrib.pyopenssl.WrappedSocket.recv", "urllib3.contrib.pyopenssl.WrappedSocket.recv_into", "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done", "urllib3.contrib.pyopenssl.WrappedSocket.sendall", "urllib3.contrib.pyopenssl.WrappedSocket.close", "urllib3.contrib.pyopenssl.WrappedSocket.getpeercert", "urllib3.contrib.pyopenssl.WrappedSocket.version", "urllib3.contrib.pyopenssl.WrappedSocket._reuse", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols", "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket", "urllib3.util", "ssl.SSLError", "urllib3.util.wait_for_read"], "future.backports.datetime.timedelta.__str__.plural": ["future.builtins.object", "future.backports.datetime.timedelta.__add__", "future.backports.datetime.date.__add__", "future.backports.datetime.datetime.__add__", "future.backports.datetime.__add__", "future.backports.datetime.timedelta.__mul__", "future.backports.datetime.__mul__", "future.backports.datetime.timedelta.__divmod__", "future.backports.datetime.timedelta.__str__", "future.backports.datetime.timedelta.total_seconds", "future.backports.datetime.timedelta.days", "future.backports.datetime.timedelta.seconds", "future.backports.datetime.timedelta.microseconds", "future.backports.datetime.timedelta.__sub__", "future.backports.datetime.timedelta.__rsub__", "future.backports.datetime.timedelta.__pos__", "future.backports.datetime.timedelta.__abs__", "future.backports.datetime.timedelta._to_microseconds", "future.backports.datetime.timedelta.__hash__", "future.backports.datetime.timedelta._getstate", "future.backports.datetime.date.fromtimestamp", "future.backports.datetime.date.strftime", "future.backports.datetime.date.isoformat", "future.backports.datetime.date.__hash__", "future.backports.datetime.date.__sub__", "future.backports.datetime.date.isoweekday", "future.backports.datetime.date.isocalendar", "future.backports.datetime.date._getstate", "future.backports.datetime.date.__setstate", "future.backports.datetime.tzinfo.utcoffset", "future.backports.datetime.tzinfo.dst", "future.backports.datetime.time.second", "future.backports.datetime.time.microsecond", "future.backports.datetime.time.__hash__", "future.backports.datetime.time._tzstr", "future.backports.datetime.time.isoformat", "future.backports.datetime.time.strftime", "future.backports.datetime.time.utcoffset", "future.backports.datetime.time.dst", "future.backports.datetime.time._getstate", "future.backports.datetime.time.__setstate", "future.backports.datetime.datetime.second", "future.backports.datetime.datetime.microsecond", "future.backports.datetime.datetime.fromtimestamp", "future.backports.datetime.datetime.utcfromtimestamp", "future.backports.datetime.datetime.timestamp", "future.backports.datetime.datetime.astimezone", "future.backports.datetime.datetime.isoformat", "future.backports.datetime.datetime.__str__", "future.backports.datetime.datetime.strptime", "future.backports.datetime.datetime.utcoffset", "future.backports.datetime.datetime.dst", "future.backports.datetime.datetime.__sub__", "future.backports.datetime.datetime.__hash__", "future.backports.datetime.datetime._getstate", "future.backports.datetime.datetime.__setstate", "future.backports.datetime.timezone.__getinitargs__", "future.backports.datetime.timezone.__hash__", "future.backports.datetime.timezone.__str__", "future.backports.datetime.timezone.utcoffset", "future.backports.datetime.timezone.dst", "future.backports.datetime.timezone._name_from_offset", "future.backports.datetime.timedelta.__new__", "future.backports.datetime.timedelta.__neg__", "future.backports.datetime.timedelta.__ne__", "future.backports.datetime.date.__new__", "future.backports.datetime.date.fromordinal", "future.backports.datetime.date.month", "future.backports.datetime.date.toordinal", "future.backports.datetime.date.__ne__", "future.backports.datetime.tzinfo.tzname", "future.backports.datetime.time.__new__", "future.backports.datetime.time.minute", "future.backports.datetime.time.tzinfo", "future.backports.datetime.time.__ne__", "future.backports.datetime.time.tzname", "future.backports.datetime.datetime.__new__", "future.backports.datetime.datetime.minute", "future.backports.datetime.datetime.tzinfo", "future.backports.datetime.datetime.now", "future.backports.datetime.datetime.utcnow", "future.backports.datetime.datetime.combine", "future.backports.datetime.datetime.tzname", "future.backports.datetime.datetime.__ne__", "future.backports.datetime.timezone.__new__", "future.backports.datetime.timezone.tzname", "future.backports.datetime.timedelta.__str__.plural", "future.backports.datetime.timedelta.plural", "future.backports.datetime.__str__.plural"], "torch.nn.functional._pad_circular": ["torch", "torch.cat"], "numpy.core.fromnumeric._searchsorted_dispatcher": [], "numpy.lib.arraypad._view_roi": [], "future.backports.datetime.days": [], "torch.jit._get_interpreter_name_for_var": ["inspect", "torch.jit.ONNXTracedModule.__init__", "torch.jit.TracingCheckError.__init__", "torch.jit.TracerWarning.ignore_lib_warnings", "torch.jit.CompilationUnit.__init__", "torch.jit.CompilationUnit.define", "torch.jit.OrderedDictWrapper.__init__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.items", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__contains__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.__init__", "torch.jit.OrderedModuleDict.items", "torch.jit.OrderedModuleDict.__contains__", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.ScriptMeta.__init__", "torch.jit.ScriptMeta.init_then_script", "torch.jit.TracedModule.__init__", "torch.jit.TracedModule.check_unique", "torch.jit._disable_tracing.__exit__", "torch.jit.ScriptModule.__init__", "torch.jit.ScriptModule.define", "torch.jit.RecursiveScriptModule.__init__", "torch.jit.RecursiveScriptModule.inlined_graph", "torch.jit.RecursiveScriptModule._save_for_lite_interpreter", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.RecursiveScriptModule.define", "torch.jit.RecursiveScriptModule.copy_instance", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.RecursiveScriptModule.__iter__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.RecursiveScriptModule.__contains__", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.OrderedDictWrapper.keys", "torch.jit.ScriptMeta.make_stubs", "torch.jit.OrderedDictWrapper.values", "torch.jit.RecursiveScriptModule.save", "torch.jit.RecursiveScriptModule.save_to_buffer", "inspect.currentframe"], "urllib3.contrib.pyopenssl.PyOpenSSLContext": [], "numpy.core.zeros": ["numpy.ma.core.zeros", "numpy.core.numeric.zeros", "numpy.core.multiarray.zeros", "numpy.array_api.__init__.zeros"], "__builtin__.max": [], "torch.jit.frontend.ExprBuilder.build_Subscript": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.build_Subscript.build_ExtSlice", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn", "ast.Index", "ast.Tuple", "ast.List", "ast.Slice", "ast.ExtSlice"], "numpy.core.arrayprint.IntegerFormat": [], "numpy.polynomial.polynomial.polycompanion": ["numpy.polynomial.polynomial.Polynomial._str_term_unicode", "numpy.polynomial.polynomial.Polynomial._str_term_ascii", "numpy.polynomial.polyutils", "numpy", "numpy.polynomial.polyutils.as_series", "numpy.array", "numpy.zeros"], "regex._regex_core.StartOfLine": ["regex._regex_core.ZeroWidthBase"], "ssl.PROTOCOL_TLSv1_2": [], "requests.api.patch": ["requests.api.request"], "transformers.utils.logging._get_default_logging_level": ["os", "logging", "os.getenv", "logging.getLogger"], "regex._regex_core.parse_numeric_escape": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.parse_octal_escape", "regex._regex_core.is_octal", "regex._regex_core.make_character", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.error", "regex._regex_core.make_ref_group"], "ast.Tuple": [], "ast.Add": [], "ast.Eq": [], "tqdm.version.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__", "tqdm._dist_ver.__version__"], "ssl.PROTOCOL_SSLv23": [], "regex._regex_core.parse_atomic": ["regex._regex_core._parse_pattern", "regex._regex_core.Atomic"], "torch.jit.frontend.ExprBuilder.build_Name": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.NotSupportedError", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "future.backports.email._header_value_parser.get_domain_literal": ["future.backports.email._header_value_parser.DomainLiteral", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser._check_for_early_dl_end", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email._header_value_parser.get_fws", "future.backports.email._header_value_parser.get_dtext", "future.backports.email.errors.HeaderParseError"], "torch.jit.frontend.ExprBuilder.build_Tuple": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.StmtBuilder.build_Delete", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Raise", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_While", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.StmtBuilder.build_Continue", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_Name", "torch.jit.frontend.ExprBuilder.build_NameConstant", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Tuple", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Index", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "decimal._dec_from_triple": [], "ast.Invert": [], "torch.jit.frontend.ExprBuilder": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "ast.ExtSlice": [], "future.backports.email._header_value_parser.EncodedWord": ["future.backports.email._header_value_parser.TokenList", "future.backports.email._header_value_parser.TokenList.cte_encode", "future.backports.email._header_value_parser.UnstructuredTokenList.cte_encode", "future.backports.email._header_value_parser.Phrase.cte_encode", "future.backports.email._header_value_parser.Terminal.cte_encode"], "ast.GtE": [], "requests.sessions.Session": ["requests.sessions.SessionRedirectMixin"], "ast.Is": [], "torch.jit.frontend.ExprBuilder.build_NameConstant": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "numpy.lib.function_base.bincount": ["numpy.lib.function_base.bincount", "numpy.core.multiarray.bincount"], "ast.LtE": [], "torch.jit.frontend.StmtBuilder.build_Continue": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.StmtBuilder.build_Continue", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "regex._regex_core.parse_named_char": ["regex._regex_core.make_character", "unicodedata", "regex._regex_core.error", "unicodedata.lookup"], "joblib.numpy_pickle_utils._ZFILE_PREFIX": ["joblib.compressor._ZFILE_PREFIX"], "torch.jit.frontend.ExprBuilder.build_Index": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.NotSupportedError", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn", "ast.Tuple", "ast.List"], "string.whitespace": [], "ssl.OP_NO_SSLv2": [], "torch.jit.frontend.Builder": [], "regex._regex_core.parse_limited_quantifier": ["regex._regex_core.parse_count", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.is_above_limit", "regex._regex_core.error"], "ssl.SSLError": [], "numpy.array_api.linalg.qr": ["numpy.array_api._array_object.Array", "numpy.array_api._typing.Literal", "numpy.array_api._dtypes._floating_dtypes", "numpy.array_api.linalg.QRResult", "numpy", "numpy.array_api._array_object.Array._new", "numpy.linalg"], "ssl.HAS_SNI": [], "future.backports.email._encoded_words.decode": ["future.backports.email._encoded_words._QByteMap.__missing__", "future.builtins.str", "future.backports.email.errors", "future.backports.email.errors.UndecodableBytesDefect", "future.backports.email.errors.CharsetError"], "torch.jit.frontend.build_Subscript.build_SliceExpr": ["ast", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.build_Subscript.build_ExtSlice", "ast.Index", "ast.Tuple", "ast.List", "ast.Slice", "ast.ExtSlice"], "numpy.lib.histograms._get_outer_edges": ["numpy", "numpy.isfinite"], "torch.jit.frontend.ExprBuilder.build_List": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.StmtBuilder.build_Delete", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Raise", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_While", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.StmtBuilder.build_Continue", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_Name", "torch.jit.frontend.ExprBuilder.build_NameConstant", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Tuple", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Index", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "future.backports.email._header_value_parser.LocalPart": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.ParseError": [], "requests.sessions": ["sys", "time", "sys.platform", "time.perf_counter", "time.time"], "ast.Not": [], "regex._regex_core.parse_fuzzy_test": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.parse_escape", "regex._regex_core.Character", "regex._regex_core.error", "regex._regex_core.AnyAll", "regex._regex_core.parse_set", "regex._regex_core.AnyU", "regex._regex_core.Any"], "urllib3.contrib.pyopenssl.WrappedSocket.sendall": ["urllib3.contrib.pyopenssl.WrappedSocket.fileno"], "torch.jit.frontend.ExprBuilder.build_ExtSlice": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder.build_Subscript.build_Index", "torch.jit.frontend.ExprBuilder.build_Index", "torch.jit.frontend.build_Subscript.build_Index", "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_Subscript.build_SliceExpr", "torch.jit.frontend.NotSupportedError", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn", "ast.Index", "ast.Slice", "ast.Ellipsis"], "future.backports.email._header_value_parser.get_obs_local_part": ["future.backports.email._header_value_parser.ObsLocalPart", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_word", "future.backports.email.errors", "future.backports.email._header_value_parser.get_cfws", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email.errors.HeaderParseError", "future.backports.email.errors.InvalidHeaderDefect"], "torch.multiprocessing.reductions.storage_from_cache": [], "torch.jit.frontend.StmtBuilder.build_Raise": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch._six.PY2", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.StmtBuilder.build_Raise", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "regex._regex_core.Grapheme": ["regex._regex_core.RegexBase"], "ast.IsNot": [], "ast.Index": [], "ast.NotIn": [], "torch.jit.TopLevelTracedModule": ["torch.jit.TracedModule", "torch.jit.ONNXTracedModule.forward", "torch.jit.TracedModule.forward", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.forward", "torch.jit._CachedForward"], "numpy.newaxis": ["numpy.core.numeric.newaxis"], "torch.jit.frontend.build_Attribute.get_char": ["torch.jit.frontend.ExprBuilder.build_Attribute.get_char", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.build_Attribute.get_char", "string", "torch._six.PY2", "string.whitespace"], "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done": ["socket.error", "urllib3.contrib.pyopenssl.WrappedSocket.settimeout", "socket.timeout", "urllib3.contrib.pyopenssl.WrappedSocket.fileno", "urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios", "urllib3.contrib.pyopenssl.WrappedSocket.recv", "urllib3.contrib.pyopenssl.WrappedSocket.recv_into", "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done", "urllib3.contrib.pyopenssl.WrappedSocket.sendall", "urllib3.contrib.pyopenssl.WrappedSocket.close", "urllib3.contrib.pyopenssl.WrappedSocket.getpeercert", "urllib3.contrib.pyopenssl.WrappedSocket.version", "urllib3.contrib.pyopenssl.WrappedSocket._reuse", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols", "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket", "urllib3.util", "urllib3.util.wait_for_write"], "regex._regex_core.parse_flags_subpattern": ["regex._regex_core.parse_flags", "regex._regex_core.error", "regex._regex_core._UnscopedFlagSet", "regex._regex_core.parse_subpattern", "regex._regex_core.parse_positional_flags"], "urllib3.util.ssl_.PROTOCOL_TLS": ["ssl.PROTOCOL_TLS", "ssl.PROTOCOL_SSLv23"], "ast.Mod": [], "urllib3.util.ssl_.HAS_SNI": ["ssl.HAS_SNI"], "ast.BitOr": [], "cryptography.x509.extensions.Extensions": [], "joblib.numpy_pickle.NumpyArrayWrapper": [], "ast.Div": [], "torch.jit.frontend.ExprBuilder.build_Ellipsis": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "logging.StreamHandler": [], "torch.jit.frontend.ExprBuilder.build_Attribute.get_char": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder.build_Attribute.get_char", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.build_Attribute.get_char", "string", "string.whitespace", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "numpy.lib.arraypad._round_if_needed": ["numpy", "numpy.issubdtype", "numpy.integer"], "regex._regex_core.float_to_rational": ["regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.error", "regex._regex_core.float_to_rational"], "ast.Gt": [], "urllib3.contrib.pyopenssl.WrappedSocket.close": [], "torch.jit.ScriptModule.define": ["torch._six.with_metaclass", "torch.jit.ScriptMeta", "torch.nn.Module", "torch.jit.ONNXTracedModule.forward", "torch.jit.TracedModule.forward", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.forward", "torch.jit._CachedForward", "torch._jit_internal", "torch.jit._recursive.ScriptMethodStub"], "future.backports.email._header_value_parser.MailboxList": ["future.backports.email._header_value_parser.TokenList"], "urllib3.util.wait_for_read": ["urllib3.util.wait.wait_for_read"], "ast.And": [], "future.backports.email._header_value_parser.get_obs_route": ["future.backports.email._header_value_parser.ObsRoute", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email.errors", "future.backports.email._header_value_parser.get_domain", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email.errors.HeaderParseError"], "future.types.wrapper": ["functools", "functools.wraps"], "torch.jit.frontend.StmtBuilder.build_Delete": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.StmtBuilder.build_Delete", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "ast.MatMult": [], "torch.jit.frontend.build_Subscript.build_ExtSlice": ["ast", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_Subscript.build_Index", "torch.jit.frontend.ExprBuilder.build_Index", "torch.jit.frontend.build_Subscript.build_Index", "ast.Index", "ast.Tuple", "ast.List", "ast.Slice", "ast.ExtSlice", "ast.Ellipsis"], "torch.jit.frontend.StmtBuilder.build_Assign": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.ExprBuilder.build_IfExp", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Index", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.StmtBuilder.build_Assign", "torch.jit.frontend.StmtBuilder.build_AnnAssign", "torch.jit.frontend.StmtBuilder.build_AugAssign", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "ssl.PROTOCOL_TLS_CLIENT": [], "urllib3.util.ssl_.IS_PYOPENSSL": [], "future.builtins.newround.from_float_26.bit_length": ["decimal.Decimal", "math", "future.builtins.newround.bit_length", "future.builtins.newround.from_float_26.bit_length", "decimal._dec_from_triple", "math.isinf", "math.isnan", "math.copysign"], "urllib3.contrib.pyopenssl._verify_callback": [], "future.utils.__init__.PY26": ["future.utils.__init__.PY26"], "joblib.numpy_pickle.NumpyPickler._create_array_wrapper": ["joblib.numpy_pickle_utils.Pickler", "joblib.numpy_pickle.NumpyArrayWrapper.safe_get_numpy_array_alignment_bytes", "joblib.numpy_pickle.NumpyArrayWrapper.write_array", "joblib.numpy_pickle.NumpyArrayWrapper.read_array", "joblib.numpy_pickle.NumpyPickler._create_array_wrapper", "io", "joblib.numpy_pickle.NumpyArrayWrapper", "io.UnsupportedOperation", "joblib.numpy_pickle_utils.Pickler.dispatch"], "numpy.lib.function_base.median": ["numpy.lib.function_base._ureduce", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.lib.function_base._median", "numpy.lib.function_base._median_dispatcher"], "cryptography.x509": [], "regex._regex_core.parse_common": ["regex._regex_core.Branch._flatten_branches", "regex._regex_core.parse_sequence", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.max_width", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.max_width", "regex._regex_core.Character.max_width", "regex._regex_core.Conditional.max_width", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.Group.max_width", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.Property.max_width", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.max_width", "regex._regex_core.SetBase.max_width", "regex._regex_core.String.max_width", "regex._regex_core.Branch"], "regex._regex_core.parse_group_ref": ["regex._regex_core.parse_name", "regex._regex_core.error", "regex._regex_core.make_ref_group"], "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_Subscript.build_Index", "torch.jit.frontend.ExprBuilder.build_Index", "torch.jit.frontend.build_Subscript.build_Index", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn", "ast.Index", "ast.Tuple", "ast.List", "ast.Slice", "ast.ExtSlice", "ast.Ellipsis"], "torch.jit.frontend.ExprBuilder.build_BinOp": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.FrontendError", "torch.jit.frontend.ExprBuilder", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_BinOp", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "regex._regex_core.parse_property": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.parse_property_name", "regex._regex_core.lookup_property", "regex._regex_core.make_property", "regex._regex_core.make_character"], "transformers.utils.logging._get_library_name": [], "joblib.numpy_pickle_utils.Unpickler.load_build": [], "regex._regex_core.parse_hex_escape": ["regex._regex_core.error.__init__", "regex._regex_core.RegexBase.__init__", "regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.optimise", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.RegexBase.compile", "regex._regex_core.RegexBase.is_empty", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.ZeroWidthBase.__init__", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.ZeroWidthBase.max_width", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Any._compile", "regex._regex_core.Any.max_width", "regex._regex_core.Atomic.__init__", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.optimise", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Atomic._compile", "regex._regex_core.Atomic.is_empty", "regex._regex_core.Atomic.max_width", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Branch.__init__", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.optimise", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.Branch._is_folded", "regex._regex_core.Branch.is_empty", "regex._regex_core.Branch.max_width", "regex._regex_core.CallGroup.__init__", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallGroup.max_width", "regex._regex_core.CallRef.__init__", "regex._regex_core.CallRef._compile", "regex._regex_core.Character.__init__", "regex._regex_core.Character.rebuild", "regex._regex_core.Character.optimise", "regex._regex_core.Character.get_firstset", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Character._compile", "regex._regex_core.Character.max_width", "regex._regex_core.Character.get_required_string", "regex._regex_core.Conditional.__init__", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.optimise", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.Conditional._compile", "regex._regex_core.Conditional.is_empty", "regex._regex_core.Conditional.max_width", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.__init__", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy.is_empty", "regex._regex_core.Fuzzy.max_width", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.Grapheme.max_width", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.__init__", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.GreedyRepeat.is_empty", "regex._regex_core.GreedyRepeat.max_width", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.__init__", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.optimise", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group.get_firstset", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Group._compile", "regex._regex_core.Group.max_width", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAround.__init__", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAround.is_empty", "regex._regex_core.LookAround.max_width", "regex._regex_core.LookAroundConditional.__init__", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.LookAroundConditional.is_empty", "regex._regex_core.LookAroundConditional.max_width", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.PrecompiledCode.__init__", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property.__init__", "regex._regex_core.Property.rebuild", "regex._regex_core.Property.optimise", "regex._regex_core.Property.get_firstset", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Property._compile", "regex._regex_core.Property.max_width", "regex._regex_core.Prune._compile", "regex._regex_core.Range.__init__", "regex._regex_core.Range.rebuild", "regex._regex_core.Range.optimise", "regex._regex_core.Range._compile", "regex._regex_core.Range.max_width", "regex._regex_core.RefGroup.__init__", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.RefGroup._compile", "regex._regex_core.RefGroup.max_width", "regex._regex_core.Sequence.__init__", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.optimise", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence.is_empty", "regex._regex_core.Sequence.max_width", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.SetBase.__init__", "regex._regex_core.SetBase.rebuild", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetBase.max_width", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.SetUnion._compile", "regex._regex_core.String.__init__", "regex._regex_core.String.get_firstset", "regex._regex_core.String.has_simple_start", "regex._regex_core.String._compile", "regex._regex_core.String.max_width", "regex._regex_core.String.get_required_string", "regex._regex_core.StringSet.__init__", "regex._regex_core.Source.__init__", "regex._regex_core.Source.get_while", "regex._regex_core.Source.skip_while", "regex._regex_core.Info.__init__", "regex._regex_core.Info.is_open_group", "regex._regex_core.Scanner.__init__", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.error", "regex._regex_core.make_character"], "regex._regex_core.parse_extension": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.parse_name", "regex._regex_core.Group", "regex._regex_core._parse_pattern", "regex._regex_core.make_ref_group", "regex._regex_core.error", "regex._regex_core.parse_call_named_group"], "ast.NotEq": [], "ast.Lt": [], "_dummy_thread.get_ident": [], "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.build_Subscript.build_ExtSlice", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn", "ast.Index", "ast.Tuple", "ast.List", "ast.Slice", "ast.ExtSlice"], "regex._regex_core.SearchAnchor": ["regex._regex_core.ZeroWidthBase"], "regex._regex_core.parse_set_union": ["regex._regex_core.parse_set_symm_diff", "regex._regex_core.SetUnion"], "urllib3.util.ssl_.SSLContext": [], "logging.Logger": [], "regex._regex_core.parse_set_imp_union": ["regex._regex_core.parse_set_member", "regex._regex_core.Source.get_many", "regex._regex_core.RegexBase.optimise", "regex._regex_core.Atomic.optimise", "regex._regex_core.Branch.optimise", "regex._regex_core.Character.optimise", "regex._regex_core.Conditional.optimise", "regex._regex_core.GreedyRepeat.optimise", "regex._regex_core.Group.optimise", "regex._regex_core.LookAround.optimise", "regex._regex_core.LookAroundConditional.optimise", "regex._regex_core.Property.optimise", "regex._regex_core.Range.optimise", "regex._regex_core.Sequence.optimise", "regex._regex_core.SetDiff.optimise", "regex._regex_core.SetInter.optimise", "regex._regex_core.SetSymDiff.optimise", "regex._regex_core.SetUnion.optimise", "regex._regex_core.Info.open_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.SetUnion"], "torch.jit.make_module.make_stubs_from_exported_methods": ["torch.jit.ScriptModule", "torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.ScriptMeta.make_stubs", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch.jit.make_stubs_from_exported_methods", "torch.jit.make_module.make_stubs_from_exported_methods", "torch.jit.TopLevelTracedModule", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.items", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.items", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch._jit_internal", "torch._jit_internal.FunctionModifiers"], "torch.multiprocessing.reductions.StorageWeakRef.expired": ["torch", "torch.Storage"], "ast.Mult": [], "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain": ["urllib3.packages.six", "urllib3.packages.six.binary_type"], "future.backports.email._header_value_parser.get_dot_atom": ["future.backports.email._header_value_parser.DotAtom", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser.get_cfws", "future.backports.email._header_value_parser.get_dot_atom_text"], "socket.SocketIO": [], "regex._regex_core.parse_name": ["regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset", "regex._regex_core.error", "regex._regex_core.Fuzzy._constraints_to_string"], "future.backports.email._header_value_parser.AngleAddr": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.parse_lookaround": ["regex._regex_core._parse_pattern", "regex._regex_core.LookAround"], "ast.FloorDiv": [], "regex._regex.get_all_cases": [], "numpy.lib.arraypad._slice_at_axis": [], "numpy.random.__init__.rand": ["torch.__init__.rand", "numpy.matlib.rand", "numpy.random.__init__.rand"], "future.backports.email.errors.NonASCIILocalPartDefect": ["future.backports.email.errors.HeaderDefect"], "torch.jit.CompilationUnit.define": ["torch._jit_internal", "torch._jit_internal.createResolutionCallbackFromFrame"], "ast.List": [], "ast.FormattedValue": [], "numpy.lib.function_base._quantile": ["numpy", "numpy.core.numeric.take", "numpy.lib.function_base._get_indexes", "numpy.lib.function_base._get_gamma", "numpy.lib.function_base._lerp", "numpy.core.numeric.concatenate", "numpy.array", "numpy.asanyarray", "numpy.moveaxis", "numpy.issubdtype", "numpy.integer", "numpy.inexact", "numpy.take", "numpy.isnan", "numpy.unique", "numpy.concatenate", "numpy.any", "numpy.nan"], "torch.jit.make_stubs_from_exported_methods": ["torch.jit.TracedModule._get_name", "torch.jit.RecursiveScriptModule.original_name", "torch.jit.RecursiveScriptModule.__dir__", "torch.jit.OrderedDictWrapper.__delitem__", "torch.jit.OrderedDictWrapper.items", "torch.jit.OrderedDictWrapper.__setitem__", "torch.jit.OrderedDictWrapper.__getitem__", "torch.jit.OrderedModuleDict.items", "torch.jit.OrderedModuleDict.__setitem__", "torch.jit.OrderedModuleDict.__getitem__", "torch.jit.RecursiveScriptModule.__getitem__", "torch.jit.CompilationUnit.__getattr__", "torch.jit.TracedModule.__getattr__", "torch.jit.ScriptModule.__getattr__", "torch.jit.RecursiveScriptModule.__getattr__", "torch._jit_internal", "torch.jit.ScriptMeta.make_stubs", "torch.jit.RecursiveScriptModule.forward_magic_method", "torch._jit_internal.FunctionModifiers"], "future.builtins.newround.bit_length": [], "torch.multiprocessing.reductions.StorageWeakRef.__del__": [], "urllib3.contrib.pyopenssl.WrappedSocket._reuse": [], "numpy.lib.function_base._append_dispatcher": [], "urllib3.util.ssl_._const_compare_digest_backport": ["urllib3.util.ssl_.SSLContext.load_cert_chain", "urllib3.util.ssl_.SSLContext.load_verify_locations", "urllib3.util.ssl_.SSLContext.wrap_socket"], "ssl.OP_NO_TICKET": [], "math.isinf": [], "zlib.decompress": [], "ssl.SSLContext": [], "OpenSSL.crypto.X509": [], "io.BufferedRWPair": [], "ast.In": [], "torch.jit.frontend.NotSupportedError": ["torch.jit.frontend.FrontendError"], "torch.jit.frontend.StmtBuilder.build_Pass": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.StmtBuilder.build_Pass", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "ast.Sub": [], "io.DEFAULT_BUFFER_SIZE": [], "ssl.OP_NO_SSLv3": [], "torch.jit.frontend.build_param": ["torch._six.PY2", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr"], "math.copysign": [], "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols": ["urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols", "urllib3.contrib.pyopenssl.WrappedSocket.getpeercert", "urllib3.contrib.pyopenssl.WrappedSocket._drop", "urllib3.contrib.pyopenssl.PyOpenSSLContext.options", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers", "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket", "urllib3.packages.six", "urllib3.packages.six.ensure_binary"], "math.isnan": [], "numpy.ma.core.convolve": ["numpy.ma.core._convolve_or_correlate", "numpy.ma.core._DomainCheckInterval.__call__", "numpy.ma.core._DomainTan.__call__", "numpy.ma.core._DomainSafeDivide.__call__", "numpy.ma.core._DomainGreater.__call__", "numpy.ma.core._DomainGreaterEqual.__call__", "numpy.ma.core._MaskedUnaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.__call__", "numpy.ma.core._MaskedBinaryOperation.accumulate", "numpy.ma.core._DomainedBinaryOperation.__call__", "numpy.ma.core._MaskedPrintOption.display", "numpy.ma.core._MaskedPrintOption.set_display", "numpy.ma.core._MaskedPrintOption.enabled", "numpy.ma.core._MaskedPrintOption.enable", "numpy.ma.core.MaskedArray._update_from", "numpy.ma.core.MaskedArray.__array_finalize__", "numpy.ma.core.MaskedArray.__array_wrap__", "numpy.ma.core.MaskedArray.shape", "numpy.ma.core.MaskedArray.__setmask__", "numpy.ma.core.MaskedArray.mask", "numpy.ma.core.MaskedArray.recordmask", "numpy.ma.core.MaskedArray.harden_mask", "numpy.ma.core.MaskedArray.soften_mask", "numpy.ma.core.MaskedArray.hardmask", "numpy.ma.core.MaskedArray.unshare_mask", "numpy.ma.core.MaskedArray.sharedmask", "numpy.ma.core.MaskedArray.shrink_mask", "numpy.ma.core.MaskedArray.baseclass", "numpy.ma.core.MaskedArray._get_data", "numpy.ma.core.MaskedArray.flat", "numpy.ma.core.MaskedArray.fill_value", "numpy.ma.core.MaskedArray._insert_masked_print", "numpy.ma.core.MaskedArray._delegate_binop", "numpy.ma.core.MaskedArray._comparison", "numpy.ma.core.MaskedArray.__add__", "numpy.ma.core.MaskedArray.__radd__", "numpy.ma.core.MaskedArray.__iadd__", "numpy.ma.core.MaskedArray.__float__", "numpy.ma.core.MaskedArray.imag", "numpy.ma.core.MaskedArray.real", "numpy.ma.core.MaskedArray.ravel", "numpy.ma.core.MaskedArray.reshape", "numpy.ma.core.MaskedArray.all", "numpy.ma.core.MaskedArray.any", "numpy.ma.core.MaskedArray.trace", "numpy.ma.core.MaskedArray.mean", "numpy.ma.core.MaskedArray.anom", "numpy.ma.core.MaskedArray.var", "numpy.ma.core.MaskedArray.argsort", "numpy.ma.core.MaskedArray.argmin", "numpy.ma.core.MaskedArray.argmax", "numpy.ma.core.MaskedArray.max", "numpy.ma.core.MaskedArray.partition", "numpy.ma.core.MaskedArray.argpartition", "numpy.ma.core.MaskedArray.take", "numpy.ma.core.MaskedArray.__getstate__", "numpy.ma.core.MaskedArray.__setstate__", "numpy.ma.core.MaskedArray._is_scalar", "numpy.ma.core.MaskedArray._scalar_heuristic", "numpy.ma.core.mvoid._data", "numpy.ma.core.MaskedConstant.__has_singleton", "numpy.ma.core.MaskedConstant.__array_finalize__", "numpy.ma.core.MaskedConstant.__array_prepare__", "numpy.ma.core.MaskedConstant.__array_wrap__", "numpy.ma.core.MaskedConstant.__format__", "numpy.ma.core.MaskedConstant.__setattr__", "numpy.ma.core._extrema_operation.__call__", "numpy.ma.core._frommethod.__call__", "numpy.ma.core._convert2ma._replace_return_type", "numpy.ma.core._convert2ma.__call__", "numpy.ma.core.MaskedArray.view", "numpy.ma.core.MaskedArray.__div__", "numpy.ma.core.MaskedArray.__truediv__", "numpy.ma.core.MaskedArray.__rtruediv__", "numpy.ma.core.MaskedArray.__floordiv__", "numpy.ma.core.MaskedArray.__rfloordiv__", "numpy.ma.core.MaskedArray.__idiv__", "numpy.ma.core.MaskedArray.__ifloordiv__", "numpy.ma.core.MaskedArray.__itruediv__", "numpy.ma.core.MaskedArray._recursive_or", "numpy", "numpy.convolve"], "urllib3.util.ssltransport.SSLTransport": [], "torch.jit.frontend.StmtBuilder.build_While": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.StmtBuilder.build_While", "torch.jit.frontend.build_stmts", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "regex._regex_core.parse_comment": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.RegexBase.remove_captures", "regex._regex_core.RegexBase.is_atomic", "regex._regex_core.RegexBase.can_be_affix", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.RegexBase.compile", "regex._regex_core.ZeroWidthBase._compile", "regex._regex_core.Any._compile", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Atomic.remove_captures", "regex._regex_core.Atomic.can_be_affix", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Atomic._compile", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch.remove_captures", "regex._regex_core.Branch.is_atomic", "regex._regex_core.Branch.can_be_affix", "regex._regex_core.Branch.contains_group", "regex._regex_core.Branch._compile", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._split_common_prefix", "regex._regex_core.Branch._split_common_suffix", "regex._regex_core.Branch._can_split", "regex._regex_core.Branch._can_split_rev", "regex._regex_core.Branch._merge_common_prefixes", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Branch._is_full_case", "regex._regex_core.CallGroup.remove_captures", "regex._regex_core.CallGroup._compile", "regex._regex_core.CallRef._compile", "regex._regex_core.Character._compile", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Conditional.remove_captures", "regex._regex_core.Conditional.is_atomic", "regex._regex_core.Conditional.can_be_affix", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Conditional._compile", "regex._regex_core.Failure._compile", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.Fuzzy.remove_captures", "regex._regex_core.Fuzzy.is_atomic", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.Fuzzy._compile", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.Grapheme._compile", "regex._regex_core.GraphemeBoundary.compile", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.GreedyRepeat.remove_captures", "regex._regex_core.GreedyRepeat.is_atomic", "regex._regex_core.GreedyRepeat.can_be_affix", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.GreedyRepeat._compile", "regex._regex_core.PossessiveRepeat.is_atomic", "regex._regex_core.PossessiveRepeat._compile", "regex._regex_core.Group.pack_characters", "regex._regex_core.Group.remove_captures", "regex._regex_core.Group.is_atomic", "regex._regex_core.Group.can_be_affix", "regex._regex_core.Group.contains_group", "regex._regex_core.Group._compile", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAround.remove_captures", "regex._regex_core.LookAround.is_atomic", "regex._regex_core.LookAround.can_be_affix", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAround._compile", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.LookAroundConditional.remove_captures", "regex._regex_core.LookAroundConditional.is_atomic", "regex._regex_core.LookAroundConditional.can_be_affix", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.LookAroundConditional._compile", "regex._regex_core.PrecompiledCode._compile", "regex._regex_core.Property._compile", "regex._regex_core.Property.matches", "regex._regex_core.Prune._compile", "regex._regex_core.Range._compile", "regex._regex_core.Range.matches", "regex._regex_core.RefGroup.remove_captures", "regex._regex_core.RefGroup._compile", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence.remove_captures", "regex._regex_core.Sequence.is_atomic", "regex._regex_core.Sequence.can_be_affix", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Sequence._compile", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._fix_full_casefold", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetBase._compile", "regex._regex_core.SetBase._handle_case_folding", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion._compile", "regex._regex_core.SetUnion.matches", "regex._regex_core.String._compile", "regex._regex_core.Source.match", "regex._regex_core.Source.expect", "regex._regex_core.Info.close_group", "regex._regex_core.Scanner.scan"], "future.types.decorator.wrapper": ["future.types.wrapper", "future.types.disallow_types.decorator.wrapper", "future.types.decorator.wrapper", "functools", "functools.wraps"], "urllib3.contrib.pyopenssl.WrappedSocket.getpeercert": ["cryptography.x509", "urllib3.contrib.pyopenssl.get_subj_alt_name", "cryptography.x509.get_subject"], "torch.__init__.rand": ["torch.__init__.rand", "numpy.matlib.rand", "numpy.random.__init__.rand"], "urllib3.contrib.pyopenssl.WrappedSocket.fileno": [], "future.utils.__init__.native_str": ["future.utils.__init__.native_str"], "ast.Slice": [], "regex._regex_core.PossessiveRepeat": ["regex._regex_core.GreedyRepeat"], "regex._regex_core.parse_call_group": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.CallGroup"], "ssl.PROTOCOL_TLS": [], "_thread.get_ident": [], "numpy.matlib.rand": ["numpy.matrixlib.defmatrix.asmatrix", "numpy", "numpy.random"], "urllib3.contrib.pyopenssl.WrappedSocket.settimeout": ["urllib3.contrib.pyopenssl.WrappedSocket.settimeout", "socket.timeout"], "torch.jit.frontend.StmtBuilder.build_AnnAssign": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.UnsupportedNodeError", "torch.jit.frontend.StmtBuilder.build_Assign", "torch.jit.frontend.StmtBuilder.build_AnnAssign", "torch.jit.frontend.StmtBuilder.build_AugAssign", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "ast.Pow": [], "regex._regex_core.parse_fuzzy_item": ["regex._regex_core.ParseError", "regex._regex_core.parse_cost_constraint", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.parse_cost_equation"], "ast.Str": [], "future.types.disallow_types.decorator.wrapper": ["future.types.decorator", "future.types.disallow_types.decorator", "future.types.wrapper", "future.types.disallow_types.decorator.wrapper", "future.types.decorator.wrapper"], "numpy.ma.extras.median": ["numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.extras.MAxisConcatenator.__getitem__", "numpy.ma.extras._fromnxfunction.__call__", "numpy.ma.extras._fromnxfunction_single.__call__", "numpy.ma.extras._fromnxfunction_seq.__call__", "numpy.ma.extras._fromnxfunction_args.__call__", "numpy.ma.extras._fromnxfunction_allargs.__call__", "numpy", "numpy.ma.core.getdata", "numpy.ma.core.masked_array", "numpy.lib.function_base._ureduce", "numpy.ma.extras._median", "numpy.median", "numpy.ndarray"], "torch.jit.frontend.StmtBuilder.build_AugAssign": ["torch.jit.frontend.Builder", "ast", "torch.jit.frontend.StmtBuilder", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.find_before", "torch.jit.frontend.StmtBuilder.build_AugAssign", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "ssl.OP_NO_COMPRESSION": [], "torch.jit.frontend.ExprBuilder.build_ListComp": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.StmtBuilder.build_Expr", "torch.jit.frontend.StmtBuilder.build_Return", "torch.jit.frontend.StmtBuilder.build_Assert", "torch.jit.frontend.StmtBuilder.build_For", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.StmtBuilder.build_Break", "torch.jit.frontend.ExprBuilder.build_Attribute", "torch.jit.frontend.ExprBuilder.build_UnaryOp", "torch.jit.frontend.ExprBuilder.build_Compare", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.ExprBuilder.build_Str", "torch.jit.frontend.ExprBuilder.build_JoinedStr", "torch.jit.frontend.ExprBuilder.build_Starred", "torch.jit.frontend.ExprBuilder.get_char", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_ListComp", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "ast.Or": [], "torch.jit.RecursiveScriptModule.define": ["torch.jit.ScriptModule", "torch._jit_internal", "torch._jit_internal.createResolutionCallbackFromFrame"], "torch.multiprocessing.reductions.SharedCache.free_dead_references": [], "ast.BitXor": [], "ast.LShift": [], "joblib.compressor._COMPRESSORS.values": [], "os.fstat": [], "ast.USub": [], "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers": ["urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers", "urllib3.packages.six", "urllib3.packages.six.text_type"], "urllib3.contrib.pyopenssl.verify_mode": ["urllib3.contrib.pyopenssl._verify_callback", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.verify_mode"], "hmac": [], "regex._regex_core.make_character": ["regex._regex_core.Character", "regex._regex_core.make_case_flags"], "regex._regex_core.parse_string_set": ["regex._regex_core.parse_name", "regex._regex_core.error", "regex._regex_core.make_string_set"], "regex._regex_core.parse_call_named_group": ["regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.parse_name", "regex._regex_core.CallGroup"], "torch.jit.frontend.ExprBuilder.build_Constant": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder", "torch.jit.frontend.StmtBuilder.build_Print", "torch.jit.frontend.FrontendError.__str__", "torch.jit.frontend.ExprBuilder.build_Ellipsis", "torch.jit.frontend.FrontendError", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "numpy.linalg.linalg.qr": ["warnings", "numpy.linalg.linalg._makearray", "numpy.linalg.linalg._assert_stacked_2d", "numpy.linalg.linalg._commonType", "numpy.linalg.linalg._to_native_byte_order", "numpy.linalg._umath_linalg", "numpy.linalg.linalg.isComplexType", "numpy.linalg.linalg.get_linalg_error_extobj", "numpy.linalg.linalg._raise_linalgerror_qr", "numpy.lib.twodim_base.triu", "numpy.linalg.linalg.transpose", "numpy.linalg.linalg._qr_dispatcher", "numpy.linalg._umath_linalg.qr_r_raw_m", "numpy.linalg._umath_linalg.qr_r_raw_n", "numpy.linalg._umath_linalg.qr_complete", "numpy.linalg._umath_linalg.qr_reduced", "warnings.warn"], "ast.RShift": [], "joblib.numpy_pickle_compat.NDArrayWrapper": [], "regex._regex_core.parse_conditional": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.error", "regex._regex_core.parse_lookaround_conditional", "regex._regex_core.RegexBase.fix_groups", "regex._regex_core.RegexBase.contains_group", "regex._regex_core.Atomic.fix_groups", "regex._regex_core.Atomic.contains_group", "regex._regex_core.Branch.fix_groups", "regex._regex_core.Branch.contains_group", "regex._regex_core.CallGroup.fix_groups", "regex._regex_core.Conditional.fix_groups", "regex._regex_core.Conditional.contains_group", "regex._regex_core.Fuzzy.fix_groups", "regex._regex_core.Fuzzy.contains_group", "regex._regex_core.GreedyRepeat.fix_groups", "regex._regex_core.GreedyRepeat.contains_group", "regex._regex_core.Group.fix_groups", "regex._regex_core.Group.contains_group", "regex._regex_core.LookAround.fix_groups", "regex._regex_core.LookAround.contains_group", "regex._regex_core.LookAroundConditional.fix_groups", "regex._regex_core.LookAroundConditional.contains_group", "regex._regex_core.RefGroup.fix_groups", "regex._regex_core.Sequence.fix_groups", "regex._regex_core.Sequence.contains_group", "regex._regex_core.Info.open_group", "regex._regex_core.Info.close_group", "regex._regex_core.Info.is_open_group", "regex._regex_core.parse_name", "regex._regex_core.parse_sequence", "regex._regex_core.Sequence", "regex._regex_core.Conditional"], "urllib3.packages.six.text_type": ["future.utils.__init__.text_type"], "ast.BitAnd": [], "urllib3.packages.six.ensure_binary": ["urllib3.packages.six.MovedModule._resolve", "urllib3.packages.six.MovedAttribute._resolve", "urllib3.packages.six._SixMetaPathImporter.find_spec", "urllib3.packages.six._SixMetaPathImporter.is_package"], "regex._regex_core.parse_lookaround_conditional": ["regex._regex_core._parse_pattern", "regex._regex_core.parse_sequence", "regex._regex_core.Sequence", "regex._regex_core.LookAroundConditional"], "regex._regex_core.is_octal": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.RegexBase.get_required_string", "regex._regex_core.Atomic.get_required_string", "regex._regex_core.Character.get_required_string", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.GreedyRepeat.get_required_string", "regex._regex_core.Group.get_required_string", "regex._regex_core.LookAroundConditional.get_required_string", "regex._regex_core.Sequence.get_required_string", "regex._regex_core.String.get_required_string", "string"], "joblib.numpy_pickle.NumpyArrayWrapper.write_array": ["joblib.numpy_pickle.NumpyArrayWrapper.safe_get_numpy_array_alignment_bytes", "joblib.numpy_pickle.NumpyArrayWrapper.write_array", "joblib.numpy_pickle.NumpyArrayWrapper.read_array", "joblib.numpy_pickle.NumpyPickler._create_array_wrapper", "pickle", "pickle.dump"], "urllib3.util.ssl_.SSLContext.load_cert_chain": [], "torch.jit.frontend.find_before": [], "numpy.linalg.linalg._to_native_byte_order": ["numpy.core.asarray"], "regex._regex_core.parse_octal_escape": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.make_character", "regex._regex_core.error"], "urllib3.util.ssl_.SSLContext.load_verify_locations": ["urllib3.exceptions.SSLError"], "future.backports.email._header_value_parser.get_dtext": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email._header_value_parser._get_ptext_to_endchars", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email.errors", "future.backports.email._header_value_parser._validate_xtext", "future.backports.email.errors.ObsoleteHeaderDefect"], "numpy.core.numeric.take": ["numpy.ma.core.take", "numpy.core.fromnumeric.take"], "numpy.linalg._umath_linalg.qr_r_raw_n": [], "torch.jit.frontend.build_Subscript.build_Index": ["ast", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.build_Subscript.build_ExtSlice", "ast.Index", "ast.Tuple", "ast.List", "ast.Slice", "ast.ExtSlice"], "numpy.lib.function_base._get_gamma": ["numpy", "numpy.asanyarray"], "numpy.linalg._umath_linalg.qr_complete": [], "cryptography.x509.get_subject": [], "urllib3.contrib.pyopenssl.WrappedSocket._drop": [], "regex._regex_core.parse_set_member": ["regex._regex_core.RegexBase.has_simple_start", "regex._regex_core.Any.has_simple_start", "regex._regex_core.Atomic.has_simple_start", "regex._regex_core.Character.has_simple_start", "regex._regex_core.Group.has_simple_start", "regex._regex_core.Property.has_simple_start", "regex._regex_core.Sequence.has_simple_start", "regex._regex_core.SetBase.has_simple_start", "regex._regex_core.String.has_simple_start", "regex._regex_core.parse_set_item", "regex._regex_core.Character", "regex._regex_core.SetUnion", "regex._regex_core.Source.at_end", "regex._regex_core.error", "regex._regex_core.Range"], "future.backports.email._header_value_parser.ObsRoute": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.make_property": ["regex._regex_core.make_case_flags"], "regex._regex_core.parse_set_symm_diff": ["regex._regex_core.parse_set_inter", "regex._regex_core.SetSymDiff"], "torch.jit.frontend.FrontendError": [], "numpy.lib.function_base._lerp": ["numpy.core.umath.subtract", "numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy.core.numeric.asanyarray", "numpy.core.umath.add", "numpy.lib.function_base.vectorize.__init__"], "numpy.array_api._typing.Literal": ["typing.Literal"], "urllib3.util.wait_for_write": ["urllib3.util.wait.wait_for_write"], "regex._regex_core.parse_flags": ["regex._regex_core.parse_flag_set", "regex._regex_core.error"], "regex._regex_core.parse_subpattern": ["regex._regex_core._parse_pattern"], "future.backports.email._header_value_parser.ObsLocalPart": ["future.backports.email._header_value_parser.TokenList"], "numpy.linalg.linalg._qr_dispatcher": [], "regex._regex_core.parse_property_name": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.RegexBase.get_firstset", "regex._regex_core.ZeroWidthBase.get_firstset", "regex._regex_core.Atomic.get_firstset", "regex._regex_core.Branch.get_firstset", "regex._regex_core.Branch._reduce_to_set", "regex._regex_core.Branch._flush_set_members", "regex._regex_core.Character.get_firstset", "regex._regex_core.Conditional.get_firstset", "regex._regex_core.GreedyRepeat.get_firstset", "regex._regex_core.Group.get_firstset", "regex._regex_core.LookAround.get_firstset", "regex._regex_core.Property.get_firstset", "regex._regex_core.Sequence.get_firstset", "regex._regex_core.SetBase.get_firstset", "regex._regex_core.String.get_firstset"], "urllib3.util.wait.wait_for_read": ["urllib3.util.wait.wait_for_socket"], "regex._regex_core.make_string_set": ["regex._regex_core.StringSet", "regex._regex_core.make_case_flags"], "torch.jit.frontend.ExprBuilder.build_IfExp": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn"], "regex._regex_core.parse_positional_flags": ["regex._regex_core.error", "regex._regex_core._UnscopedFlagSet"], "joblib.numpy_pickle.NumpyArrayWrapper.read_array": ["joblib.numpy_pickle.NumpyArrayWrapper.safe_get_numpy_array_alignment_bytes", "joblib.numpy_pickle.NumpyArrayWrapper.write_array", "joblib.numpy_pickle.NumpyArrayWrapper.read_array", "joblib.numpy_pickle.NumpyPickler._create_array_wrapper", "joblib.numpy_pickle.NumpyArrayWrapper.__init__", "joblib.numpy_pickle.NumpyPickler.__init__", "joblib.numpy_pickle.NumpyUnpickler.__init__", "joblib.numpy_pickle.NumpyUnpickler.load_build", "joblib.numpy_pickle_utils.BUFFER_SIZE", "pickle", "joblib.numpy_pickle_utils._read_bytes", "joblib.numpy_pickle_utils._ensure_native_byte_order", "pickle.load"], "future.backports.email._header_value_parser.DotAtom": ["future.backports.email._header_value_parser.TokenList"], "regex._regex_core.parse_cost_equation": ["regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.error", "regex._regex_core.parse_cost_term", "regex._regex_core.parse_fuzzy_compare", "regex._regex_core.ParseError", "regex._regex_core.parse_count"], "future.utils.__init__.text_type": ["future.utils.__init__.text_type"], "regex._regex_core.parse_count": [], "future.backports.email._header_value_parser._check_for_early_dl_end": ["future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.ValueTerminal", "future.backports.email.errors.InvalidHeaderDefect"], "joblib.numpy_pickle_utils.Pickler.dispatch": [], "future.backports.email._header_value_parser.get_dot_atom_text": ["future.backports.email._header_value_parser.DotAtomText", "future.backports.email._header_value_parser.TokenList.value", "future.backports.email._header_value_parser.WhiteSpaceTokenList.value", "future.backports.email._header_value_parser.QuotedString.quoted_value", "future.backports.email._header_value_parser.QuotedString.stripped_value", "future.backports.email._header_value_parser.BareQuotedString.value", "future.backports.email._header_value_parser.AddrSpec.value", "future.backports.email._header_value_parser.DisplayName.value", "future.backports.email._header_value_parser.LocalPart.value", "future.backports.email._header_value_parser.Parameter.param_value", "future.backports.email._header_value_parser.Attribute.stripped_value", "future.backports.email._header_value_parser.Value.stripped_value", "future.backports.email._header_value_parser.WhiteSpaceTerminal.value", "future.backports.email._header_value_parser.ValueTerminal.value", "future.backports.email._header_value_parser.EWWhiteSpaceTerminal.value", "future.backports.email._header_value_parser.value", "future.backports.email.errors", "future.backports.email._header_value_parser.get_atext", "future.backports.email.errors.HeaderParseError"], "urllib3.contrib.pyopenssl.PyOpenSSLContext.options": ["urllib3.contrib.pyopenssl.PyOpenSSLContext.options", "urllib3.contrib.pyopenssl.options"], "numpy.array_api.linalg.QRResult": ["typing.NamedTuple", "numpy.array_api._array_object.Array"], "ast.Ellipsis": [], "numpy.inexact": [], "unicodedata.lookup": [], "urllib3.contrib.pyopenssl.get_subj_alt_name": ["urllib3.contrib.pyopenssl.WrappedSocket.getpeercert", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_cert_chain", "cryptography.hazmat.backends.openssl.x509._Certificate", "cryptography.hazmat.backends.openssl.backend", "cryptography.x509", "urllib3.contrib.pyopenssl.UnsupportedExtension", "cryptography.x509.UnsupportedExtension", "urllib3.contrib.pyopenssl.WrappedSocket.fileno", "urllib3.contrib.pyopenssl.WrappedSocket._decref_socketios", "urllib3.contrib.pyopenssl.WrappedSocket.recv", "urllib3.contrib.pyopenssl.WrappedSocket.recv_into", "urllib3.contrib.pyopenssl.WrappedSocket.settimeout", "urllib3.contrib.pyopenssl.WrappedSocket._send_until_done", "urllib3.contrib.pyopenssl.WrappedSocket.sendall", "urllib3.contrib.pyopenssl.WrappedSocket.close", "urllib3.contrib.pyopenssl.WrappedSocket.version", "urllib3.contrib.pyopenssl.WrappedSocket._reuse", "urllib3.contrib.pyopenssl.PyOpenSSLContext.verify_mode", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_default_verify_paths", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_ciphers", "urllib3.contrib.pyopenssl.PyOpenSSLContext.load_verify_locations", "urllib3.contrib.pyopenssl.PyOpenSSLContext.set_alpn_protocols", "urllib3.contrib.pyopenssl.PyOpenSSLContext.wrap_socket", "urllib3.contrib.pyopenssl._dnsname_to_stdlib", "cryptography.x509.ExtensionNotFound", "cryptography.x509.SubjectAlternativeName", "cryptography.x509.DuplicateExtension", "cryptography.x509.UnsupportedGeneralNameType", "cryptography.x509.DNSName", "cryptography.x509.IPAddress"], "torch.jit.frontend.StmtBuilder": ["torch.jit.frontend.Builder", "ast", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div"], "urllib3.util.ssl_.SSLContext.wrap_socket": ["urllib3.exceptions.InsecurePlatformWarning", "warnings", "urllib3.util.ssl_.SSLContext.wrap_socket", "urllib3.util.ssl_.wrap_socket", "ssl.wrap_socket", "warnings.warn"], "numpy.lib.function_base._median_dispatcher": ["numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature"], "numpy.lib.function_base._median": ["numpy.lib.function_base.vectorize.__call__", "numpy.lib.function_base.vectorize._get_ufunc_and_otypes", "numpy.lib.function_base.vectorize._vectorize_call", "numpy.lib.function_base.vectorize._vectorize_call_with_signature", "numpy", "numpy.core.fromnumeric.partition", "numpy.core.fromnumeric.mean", "numpy.asanyarray", "numpy.issubdtype", "numpy.inexact", "numpy.lib"], "joblib.numpy_pickle_utils.Pickler": [], "numpy.linalg.linalg._raise_linalgerror_qr": ["numpy.linalg.linalg.LinAlgError"], "urllib3.packages.six.binary_type": ["future.utils.__init__.binary_type"], "future.backports.email.errors.CharsetError": ["future.backports.email.errors.MessageError"], "regex._regex_core.parse_cost_constraint": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.parse_constraint", "regex._regex_core.parse_fuzzy_compare", "regex._regex_core.parse_cost_limit", "regex._regex_core.ParseError", "regex._regex_core.error"], "unicodedata": [], "numpy.linalg._umath_linalg.qr_r_raw_m": [], "numpy.linalg._umath_linalg.qr_reduced": [], "requests.sessions.SessionRedirectMixin": [], "numpy.lib.function_base._get_indexes": ["numpy", "numpy.asanyarray", "numpy.floor", "numpy.issubdtype", "numpy.inexact", "numpy.isnan", "numpy.intp"], "torch.jit.frontend.UnsupportedNodeError": ["torch.jit.frontend.NotSupportedError"], "regex._regex_core.make_ref_group": ["regex._regex_core.RefGroup", "regex._regex_core.make_case_flags"], "regex._regex_core.is_above_limit": [], "torch.jit.frontend.ExprBuilder.build_Subscript.build_Index": ["torch.jit.frontend.Builder", "ast", "torch._six.PY2", "torch.jit.frontend.ExprBuilder.build_Subscript", "torch.jit.frontend.NotSupportedError", "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_SliceExpr", "torch.jit.frontend.build_Subscript.build_SliceExpr", "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice", "torch.jit.frontend.ExprBuilder.build_ExtSlice", "torch.jit.frontend.build_Subscript.build_ExtSlice", "ast.Add", "ast.Sub", "ast.Mult", "ast.Div", "ast.Pow", "ast.Mod", "ast.FloorDiv", "ast.BitAnd", "ast.BitXor", "ast.BitOr", "ast.LShift", "ast.RShift", "ast.MatMult", "ast.Not", "ast.USub", "ast.Invert", "ast.And", "ast.Or", "ast.Eq", "ast.NotEq", "ast.LtE", "ast.Lt", "ast.GtE", "ast.Gt", "ast.Is", "ast.IsNot", "ast.In", "ast.NotIn", "ast.Index", "ast.Tuple", "ast.List", "ast.Slice", "ast.ExtSlice"], "regex._regex_core.CallGroup": ["regex._regex_core.RegexBase"], "time.perf_counter": [], "numpy.ma.extras._median": ["numpy", "numpy.ma.extras._fromnxfunction.__call__", "numpy.ma.extras._fromnxfunction_single.__call__", "numpy.ma.extras._fromnxfunction_seq.__call__", "numpy.ma.extras._fromnxfunction_args.__call__", "numpy.ma.extras._fromnxfunction_allargs.__call__", "numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.core.sort", "numpy.core.multiarray.normalize_axis_index", "numpy.ma.core.count", "numpy.ma.extras.replace_masked", "numpy.ma.extras._median.replace_masked", "numpy.issubdtype", "numpy.inexact", "numpy.inf", "numpy.ma", "numpy.true_divide", "numpy.all", "numpy.lib", "numpy.where", "numpy.concatenate", "numpy.take_along_axis"], "tqdm._dist_ver.__version__": ["filelock.__init__.__version__", "tqdm.__init__.__version__", "numpy.version.__version__", "regex.regex.__version__"], "regex._regex_core.parse_set_item": ["regex._regex_core.parse_escape", "regex._regex_core.ParseError", "regex._regex_core.parse_posix_class", "regex._regex_core.parse_set_union", "regex._regex_core.error", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.Character"], "joblib.numpy_pickle_utils._ensure_native_byte_order": ["joblib.numpy_pickle_utils._is_numpy_array_byte_order_mismatch"], "regex._regex_core.parse_cost_limit": ["regex._regex_core.parse_count", "regex._regex_core.Fuzzy._constraints_to_string", "regex._regex_core.error"], "urllib3.util.wait.wait_for_write": ["urllib3.util.wait.wait_for_socket"], "cryptography.x509.UnsupportedExtension": [], "cryptography.x509.DNSName": [], "regex._regex_core.StringSet": ["regex._regex_core.Branch"], "joblib.numpy_pickle.NumpyArrayWrapper.__init__": ["joblib.numpy_pickle.NumpyArrayWrapper.safe_get_numpy_array_alignment_bytes"], "numpy.ma.extras.replace_masked": ["numpy", "numpy.ma", "numpy.all"], "cryptography.x509.IPAddress": [], "cryptography.hazmat.backends.openssl.x509._Certificate": [], "cryptography.x509.SubjectAlternativeName": [], "regex._regex_core.parse_fuzzy_compare": [], "joblib.numpy_pickle.NumpyUnpickler.__init__": ["joblib.numpy_pickle_utils.Unpickler", "joblib.numpy_pickle.NumpyUnpickler.load_build", "joblib.numpy_pickle.load_build", "pickle", "os", "numpy", "os.path", "joblib.numpy_pickle_utils.Unpickler.dispatch", "joblib.numpy_pickle_utils.Unpickler.__init__", "pickle.BUILD"], "cryptography.hazmat.backends.openssl.backend": [], "future.backports.email._header_value_parser.DotAtomText": ["future.backports.email._header_value_parser.TokenList"], "ssl.wrap_socket": [], "joblib.numpy_pickle_utils.BUFFER_SIZE": [], "regex._regex_core.parse_flag_set": ["regex._regex_core.RegexBase.with_flags", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match"], "urllib3.util.wait.wait_for_socket": ["urllib3.util.wait._have_working_poll", "urllib3.util.wait.wait_for_socket", "urllib3.util.wait.poll_wait_for_socket", "select", "urllib3.util.wait.select_wait_for_socket", "urllib3.util.wait.null_wait_for_socket"], "cryptography.x509.DuplicateExtension": [], "urllib3.contrib.pyopenssl._dnsname_to_stdlib": ["urllib3.contrib.pyopenssl.idna_encode", "urllib3.contrib.pyopenssl._dnsname_to_stdlib.idna_encode", "sys", "sys.version_info"], "typing.Literal": [], "numpy.ma.extras._median.replace_masked": ["numpy", "numpy.ma.extras._fromnxfunction.__call__", "numpy.ma.extras._fromnxfunction_single.__call__", "numpy.ma.extras._fromnxfunction_seq.__call__", "numpy.ma.extras._fromnxfunction_args.__call__", "numpy.ma.extras._fromnxfunction_allargs.__call__", "numpy.ma.extras.MAxisConcatenator.makemat", "numpy.ma.core.sort", "numpy.core.multiarray.normalize_axis_index", "numpy.ma.core.count", "numpy.ma.extras.replace_masked", "numpy.ma.extras._median.replace_masked", "numpy.issubdtype", "numpy.inexact", "numpy.inf", "numpy.ma", "numpy.true_divide", "numpy.all", "numpy.lib", "numpy.where", "numpy.concatenate", "numpy.take_along_axis"], "numpy.core.fromnumeric.partition": ["numpy.core.multiarray.asanyarray", "numpy.core.fromnumeric._partition_dispatcher"], "regex._regex_core.parse_set_inter": ["regex._regex_core.parse_set_diff", "regex._regex_core.SetInter"], "future.utils.__init__.binary_type": ["future.utils.__init__.binary_type"], "urllib3.contrib.pyopenssl.UnsupportedExtension": [], "regex._regex_core.parse_constraint": ["regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.ParseError", "regex._regex_core.Fuzzy._constraints_to_string"], "urllib3.util.ssl_.wrap_socket": ["urllib3.exceptions.InsecurePlatformWarning", "warnings", "urllib3.util.ssl_.SSLContext.wrap_socket", "urllib3.util.ssl_.wrap_socket", "ssl.wrap_socket", "warnings.warn"], "regex._regex_core.RefGroup": ["regex._regex_core.RegexBase"], "joblib.numpy_pickle_utils._read_bytes": ["io", "io.BlockingIOError"], "cryptography.x509.ExtensionNotFound": [], "regex._regex_core.parse_cost_term": ["regex._regex_core.parse_count", "regex._regex_core.RegexBase.pack_characters", "regex._regex_core.Atomic.pack_characters", "regex._regex_core.Branch._add_precheck", "regex._regex_core.Branch.pack_characters", "regex._regex_core.Branch._flatten_branches", "regex._regex_core.Branch._is_simple_character", "regex._regex_core.Branch._flush_char_prefix", "regex._regex_core.Character.matches", "regex._regex_core.Conditional.pack_characters", "regex._regex_core.Fuzzy.pack_characters", "regex._regex_core.GreedyRepeat.pack_characters", "regex._regex_core.Group.pack_characters", "regex._regex_core.LookAround.pack_characters", "regex._regex_core.LookAroundConditional.pack_characters", "regex._regex_core.Property.matches", "regex._regex_core.Range.matches", "regex._regex_core.Sequence.pack_characters", "regex._regex_core.Sequence._flush_characters", "regex._regex_core.Sequence._merge_chunks", "regex._regex_core.SetDiff.matches", "regex._regex_core.SetInter.matches", "regex._regex_core.SetSymDiff.matches", "regex._regex_core.SetUnion.matches", "regex._regex_core.Source.match", "regex._regex_core.ParseError", "regex._regex_core.error", "regex._regex_core.Fuzzy._constraints_to_string"], "cryptography.x509.UnsupportedGeneralNameType": [], "urllib3.contrib.pyopenssl.options": ["urllib3.contrib.pyopenssl.PyOpenSSLContext.options", "urllib3.contrib.pyopenssl.options"], "joblib.numpy_pickle.NumpyPickler.__init__": ["joblib.numpy_pickle_utils.Pickler", "joblib.compressor.BinaryZlibFile", "pickle", "numpy", "joblib.numpy_pickle_utils.Pickler.dispatch", "joblib.numpy_pickle_utils.Pickler.__init__", "pickle.DEFAULT_PROTOCOL"], "joblib.numpy_pickle_utils._is_numpy_array_byte_order_mismatch": ["sys", "sys.byteorder"], "urllib3.util.wait.select_wait_for_socket": ["functools.partial", "select", "urllib3.util.wait._retry_on_intr", "select.select"], "io.BlockingIOError": [], "pickle.DEFAULT_PROTOCOL": [], "urllib3.contrib.pyopenssl.idna_encode": ["idna", "urllib3.contrib.pyopenssl.WrappedSocket.fileno", "idna.encode", "idna.core"], "select": [], "urllib3.util.wait.poll_wait_for_socket": ["select", "urllib3.util.wait._retry_on_intr", "urllib3.util.wait.do_poll", "urllib3.util.wait.poll_wait_for_socket.do_poll", "select.POLLIN", "select.POLLOUT", "select.poll"], "urllib3.util.wait.null_wait_for_socket": ["urllib3.util.wait.NoWayToWaitForSocketError"], "joblib.compressor.BinaryZlibFile": ["joblib.compressor.BZ2CompressorWrapper._check_versions", "joblib.compressor.LZMACompressorWrapper._check_versions", "joblib.compressor.LZ4CompressorWrapper._check_versions", "io", "zlib", "io.BufferedIOBase", "zlib.MAX_WBITS"], "regex._regex_core.parse_set_diff": ["regex._regex_core.parse_set_imp_union", "regex._regex_core.SetDiff"], "urllib3.contrib.pyopenssl._dnsname_to_stdlib.idna_encode": ["urllib3.contrib.pyopenssl.idna_encode", "urllib3.contrib.pyopenssl._dnsname_to_stdlib.idna_encode", "sys", "idna", "urllib3.contrib.pyopenssl.WrappedSocket.fileno", "idna.encode", "idna.core", "sys.version_info"], "regex._regex_core.parse_posix_class": ["regex._regex_core.parse_property_name", "regex._regex_core.ParseError", "regex._regex_core.lookup_property"], "joblib.numpy_pickle_utils.Unpickler.__init__": [], "urllib3.util.wait._have_working_poll": ["urllib3.util.wait._retry_on_intr", "select", "select.poll"], "joblib.numpy_pickle_utils.Pickler.__init__": [], "numpy.core.fromnumeric._partition_dispatcher": [], "urllib3.util.wait.do_poll": [], "select.POLLIN": [], "select.poll": [], "idna": ["idna.core.IDNABidiError", "idna.core.IDNAError", "idna.core.InvalidCodepoint", "idna.core.InvalidCodepointContext", "idna.core.alabel", "idna.core.check_bidi", "idna.core.check_hyphen_ok", "idna.core.check_initial_combiner", "idna.core.check_label", "idna.core.check_nfc", "idna.core.decode", "idna.core.encode", "idna.intranges.intranges_contain", "idna.core.ulabel", "idna.core.uts46_remap", "idna.core.valid_contextj", "idna.core.valid_contexto", "idna.core.valid_label_length", "idna.core.valid_string_length"], "regex._regex_core.SetDiff": ["regex._regex_core.SetBase"], "joblib.compressor.BZ2CompressorWrapper._check_versions": ["joblib.compressor.CompressorWrapper", "bz2"], "select.POLLOUT": [], "select.select": [], "io.BufferedIOBase": [], "idna.core": ["re", "re.compile"], "urllib3.util.wait._retry_on_intr": ["time.monotonic", "time.time", "select", "errno", "errno.EINTR", "select.error"], "urllib3.util.wait.poll_wait_for_socket.do_poll": ["select", "urllib3.util.wait._retry_on_intr", "urllib3.util.wait.do_poll", "urllib3.util.wait.poll_wait_for_socket.do_poll", "select.POLLIN", "select.POLLOUT", "select.poll"], "joblib.compressor.LZ4CompressorWrapper._check_versions": ["joblib.compressor.CompressorWrapper", "lz4", "joblib.backports.LooseVersion", "lz4.__version__"], "urllib3.util.wait.NoWayToWaitForSocketError": [], "idna.encode": ["future.backports.email._encoded_words.encode", "numpy.core.defchararray.encode", "idna.__init__.encode", "idna.core.encode"], "joblib.compressor.LZMACompressorWrapper._check_versions": ["joblib.compressor.CompressorWrapper", "lzma"], "idna.core.check_nfc": ["idna.core.IDNAError", "unicodedata", "unicodedata.normalize"], "idna.core.IDNABidiError": ["idna.core.IDNAError"], "numpy.core.defchararray.encode": ["numpy.core.defchararray._to_string_or_unicode_array", "numpy.core.multiarray._vec_string", "numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal", "numpy.core.numerictypes.object_", "numpy.core.defchararray._clean_args", "numpy.core.defchararray._code_dispatcher", "numpy.core.defchararray.chararray.encode", "numpy.core.defchararray.encode"], "lzma": [], "idna.core.InvalidCodepoint": ["idna.core.IDNAError"], "idna.core.check_hyphen_ok": ["idna.core.IDNAError"], "idna.core.check_label": ["typing.Union", "idna.core.IDNAError", "idna.core.check_nfc", "idna.core.check_hyphen_ok", "idna.core.check_initial_combiner", "idna.intranges.intranges_contain", "idna.idnadata", "idna.core.InvalidCodepoint", "idna.core.valid_contextj", "idna.core.InvalidCodepointContext", "idna.core.valid_contexto", "idna.core._unot", "idna.core.check_bidi", "idna.idnadata.codepoint_classes"], "idna.core.ulabel": ["typing.Union", "idna.core.check_label", "idna.core.IDNAError"], "errno.EINTR": [], "bz2": [], "idna.core.valid_string_length": ["typing.Union"], "idna.core.valid_label_length": ["typing.Union"], "idna.core.valid_contexto": ["idna.core._is_script"], "idna.intranges.intranges_contain": ["typing.Tuple", "idna.intranges._encode_range", "bisect", "idna.intranges._decode_range", "bisect.bisect_left"], "idna.core.valid_contextj": ["idna.core._combining_class", "idna.idnadata", "idna.idnadata.joining_types"], "idna.core.uts46_remap": ["idna.uts46data.uts46data", "idna.core.InvalidCodepoint", "idna.core._unot", "bisect", "unicodedata", "unicodedata.normalize", "bisect.bisect_left"], "idna.core.decode": ["typing.Union", "idna.core.IDNAError", "idna.core.uts46_remap", "idna.core.ulabel"], "idna.core.InvalidCodepointContext": ["idna.core.IDNAError"], "idna.core.encode": ["typing.Union", "idna.core.IDNAError", "idna.core.uts46_remap", "idna.core.alabel", "idna.core.valid_string_length"], "idna.core.check_bidi": ["unicodedata", "idna.core.IDNABidiError", "unicodedata.bidirectional"], "time.monotonic": [], "lz4": [], "idna.core.check_initial_combiner": ["idna.core.IDNAError", "unicodedata", "unicodedata.category"], "idna.core.alabel": ["idna.core.ulabel", "idna.core.valid_label_length", "idna.core.IDNAError", "idna.core.check_label", "idna.core._punycode"], "joblib.compressor.CompressorWrapper": [], "idna.__init__.encode": ["future.backports.email._encoded_words.encode", "numpy.core.defchararray.encode", "idna.__init__.encode", "idna.core.encode"], "select.error": [], "idna.core.IDNAError": [], "joblib.backports.LooseVersion": ["joblib.backports.Version", "joblib.backports.Version.__repr__", "joblib.backports.LooseVersion.__repr__", "re", "re.compile", "re.VERBOSE"], "lz4.__version__": [], "joblib.backports.Version.__repr__": ["joblib.backports.LooseVersion.__str__"], "unicodedata.category": [], "unicodedata.bidirectional": [], "idna.uts46data.uts46data": [], "unicodedata.normalize": [], "bisect.bisect_left": [], "joblib.backports.LooseVersion.__repr__": ["joblib.backports.Version", "joblib.backports.Version.__repr__", "joblib.backports.LooseVersion.__repr__", "re", "joblib.backports.LooseVersion.__str__", "re.compile", "re.VERBOSE"], "joblib.backports.Version": [], "idna.idnadata": [], "numpy.core.defchararray._code_dispatcher": ["numpy.core.defchararray.chararray.__array_finalize__", "numpy.core.defchararray.chararray.__add__", "numpy.core.defchararray.chararray.__radd__", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.chararray.capitalize", "numpy.core.defchararray.chararray.expandtabs", "numpy.core.defchararray.chararray.isalnum", "numpy.core.defchararray.chararray.isalpha", "numpy.core.defchararray.chararray.isspace", "numpy.core.defchararray.chararray.partition", "numpy.core.defchararray.chararray.replace", "numpy.core.defchararray.chararray.rpartition", "numpy.core.defchararray.chararray.startswith", "numpy.core.defchararray.chararray.swapcase", "numpy.core.defchararray.chararray.translate", "numpy.core.defchararray.chararray.isdecimal"], "idna.idnadata.codepoint_classes": [], "numpy.core.defchararray.chararray.encode": ["numpy.core.overrides.set_module", "numpy.core.numeric.ndarray", "numpy.core.defchararray.chararray.argsort", "numpy.core.defchararray.argsort", "numpy.core.defchararray.chararray.encode", "numpy.core.defchararray.encode", "numpy.core.numeric.ndarray.argsort"], "idna.core._punycode": [], "idna.core._is_script": ["idna.intranges.intranges_contain", "idna.idnadata", "idna.idnadata.scripts"], "idna.intranges._decode_range": ["typing.Tuple"], "idna.idnadata.joining_types": [], "idna.intranges._encode_range": [], "idna.core._unot": [], "idna.core._combining_class": ["unicodedata", "unicodedata.combining", "unicodedata.name"], "unicodedata.name": [], "unicodedata.combining": [], "joblib.backports.LooseVersion.__str__": ["joblib.backports.Version", "joblib.backports.Version.__repr__", "joblib.backports.LooseVersion.__repr__", "re", "re.compile", "re.VERBOSE"], "idna.idnadata.scripts": []}